(self.webpackChunkbodys_perfect_diet = self.webpackChunkbodys_perfect_diet || []).push([
  [179],
  {
    255: (t) => {
      function e(t) {
        return Promise.resolve().then(() => {
          var e = new Error("Cannot find module '" + t + "'");
          throw ((e.code = 'MODULE_NOT_FOUND'), e);
        });
      }
      (e.keys = () => []), (e.resolve = e), (e.id = 255), (t.exports = e);
    },
    12: function (t) {
      t.exports = (function () {
        'use strict';
        var t = 6e4,
          e = 36e5,
          n = 'millisecond',
          i = 'second',
          s = 'minute',
          r = 'hour',
          o = 'day',
          a = 'week',
          l = 'month',
          c = 'quarter',
          h = 'year',
          u = 'date',
          d = 'Invalid Date',
          p = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,
          m = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,
          f = {
            name: 'en',
            weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
            months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
          },
          g = function (t, e, n) {
            var i = String(t);
            return !i || i.length >= e ? t : '' + Array(e + 1 - i.length).join(n) + t;
          },
          _ = {
            s: g,
            z: function (t) {
              var e = -t.utcOffset(),
                n = Math.abs(e),
                i = Math.floor(n / 60),
                s = n % 60;
              return (e <= 0 ? '+' : '-') + g(i, 2, '0') + ':' + g(s, 2, '0');
            },
            m: function t(e, n) {
              if (e.date() < n.date()) return -t(n, e);
              var i = 12 * (n.year() - e.year()) + (n.month() - e.month()),
                s = e.clone().add(i, l),
                r = n - s < 0,
                o = e.clone().add(i + (r ? -1 : 1), l);
              return +(-(i + (n - s) / (r ? s - o : o - s)) || 0);
            },
            a: function (t) {
              return t < 0 ? Math.ceil(t) || 0 : Math.floor(t);
            },
            p: function (t) {
              return (
                { M: l, y: h, w: a, d: o, D: u, h: r, m: s, s: i, ms: n, Q: c }[t] ||
                String(t || '')
                  .toLowerCase()
                  .replace(/s$/, '')
              );
            },
            u: function (t) {
              return void 0 === t;
            },
          },
          b = 'en',
          y = {};
        y[b] = f;
        var v = function (t) {
            return t instanceof k;
          },
          w = function (t, e, n) {
            var i;
            if (!t) return b;
            if ('string' == typeof t) y[t] && (i = t), e && ((y[t] = e), (i = t));
            else {
              var s = t.name;
              (y[s] = t), (i = s);
            }
            return !n && i && (b = i), i || (!n && b);
          },
          x = function (t, e) {
            if (v(t)) return t.clone();
            var n = 'object' == typeof e ? e : {};
            return (n.date = t), (n.args = arguments), new k(n);
          },
          C = _;
        (C.l = w),
          (C.i = v),
          (C.w = function (t, e) {
            return x(t, { locale: e.$L, utc: e.$u, x: e.$x, $offset: e.$offset });
          });
        var k = (function () {
            function f(t) {
              (this.$L = w(t.locale, null, !0)), this.parse(t);
            }
            var g = f.prototype;
            return (
              (g.parse = function (t) {
                (this.$d = (function (t) {
                  var e = t.date,
                    n = t.utc;
                  if (null === e) return new Date(NaN);
                  if (C.u(e)) return new Date();
                  if (e instanceof Date) return new Date(e);
                  if ('string' == typeof e && !/Z$/i.test(e)) {
                    var i = e.match(p);
                    if (i) {
                      var s = i[2] - 1 || 0,
                        r = (i[7] || '0').substring(0, 3);
                      return n
                        ? new Date(Date.UTC(i[1], s, i[3] || 1, i[4] || 0, i[5] || 0, i[6] || 0, r))
                        : new Date(i[1], s, i[3] || 1, i[4] || 0, i[5] || 0, i[6] || 0, r);
                    }
                  }
                  return new Date(e);
                })(t)),
                  (this.$x = t.x || {}),
                  this.init();
              }),
              (g.init = function () {
                var t = this.$d;
                (this.$y = t.getFullYear()),
                  (this.$M = t.getMonth()),
                  (this.$D = t.getDate()),
                  (this.$W = t.getDay()),
                  (this.$H = t.getHours()),
                  (this.$m = t.getMinutes()),
                  (this.$s = t.getSeconds()),
                  (this.$ms = t.getMilliseconds());
              }),
              (g.$utils = function () {
                return C;
              }),
              (g.isValid = function () {
                return !(this.$d.toString() === d);
              }),
              (g.isSame = function (t, e) {
                var n = x(t);
                return this.startOf(e) <= n && n <= this.endOf(e);
              }),
              (g.isAfter = function (t, e) {
                return x(t) < this.startOf(e);
              }),
              (g.isBefore = function (t, e) {
                return this.endOf(e) < x(t);
              }),
              (g.$g = function (t, e, n) {
                return C.u(t) ? this[e] : this.set(n, t);
              }),
              (g.unix = function () {
                return Math.floor(this.valueOf() / 1e3);
              }),
              (g.valueOf = function () {
                return this.$d.getTime();
              }),
              (g.startOf = function (t, e) {
                var n = this,
                  c = !!C.u(e) || e,
                  d = C.p(t),
                  p = function (t, e) {
                    var i = C.w(n.$u ? Date.UTC(n.$y, e, t) : new Date(n.$y, e, t), n);
                    return c ? i : i.endOf(o);
                  },
                  m = function (t, e) {
                    return C.w(n.toDate()[t].apply(n.toDate('s'), (c ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e)), n);
                  },
                  f = this.$W,
                  g = this.$M,
                  _ = this.$D,
                  b = 'set' + (this.$u ? 'UTC' : '');
                switch (d) {
                  case h:
                    return c ? p(1, 0) : p(31, 11);
                  case l:
                    return c ? p(1, g) : p(0, g + 1);
                  case a:
                    var y = this.$locale().weekStart || 0,
                      v = (f < y ? f + 7 : f) - y;
                    return p(c ? _ - v : _ + (6 - v), g);
                  case o:
                  case u:
                    return m(b + 'Hours', 0);
                  case r:
                    return m(b + 'Minutes', 1);
                  case s:
                    return m(b + 'Seconds', 2);
                  case i:
                    return m(b + 'Milliseconds', 3);
                  default:
                    return this.clone();
                }
              }),
              (g.endOf = function (t) {
                return this.startOf(t, !1);
              }),
              (g.$set = function (t, e) {
                var a,
                  c = C.p(t),
                  d = 'set' + (this.$u ? 'UTC' : ''),
                  p = ((a = {}),
                  (a[o] = d + 'Date'),
                  (a[u] = d + 'Date'),
                  (a[l] = d + 'Month'),
                  (a[h] = d + 'FullYear'),
                  (a[r] = d + 'Hours'),
                  (a[s] = d + 'Minutes'),
                  (a[i] = d + 'Seconds'),
                  (a[n] = d + 'Milliseconds'),
                  a)[c],
                  m = c === o ? this.$D + (e - this.$W) : e;
                if (c === l || c === h) {
                  var f = this.clone().set(u, 1);
                  f.$d[p](m), f.init(), (this.$d = f.set(u, Math.min(this.$D, f.daysInMonth())).$d);
                } else p && this.$d[p](m);
                return this.init(), this;
              }),
              (g.set = function (t, e) {
                return this.clone().$set(t, e);
              }),
              (g.get = function (t) {
                return this[C.p(t)]();
              }),
              (g.add = function (n, c) {
                var u,
                  d = this;
                n = Number(n);
                var p = C.p(c),
                  m = function (t) {
                    var e = x(d);
                    return C.w(e.date(e.date() + Math.round(t * n)), d);
                  };
                if (p === l) return this.set(l, this.$M + n);
                if (p === h) return this.set(h, this.$y + n);
                if (p === o) return m(1);
                if (p === a) return m(7);
                var f = ((u = {}), (u[s] = t), (u[r] = e), (u[i] = 1e3), u)[p] || 1,
                  g = this.$d.getTime() + n * f;
                return C.w(g, this);
              }),
              (g.subtract = function (t, e) {
                return this.add(-1 * t, e);
              }),
              (g.format = function (t) {
                var e = this,
                  n = this.$locale();
                if (!this.isValid()) return n.invalidDate || d;
                var i = t || 'YYYY-MM-DDTHH:mm:ssZ',
                  s = C.z(this),
                  r = this.$H,
                  o = this.$m,
                  a = this.$M,
                  l = n.weekdays,
                  c = n.months,
                  h = function (t, n, s, r) {
                    return (t && (t[n] || t(e, i))) || s[n].substr(0, r);
                  },
                  u = function (t) {
                    return C.s(r % 12 || 12, t, '0');
                  },
                  p =
                    n.meridiem ||
                    function (t, e, n) {
                      var i = t < 12 ? 'AM' : 'PM';
                      return n ? i.toLowerCase() : i;
                    },
                  f = {
                    YY: String(this.$y).slice(-2),
                    YYYY: this.$y,
                    M: a + 1,
                    MM: C.s(a + 1, 2, '0'),
                    MMM: h(n.monthsShort, a, c, 3),
                    MMMM: h(c, a),
                    D: this.$D,
                    DD: C.s(this.$D, 2, '0'),
                    d: String(this.$W),
                    dd: h(n.weekdaysMin, this.$W, l, 2),
                    ddd: h(n.weekdaysShort, this.$W, l, 3),
                    dddd: l[this.$W],
                    H: String(r),
                    HH: C.s(r, 2, '0'),
                    h: u(1),
                    hh: u(2),
                    a: p(r, o, !0),
                    A: p(r, o, !1),
                    m: String(o),
                    mm: C.s(o, 2, '0'),
                    s: String(this.$s),
                    ss: C.s(this.$s, 2, '0'),
                    SSS: C.s(this.$ms, 3, '0'),
                    Z: s,
                  };
                return i.replace(m, function (t, e) {
                  return e || f[t] || s.replace(':', '');
                });
              }),
              (g.utcOffset = function () {
                return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
              }),
              (g.diff = function (n, u, d) {
                var p,
                  m = C.p(u),
                  f = x(n),
                  g = (f.utcOffset() - this.utcOffset()) * t,
                  _ = this - f,
                  b = C.m(this, f);
                return (
                  (b =
                    ((p = {}),
                    (p[h] = b / 12),
                    (p[l] = b),
                    (p[c] = b / 3),
                    (p[a] = (_ - g) / 6048e5),
                    (p[o] = (_ - g) / 864e5),
                    (p[r] = _ / e),
                    (p[s] = _ / t),
                    (p[i] = _ / 1e3),
                    p)[m] || _),
                  d ? b : C.a(b)
                );
              }),
              (g.daysInMonth = function () {
                return this.endOf(l).$D;
              }),
              (g.$locale = function () {
                return y[this.$L];
              }),
              (g.locale = function (t, e) {
                if (!t) return this.$L;
                var n = this.clone(),
                  i = w(t, e, !0);
                return i && (n.$L = i), n;
              }),
              (g.clone = function () {
                return C.w(this.$d, this);
              }),
              (g.toDate = function () {
                return new Date(this.valueOf());
              }),
              (g.toJSON = function () {
                return this.isValid() ? this.toISOString() : null;
              }),
              (g.toISOString = function () {
                return this.$d.toISOString();
              }),
              (g.toString = function () {
                return this.$d.toUTCString();
              }),
              f
            );
          })(),
          S = k.prototype;
        return (
          (x.prototype = S),
          [
            ['$ms', n],
            ['$s', i],
            ['$m', s],
            ['$H', r],
            ['$W', o],
            ['$M', l],
            ['$y', h],
            ['$D', u],
          ].forEach(function (t) {
            S[t[1]] = function (e) {
              return this.$g(e, t[0], t[1]);
            };
          }),
          (x.extend = function (t, e) {
            return t.$i || (t(e, k, x), (t.$i = !0)), x;
          }),
          (x.locale = w),
          (x.isDayjs = v),
          (x.unix = function (t) {
            return x(1e3 * t);
          }),
          (x.en = y[b]),
          (x.Ls = y),
          (x.p = {}),
          x
        );
      })();
    },
    197: (t, e, n) => {
      var i;
      !(function (s, r, o, a) {
        'use strict';
        var l,
          c = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'],
          h = r.createElement('div'),
          u = Math.round,
          d = Math.abs,
          p = Date.now;
        function m(t, e, n) {
          return setTimeout(w(t, n), e);
        }
        function f(t, e, n) {
          return !!Array.isArray(t) && (g(t, n[e], n), !0);
        }
        function g(t, e, n) {
          var i;
          if (t)
            if (t.forEach) t.forEach(e, n);
            else if (t.length !== a) for (i = 0; i < t.length; ) e.call(n, t[i], i, t), i++;
            else for (i in t) t.hasOwnProperty(i) && e.call(n, t[i], i, t);
        }
        function _(t, e, n) {
          var i = 'DEPRECATED METHOD: ' + e + '\n' + n + ' AT \n';
          return function () {
            var e = new Error('get-stack-trace'),
              n =
                e && e.stack
                  ? e.stack
                      .replace(/^[^\(]+?[\n$]/gm, '')
                      .replace(/^\s+at\s+/gm, '')
                      .replace(/^Object.<anonymous>\s*\(/gm, '{anonymous}()@')
                  : 'Unknown Stack Trace',
              r = s.console && (s.console.warn || s.console.log);
            return r && r.call(s.console, i, n), t.apply(this, arguments);
          };
        }
        l =
          'function' != typeof Object.assign
            ? function (t) {
                if (t === a || null === t) throw new TypeError('Cannot convert undefined or null to object');
                for (var e = Object(t), n = 1; n < arguments.length; n++) {
                  var i = arguments[n];
                  if (i !== a && null !== i) for (var s in i) i.hasOwnProperty(s) && (e[s] = i[s]);
                }
                return e;
              }
            : Object.assign;
        var b = _(
            function (t, e, n) {
              for (var i = Object.keys(e), s = 0; s < i.length; )
                (!n || (n && t[i[s]] === a)) && (t[i[s]] = e[i[s]]), s++;
              return t;
            },
            'extend',
            'Use `assign`.'
          ),
          y = _(
            function (t, e) {
              return b(t, e, !0);
            },
            'merge',
            'Use `assign`.'
          );
        function v(t, e, n) {
          var i,
            s = e.prototype;
          ((i = t.prototype = Object.create(s)).constructor = t), (i._super = s), n && l(i, n);
        }
        function w(t, e) {
          return function () {
            return t.apply(e, arguments);
          };
        }
        function x(t, e) {
          return 'function' == typeof t ? t.apply((e && e[0]) || a, e) : t;
        }
        function C(t, e) {
          return t === a ? e : t;
        }
        function k(t, e, n) {
          g(P(e), function (e) {
            t.addEventListener(e, n, !1);
          });
        }
        function S(t, e, n) {
          g(P(e), function (e) {
            t.removeEventListener(e, n, !1);
          });
        }
        function E(t, e) {
          for (; t; ) {
            if (t == e) return !0;
            t = t.parentNode;
          }
          return !1;
        }
        function O(t, e) {
          return t.indexOf(e) > -1;
        }
        function P(t) {
          return t.trim().split(/\s+/g);
        }
        function A(t, e, n) {
          if (t.indexOf && !n) return t.indexOf(e);
          for (var i = 0; i < t.length; ) {
            if ((n && t[i][n] == e) || (!n && t[i] === e)) return i;
            i++;
          }
          return -1;
        }
        function T(t) {
          return Array.prototype.slice.call(t, 0);
        }
        function D(t, e, n) {
          for (var i = [], s = [], r = 0; r < t.length; ) {
            var o = e ? t[r][e] : t[r];
            A(s, o) < 0 && i.push(t[r]), (s[r] = o), r++;
          }
          return (
            n &&
              (i = e
                ? i.sort(function (t, n) {
                    return t[e] > n[e];
                  })
                : i.sort()),
            i
          );
        }
        function M(t, e) {
          for (var n, i, s = e[0].toUpperCase() + e.slice(1), r = 0; r < c.length; ) {
            if ((i = (n = c[r]) ? n + s : e) in t) return i;
            r++;
          }
          return a;
        }
        var R = 1;
        function I(t) {
          var e = t.ownerDocument || t;
          return e.defaultView || e.parentWindow || s;
        }
        var L = 'ontouchstart' in s,
          F = M(s, 'PointerEvent') !== a,
          N = L && /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),
          V = 'touch',
          B = 'mouse',
          z = ['x', 'y'],
          j = ['clientX', 'clientY'];
        function H(t, e) {
          var n = this;
          (this.manager = t),
            (this.callback = e),
            (this.element = t.element),
            (this.target = t.options.inputTarget),
            (this.domHandler = function (e) {
              x(t.options.enable, [t]) && n.handler(e);
            }),
            this.init();
        }
        function $(t, e, n) {
          var i = n.pointers.length,
            s = n.changedPointers.length,
            r = 1 & e && i - s == 0,
            o = 12 & e && i - s == 0;
          (n.isFirst = !!r),
            (n.isFinal = !!o),
            r && (t.session = {}),
            (n.eventType = e),
            (function (t, e) {
              var n = t.session,
                i = e.pointers,
                s = i.length;
              n.firstInput || (n.firstInput = q(e)),
                s > 1 && !n.firstMultiple ? (n.firstMultiple = q(e)) : 1 === s && (n.firstMultiple = !1);
              var r = n.firstInput,
                o = n.firstMultiple,
                l = o ? o.center : r.center,
                c = (e.center = W(i));
              (e.timeStamp = p()),
                (e.deltaTime = e.timeStamp - r.timeStamp),
                (e.angle = Q(l, c)),
                (e.distance = G(l, c)),
                (function (t, e) {
                  var n = e.center,
                    i = t.offsetDelta || {},
                    s = t.prevDelta || {},
                    r = t.prevInput || {};
                  (1 !== e.eventType && 4 !== r.eventType) ||
                    ((s = t.prevDelta = { x: r.deltaX || 0, y: r.deltaY || 0 }),
                    (i = t.offsetDelta = { x: n.x, y: n.y })),
                    (e.deltaX = s.x + (n.x - i.x)),
                    (e.deltaY = s.y + (n.y - i.y));
                })(n, e),
                (e.offsetDirection = Y(e.deltaX, e.deltaY));
              var h,
                u,
                m = U(e.deltaTime, e.deltaX, e.deltaY);
              (e.overallVelocityX = m.x),
                (e.overallVelocityY = m.y),
                (e.overallVelocity = d(m.x) > d(m.y) ? m.x : m.y),
                (e.scale = o ? ((h = o.pointers), G((u = i)[0], u[1], j) / G(h[0], h[1], j)) : 1),
                (e.rotation = o
                  ? (function (t, e) {
                      return Q(e[1], e[0], j) + Q(t[1], t[0], j);
                    })(o.pointers, i)
                  : 0),
                (e.maxPointers = n.prevInput
                  ? e.pointers.length > n.prevInput.maxPointers
                    ? e.pointers.length
                    : n.prevInput.maxPointers
                  : e.pointers.length),
                (function (t, e) {
                  var n,
                    i,
                    s,
                    r,
                    o = t.lastInterval || e,
                    l = e.timeStamp - o.timeStamp;
                  if (8 != e.eventType && (l > 25 || o.velocity === a)) {
                    var c = e.deltaX - o.deltaX,
                      h = e.deltaY - o.deltaY,
                      u = U(l, c, h);
                    (i = u.x), (s = u.y), (n = d(u.x) > d(u.y) ? u.x : u.y), (r = Y(c, h)), (t.lastInterval = e);
                  } else (n = o.velocity), (i = o.velocityX), (s = o.velocityY), (r = o.direction);
                  (e.velocity = n), (e.velocityX = i), (e.velocityY = s), (e.direction = r);
                })(n, e);
              var f = t.element;
              E(e.srcEvent.target, f) && (f = e.srcEvent.target), (e.target = f);
            })(t, n),
            t.emit('hammer.input', n),
            t.recognize(n),
            (t.session.prevInput = n);
        }
        function q(t) {
          for (var e = [], n = 0; n < t.pointers.length; )
            (e[n] = { clientX: u(t.pointers[n].clientX), clientY: u(t.pointers[n].clientY) }), n++;
          return { timeStamp: p(), pointers: e, center: W(e), deltaX: t.deltaX, deltaY: t.deltaY };
        }
        function W(t) {
          var e = t.length;
          if (1 === e) return { x: u(t[0].clientX), y: u(t[0].clientY) };
          for (var n = 0, i = 0, s = 0; s < e; ) (n += t[s].clientX), (i += t[s].clientY), s++;
          return { x: u(n / e), y: u(i / e) };
        }
        function U(t, e, n) {
          return { x: e / t || 0, y: n / t || 0 };
        }
        function Y(t, e) {
          return t === e ? 1 : d(t) >= d(e) ? (t < 0 ? 2 : 4) : e < 0 ? 8 : 16;
        }
        function G(t, e, n) {
          n || (n = z);
          var i = e[n[0]] - t[n[0]],
            s = e[n[1]] - t[n[1]];
          return Math.sqrt(i * i + s * s);
        }
        function Q(t, e, n) {
          return n || (n = z), (180 * Math.atan2(e[n[1]] - t[n[1]], e[n[0]] - t[n[0]])) / Math.PI;
        }
        H.prototype = {
          handler: function () {},
          init: function () {
            this.evEl && k(this.element, this.evEl, this.domHandler),
              this.evTarget && k(this.target, this.evTarget, this.domHandler),
              this.evWin && k(I(this.element), this.evWin, this.domHandler);
          },
          destroy: function () {
            this.evEl && S(this.element, this.evEl, this.domHandler),
              this.evTarget && S(this.target, this.evTarget, this.domHandler),
              this.evWin && S(I(this.element), this.evWin, this.domHandler);
          },
        };
        var K = { mousedown: 1, mousemove: 2, mouseup: 4 },
          X = 'mousedown',
          Z = 'mousemove mouseup';
        function J() {
          (this.evEl = X), (this.evWin = Z), (this.pressed = !1), H.apply(this, arguments);
        }
        v(J, H, {
          handler: function (t) {
            var e = K[t.type];
            1 & e && 0 === t.button && (this.pressed = !0),
              2 & e && 1 !== t.which && (e = 4),
              this.pressed &&
                (4 & e && (this.pressed = !1),
                this.callback(this.manager, e, { pointers: [t], changedPointers: [t], pointerType: B, srcEvent: t }));
          },
        });
        var tt = { pointerdown: 1, pointermove: 2, pointerup: 4, pointercancel: 8, pointerout: 8 },
          et = { 2: V, 3: 'pen', 4: B, 5: 'kinect' },
          nt = 'pointerdown',
          it = 'pointermove pointerup pointercancel';
        function st() {
          (this.evEl = nt),
            (this.evWin = it),
            H.apply(this, arguments),
            (this.store = this.manager.session.pointerEvents = []);
        }
        s.MSPointerEvent &&
          !s.PointerEvent &&
          ((nt = 'MSPointerDown'), (it = 'MSPointerMove MSPointerUp MSPointerCancel')),
          v(st, H, {
            handler: function (t) {
              var e = this.store,
                n = !1,
                i = t.type.toLowerCase().replace('ms', ''),
                s = tt[i],
                r = et[t.pointerType] || t.pointerType,
                o = r == V,
                a = A(e, t.pointerId, 'pointerId');
              1 & s && (0 === t.button || o) ? a < 0 && (e.push(t), (a = e.length - 1)) : 12 & s && (n = !0),
                a < 0 ||
                  ((e[a] = t),
                  this.callback(this.manager, s, { pointers: e, changedPointers: [t], pointerType: r, srcEvent: t }),
                  n && e.splice(a, 1));
            },
          });
        var rt = { touchstart: 1, touchmove: 2, touchend: 4, touchcancel: 8 },
          ot = 'touchstart',
          at = 'touchstart touchmove touchend touchcancel';
        function lt() {
          (this.evTarget = ot), (this.evWin = at), (this.started = !1), H.apply(this, arguments);
        }
        function ct(t, e) {
          var n = T(t.touches),
            i = T(t.changedTouches);
          return 12 & e && (n = D(n.concat(i), 'identifier', !0)), [n, i];
        }
        v(lt, H, {
          handler: function (t) {
            var e = rt[t.type];
            if ((1 === e && (this.started = !0), this.started)) {
              var n = ct.call(this, t, e);
              12 & e && n[0].length - n[1].length == 0 && (this.started = !1),
                this.callback(this.manager, e, { pointers: n[0], changedPointers: n[1], pointerType: V, srcEvent: t });
            }
          },
        });
        var ht = { touchstart: 1, touchmove: 2, touchend: 4, touchcancel: 8 },
          ut = 'touchstart touchmove touchend touchcancel';
        function dt() {
          (this.evTarget = ut), (this.targetIds = {}), H.apply(this, arguments);
        }
        function pt(t, e) {
          var n = T(t.touches),
            i = this.targetIds;
          if (3 & e && 1 === n.length) return (i[n[0].identifier] = !0), [n, n];
          var s,
            r,
            o = T(t.changedTouches),
            a = [],
            l = this.target;
          if (
            ((r = n.filter(function (t) {
              return E(t.target, l);
            })),
            1 === e)
          )
            for (s = 0; s < r.length; ) (i[r[s].identifier] = !0), s++;
          for (s = 0; s < o.length; ) i[o[s].identifier] && a.push(o[s]), 12 & e && delete i[o[s].identifier], s++;
          return a.length ? [D(r.concat(a), 'identifier', !0), a] : void 0;
        }
        function mt() {
          H.apply(this, arguments);
          var t = w(this.handler, this);
          (this.touch = new dt(this.manager, t)),
            (this.mouse = new J(this.manager, t)),
            (this.primaryTouch = null),
            (this.lastTouches = []);
        }
        function ft(t, e) {
          1 & t
            ? ((this.primaryTouch = e.changedPointers[0].identifier), gt.call(this, e))
            : 12 & t && gt.call(this, e);
        }
        function gt(t) {
          var e = t.changedPointers[0];
          if (e.identifier === this.primaryTouch) {
            var n = { x: e.clientX, y: e.clientY };
            this.lastTouches.push(n);
            var i = this.lastTouches;
            setTimeout(function () {
              var t = i.indexOf(n);
              t > -1 && i.splice(t, 1);
            }, 2500);
          }
        }
        function _t(t) {
          for (var e = t.srcEvent.clientX, n = t.srcEvent.clientY, i = 0; i < this.lastTouches.length; i++) {
            var s = this.lastTouches[i],
              r = Math.abs(e - s.x),
              o = Math.abs(n - s.y);
            if (r <= 25 && o <= 25) return !0;
          }
          return !1;
        }
        v(dt, H, {
          handler: function (t) {
            var e = ht[t.type],
              n = pt.call(this, t, e);
            n && this.callback(this.manager, e, { pointers: n[0], changedPointers: n[1], pointerType: V, srcEvent: t });
          },
        }),
          v(mt, H, {
            handler: function (t, e, n) {
              var i = n.pointerType == B;
              if (!(i && n.sourceCapabilities && n.sourceCapabilities.firesTouchEvents)) {
                if (n.pointerType == V) ft.call(this, e, n);
                else if (i && _t.call(this, n)) return;
                this.callback(t, e, n);
              }
            },
            destroy: function () {
              this.touch.destroy(), this.mouse.destroy();
            },
          });
        var bt = M(h.style, 'touchAction'),
          yt = bt !== a,
          vt = 'compute',
          wt = 'auto',
          xt = 'manipulation',
          Ct = 'none',
          kt = 'pan-x',
          St = 'pan-y',
          Et = (function () {
            if (!yt) return !1;
            var t = {},
              e = s.CSS && s.CSS.supports;
            return (
              ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (n) {
                t[n] = !e || s.CSS.supports('touch-action', n);
              }),
              t
            );
          })();
        function Ot(t, e) {
          (this.manager = t), this.set(e);
        }
        Ot.prototype = {
          set: function (t) {
            t == vt && (t = this.compute()),
              yt && this.manager.element.style && Et[t] && (this.manager.element.style[bt] = t),
              (this.actions = t.toLowerCase().trim());
          },
          update: function () {
            this.set(this.manager.options.touchAction);
          },
          compute: function () {
            var t = [];
            return (
              g(this.manager.recognizers, function (e) {
                x(e.options.enable, [e]) && (t = t.concat(e.getTouchAction()));
              }),
              (function (t) {
                if (O(t, Ct)) return Ct;
                var e = O(t, kt),
                  n = O(t, St);
                return e && n ? Ct : e || n ? (e ? kt : St) : O(t, xt) ? xt : wt;
              })(t.join(' '))
            );
          },
          preventDefaults: function (t) {
            var e = t.srcEvent,
              n = t.offsetDirection;
            if (this.manager.session.prevented) e.preventDefault();
            else {
              var i = this.actions,
                s = O(i, Ct) && !Et.none,
                r = O(i, St) && !Et['pan-y'],
                o = O(i, kt) && !Et['pan-x'];
              if (s && 1 === t.pointers.length && t.distance < 2 && t.deltaTime < 250) return;
              if (!o || !r) return s || (r && 6 & n) || (o && 24 & n) ? this.preventSrc(e) : void 0;
            }
          },
          preventSrc: function (t) {
            (this.manager.session.prevented = !0), t.preventDefault();
          },
        };
        var Pt = 32;
        function At(t) {
          (this.options = l({}, this.defaults, t || {})),
            (this.id = R++),
            (this.manager = null),
            (this.options.enable = C(this.options.enable, !0)),
            (this.state = 1),
            (this.simultaneous = {}),
            (this.requireFail = []);
        }
        function Tt(t) {
          return 16 & t ? 'cancel' : 8 & t ? 'end' : 4 & t ? 'move' : 2 & t ? 'start' : '';
        }
        function Dt(t) {
          return 16 == t ? 'down' : 8 == t ? 'up' : 2 == t ? 'left' : 4 == t ? 'right' : '';
        }
        function Mt(t, e) {
          var n = e.manager;
          return n ? n.get(t) : t;
        }
        function Rt() {
          At.apply(this, arguments);
        }
        function It() {
          Rt.apply(this, arguments), (this.pX = null), (this.pY = null);
        }
        function Lt() {
          Rt.apply(this, arguments);
        }
        function Ft() {
          At.apply(this, arguments), (this._timer = null), (this._input = null);
        }
        function Nt() {
          Rt.apply(this, arguments);
        }
        function Vt() {
          Rt.apply(this, arguments);
        }
        function Bt() {
          At.apply(this, arguments),
            (this.pTime = !1),
            (this.pCenter = !1),
            (this._timer = null),
            (this._input = null),
            (this.count = 0);
        }
        function zt(t, e) {
          return ((e = e || {}).recognizers = C(e.recognizers, zt.defaults.preset)), new jt(t, e);
        }
        function jt(t, e) {
          (this.options = l({}, zt.defaults, e || {})),
            (this.options.inputTarget = this.options.inputTarget || t),
            (this.handlers = {}),
            (this.session = {}),
            (this.recognizers = []),
            (this.oldCssProps = {}),
            (this.element = t),
            (this.input = new (this.options.inputClass || (F ? st : N ? dt : L ? mt : J))(this, $)),
            (this.touchAction = new Ot(this, this.options.touchAction)),
            Ht(this, !0),
            g(
              this.options.recognizers,
              function (t) {
                var e = this.add(new t[0](t[1]));
                t[2] && e.recognizeWith(t[2]), t[3] && e.requireFailure(t[3]);
              },
              this
            );
        }
        function Ht(t, e) {
          var n,
            i = t.element;
          i.style &&
            (g(t.options.cssProps, function (s, r) {
              (n = M(i.style, r)),
                e ? ((t.oldCssProps[n] = i.style[n]), (i.style[n] = s)) : (i.style[n] = t.oldCssProps[n] || '');
            }),
            e || (t.oldCssProps = {}));
        }
        (At.prototype = {
          defaults: {},
          set: function (t) {
            return l(this.options, t), this.manager && this.manager.touchAction.update(), this;
          },
          recognizeWith: function (t) {
            if (f(t, 'recognizeWith', this)) return this;
            var e = this.simultaneous;
            return e[(t = Mt(t, this)).id] || ((e[t.id] = t), t.recognizeWith(this)), this;
          },
          dropRecognizeWith: function (t) {
            return f(t, 'dropRecognizeWith', this) || ((t = Mt(t, this)), delete this.simultaneous[t.id]), this;
          },
          requireFailure: function (t) {
            if (f(t, 'requireFailure', this)) return this;
            var e = this.requireFail;
            return -1 === A(e, (t = Mt(t, this))) && (e.push(t), t.requireFailure(this)), this;
          },
          dropRequireFailure: function (t) {
            if (f(t, 'dropRequireFailure', this)) return this;
            t = Mt(t, this);
            var e = A(this.requireFail, t);
            return e > -1 && this.requireFail.splice(e, 1), this;
          },
          hasRequireFailures: function () {
            return this.requireFail.length > 0;
          },
          canRecognizeWith: function (t) {
            return !!this.simultaneous[t.id];
          },
          emit: function (t) {
            var e = this,
              n = this.state;
            function i(n) {
              e.manager.emit(n, t);
            }
            n < 8 && i(e.options.event + Tt(n)),
              i(e.options.event),
              t.additionalEvent && i(t.additionalEvent),
              n >= 8 && i(e.options.event + Tt(n));
          },
          tryEmit: function (t) {
            if (this.canEmit()) return this.emit(t);
            this.state = Pt;
          },
          canEmit: function () {
            for (var t = 0; t < this.requireFail.length; ) {
              if (!(33 & this.requireFail[t].state)) return !1;
              t++;
            }
            return !0;
          },
          recognize: function (t) {
            var e = l({}, t);
            if (!x(this.options.enable, [this, e])) return this.reset(), void (this.state = Pt);
            56 & this.state && (this.state = 1), (this.state = this.process(e)), 30 & this.state && this.tryEmit(e);
          },
          process: function (t) {},
          getTouchAction: function () {},
          reset: function () {},
        }),
          v(Rt, At, {
            defaults: { pointers: 1 },
            attrTest: function (t) {
              var e = this.options.pointers;
              return 0 === e || t.pointers.length === e;
            },
            process: function (t) {
              var e = this.state,
                n = t.eventType,
                i = 6 & e,
                s = this.attrTest(t);
              return i && (8 & n || !s) ? 16 | e : i || s ? (4 & n ? 8 | e : 2 & e ? 4 | e : 2) : Pt;
            },
          }),
          v(It, Rt, {
            defaults: { event: 'pan', threshold: 10, pointers: 1, direction: 30 },
            getTouchAction: function () {
              var t = this.options.direction,
                e = [];
              return 6 & t && e.push(St), 24 & t && e.push(kt), e;
            },
            directionTest: function (t) {
              var e = this.options,
                n = !0,
                i = t.distance,
                s = t.direction,
                r = t.deltaX,
                o = t.deltaY;
              return (
                s & e.direction ||
                  (6 & e.direction
                    ? ((s = 0 === r ? 1 : r < 0 ? 2 : 4), (n = r != this.pX), (i = Math.abs(t.deltaX)))
                    : ((s = 0 === o ? 1 : o < 0 ? 8 : 16), (n = o != this.pY), (i = Math.abs(t.deltaY)))),
                (t.direction = s),
                n && i > e.threshold && s & e.direction
              );
            },
            attrTest: function (t) {
              return (
                Rt.prototype.attrTest.call(this, t) && (2 & this.state || (!(2 & this.state) && this.directionTest(t)))
              );
            },
            emit: function (t) {
              (this.pX = t.deltaX), (this.pY = t.deltaY);
              var e = Dt(t.direction);
              e && (t.additionalEvent = this.options.event + e), this._super.emit.call(this, t);
            },
          }),
          v(Lt, Rt, {
            defaults: { event: 'pinch', threshold: 0, pointers: 2 },
            getTouchAction: function () {
              return [Ct];
            },
            attrTest: function (t) {
              return (
                this._super.attrTest.call(this, t) && (Math.abs(t.scale - 1) > this.options.threshold || 2 & this.state)
              );
            },
            emit: function (t) {
              1 !== t.scale && (t.additionalEvent = this.options.event + (t.scale < 1 ? 'in' : 'out')),
                this._super.emit.call(this, t);
            },
          }),
          v(Ft, At, {
            defaults: { event: 'press', pointers: 1, time: 251, threshold: 9 },
            getTouchAction: function () {
              return [wt];
            },
            process: function (t) {
              var e = this.options,
                n = t.pointers.length === e.pointers,
                i = t.distance < e.threshold,
                s = t.deltaTime > e.time;
              if (((this._input = t), !i || !n || (12 & t.eventType && !s))) this.reset();
              else if (1 & t.eventType)
                this.reset(),
                  (this._timer = m(
                    function () {
                      (this.state = 8), this.tryEmit();
                    },
                    e.time,
                    this
                  ));
              else if (4 & t.eventType) return 8;
              return Pt;
            },
            reset: function () {
              clearTimeout(this._timer);
            },
            emit: function (t) {
              8 === this.state &&
                (t && 4 & t.eventType
                  ? this.manager.emit(this.options.event + 'up', t)
                  : ((this._input.timeStamp = p()), this.manager.emit(this.options.event, this._input)));
            },
          }),
          v(Nt, Rt, {
            defaults: { event: 'rotate', threshold: 0, pointers: 2 },
            getTouchAction: function () {
              return [Ct];
            },
            attrTest: function (t) {
              return (
                this._super.attrTest.call(this, t) && (Math.abs(t.rotation) > this.options.threshold || 2 & this.state)
              );
            },
          }),
          v(Vt, Rt, {
            defaults: { event: 'swipe', threshold: 10, velocity: 0.3, direction: 30, pointers: 1 },
            getTouchAction: function () {
              return It.prototype.getTouchAction.call(this);
            },
            attrTest: function (t) {
              var e,
                n = this.options.direction;
              return (
                30 & n
                  ? (e = t.overallVelocity)
                  : 6 & n
                  ? (e = t.overallVelocityX)
                  : 24 & n && (e = t.overallVelocityY),
                this._super.attrTest.call(this, t) &&
                  n & t.offsetDirection &&
                  t.distance > this.options.threshold &&
                  t.maxPointers == this.options.pointers &&
                  d(e) > this.options.velocity &&
                  4 & t.eventType
              );
            },
            emit: function (t) {
              var e = Dt(t.offsetDirection);
              e && this.manager.emit(this.options.event + e, t), this.manager.emit(this.options.event, t);
            },
          }),
          v(Bt, At, {
            defaults: { event: 'tap', pointers: 1, taps: 1, interval: 300, time: 250, threshold: 9, posThreshold: 10 },
            getTouchAction: function () {
              return [xt];
            },
            process: function (t) {
              var e = this.options,
                n = t.pointers.length === e.pointers,
                i = t.distance < e.threshold,
                s = t.deltaTime < e.time;
              if ((this.reset(), 1 & t.eventType && 0 === this.count)) return this.failTimeout();
              if (i && s && n) {
                if (4 != t.eventType) return this.failTimeout();
                var r = !this.pTime || t.timeStamp - this.pTime < e.interval,
                  o = !this.pCenter || G(this.pCenter, t.center) < e.posThreshold;
                if (
                  ((this.pTime = t.timeStamp),
                  (this.pCenter = t.center),
                  o && r ? (this.count += 1) : (this.count = 1),
                  (this._input = t),
                  0 == this.count % e.taps)
                )
                  return this.hasRequireFailures()
                    ? ((this._timer = m(
                        function () {
                          (this.state = 8), this.tryEmit();
                        },
                        e.interval,
                        this
                      )),
                      2)
                    : 8;
              }
              return Pt;
            },
            failTimeout: function () {
              return (
                (this._timer = m(
                  function () {
                    this.state = Pt;
                  },
                  this.options.interval,
                  this
                )),
                Pt
              );
            },
            reset: function () {
              clearTimeout(this._timer);
            },
            emit: function () {
              8 == this.state &&
                ((this._input.tapCount = this.count), this.manager.emit(this.options.event, this._input));
            },
          }),
          (zt.VERSION = '2.0.7'),
          (zt.defaults = {
            domEvents: !1,
            touchAction: vt,
            enable: !0,
            inputTarget: null,
            inputClass: null,
            preset: [
              [Nt, { enable: !1 }],
              [Lt, { enable: !1 }, ['rotate']],
              [Vt, { direction: 6 }],
              [It, { direction: 6 }, ['swipe']],
              [Bt],
              [Bt, { event: 'doubletap', taps: 2 }, ['tap']],
              [Ft],
            ],
            cssProps: {
              userSelect: 'none',
              touchSelect: 'none',
              touchCallout: 'none',
              contentZooming: 'none',
              userDrag: 'none',
              tapHighlightColor: 'rgba(0,0,0,0)',
            },
          }),
          (jt.prototype = {
            set: function (t) {
              return (
                l(this.options, t),
                t.touchAction && this.touchAction.update(),
                t.inputTarget && (this.input.destroy(), (this.input.target = t.inputTarget), this.input.init()),
                this
              );
            },
            stop: function (t) {
              this.session.stopped = t ? 2 : 1;
            },
            recognize: function (t) {
              var e = this.session;
              if (!e.stopped) {
                var n;
                this.touchAction.preventDefaults(t);
                var i = this.recognizers,
                  s = e.curRecognizer;
                (!s || (s && 8 & s.state)) && (s = e.curRecognizer = null);
                for (var r = 0; r < i.length; )
                  (n = i[r]),
                    2 === e.stopped || (s && n != s && !n.canRecognizeWith(s)) ? n.reset() : n.recognize(t),
                    !s && 14 & n.state && (s = e.curRecognizer = n),
                    r++;
              }
            },
            get: function (t) {
              if (t instanceof At) return t;
              for (var e = this.recognizers, n = 0; n < e.length; n++) if (e[n].options.event == t) return e[n];
              return null;
            },
            add: function (t) {
              if (f(t, 'add', this)) return this;
              var e = this.get(t.options.event);
              return e && this.remove(e), this.recognizers.push(t), (t.manager = this), this.touchAction.update(), t;
            },
            remove: function (t) {
              if (f(t, 'remove', this)) return this;
              if ((t = this.get(t))) {
                var e = this.recognizers,
                  n = A(e, t);
                -1 !== n && (e.splice(n, 1), this.touchAction.update());
              }
              return this;
            },
            on: function (t, e) {
              if (t !== a && e !== a) {
                var n = this.handlers;
                return (
                  g(P(t), function (t) {
                    (n[t] = n[t] || []), n[t].push(e);
                  }),
                  this
                );
              }
            },
            off: function (t, e) {
              if (t !== a) {
                var n = this.handlers;
                return (
                  g(P(t), function (t) {
                    e ? n[t] && n[t].splice(A(n[t], e), 1) : delete n[t];
                  }),
                  this
                );
              }
            },
            emit: function (t, e) {
              this.options.domEvents &&
                (function (t, e) {
                  var n = r.createEvent('Event');
                  n.initEvent(t, !0, !0), (n.gesture = e), e.target.dispatchEvent(n);
                })(t, e);
              var n = this.handlers[t] && this.handlers[t].slice();
              if (n && n.length) {
                (e.type = t),
                  (e.preventDefault = function () {
                    e.srcEvent.preventDefault();
                  });
                for (var i = 0; i < n.length; ) n[i](e), i++;
              }
            },
            destroy: function () {
              this.element && Ht(this, !1),
                (this.handlers = {}),
                (this.session = {}),
                this.input.destroy(),
                (this.element = null);
            },
          }),
          l(zt, {
            INPUT_START: 1,
            INPUT_MOVE: 2,
            INPUT_END: 4,
            INPUT_CANCEL: 8,
            STATE_POSSIBLE: 1,
            STATE_BEGAN: 2,
            STATE_CHANGED: 4,
            STATE_ENDED: 8,
            STATE_RECOGNIZED: 8,
            STATE_CANCELLED: 16,
            STATE_FAILED: Pt,
            DIRECTION_NONE: 1,
            DIRECTION_LEFT: 2,
            DIRECTION_RIGHT: 4,
            DIRECTION_UP: 8,
            DIRECTION_DOWN: 16,
            DIRECTION_HORIZONTAL: 6,
            DIRECTION_VERTICAL: 24,
            DIRECTION_ALL: 30,
            Manager: jt,
            Input: H,
            TouchAction: Ot,
            TouchInput: dt,
            MouseInput: J,
            PointerEventInput: st,
            TouchMouseInput: mt,
            SingleTouchInput: lt,
            Recognizer: At,
            AttrRecognizer: Rt,
            Tap: Bt,
            Pan: It,
            Swipe: Vt,
            Pinch: Lt,
            Rotate: Nt,
            Press: Ft,
            on: k,
            off: S,
            each: g,
            merge: y,
            extend: b,
            assign: l,
            inherit: v,
            bindFn: w,
            prefixed: M,
          }),
          ((void 0 !== s ? s : 'undefined' != typeof self ? self : {}).Hammer = zt),
          (i = function () {
            return zt;
          }.call(e, n, e, t)) === a || (t.exports = i);
      })(window, document);
    },
    11: (t, e, n) => {
      'use strict';
      function i(t) {
        return 'function' == typeof t;
      }
      let s = !1;
      const r = {
        Promise: void 0,
        set useDeprecatedSynchronousErrorHandling(t) {
          if (t) {
            const t = new Error();
            console.warn(
              'DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + t.stack
            );
          } else s && console.log('RxJS: Back to a better error behavior. Thank you. <3');
          s = t;
        },
        get useDeprecatedSynchronousErrorHandling() {
          return s;
        },
      };
      function o(t) {
        setTimeout(() => {
          throw t;
        }, 0);
      }
      const a = {
          closed: !0,
          next(t) {},
          error(t) {
            if (r.useDeprecatedSynchronousErrorHandling) throw t;
            o(t);
          },
          complete() {},
        },
        l = Array.isArray || ((t) => t && 'number' == typeof t.length);
      function c(t) {
        return null !== t && 'object' == typeof t;
      }
      const h = (() => {
        function t(t) {
          return (
            Error.call(this),
            (this.message = t
              ? `${t.length} errors occurred during unsubscription:\n${t
                  .map((t, e) => `${e + 1}) ${t.toString()}`)
                  .join('\n  ')}`
              : ''),
            (this.name = 'UnsubscriptionError'),
            (this.errors = t),
            this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      class u {
        constructor(t) {
          (this.closed = !1),
            (this._parentOrParents = null),
            (this._subscriptions = null),
            t && ((this._ctorUnsubscribe = !0), (this._unsubscribe = t));
        }
        unsubscribe() {
          let t;
          if (this.closed) return;
          let { _parentOrParents: e, _ctorUnsubscribe: n, _unsubscribe: s, _subscriptions: r } = this;
          if (((this.closed = !0), (this._parentOrParents = null), (this._subscriptions = null), e instanceof u))
            e.remove(this);
          else if (null !== e) for (let i = 0; i < e.length; ++i) e[i].remove(this);
          if (i(s)) {
            n && (this._unsubscribe = void 0);
            try {
              s.call(this);
            } catch (o) {
              t = o instanceof h ? d(o.errors) : [o];
            }
          }
          if (l(r)) {
            let e = -1,
              n = r.length;
            for (; ++e < n; ) {
              const n = r[e];
              if (c(n))
                try {
                  n.unsubscribe();
                } catch (o) {
                  (t = t || []), o instanceof h ? (t = t.concat(d(o.errors))) : t.push(o);
                }
            }
          }
          if (t) throw new h(t);
        }
        add(t) {
          let e = t;
          if (!t) return u.EMPTY;
          switch (typeof t) {
            case 'function':
              e = new u(t);
            case 'object':
              if (e === this || e.closed || 'function' != typeof e.unsubscribe) return e;
              if (this.closed) return e.unsubscribe(), e;
              if (!(e instanceof u)) {
                const t = e;
                (e = new u()), (e._subscriptions = [t]);
              }
              break;
            default:
              throw new Error('unrecognized teardown ' + t + ' added to Subscription.');
          }
          let { _parentOrParents: n } = e;
          if (null === n) e._parentOrParents = this;
          else if (n instanceof u) {
            if (n === this) return e;
            e._parentOrParents = [n, this];
          } else {
            if (-1 !== n.indexOf(this)) return e;
            n.push(this);
          }
          const i = this._subscriptions;
          return null === i ? (this._subscriptions = [e]) : i.push(e), e;
        }
        remove(t) {
          const e = this._subscriptions;
          if (e) {
            const n = e.indexOf(t);
            -1 !== n && e.splice(n, 1);
          }
        }
      }
      function d(t) {
        return t.reduce((t, e) => t.concat(e instanceof h ? e.errors : e), []);
      }
      u.EMPTY = (function (t) {
        return (t.closed = !0), t;
      })(new u());
      const p = 'function' == typeof Symbol ? Symbol('rxSubscriber') : '@@rxSubscriber_' + Math.random();
      class m extends u {
        constructor(t, e, n) {
          switch (
            (super(),
            (this.syncErrorValue = null),
            (this.syncErrorThrown = !1),
            (this.syncErrorThrowable = !1),
            (this.isStopped = !1),
            arguments.length)
          ) {
            case 0:
              this.destination = a;
              break;
            case 1:
              if (!t) {
                this.destination = a;
                break;
              }
              if ('object' == typeof t) {
                t instanceof m
                  ? ((this.syncErrorThrowable = t.syncErrorThrowable), (this.destination = t), t.add(this))
                  : ((this.syncErrorThrowable = !0), (this.destination = new f(this, t)));
                break;
              }
            default:
              (this.syncErrorThrowable = !0), (this.destination = new f(this, t, e, n));
          }
        }
        [p]() {
          return this;
        }
        static create(t, e, n) {
          const i = new m(t, e, n);
          return (i.syncErrorThrowable = !1), i;
        }
        next(t) {
          this.isStopped || this._next(t);
        }
        error(t) {
          this.isStopped || ((this.isStopped = !0), this._error(t));
        }
        complete() {
          this.isStopped || ((this.isStopped = !0), this._complete());
        }
        unsubscribe() {
          this.closed || ((this.isStopped = !0), super.unsubscribe());
        }
        _next(t) {
          this.destination.next(t);
        }
        _error(t) {
          this.destination.error(t), this.unsubscribe();
        }
        _complete() {
          this.destination.complete(), this.unsubscribe();
        }
        _unsubscribeAndRecycle() {
          const { _parentOrParents: t } = this;
          return (
            (this._parentOrParents = null),
            this.unsubscribe(),
            (this.closed = !1),
            (this.isStopped = !1),
            (this._parentOrParents = t),
            this
          );
        }
      }
      class f extends m {
        constructor(t, e, n, s) {
          let r;
          super(), (this._parentSubscriber = t);
          let o = this;
          i(e)
            ? (r = e)
            : e &&
              ((r = e.next),
              (n = e.error),
              (s = e.complete),
              e !== a &&
                ((o = Object.create(e)),
                i(o.unsubscribe) && this.add(o.unsubscribe.bind(o)),
                (o.unsubscribe = this.unsubscribe.bind(this)))),
            (this._context = o),
            (this._next = r),
            (this._error = n),
            (this._complete = s);
        }
        next(t) {
          if (!this.isStopped && this._next) {
            const { _parentSubscriber: e } = this;
            r.useDeprecatedSynchronousErrorHandling && e.syncErrorThrowable
              ? this.__tryOrSetError(e, this._next, t) && this.unsubscribe()
              : this.__tryOrUnsub(this._next, t);
          }
        }
        error(t) {
          if (!this.isStopped) {
            const { _parentSubscriber: e } = this,
              { useDeprecatedSynchronousErrorHandling: n } = r;
            if (this._error)
              n && e.syncErrorThrowable
                ? (this.__tryOrSetError(e, this._error, t), this.unsubscribe())
                : (this.__tryOrUnsub(this._error, t), this.unsubscribe());
            else if (e.syncErrorThrowable)
              n ? ((e.syncErrorValue = t), (e.syncErrorThrown = !0)) : o(t), this.unsubscribe();
            else {
              if ((this.unsubscribe(), n)) throw t;
              o(t);
            }
          }
        }
        complete() {
          if (!this.isStopped) {
            const { _parentSubscriber: t } = this;
            if (this._complete) {
              const e = () => this._complete.call(this._context);
              r.useDeprecatedSynchronousErrorHandling && t.syncErrorThrowable
                ? (this.__tryOrSetError(t, e), this.unsubscribe())
                : (this.__tryOrUnsub(e), this.unsubscribe());
            } else this.unsubscribe();
          }
        }
        __tryOrUnsub(t, e) {
          try {
            t.call(this._context, e);
          } catch (n) {
            if ((this.unsubscribe(), r.useDeprecatedSynchronousErrorHandling)) throw n;
            o(n);
          }
        }
        __tryOrSetError(t, e, n) {
          if (!r.useDeprecatedSynchronousErrorHandling) throw new Error('bad call');
          try {
            e.call(this._context, n);
          } catch (i) {
            return r.useDeprecatedSynchronousErrorHandling
              ? ((t.syncErrorValue = i), (t.syncErrorThrown = !0), !0)
              : (o(i), !0);
          }
          return !1;
        }
        _unsubscribe() {
          const { _parentSubscriber: t } = this;
          (this._context = null), (this._parentSubscriber = null), t.unsubscribe();
        }
      }
      const g = ('function' == typeof Symbol && Symbol.observable) || '@@observable';
      function _(t) {
        return t;
      }
      let b = (() => {
        class t {
          constructor(t) {
            (this._isScalar = !1), t && (this._subscribe = t);
          }
          lift(e) {
            const n = new t();
            return (n.source = this), (n.operator = e), n;
          }
          subscribe(t, e, n) {
            const { operator: i } = this,
              s = (function (t, e, n) {
                if (t) {
                  if (t instanceof m) return t;
                  if (t[p]) return t[p]();
                }
                return t || e || n ? new m(t, e, n) : new m(a);
              })(t, e, n);
            if (
              (s.add(
                i
                  ? i.call(s, this.source)
                  : this.source || (r.useDeprecatedSynchronousErrorHandling && !s.syncErrorThrowable)
                  ? this._subscribe(s)
                  : this._trySubscribe(s)
              ),
              r.useDeprecatedSynchronousErrorHandling &&
                s.syncErrorThrowable &&
                ((s.syncErrorThrowable = !1), s.syncErrorThrown))
            )
              throw s.syncErrorValue;
            return s;
          }
          _trySubscribe(t) {
            try {
              return this._subscribe(t);
            } catch (e) {
              r.useDeprecatedSynchronousErrorHandling && ((t.syncErrorThrown = !0), (t.syncErrorValue = e)),
                (function (t) {
                  for (; t; ) {
                    const { closed: e, destination: n, isStopped: i } = t;
                    if (e || i) return !1;
                    t = n && n instanceof m ? n : null;
                  }
                  return !0;
                })(t)
                  ? t.error(e)
                  : console.warn(e);
            }
          }
          forEach(t, e) {
            return new (e = y(e))((e, n) => {
              let i;
              i = this.subscribe(
                (e) => {
                  try {
                    t(e);
                  } catch (s) {
                    n(s), i && i.unsubscribe();
                  }
                },
                n,
                e
              );
            });
          }
          _subscribe(t) {
            const { source: e } = this;
            return e && e.subscribe(t);
          }
          [g]() {
            return this;
          }
          pipe(...t) {
            return 0 === t.length
              ? this
              : (0 === (e = t).length
                  ? _
                  : 1 === e.length
                  ? e[0]
                  : function (t) {
                      return e.reduce((t, e) => e(t), t);
                    })(this);
            var e;
          }
          toPromise(t) {
            return new (t = y(t))((t, e) => {
              let n;
              this.subscribe(
                (t) => (n = t),
                (t) => e(t),
                () => t(n)
              );
            });
          }
        }
        return (t.create = (e) => new t(e)), t;
      })();
      function y(t) {
        if ((t || (t = r.Promise || Promise), !t)) throw new Error('no Promise impl found');
        return t;
      }
      const v = (() => {
        function t() {
          return (
            Error.call(this), (this.message = 'object unsubscribed'), (this.name = 'ObjectUnsubscribedError'), this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      class w extends u {
        constructor(t, e) {
          super(), (this.subject = t), (this.subscriber = e), (this.closed = !1);
        }
        unsubscribe() {
          if (this.closed) return;
          this.closed = !0;
          const t = this.subject,
            e = t.observers;
          if (((this.subject = null), !e || 0 === e.length || t.isStopped || t.closed)) return;
          const n = e.indexOf(this.subscriber);
          -1 !== n && e.splice(n, 1);
        }
      }
      class x extends m {
        constructor(t) {
          super(t), (this.destination = t);
        }
      }
      let C = (() => {
        class t extends b {
          constructor() {
            super(),
              (this.observers = []),
              (this.closed = !1),
              (this.isStopped = !1),
              (this.hasError = !1),
              (this.thrownError = null);
          }
          [p]() {
            return new x(this);
          }
          lift(t) {
            const e = new k(this, this);
            return (e.operator = t), e;
          }
          next(t) {
            if (this.closed) throw new v();
            if (!this.isStopped) {
              const { observers: e } = this,
                n = e.length,
                i = e.slice();
              for (let s = 0; s < n; s++) i[s].next(t);
            }
          }
          error(t) {
            if (this.closed) throw new v();
            (this.hasError = !0), (this.thrownError = t), (this.isStopped = !0);
            const { observers: e } = this,
              n = e.length,
              i = e.slice();
            for (let s = 0; s < n; s++) i[s].error(t);
            this.observers.length = 0;
          }
          complete() {
            if (this.closed) throw new v();
            this.isStopped = !0;
            const { observers: t } = this,
              e = t.length,
              n = t.slice();
            for (let i = 0; i < e; i++) n[i].complete();
            this.observers.length = 0;
          }
          unsubscribe() {
            (this.isStopped = !0), (this.closed = !0), (this.observers = null);
          }
          _trySubscribe(t) {
            if (this.closed) throw new v();
            return super._trySubscribe(t);
          }
          _subscribe(t) {
            if (this.closed) throw new v();
            return this.hasError
              ? (t.error(this.thrownError), u.EMPTY)
              : this.isStopped
              ? (t.complete(), u.EMPTY)
              : (this.observers.push(t), new w(this, t));
          }
          asObservable() {
            const t = new b();
            return (t.source = this), t;
          }
        }
        return (t.create = (t, e) => new k(t, e)), t;
      })();
      class k extends C {
        constructor(t, e) {
          super(), (this.destination = t), (this.source = e);
        }
        next(t) {
          const { destination: e } = this;
          e && e.next && e.next(t);
        }
        error(t) {
          const { destination: e } = this;
          e && e.error && this.destination.error(t);
        }
        complete() {
          const { destination: t } = this;
          t && t.complete && this.destination.complete();
        }
        _subscribe(t) {
          const { source: e } = this;
          return e ? this.source.subscribe(t) : u.EMPTY;
        }
      }
      function S(t) {
        return t && 'function' == typeof t.schedule;
      }
      function E(t, e) {
        return function (n) {
          if ('function' != typeof t) throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
          return n.lift(new O(t, e));
        };
      }
      class O {
        constructor(t, e) {
          (this.project = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new P(t, this.project, this.thisArg));
        }
      }
      class P extends m {
        constructor(t, e, n) {
          super(t), (this.project = e), (this.count = 0), (this.thisArg = n || this);
        }
        _next(t) {
          let e;
          try {
            e = this.project.call(this.thisArg, t, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(e);
        }
      }
      const A = (t) => (e) => {
          for (let n = 0, i = t.length; n < i && !e.closed; n++) e.next(t[n]);
          e.complete();
        },
        T = 'function' == typeof Symbol && Symbol.iterator ? Symbol.iterator : '@@iterator',
        D = (t) => t && 'number' == typeof t.length && 'function' != typeof t;
      function M(t) {
        return !!t && 'function' != typeof t.subscribe && 'function' == typeof t.then;
      }
      const R = (t) => {
        if (t && 'function' == typeof t[g])
          return (
            (n = t),
            (t) => {
              const e = n[g]();
              if ('function' != typeof e.subscribe)
                throw new TypeError('Provided object does not correctly implement Symbol.observable');
              return e.subscribe(t);
            }
          );
        if (D(t)) return A(t);
        if (M(t))
          return (
            (t) => (e) =>
              t
                .then(
                  (t) => {
                    e.closed || (e.next(t), e.complete());
                  },
                  (t) => e.error(t)
                )
                .then(null, o),
              e
          )(t);
        if (t && 'function' == typeof t[T])
          return (
            (e = t),
            (t) => {
              const n = e[T]();
              for (;;) {
                let e;
                try {
                  e = n.next();
                } catch (i) {
                  return t.error(i), t;
                }
                if (e.done) {
                  t.complete();
                  break;
                }
                if ((t.next(e.value), t.closed)) break;
              }
              return (
                'function' == typeof n.return &&
                  t.add(() => {
                    n.return && n.return();
                  }),
                t
              );
            }
          );
        {
          const e = c(t) ? 'an invalid object' : `'${t}'`;
          throw new TypeError(
            `You provided ${e} where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.`
          );
        }
        var e, n;
      };
      function I(t, e) {
        return new b((n) => {
          const i = new u();
          let s = 0;
          return (
            i.add(
              e.schedule(function () {
                s !== t.length ? (n.next(t[s++]), n.closed || i.add(this.schedule())) : n.complete();
              })
            ),
            i
          );
        });
      }
      function L(t, e) {
        return e
          ? (function (t, e) {
              if (null != t) {
                if (
                  (function (t) {
                    return t && 'function' == typeof t[g];
                  })(t)
                )
                  return (function (t, e) {
                    return new b((n) => {
                      const i = new u();
                      return (
                        i.add(
                          e.schedule(() => {
                            const s = t[g]();
                            i.add(
                              s.subscribe({
                                next(t) {
                                  i.add(e.schedule(() => n.next(t)));
                                },
                                error(t) {
                                  i.add(e.schedule(() => n.error(t)));
                                },
                                complete() {
                                  i.add(e.schedule(() => n.complete()));
                                },
                              })
                            );
                          })
                        ),
                        i
                      );
                    });
                  })(t, e);
                if (M(t))
                  return (function (t, e) {
                    return new b((n) => {
                      const i = new u();
                      return (
                        i.add(
                          e.schedule(() =>
                            t.then(
                              (t) => {
                                i.add(
                                  e.schedule(() => {
                                    n.next(t), i.add(e.schedule(() => n.complete()));
                                  })
                                );
                              },
                              (t) => {
                                i.add(e.schedule(() => n.error(t)));
                              }
                            )
                          )
                        ),
                        i
                      );
                    });
                  })(t, e);
                if (D(t)) return I(t, e);
                if (
                  (function (t) {
                    return t && 'function' == typeof t[T];
                  })(t) ||
                  'string' == typeof t
                )
                  return (function (t, e) {
                    if (!t) throw new Error('Iterable cannot be null');
                    return new b((n) => {
                      const i = new u();
                      let s;
                      return (
                        i.add(() => {
                          s && 'function' == typeof s.return && s.return();
                        }),
                        i.add(
                          e.schedule(() => {
                            (s = t[T]()),
                              i.add(
                                e.schedule(function () {
                                  if (n.closed) return;
                                  let t, e;
                                  try {
                                    const n = s.next();
                                    (t = n.value), (e = n.done);
                                  } catch (i) {
                                    return void n.error(i);
                                  }
                                  e ? n.complete() : (n.next(t), this.schedule());
                                })
                              );
                          })
                        ),
                        i
                      );
                    });
                  })(t, e);
              }
              throw new TypeError(((null !== t && typeof t) || t) + ' is not observable');
            })(t, e)
          : t instanceof b
          ? t
          : new b(R(t));
      }
      class F extends m {
        constructor(t) {
          super(), (this.parent = t);
        }
        _next(t) {
          this.parent.notifyNext(t);
        }
        _error(t) {
          this.parent.notifyError(t), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(), this.unsubscribe();
        }
      }
      class N extends m {
        notifyNext(t) {
          this.destination.next(t);
        }
        notifyError(t) {
          this.destination.error(t);
        }
        notifyComplete() {
          this.destination.complete();
        }
      }
      function V(t, e) {
        if (e.closed) return;
        if (t instanceof b) return t.subscribe(e);
        let n;
        try {
          n = R(t)(e);
        } catch (i) {
          e.error(i);
        }
        return n;
      }
      function B(t, e, n = Number.POSITIVE_INFINITY) {
        return 'function' == typeof e
          ? (i) => i.pipe(B((n, i) => L(t(n, i)).pipe(E((t, s) => e(n, t, i, s))), n))
          : ('number' == typeof e && (n = e), (e) => e.lift(new z(t, n)));
      }
      class z {
        constructor(t, e = Number.POSITIVE_INFINITY) {
          (this.project = t), (this.concurrent = e);
        }
        call(t, e) {
          return e.subscribe(new j(t, this.project, this.concurrent));
        }
      }
      class j extends N {
        constructor(t, e, n = Number.POSITIVE_INFINITY) {
          super(t),
            (this.project = e),
            (this.concurrent = n),
            (this.hasCompleted = !1),
            (this.buffer = []),
            (this.active = 0),
            (this.index = 0);
        }
        _next(t) {
          this.active < this.concurrent ? this._tryNext(t) : this.buffer.push(t);
        }
        _tryNext(t) {
          let e;
          const n = this.index++;
          try {
            e = this.project(t, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          this.active++, this._innerSub(e);
        }
        _innerSub(t) {
          const e = new F(this),
            n = this.destination;
          n.add(e);
          const i = V(t, e);
          i !== e && n.add(i);
        }
        _complete() {
          (this.hasCompleted = !0),
            0 === this.active && 0 === this.buffer.length && this.destination.complete(),
            this.unsubscribe();
        }
        notifyNext(t) {
          this.destination.next(t);
        }
        notifyComplete() {
          const t = this.buffer;
          this.active--,
            t.length > 0
              ? this._next(t.shift())
              : 0 === this.active && this.hasCompleted && this.destination.complete();
        }
      }
      function H(t = Number.POSITIVE_INFINITY) {
        return B(_, t);
      }
      function $(t, e) {
        return e ? I(t, e) : new b(A(t));
      }
      function q(...t) {
        let e = Number.POSITIVE_INFINITY,
          n = null,
          i = t[t.length - 1];
        return (
          S(i)
            ? ((n = t.pop()), t.length > 1 && 'number' == typeof t[t.length - 1] && (e = t.pop()))
            : 'number' == typeof i && (e = t.pop()),
          null === n && 1 === t.length && t[0] instanceof b ? t[0] : H(e)($(t, n))
        );
      }
      function W() {
        return function (t) {
          return t.lift(new U(t));
        };
      }
      class U {
        constructor(t) {
          this.connectable = t;
        }
        call(t, e) {
          const { connectable: n } = this;
          n._refCount++;
          const i = new Y(t, n),
            s = e.subscribe(i);
          return i.closed || (i.connection = n.connect()), s;
        }
      }
      class Y extends m {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _unsubscribe() {
          const { connectable: t } = this;
          if (!t) return void (this.connection = null);
          this.connectable = null;
          const e = t._refCount;
          if (e <= 0) return void (this.connection = null);
          if (((t._refCount = e - 1), e > 1)) return void (this.connection = null);
          const { connection: n } = this,
            i = t._connection;
          (this.connection = null), !i || (n && i !== n) || i.unsubscribe();
        }
      }
      class G extends b {
        constructor(t, e) {
          super(), (this.source = t), (this.subjectFactory = e), (this._refCount = 0), (this._isComplete = !1);
        }
        _subscribe(t) {
          return this.getSubject().subscribe(t);
        }
        getSubject() {
          const t = this._subject;
          return (t && !t.isStopped) || (this._subject = this.subjectFactory()), this._subject;
        }
        connect() {
          let t = this._connection;
          return (
            t ||
              ((this._isComplete = !1),
              (t = this._connection = new u()),
              t.add(this.source.subscribe(new K(this.getSubject(), this))),
              t.closed && ((this._connection = null), (t = u.EMPTY))),
            t
          );
        }
        refCount() {
          return W()(this);
        }
      }
      const Q = (() => {
        const t = G.prototype;
        return {
          operator: { value: null },
          _refCount: { value: 0, writable: !0 },
          _subject: { value: null, writable: !0 },
          _connection: { value: null, writable: !0 },
          _subscribe: { value: t._subscribe },
          _isComplete: { value: t._isComplete, writable: !0 },
          getSubject: { value: t.getSubject },
          connect: { value: t.connect },
          refCount: { value: t.refCount },
        };
      })();
      class K extends x {
        constructor(t, e) {
          super(t), (this.connectable = e);
        }
        _error(t) {
          this._unsubscribe(), super._error(t);
        }
        _complete() {
          (this.connectable._isComplete = !0), this._unsubscribe(), super._complete();
        }
        _unsubscribe() {
          const t = this.connectable;
          if (t) {
            this.connectable = null;
            const e = t._connection;
            (t._refCount = 0), (t._subject = null), (t._connection = null), e && e.unsubscribe();
          }
        }
      }
      function X(t, e) {
        return function (n) {
          let i;
          if (
            ((i =
              'function' == typeof t
                ? t
                : function () {
                    return t;
                  }),
            'function' == typeof e)
          )
            return n.lift(new Z(i, e));
          const s = Object.create(n, Q);
          return (s.source = n), (s.subjectFactory = i), s;
        };
      }
      class Z {
        constructor(t, e) {
          (this.subjectFactory = t), (this.selector = e);
        }
        call(t, e) {
          const { selector: n } = this,
            i = this.subjectFactory(),
            s = n(i).subscribe(t);
          return s.add(e.subscribe(i)), s;
        }
      }
      function J() {
        return new C();
      }
      function tt() {
        return (t) => W()(X(J)(t));
      }
      function et(t) {
        for (let e in t) if (t[e] === et) return e;
        throw Error('Could not find renamed property on target object.');
      }
      function nt(t, e) {
        for (const n in e) e.hasOwnProperty(n) && !t.hasOwnProperty(n) && (t[n] = e[n]);
      }
      function it(t) {
        if ('string' == typeof t) return t;
        if (Array.isArray(t)) return '[' + t.map(it).join(', ') + ']';
        if (null == t) return '' + t;
        if (t.overriddenName) return `${t.overriddenName}`;
        if (t.name) return `${t.name}`;
        const e = t.toString();
        if (null == e) return '' + e;
        const n = e.indexOf('\n');
        return -1 === n ? e : e.substring(0, n);
      }
      function st(t, e) {
        return null == t || '' === t ? (null === e ? '' : e) : null == e || '' === e ? t : t + ' ' + e;
      }
      const rt = et({ __forward_ref__: et });
      function ot(t) {
        return (
          (t.__forward_ref__ = ot),
          (t.toString = function () {
            return it(this());
          }),
          t
        );
      }
      function at(t) {
        return lt(t) ? t() : t;
      }
      function lt(t) {
        return 'function' == typeof t && t.hasOwnProperty(rt) && t.__forward_ref__ === ot;
      }
      class ct extends Error {
        constructor(t, e) {
          super(
            (function (t, e) {
              return `${t ? `NG0${t}: ` : ''}${e}`;
            })(t, e)
          ),
            (this.code = t);
        }
      }
      function ht(t) {
        return 'string' == typeof t ? t : null == t ? '' : String(t);
      }
      function ut(t) {
        return 'function' == typeof t
          ? t.name || t.toString()
          : 'object' == typeof t && null != t && 'function' == typeof t.type
          ? t.type.name || t.type.toString()
          : ht(t);
      }
      function dt(t, e) {
        const n = e ? ` in ${e}` : '';
        throw new ct('201', `No provider for ${ut(t)} found${n}`);
      }
      function pt(t) {
        return { token: t.token, providedIn: t.providedIn || null, factory: t.factory, value: void 0 };
      }
      function mt(t) {
        return { providers: t.providers || [], imports: t.imports || [] };
      }
      function ft(t) {
        return gt(t, bt) || gt(t, vt);
      }
      function gt(t, e) {
        return t.hasOwnProperty(e) ? t[e] : null;
      }
      function _t(t) {
        return t && (t.hasOwnProperty(yt) || t.hasOwnProperty(wt)) ? t[yt] : null;
      }
      const bt = et({ '\u0275prov': et }),
        yt = et({ '\u0275inj': et }),
        vt = et({ ngInjectableDef: et }),
        wt = et({ ngInjectorDef: et });
      var xt = (() => (
        ((xt = xt || {})[(xt.Default = 0)] = 'Default'),
        (xt[(xt.Host = 1)] = 'Host'),
        (xt[(xt.Self = 2)] = 'Self'),
        (xt[(xt.SkipSelf = 4)] = 'SkipSelf'),
        (xt[(xt.Optional = 8)] = 'Optional'),
        xt
      ))();
      let Ct;
      function kt(t) {
        const e = Ct;
        return (Ct = t), e;
      }
      function St(t, e, n) {
        const i = ft(t);
        return i && 'root' == i.providedIn
          ? void 0 === i.value
            ? (i.value = i.factory())
            : i.value
          : n & xt.Optional
          ? null
          : void 0 !== e
          ? e
          : void dt(it(t), 'Injector');
      }
      function Et(t) {
        return { toString: t }.toString();
      }
      var Ot = (() => (((Ot = Ot || {})[(Ot.OnPush = 0)] = 'OnPush'), (Ot[(Ot.Default = 1)] = 'Default'), Ot))(),
        Pt = (() => (
          ((Pt = Pt || {})[(Pt.Emulated = 0)] = 'Emulated'),
          (Pt[(Pt.None = 2)] = 'None'),
          (Pt[(Pt.ShadowDom = 3)] = 'ShadowDom'),
          Pt
        ))();
      const At = 'undefined' != typeof globalThis && globalThis,
        Tt = 'undefined' != typeof window && window,
        Dt =
          'undefined' != typeof self &&
          'undefined' != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          self,
        Mt = 'undefined' != typeof global && global,
        Rt = At || Mt || Tt || Dt,
        It = {},
        Lt = [],
        Ft = [],
        Nt = et({ '\u0275cmp': et }),
        Vt = et({ '\u0275dir': et }),
        Bt = et({ '\u0275pipe': et }),
        zt = et({ '\u0275mod': et }),
        jt = et({ '\u0275loc': et }),
        Ht = et({ '\u0275fac': et }),
        $t = et({ __NG_ELEMENT_ID__: et });
      let qt = 0;
      function Wt(t) {
        return Et(() => {
          const e = {},
            n = {
              type: t.type,
              providersResolver: null,
              decls: t.decls,
              vars: t.vars,
              factory: null,
              template: t.template || null,
              consts: t.consts || null,
              ngContentSelectors: t.ngContentSelectors,
              hostBindings: t.hostBindings || null,
              hostVars: t.hostVars || 0,
              hostAttrs: t.hostAttrs || null,
              contentQueries: t.contentQueries || null,
              declaredInputs: e,
              inputs: null,
              outputs: null,
              exportAs: t.exportAs || null,
              onPush: t.changeDetection === Ot.OnPush,
              directiveDefs: null,
              pipeDefs: null,
              selectors: t.selectors || Ft,
              viewQuery: t.viewQuery || null,
              features: t.features || null,
              data: t.data || {},
              encapsulation: t.encapsulation || Pt.Emulated,
              id: 'c',
              styles: t.styles || Ft,
              _: null,
              setInput: null,
              schemas: t.schemas || null,
              tView: null,
            },
            i = t.directives,
            s = t.features,
            r = t.pipes;
          return (
            (n.id += qt++),
            (n.inputs = Kt(t.inputs, e)),
            (n.outputs = Kt(t.outputs)),
            s && s.forEach((t) => t(n)),
            (n.directiveDefs = i ? () => ('function' == typeof i ? i() : i).map(Ut) : null),
            (n.pipeDefs = r ? () => ('function' == typeof r ? r() : r).map(Yt) : null),
            n
          );
        });
      }
      function Ut(t) {
        return (
          Jt(t) ||
          (function (t) {
            return t[Vt] || null;
          })(t)
        );
      }
      function Yt(t) {
        return (function (t) {
          return t[Bt] || null;
        })(t);
      }
      const Gt = {};
      function Qt(t) {
        const e = {
          type: t.type,
          bootstrap: t.bootstrap || Ft,
          declarations: t.declarations || Ft,
          imports: t.imports || Ft,
          exports: t.exports || Ft,
          transitiveCompileScopes: null,
          schemas: t.schemas || null,
          id: t.id || null,
        };
        return (
          null != t.id &&
            Et(() => {
              Gt[t.id] = t.type;
            }),
          e
        );
      }
      function Kt(t, e) {
        if (null == t) return It;
        const n = {};
        for (const i in t)
          if (t.hasOwnProperty(i)) {
            let s = t[i],
              r = s;
            Array.isArray(s) && ((r = s[1]), (s = s[0])), (n[s] = i), e && (e[s] = r);
          }
        return n;
      }
      const Xt = Wt;
      function Zt(t) {
        return {
          type: t.type,
          name: t.name,
          factory: null,
          pure: !1 !== t.pure,
          onDestroy: t.type.prototype.ngOnDestroy || null,
        };
      }
      function Jt(t) {
        return t[Nt] || null;
      }
      function te(t, e) {
        const n = t[zt] || null;
        if (!n && !0 === e) throw new Error(`Type ${it(t)} does not have '\u0275mod' property.`);
        return n;
      }
      const ee = 20,
        ne = 10;
      function ie(t) {
        return Array.isArray(t) && 'object' == typeof t[1];
      }
      function se(t) {
        return Array.isArray(t) && !0 === t[1];
      }
      function re(t) {
        return 0 != (8 & t.flags);
      }
      function oe(t) {
        return 2 == (2 & t.flags);
      }
      function ae(t) {
        return 1 == (1 & t.flags);
      }
      function le(t) {
        return null !== t.template;
      }
      function ce(t, e) {
        return t.hasOwnProperty(Ht) ? t[Ht] : null;
      }
      class he {
        constructor(t, e, n) {
          (this.previousValue = t), (this.currentValue = e), (this.firstChange = n);
        }
        isFirstChange() {
          return this.firstChange;
        }
      }
      function ue() {
        return de;
      }
      function de(t) {
        return t.type.prototype.ngOnChanges && (t.setInput = me), pe;
      }
      function pe() {
        const t = fe(this),
          e = null == t ? void 0 : t.current;
        if (e) {
          const n = t.previous;
          if (n === It) t.previous = e;
          else for (let t in e) n[t] = e[t];
          (t.current = null), this.ngOnChanges(e);
        }
      }
      function me(t, e, n, i) {
        const s =
            fe(t) ||
            (function (t, e) {
              return (t.__ngSimpleChanges__ = e);
            })(t, { previous: It, current: null }),
          r = s.current || (s.current = {}),
          o = s.previous,
          a = this.declaredInputs[n],
          l = o[a];
        (r[a] = new he(l && l.currentValue, e, o === It)), (t[i] = e);
      }
      function fe(t) {
        return t.__ngSimpleChanges__ || null;
      }
      ue.ngInherit = !0;
      const ge = 'http://www.w3.org/2000/svg';
      let _e;
      function be(t) {
        return !!t.listen;
      }
      const ye = {
        createRenderer: (t, e) => (void 0 !== _e ? _e : 'undefined' != typeof document ? document : void 0),
      };
      function ve(t) {
        for (; Array.isArray(t); ) t = t[0];
        return t;
      }
      function we(t, e) {
        return ve(e[t]);
      }
      function xe(t, e) {
        return ve(e[t.index]);
      }
      function Ce(t, e) {
        return t.data[e];
      }
      function ke(t, e) {
        return t[e];
      }
      function Se(t, e) {
        const n = e[t];
        return ie(n) ? n : n[0];
      }
      function Ee(t) {
        const e = (function (t) {
          return t.__ngContext__ || null;
        })(t);
        return e ? (Array.isArray(e) ? e : e.lView) : null;
      }
      function Oe(t) {
        return 4 == (4 & t[2]);
      }
      function Pe(t) {
        return 128 == (128 & t[2]);
      }
      function Ae(t, e) {
        return null == e ? null : t[e];
      }
      function Te(t) {
        t[18] = 0;
      }
      function De(t, e) {
        t[5] += e;
        let n = t,
          i = t[3];
        for (; null !== i && ((1 === e && 1 === n[5]) || (-1 === e && 0 === n[5])); ) (i[5] += e), (n = i), (i = i[3]);
      }
      const Me = { lFrame: sn(null), bindingsEnabled: !0, isInCheckNoChangesMode: !1 };
      function Re() {
        return Me.bindingsEnabled;
      }
      function Ie() {
        return Me.lFrame.lView;
      }
      function Le() {
        return Me.lFrame.tView;
      }
      function Fe(t) {
        Me.lFrame.contextLView = t;
      }
      function Ne() {
        let t = Ve();
        for (; null !== t && 64 === t.type; ) t = t.parent;
        return t;
      }
      function Ve() {
        return Me.lFrame.currentTNode;
      }
      function Be(t, e) {
        const n = Me.lFrame;
        (n.currentTNode = t), (n.isParent = e);
      }
      function ze() {
        return Me.lFrame.isParent;
      }
      function je() {
        Me.lFrame.isParent = !1;
      }
      function He() {
        return Me.isInCheckNoChangesMode;
      }
      function $e(t) {
        Me.isInCheckNoChangesMode = t;
      }
      function qe() {
        const t = Me.lFrame;
        let e = t.bindingRootIndex;
        return -1 === e && (e = t.bindingRootIndex = t.tView.bindingStartIndex), e;
      }
      function We() {
        return Me.lFrame.bindingIndex;
      }
      function Ue() {
        return Me.lFrame.bindingIndex++;
      }
      function Ye(t) {
        const e = Me.lFrame,
          n = e.bindingIndex;
        return (e.bindingIndex = e.bindingIndex + t), n;
      }
      function Ge(t, e) {
        const n = Me.lFrame;
        (n.bindingIndex = n.bindingRootIndex = t), Qe(e);
      }
      function Qe(t) {
        Me.lFrame.currentDirectiveIndex = t;
      }
      function Ke(t) {
        const e = Me.lFrame.currentDirectiveIndex;
        return -1 === e ? null : t[e];
      }
      function Xe() {
        return Me.lFrame.currentQueryIndex;
      }
      function Ze(t) {
        Me.lFrame.currentQueryIndex = t;
      }
      function Je(t) {
        const e = t[1];
        return 2 === e.type ? e.declTNode : 1 === e.type ? t[6] : null;
      }
      function tn(t, e, n) {
        if (n & xt.SkipSelf) {
          let i = e,
            s = t;
          for (
            ;
            (i = i.parent), !(null !== i || n & xt.Host || ((i = Je(s)), null === i) || ((s = s[15]), 10 & i.type));

          );
          if (null === i) return !1;
          (e = i), (t = s);
        }
        const i = (Me.lFrame = nn());
        return (i.currentTNode = e), (i.lView = t), !0;
      }
      function en(t) {
        const e = nn(),
          n = t[1];
        (Me.lFrame = e),
          (e.currentTNode = n.firstChild),
          (e.lView = t),
          (e.tView = n),
          (e.contextLView = t),
          (e.bindingIndex = n.bindingStartIndex),
          (e.inI18n = !1);
      }
      function nn() {
        const t = Me.lFrame,
          e = null === t ? null : t.child;
        return null === e ? sn(t) : e;
      }
      function sn(t) {
        const e = {
          currentTNode: null,
          isParent: !0,
          lView: null,
          tView: null,
          selectedIndex: -1,
          contextLView: null,
          elementDepthCount: 0,
          currentNamespace: null,
          currentDirectiveIndex: -1,
          bindingRootIndex: -1,
          bindingIndex: -1,
          currentQueryIndex: 0,
          parent: t,
          child: null,
          inI18n: !1,
        };
        return null !== t && (t.child = e), e;
      }
      function rn() {
        const t = Me.lFrame;
        return (Me.lFrame = t.parent), (t.currentTNode = null), (t.lView = null), t;
      }
      const on = rn;
      function an() {
        const t = rn();
        (t.isParent = !0),
          (t.tView = null),
          (t.selectedIndex = -1),
          (t.contextLView = null),
          (t.elementDepthCount = 0),
          (t.currentDirectiveIndex = -1),
          (t.currentNamespace = null),
          (t.bindingRootIndex = -1),
          (t.bindingIndex = -1),
          (t.currentQueryIndex = 0);
      }
      function ln() {
        return Me.lFrame.selectedIndex;
      }
      function cn(t) {
        Me.lFrame.selectedIndex = t;
      }
      function hn() {
        const t = Me.lFrame;
        return Ce(t.tView, t.selectedIndex);
      }
      function un() {
        Me.lFrame.currentNamespace = ge;
      }
      function dn() {
        Me.lFrame.currentNamespace = null;
      }
      function pn(t, e) {
        for (let n = e.directiveStart, i = e.directiveEnd; n < i; n++) {
          const e = t.data[n].type.prototype,
            {
              ngAfterContentInit: i,
              ngAfterContentChecked: s,
              ngAfterViewInit: r,
              ngAfterViewChecked: o,
              ngOnDestroy: a,
            } = e;
          i && (t.contentHooks || (t.contentHooks = [])).push(-n, i),
            s &&
              ((t.contentHooks || (t.contentHooks = [])).push(n, s),
              (t.contentCheckHooks || (t.contentCheckHooks = [])).push(n, s)),
            r && (t.viewHooks || (t.viewHooks = [])).push(-n, r),
            o &&
              ((t.viewHooks || (t.viewHooks = [])).push(n, o),
              (t.viewCheckHooks || (t.viewCheckHooks = [])).push(n, o)),
            null != a && (t.destroyHooks || (t.destroyHooks = [])).push(n, a);
        }
      }
      function mn(t, e, n) {
        _n(t, e, 3, n);
      }
      function fn(t, e, n, i) {
        (3 & t[2]) === n && _n(t, e, n, i);
      }
      function gn(t, e) {
        let n = t[2];
        (3 & n) === e && ((n &= 2047), (n += 1), (t[2] = n));
      }
      function _n(t, e, n, i) {
        const s = null != i ? i : -1,
          r = e.length - 1;
        let o = 0;
        for (let a = void 0 !== i ? 65535 & t[18] : 0; a < r; a++)
          if ('number' == typeof e[a + 1]) {
            if (((o = e[a]), null != i && o >= i)) break;
          } else
            e[a] < 0 && (t[18] += 65536),
              (o < s || -1 == s) && (bn(t, n, e, a), (t[18] = (4294901760 & t[18]) + a + 2)),
              a++;
      }
      function bn(t, e, n, i) {
        const s = n[i] < 0,
          r = n[i + 1],
          o = t[s ? -n[i] : n[i]];
        if (s) {
          if (t[2] >> 11 < t[18] >> 16 && (3 & t[2]) === e) {
            t[2] += 2048;
            try {
              r.call(o);
            } finally {
            }
          }
        } else
          try {
            r.call(o);
          } finally {
          }
      }
      const yn = -1;
      class vn {
        constructor(t, e, n) {
          (this.factory = t), (this.resolving = !1), (this.canSeeViewProviders = e), (this.injectImpl = n);
        }
      }
      function wn(t, e, n) {
        const i = be(t);
        let s = 0;
        for (; s < n.length; ) {
          const r = n[s];
          if ('number' == typeof r) {
            if (0 !== r) break;
            s++;
            const o = n[s++],
              a = n[s++],
              l = n[s++];
            i ? t.setAttribute(e, a, l, o) : e.setAttributeNS(o, a, l);
          } else {
            const o = r,
              a = n[++s];
            Cn(o) ? i && t.setProperty(e, o, a) : i ? t.setAttribute(e, o, a) : e.setAttribute(o, a), s++;
          }
        }
        return s;
      }
      function xn(t) {
        return 3 === t || 4 === t || 6 === t;
      }
      function Cn(t) {
        return 64 === t.charCodeAt(0);
      }
      function kn(t, e) {
        if (null === e || 0 === e.length);
        else if (null === t || 0 === t.length) t = e.slice();
        else {
          let n = -1;
          for (let i = 0; i < e.length; i++) {
            const s = e[i];
            'number' == typeof s ? (n = s) : 0 === n || Sn(t, n, s, null, -1 === n || 2 === n ? e[++i] : null);
          }
        }
        return t;
      }
      function Sn(t, e, n, i, s) {
        let r = 0,
          o = t.length;
        if (-1 === e) o = -1;
        else
          for (; r < t.length; ) {
            const n = t[r++];
            if ('number' == typeof n) {
              if (n === e) {
                o = -1;
                break;
              }
              if (n > e) {
                o = r - 1;
                break;
              }
            }
          }
        for (; r < t.length; ) {
          const e = t[r];
          if ('number' == typeof e) break;
          if (e === n) {
            if (null === i) return void (null !== s && (t[r + 1] = s));
            if (i === t[r + 1]) return void (t[r + 2] = s);
          }
          r++, null !== i && r++, null !== s && r++;
        }
        -1 !== o && (t.splice(o, 0, e), (r = o + 1)),
          t.splice(r++, 0, n),
          null !== i && t.splice(r++, 0, i),
          null !== s && t.splice(r++, 0, s);
      }
      function En(t) {
        return t !== yn;
      }
      function On(t) {
        return 32767 & t;
      }
      function Pn(t, e) {
        let n = t >> 16,
          i = e;
        for (; n > 0; ) (i = i[15]), n--;
        return i;
      }
      let An = !0;
      function Tn(t) {
        const e = An;
        return (An = t), e;
      }
      let Dn = 0;
      function Mn(t, e) {
        const n = In(t, e);
        if (-1 !== n) return n;
        const i = e[1];
        i.firstCreatePass && ((t.injectorIndex = e.length), Rn(i.data, t), Rn(e, null), Rn(i.blueprint, null));
        const s = Ln(t, e),
          r = t.injectorIndex;
        if (En(s)) {
          const t = On(s),
            n = Pn(s, e),
            i = n[1].data;
          for (let s = 0; s < 8; s++) e[r + s] = n[t + s] | i[t + s];
        }
        return (e[r + 8] = s), r;
      }
      function Rn(t, e) {
        t.push(0, 0, 0, 0, 0, 0, 0, 0, e);
      }
      function In(t, e) {
        return -1 === t.injectorIndex ||
          (t.parent && t.parent.injectorIndex === t.injectorIndex) ||
          null === e[t.injectorIndex + 8]
          ? -1
          : t.injectorIndex;
      }
      function Ln(t, e) {
        if (t.parent && -1 !== t.parent.injectorIndex) return t.parent.injectorIndex;
        let n = 0,
          i = null,
          s = e;
        for (; null !== s; ) {
          const t = s[1],
            e = t.type;
          if (((i = 2 === e ? t.declTNode : 1 === e ? s[6] : null), null === i)) return yn;
          if ((n++, (s = s[15]), -1 !== i.injectorIndex)) return i.injectorIndex | (n << 16);
        }
        return yn;
      }
      function Fn(t, e, n) {
        !(function (t, e, n) {
          let i;
          'string' == typeof n ? (i = n.charCodeAt(0) || 0) : n.hasOwnProperty($t) && (i = n[$t]),
            null == i && (i = n[$t] = Dn++);
          const s = 255 & i;
          e.data[t + (s >> 5)] |= 1 << s;
        })(t, e, n);
      }
      function Nn(t, e, n) {
        if (n & xt.Optional) return t;
        dt(e, 'NodeInjector');
      }
      function Vn(t, e, n, i) {
        if ((n & xt.Optional && void 0 === i && (i = null), 0 == (n & (xt.Self | xt.Host)))) {
          const s = t[9],
            r = kt(void 0);
          try {
            return s ? s.get(e, i, n & xt.Optional) : St(e, i, n & xt.Optional);
          } finally {
            kt(r);
          }
        }
        return Nn(i, e, n);
      }
      function Bn(t, e, n, i = xt.Default, s) {
        if (null !== t) {
          const r = (function (t) {
            if ('string' == typeof t) return t.charCodeAt(0) || 0;
            const e = t.hasOwnProperty($t) ? t[$t] : void 0;
            return 'number' == typeof e ? (e >= 0 ? 255 & e : jn) : e;
          })(n);
          if ('function' == typeof r) {
            if (!tn(e, t, i)) return i & xt.Host ? Nn(s, n, i) : Vn(e, n, i, s);
            try {
              const t = r();
              if (null != t || i & xt.Optional) return t;
              dt(n);
            } finally {
              on();
            }
          } else if ('number' == typeof r) {
            let s = null,
              o = In(t, e),
              a = yn,
              l = i & xt.Host ? e[16][6] : null;
            for (
              (-1 === o || i & xt.SkipSelf) &&
              ((a = -1 === o ? Ln(t, e) : e[o + 8]),
              a !== yn && Un(i, !1) ? ((s = e[1]), (o = On(a)), (e = Pn(a, e))) : (o = -1));
              -1 !== o;

            ) {
              const t = e[1];
              if (Wn(r, o, t.data)) {
                const t = Hn(o, e, n, s, i, l);
                if (t !== zn) return t;
              }
              (a = e[o + 8]),
                a !== yn && Un(i, e[1].data[o + 8] === l) && Wn(r, o, e)
                  ? ((s = t), (o = On(a)), (e = Pn(a, e)))
                  : (o = -1);
            }
          }
        }
        return Vn(e, n, i, s);
      }
      const zn = {};
      function jn() {
        return new Yn(Ne(), Ie());
      }
      function Hn(t, e, n, i, s, r) {
        const o = e[1],
          a = o.data[t + 8],
          l = $n(a, o, n, null == i ? oe(a) && An : i != o && 0 != (3 & a.type), s & xt.Host && r === a);
        return null !== l ? qn(e, o, l, a) : zn;
      }
      function $n(t, e, n, i, s) {
        const r = t.providerIndexes,
          o = e.data,
          a = 1048575 & r,
          l = t.directiveStart,
          c = r >> 20,
          h = s ? a + c : t.directiveEnd;
        for (let u = i ? a : a + c; u < h; u++) {
          const t = o[u];
          if ((u < l && n === t) || (u >= l && t.type === n)) return u;
        }
        if (s) {
          const t = o[l];
          if (t && le(t) && t.type === n) return l;
        }
        return null;
      }
      function qn(t, e, n, i) {
        let s = t[n];
        const r = e.data;
        if (s instanceof vn) {
          const o = s;
          o.resolving &&
            (function (t, e) {
              throw new ct('200', `Circular dependency in DI detected for ${t}`);
            })(ut(r[n]));
          const a = Tn(o.canSeeViewProviders);
          o.resolving = !0;
          const l = o.injectImpl ? kt(o.injectImpl) : null;
          tn(t, i, xt.Default);
          try {
            (s = t[n] = o.factory(void 0, r, t, i)),
              e.firstCreatePass &&
                n >= i.directiveStart &&
                (function (t, e, n) {
                  const { ngOnChanges: i, ngOnInit: s, ngDoCheck: r } = e.type.prototype;
                  if (i) {
                    const i = de(e);
                    (n.preOrderHooks || (n.preOrderHooks = [])).push(t, i),
                      (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(t, i);
                  }
                  s && (n.preOrderHooks || (n.preOrderHooks = [])).push(0 - t, s),
                    r &&
                      ((n.preOrderHooks || (n.preOrderHooks = [])).push(t, r),
                      (n.preOrderCheckHooks || (n.preOrderCheckHooks = [])).push(t, r));
                })(n, r[n], e);
          } finally {
            null !== l && kt(l), Tn(a), (o.resolving = !1), on();
          }
        }
        return s;
      }
      function Wn(t, e, n) {
        return !!(n[e + (t >> 5)] & (1 << t));
      }
      function Un(t, e) {
        return !(t & xt.Self || (t & xt.Host && e));
      }
      class Yn {
        constructor(t, e) {
          (this._tNode = t), (this._lView = e);
        }
        get(t, e) {
          return Bn(this._tNode, this._lView, t, void 0, e);
        }
      }
      function Gn(t) {
        return Et(() => {
          const e = t.prototype.constructor,
            n = e[Ht] || Qn(e),
            i = Object.prototype;
          let s = Object.getPrototypeOf(t.prototype).constructor;
          for (; s && s !== i; ) {
            const t = s[Ht] || Qn(s);
            if (t && t !== n) return t;
            s = Object.getPrototypeOf(s);
          }
          return (t) => new t();
        });
      }
      function Qn(t) {
        return lt(t)
          ? () => {
              const e = Qn(at(t));
              return e && e();
            }
          : ce(t);
      }
      function Kn(t) {
        return (function (t, e) {
          if ('class' === e) return t.classes;
          if ('style' === e) return t.styles;
          const n = t.attrs;
          if (n) {
            const t = n.length;
            let i = 0;
            for (; i < t; ) {
              const s = n[i];
              if (xn(s)) break;
              if (0 === s) i += 2;
              else if ('number' == typeof s) for (i++; i < t && 'string' == typeof n[i]; ) i++;
              else {
                if (s === e) return n[i + 1];
                i += 2;
              }
            }
          }
          return null;
        })(Ne(), t);
      }
      const Xn = '__parameters__';
      function Zn(t, e, n) {
        return Et(() => {
          const i = (function (t) {
            return function (...e) {
              if (t) {
                const n = t(...e);
                for (const t in n) this[t] = n[t];
              }
            };
          })(e);
          function s(...t) {
            if (this instanceof s) return i.apply(this, t), this;
            const e = new s(...t);
            return (n.annotation = e), n;
            function n(t, n, i) {
              const s = t.hasOwnProperty(Xn) ? t[Xn] : Object.defineProperty(t, Xn, { value: [] })[Xn];
              for (; s.length <= i; ) s.push(null);
              return (s[i] = s[i] || []).push(e), t;
            }
          }
          return (
            n && (s.prototype = Object.create(n.prototype)), (s.prototype.ngMetadataName = t), (s.annotationCls = s), s
          );
        });
      }
      class Jn {
        constructor(t, e) {
          (this._desc = t),
            (this.ngMetadataName = 'InjectionToken'),
            (this.ɵprov = void 0),
            'number' == typeof e
              ? (this.__NG_ELEMENT_ID__ = e)
              : void 0 !== e &&
                (this.ɵprov = pt({ token: this, providedIn: e.providedIn || 'root', factory: e.factory }));
        }
        toString() {
          return `InjectionToken ${this._desc}`;
        }
      }
      const ti = new Jn('AnalyzeForEntryComponents'),
        ei = Function;
      function ni(t, e) {
        void 0 === e && (e = t);
        for (let n = 0; n < t.length; n++) {
          let i = t[n];
          Array.isArray(i) ? (e === t && (e = t.slice(0, n)), ni(i, e)) : e !== t && e.push(i);
        }
        return e;
      }
      function ii(t, e) {
        t.forEach((t) => (Array.isArray(t) ? ii(t, e) : e(t)));
      }
      function si(t, e, n) {
        e >= t.length ? t.push(n) : t.splice(e, 0, n);
      }
      function ri(t, e) {
        return e >= t.length - 1 ? t.pop() : t.splice(e, 1)[0];
      }
      function oi(t, e) {
        const n = [];
        for (let i = 0; i < t; i++) n.push(e);
        return n;
      }
      function ai(t, e, n) {
        let i = ci(t, e);
        return (
          i >= 0
            ? (t[1 | i] = n)
            : ((i = ~i),
              (function (t, e, n, i) {
                let s = t.length;
                if (s == e) t.push(n, i);
                else if (1 === s) t.push(i, t[0]), (t[0] = n);
                else {
                  for (s--, t.push(t[s - 1], t[s]); s > e; ) (t[s] = t[s - 2]), s--;
                  (t[e] = n), (t[e + 1] = i);
                }
              })(t, i, e, n)),
          i
        );
      }
      function li(t, e) {
        const n = ci(t, e);
        if (n >= 0) return t[1 | n];
      }
      function ci(t, e) {
        return (function (t, e, n) {
          let i = 0,
            s = t.length >> 1;
          for (; s !== i; ) {
            const n = i + ((s - i) >> 1),
              r = t[n << 1];
            if (e === r) return n << 1;
            r > e ? (s = n) : (i = n + 1);
          }
          return ~(s << 1);
        })(t, e);
      }
      const hi = {},
        ui = /\n/gm,
        di = '__source',
        pi = et({ provide: String, useValue: et });
      let mi;
      function fi(t) {
        const e = mi;
        return (mi = t), e;
      }
      function gi(t, e = xt.Default) {
        if (void 0 === mi) throw new Error('inject() must be called from an injection context');
        return null === mi ? St(t, void 0, e) : mi.get(t, e & xt.Optional ? null : void 0, e);
      }
      function _i(t, e = xt.Default) {
        return (Ct || gi)(at(t), e);
      }
      const bi = _i;
      function yi(t) {
        const e = [];
        for (let n = 0; n < t.length; n++) {
          const i = at(t[n]);
          if (Array.isArray(i)) {
            if (0 === i.length) throw new Error('Arguments array must have arguments.');
            let t,
              n = xt.Default;
            for (let e = 0; e < i.length; e++) {
              const s = i[e],
                r = s.__NG_DI_FLAG__;
              'number' == typeof r ? (-1 === r ? (t = s.token) : (n |= r)) : (t = s);
            }
            e.push(_i(t, n));
          } else e.push(_i(i));
        }
        return e;
      }
      function vi(t, e) {
        return (t.__NG_DI_FLAG__ = e), (t.prototype.__NG_DI_FLAG__ = e), t;
      }
      const wi = vi(
          Zn('Inject', (t) => ({ token: t })),
          -1
        ),
        xi = vi(Zn('Optional'), 8),
        Ci = vi(Zn('SkipSelf'), 4);
      let ki;
      function Si(t) {
        var e;
        return (
          (null ===
            (e = (function () {
              if (void 0 === ki && ((ki = null), Rt.trustedTypes))
                try {
                  ki = Rt.trustedTypes.createPolicy('angular', {
                    createHTML: (t) => t,
                    createScript: (t) => t,
                    createScriptURL: (t) => t,
                  });
                } catch (e) {}
              return ki;
            })()) || void 0 === e
            ? void 0
            : e.createHTML(t)) || t
        );
      }
      class Ei {
        constructor(t) {
          this.changingThisBreaksApplicationSecurity = t;
        }
        toString() {
          return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`;
        }
      }
      class Oi extends Ei {
        getTypeName() {
          return 'HTML';
        }
      }
      class Pi extends Ei {
        getTypeName() {
          return 'Style';
        }
      }
      class Ai extends Ei {
        getTypeName() {
          return 'Script';
        }
      }
      class Ti extends Ei {
        getTypeName() {
          return 'URL';
        }
      }
      class Di extends Ei {
        getTypeName() {
          return 'ResourceURL';
        }
      }
      function Mi(t) {
        return t instanceof Ei ? t.changingThisBreaksApplicationSecurity : t;
      }
      function Ri(t, e) {
        const n = Ii(t);
        if (null != n && n !== e) {
          if ('ResourceURL' === n && 'URL' === e) return !0;
          throw new Error(`Required a safe ${e}, got a ${n} (see https://g.co/ng/security#xss)`);
        }
        return n === e;
      }
      function Ii(t) {
        return (t instanceof Ei && t.getTypeName()) || null;
      }
      class Li {
        constructor(t) {
          this.inertDocumentHelper = t;
        }
        getInertBodyElement(t) {
          t = '<body><remove></remove>' + t;
          try {
            const e = new window.DOMParser().parseFromString(Si(t), 'text/html').body;
            return null === e ? this.inertDocumentHelper.getInertBodyElement(t) : (e.removeChild(e.firstChild), e);
          } catch (e) {
            return null;
          }
        }
      }
      class Fi {
        constructor(t) {
          if (
            ((this.defaultDoc = t),
            (this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert')),
            null == this.inertDocument.body)
          ) {
            const t = this.inertDocument.createElement('html');
            this.inertDocument.appendChild(t);
            const e = this.inertDocument.createElement('body');
            t.appendChild(e);
          }
        }
        getInertBodyElement(t) {
          const e = this.inertDocument.createElement('template');
          if ('content' in e) return (e.innerHTML = Si(t)), e;
          const n = this.inertDocument.createElement('body');
          return (n.innerHTML = Si(t)), this.defaultDoc.documentMode && this.stripCustomNsAttrs(n), n;
        }
        stripCustomNsAttrs(t) {
          const e = t.attributes;
          for (let i = e.length - 1; 0 < i; i--) {
            const n = e.item(i).name;
            ('xmlns:ns1' !== n && 0 !== n.indexOf('ns1:')) || t.removeAttribute(n);
          }
          let n = t.firstChild;
          for (; n; ) n.nodeType === Node.ELEMENT_NODE && this.stripCustomNsAttrs(n), (n = n.nextSibling);
        }
      }
      const Ni = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi,
        Vi =
          /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$/i;
      function Bi(t) {
        return (t = String(t)).match(Ni) || t.match(Vi) ? t : 'unsafe:' + t;
      }
      function zi(t) {
        const e = {};
        for (const n of t.split(',')) e[n] = !0;
        return e;
      }
      function ji(...t) {
        const e = {};
        for (const n of t) for (const t in n) n.hasOwnProperty(t) && (e[t] = !0);
        return e;
      }
      const Hi = zi('area,br,col,hr,img,wbr'),
        $i = zi('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr'),
        qi = zi('rp,rt'),
        Wi = ji(qi, $i),
        Ui = ji(
          Hi,
          ji(
            $i,
            zi(
              'address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'
            )
          ),
          ji(
            qi,
            zi(
              'a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'
            )
          ),
          Wi
        ),
        Yi = zi('background,cite,href,itemtype,longdesc,poster,src,xlink:href'),
        Gi = zi('srcset'),
        Qi = ji(
          Yi,
          Gi,
          zi(
            'abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width'
          ),
          zi(
            'aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext'
          )
        ),
        Ki = zi('script,style,template');
      class Xi {
        constructor() {
          (this.sanitizedSomething = !1), (this.buf = []);
        }
        sanitizeChildren(t) {
          let e = t.firstChild,
            n = !0;
          for (; e; )
            if (
              (e.nodeType === Node.ELEMENT_NODE
                ? (n = this.startElement(e))
                : e.nodeType === Node.TEXT_NODE
                ? this.chars(e.nodeValue)
                : (this.sanitizedSomething = !0),
              n && e.firstChild)
            )
              e = e.firstChild;
            else
              for (; e; ) {
                e.nodeType === Node.ELEMENT_NODE && this.endElement(e);
                let t = this.checkClobberedElement(e, e.nextSibling);
                if (t) {
                  e = t;
                  break;
                }
                e = this.checkClobberedElement(e, e.parentNode);
              }
          return this.buf.join('');
        }
        startElement(t) {
          const e = t.nodeName.toLowerCase();
          if (!Ui.hasOwnProperty(e)) return (this.sanitizedSomething = !0), !Ki.hasOwnProperty(e);
          this.buf.push('<'), this.buf.push(e);
          const n = t.attributes;
          for (let s = 0; s < n.length; s++) {
            const t = n.item(s),
              e = t.name,
              r = e.toLowerCase();
            if (!Qi.hasOwnProperty(r)) {
              this.sanitizedSomething = !0;
              continue;
            }
            let o = t.value;
            Yi[r] && (o = Bi(o)),
              Gi[r] &&
                ((i = o),
                (o = (i = String(i))
                  .split(',')
                  .map((t) => Bi(t.trim()))
                  .join(', '))),
              this.buf.push(' ', e, '="', ts(o), '"');
          }
          var i;
          return this.buf.push('>'), !0;
        }
        endElement(t) {
          const e = t.nodeName.toLowerCase();
          Ui.hasOwnProperty(e) && !Hi.hasOwnProperty(e) && (this.buf.push('</'), this.buf.push(e), this.buf.push('>'));
        }
        chars(t) {
          this.buf.push(ts(t));
        }
        checkClobberedElement(t, e) {
          if (
            e &&
            (t.compareDocumentPosition(e) & Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY
          )
            throw new Error(`Failed to sanitize html because the element is clobbered: ${t.outerHTML}`);
          return e;
        }
      }
      const Zi = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g,
        Ji = /([^\#-~ |!])/g;
      function ts(t) {
        return t
          .replace(/&/g, '&amp;')
          .replace(Zi, function (t) {
            return '&#' + (1024 * (t.charCodeAt(0) - 55296) + (t.charCodeAt(1) - 56320) + 65536) + ';';
          })
          .replace(Ji, function (t) {
            return '&#' + t.charCodeAt(0) + ';';
          })
          .replace(/</g, '&lt;')
          .replace(/>/g, '&gt;');
      }
      let es;
      function ns(t) {
        return 'content' in t &&
          (function (t) {
            return t.nodeType === Node.ELEMENT_NODE && 'TEMPLATE' === t.nodeName;
          })(t)
          ? t.content
          : null;
      }
      var is = (() => (
        ((is = is || {})[(is.NONE = 0)] = 'NONE'),
        (is[(is.HTML = 1)] = 'HTML'),
        (is[(is.STYLE = 2)] = 'STYLE'),
        (is[(is.SCRIPT = 3)] = 'SCRIPT'),
        (is[(is.URL = 4)] = 'URL'),
        (is[(is.RESOURCE_URL = 5)] = 'RESOURCE_URL'),
        is
      ))();
      function ss(t) {
        const e = (function () {
          const t = Ie();
          return t && t[12];
        })();
        return e ? e.sanitize(is.URL, t) || '' : Ri(t, 'URL') ? Mi(t) : Bi(ht(t));
      }
      function rs(t) {
        return t.ngDebugContext;
      }
      function os(t) {
        return t.ngOriginalError;
      }
      function as(t, ...e) {
        t.error(...e);
      }
      class ls {
        constructor() {
          this._console = console;
        }
        handleError(t) {
          const e = this._findOriginalError(t),
            n = this._findContext(t),
            i = (function (t) {
              return t.ngErrorLogger || as;
            })(t);
          i(this._console, 'ERROR', t),
            e && i(this._console, 'ORIGINAL ERROR', e),
            n && i(this._console, 'ERROR CONTEXT', n);
        }
        _findContext(t) {
          return t ? (rs(t) ? rs(t) : this._findContext(os(t))) : null;
        }
        _findOriginalError(t) {
          let e = os(t);
          for (; e && os(e); ) e = os(e);
          return e;
        }
      }
      function cs(t, e) {
        t.__ngContext__ = e;
      }
      const hs = (() =>
        (('undefined' != typeof requestAnimationFrame && requestAnimationFrame) || setTimeout).bind(Rt))();
      function us(t) {
        return { name: 'body', target: t.ownerDocument.body };
      }
      function ds(t) {
        return t instanceof Function ? t() : t;
      }
      var ps = (() => (
        ((ps = ps || {})[(ps.Important = 1)] = 'Important'), (ps[(ps.DashCase = 2)] = 'DashCase'), ps
      ))();
      function ms(t, e) {
        return (void 0)(t, e);
      }
      function fs(t) {
        const e = t[3];
        return se(e) ? e[3] : e;
      }
      function gs(t) {
        return bs(t[13]);
      }
      function _s(t) {
        return bs(t[4]);
      }
      function bs(t) {
        for (; null !== t && !se(t); ) t = t[4];
        return t;
      }
      function ys(t, e, n, i, s) {
        if (null != i) {
          let r,
            o = !1;
          se(i) ? (r = i) : ie(i) && ((o = !0), (i = i[0]));
          const a = ve(i);
          0 === t && null !== n
            ? null == s
              ? Os(e, n, a)
              : Es(e, n, a, s || null, !0)
            : 1 === t && null !== n
            ? Es(e, n, a, s || null, !0)
            : 2 === t
            ? (function (t, e, n) {
                const i = As(t, e);
                i &&
                  (function (t, e, n, i) {
                    be(t) ? t.removeChild(e, n, i) : e.removeChild(n);
                  })(t, i, e, n);
              })(e, a, o)
            : 3 === t && e.destroyNode(a),
            null != r &&
              (function (t, e, n, i, s) {
                const r = n[7];
                r !== ve(n) && ys(e, t, i, r, s);
                for (let o = ne; o < n.length; o++) {
                  const s = n[o];
                  Ns(s[1], s, t, e, i, r);
                }
              })(e, t, r, n, s);
        }
      }
      function vs(t, e, n) {
        return be(t) ? t.createElement(e, n) : null === n ? t.createElement(e) : t.createElementNS(n, e);
      }
      function ws(t, e) {
        const n = t[9],
          i = n.indexOf(e),
          s = e[3];
        1024 & e[2] && ((e[2] &= -1025), De(s, -1)), n.splice(i, 1);
      }
      function xs(t, e) {
        if (t.length <= ne) return;
        const n = ne + e,
          i = t[n];
        if (i) {
          const r = i[17];
          null !== r && r !== t && ws(r, i), e > 0 && (t[n - 1][4] = i[4]);
          const o = ri(t, ne + e);
          Ns(i[1], (s = i), s[11], 2, null, null), (s[0] = null), (s[6] = null);
          const a = o[19];
          null !== a && a.detachView(o[1]), (i[3] = null), (i[4] = null), (i[2] &= -129);
        }
        var s;
        return i;
      }
      function Cs(t, e) {
        if (!(256 & e[2])) {
          const n = e[11];
          be(n) && n.destroyNode && Ns(t, e, n, 3, null, null),
            (function (t) {
              let e = t[13];
              if (!e) return ks(t[1], t);
              for (; e; ) {
                let n = null;
                if (ie(e)) n = e[13];
                else {
                  const t = e[10];
                  t && (n = t);
                }
                if (!n) {
                  for (; e && !e[4] && e !== t; ) ie(e) && ks(e[1], e), (e = e[3]);
                  null === e && (e = t), ie(e) && ks(e[1], e), (n = e && e[4]);
                }
                e = n;
              }
            })(e);
        }
      }
      function ks(t, e) {
        if (!(256 & e[2])) {
          (e[2] &= -129),
            (e[2] |= 256),
            (function (t, e) {
              let n;
              if (null != t && null != (n = t.destroyHooks))
                for (let i = 0; i < n.length; i += 2) {
                  const t = e[n[i]];
                  if (!(t instanceof vn)) {
                    const e = n[i + 1];
                    if (Array.isArray(e))
                      for (let n = 0; n < e.length; n += 2) {
                        const i = t[e[n]],
                          s = e[n + 1];
                        try {
                          s.call(i);
                        } finally {
                        }
                      }
                    else
                      try {
                        e.call(t);
                      } finally {
                      }
                  }
                }
            })(t, e),
            (function (t, e) {
              const n = t.cleanup,
                i = e[7];
              let s = -1;
              if (null !== n)
                for (let r = 0; r < n.length - 1; r += 2)
                  if ('string' == typeof n[r]) {
                    const t = n[r + 1],
                      o = 'function' == typeof t ? t(e) : ve(e[t]),
                      a = i[(s = n[r + 2])],
                      l = n[r + 3];
                    'boolean' == typeof l
                      ? o.removeEventListener(n[r], a, l)
                      : l >= 0
                      ? i[(s = l)]()
                      : i[(s = -l)].unsubscribe(),
                      (r += 2);
                  } else {
                    const t = i[(s = n[r + 1])];
                    n[r].call(t);
                  }
              if (null !== i) {
                for (let t = s + 1; t < i.length; t++) (0, i[t])();
                e[7] = null;
              }
            })(t, e),
            1 === e[1].type && be(e[11]) && e[11].destroy();
          const n = e[17];
          if (null !== n && se(e[3])) {
            n !== e[3] && ws(n, e);
            const i = e[19];
            null !== i && i.detachView(t);
          }
        }
      }
      function Ss(t, e, n) {
        return (function (t, e, n) {
          let i = e;
          for (; null !== i && 40 & i.type; ) i = (e = i).parent;
          if (null === i) return n[0];
          if (2 & i.flags) {
            const e = t.data[i.directiveStart].encapsulation;
            if (e === Pt.None || e === Pt.Emulated) return null;
          }
          return xe(i, n);
        })(t, e.parent, n);
      }
      function Es(t, e, n, i, s) {
        be(t) ? t.insertBefore(e, n, i, s) : e.insertBefore(n, i, s);
      }
      function Os(t, e, n) {
        be(t) ? t.appendChild(e, n) : e.appendChild(n);
      }
      function Ps(t, e, n, i, s) {
        null !== i ? Es(t, e, n, i, s) : Os(t, e, n);
      }
      function As(t, e) {
        return be(t) ? t.parentNode(e) : e.parentNode;
      }
      function Ts(t, e, n) {
        return Ds(t, e, n);
      }
      let Ds = function (t, e, n) {
        return 40 & t.type ? xe(t, n) : null;
      };
      function Ms(t, e, n, i) {
        const s = Ss(t, i, e),
          r = e[11],
          o = Ts(i.parent || e[6], i, e);
        if (null != s)
          if (Array.isArray(n)) for (let a = 0; a < n.length; a++) Ps(r, s, n[a], o, !1);
          else Ps(r, s, n, o, !1);
      }
      function Rs(t, e) {
        if (null !== e) {
          const n = e.type;
          if (3 & n) return xe(e, t);
          if (4 & n) return Ls(-1, t[e.index]);
          if (8 & n) {
            const n = e.child;
            if (null !== n) return Rs(t, n);
            {
              const n = t[e.index];
              return se(n) ? Ls(-1, n) : ve(n);
            }
          }
          if (32 & n) return ms(e, t)() || ve(t[e.index]);
          {
            const n = Is(t, e);
            return null !== n ? (Array.isArray(n) ? n[0] : Rs(fs(t[16]), n)) : Rs(t, e.next);
          }
        }
        return null;
      }
      function Is(t, e) {
        return null !== e ? t[16][6].projection[e.projection] : null;
      }
      function Ls(t, e) {
        const n = ne + t + 1;
        if (n < e.length) {
          const t = e[n],
            i = t[1].firstChild;
          if (null !== i) return Rs(t, i);
        }
        return e[7];
      }
      function Fs(t, e, n, i, s, r, o) {
        for (; null != n; ) {
          const a = i[n.index],
            l = n.type;
          if ((o && 0 === e && (a && cs(ve(a), i), (n.flags |= 4)), 64 != (64 & n.flags)))
            if (8 & l) Fs(t, e, n.child, i, s, r, !1), ys(e, t, s, a, r);
            else if (32 & l) {
              const o = ms(n, i);
              let l;
              for (; (l = o()); ) ys(e, t, s, l, r);
              ys(e, t, s, a, r);
            } else 16 & l ? Vs(t, e, i, n, s, r) : ys(e, t, s, a, r);
          n = o ? n.projectionNext : n.next;
        }
      }
      function Ns(t, e, n, i, s, r) {
        Fs(n, i, t.firstChild, e, s, r, !1);
      }
      function Vs(t, e, n, i, s, r) {
        const o = n[16],
          a = o[6].projection[i.projection];
        if (Array.isArray(a)) for (let l = 0; l < a.length; l++) ys(e, t, s, a[l], r);
        else Fs(t, e, a, o[3], s, r, !0);
      }
      function Bs(t, e, n) {
        be(t) ? t.setAttribute(e, 'style', n) : (e.style.cssText = n);
      }
      function zs(t, e, n) {
        be(t) ? ('' === n ? t.removeAttribute(e, 'class') : t.setAttribute(e, 'class', n)) : (e.className = n);
      }
      function js(t, e, n) {
        let i = t.length;
        for (;;) {
          const s = t.indexOf(e, n);
          if (-1 === s) return s;
          if (0 === s || t.charCodeAt(s - 1) <= 32) {
            const n = e.length;
            if (s + n === i || t.charCodeAt(s + n) <= 32) return s;
          }
          n = s + 1;
        }
      }
      const Hs = 'ng-template';
      function $s(t, e, n) {
        let i = 0;
        for (; i < t.length; ) {
          let s = t[i++];
          if (n && 'class' === s) {
            if (((s = t[i]), -1 !== js(s.toLowerCase(), e, 0))) return !0;
          } else if (1 === s) {
            for (; i < t.length && 'string' == typeof (s = t[i++]); ) if (s.toLowerCase() === e) return !0;
            return !1;
          }
        }
        return !1;
      }
      function qs(t) {
        return 4 === t.type && t.value !== Hs;
      }
      function Ws(t, e, n) {
        return e === (4 !== t.type || n ? t.value : Hs);
      }
      function Us(t, e, n) {
        let i = 4;
        const s = t.attrs || [],
          r = (function (t) {
            for (let e = 0; e < t.length; e++) if (xn(t[e])) return e;
            return t.length;
          })(s);
        let o = !1;
        for (let a = 0; a < e.length; a++) {
          const l = e[a];
          if ('number' != typeof l) {
            if (!o)
              if (4 & i) {
                if (((i = 2 | (1 & i)), ('' !== l && !Ws(t, l, n)) || ('' === l && 1 === e.length))) {
                  if (Ys(i)) return !1;
                  o = !0;
                }
              } else {
                const c = 8 & i ? l : e[++a];
                if (8 & i && null !== t.attrs) {
                  if (!$s(t.attrs, c, n)) {
                    if (Ys(i)) return !1;
                    o = !0;
                  }
                  continue;
                }
                const h = Gs(8 & i ? 'class' : l, s, qs(t), n);
                if (-1 === h) {
                  if (Ys(i)) return !1;
                  o = !0;
                  continue;
                }
                if ('' !== c) {
                  let t;
                  t = h > r ? '' : s[h + 1].toLowerCase();
                  const e = 8 & i ? t : null;
                  if ((e && -1 !== js(e, c, 0)) || (2 & i && c !== t)) {
                    if (Ys(i)) return !1;
                    o = !0;
                  }
                }
              }
          } else {
            if (!o && !Ys(i) && !Ys(l)) return !1;
            if (o && Ys(l)) continue;
            (o = !1), (i = l | (1 & i));
          }
        }
        return Ys(i) || o;
      }
      function Ys(t) {
        return 0 == (1 & t);
      }
      function Gs(t, e, n, i) {
        if (null === e) return -1;
        let s = 0;
        if (i || !n) {
          let n = !1;
          for (; s < e.length; ) {
            const i = e[s];
            if (i === t) return s;
            if (3 === i || 6 === i) n = !0;
            else {
              if (1 === i || 2 === i) {
                let t = e[++s];
                for (; 'string' == typeof t; ) t = e[++s];
                continue;
              }
              if (4 === i) break;
              if (0 === i) {
                s += 4;
                continue;
              }
            }
            s += n ? 1 : 2;
          }
          return -1;
        }
        return (function (t, e) {
          let n = t.indexOf(4);
          if (n > -1)
            for (n++; n < t.length; ) {
              const i = t[n];
              if ('number' == typeof i) return -1;
              if (i === e) return n;
              n++;
            }
          return -1;
        })(e, t);
      }
      function Qs(t, e, n = !1) {
        for (let i = 0; i < e.length; i++) if (Us(t, e[i], n)) return !0;
        return !1;
      }
      function Ks(t, e) {
        t: for (let n = 0; n < e.length; n++) {
          const i = e[n];
          if (t.length === i.length) {
            for (let e = 0; e < t.length; e++) if (t[e] !== i[e]) continue t;
            return !0;
          }
        }
        return !1;
      }
      function Xs(t, e) {
        return t ? ':not(' + e.trim() + ')' : e;
      }
      function Zs(t) {
        let e = t[0],
          n = 1,
          i = 2,
          s = '',
          r = !1;
        for (; n < t.length; ) {
          let o = t[n];
          if ('string' == typeof o)
            if (2 & i) {
              const e = t[++n];
              s += '[' + o + (e.length > 0 ? '="' + e + '"' : '') + ']';
            } else 8 & i ? (s += '.' + o) : 4 & i && (s += ' ' + o);
          else '' === s || Ys(o) || ((e += Xs(r, s)), (s = '')), (i = o), (r = r || !Ys(i));
          n++;
        }
        return '' !== s && (e += Xs(r, s)), e;
      }
      const Js = {};
      function tr(t) {
        er(Le(), Ie(), ln() + t, He());
      }
      function er(t, e, n, i) {
        if (!i)
          if (3 == (3 & e[2])) {
            const i = t.preOrderCheckHooks;
            null !== i && mn(e, i, n);
          } else {
            const i = t.preOrderHooks;
            null !== i && fn(e, i, 0, n);
          }
        cn(n);
      }
      function nr(t, e) {
        return (t << 17) | (e << 2);
      }
      function ir(t) {
        return (t >> 17) & 32767;
      }
      function sr(t) {
        return 2 | t;
      }
      function rr(t) {
        return (131068 & t) >> 2;
      }
      function or(t, e) {
        return (-131069 & t) | (e << 2);
      }
      function ar(t) {
        return 1 | t;
      }
      function lr(t, e) {
        const n = t.contentQueries;
        if (null !== n)
          for (let i = 0; i < n.length; i += 2) {
            const s = n[i],
              r = n[i + 1];
            if (-1 !== r) {
              const n = t.data[r];
              Ze(s), n.contentQueries(2, e[r], r);
            }
          }
      }
      function cr(t, e, n, i, s, r, o, a, l, c) {
        const h = e.blueprint.slice();
        return (
          (h[0] = s),
          (h[2] = 140 | i),
          Te(h),
          (h[3] = h[15] = t),
          (h[8] = n),
          (h[10] = o || (t && t[10])),
          (h[11] = a || (t && t[11])),
          (h[12] = l || (t && t[12]) || null),
          (h[9] = c || (t && t[9]) || null),
          (h[6] = r),
          (h[16] = 2 == e.type ? t[16] : h),
          h
        );
      }
      function hr(t, e, n, i, s) {
        let r = t.data[e];
        if (null === r)
          (r = (function (t, e, n, i, s) {
            const r = Ve(),
              o = ze(),
              a = (t.data[e] = (function (t, e, n, i, s, r) {
                return {
                  type: n,
                  index: i,
                  insertBeforeIndex: null,
                  injectorIndex: e ? e.injectorIndex : -1,
                  directiveStart: -1,
                  directiveEnd: -1,
                  directiveStylingLast: -1,
                  propertyBindings: null,
                  flags: 0,
                  providerIndexes: 0,
                  value: s,
                  attrs: r,
                  mergedAttrs: null,
                  localNames: null,
                  initialInputs: void 0,
                  inputs: null,
                  outputs: null,
                  tViews: null,
                  next: null,
                  projectionNext: null,
                  child: null,
                  parent: e,
                  projection: null,
                  styles: null,
                  stylesWithoutHost: null,
                  residualStyles: void 0,
                  classes: null,
                  classesWithoutHost: null,
                  residualClasses: void 0,
                  classBindings: 0,
                  styleBindings: 0,
                };
              })(0, o ? r : r && r.parent, n, e, i, s));
            return (
              null === t.firstChild && (t.firstChild = a),
              null !== r &&
                (o ? null == r.child && null !== a.parent && (r.child = a) : null === r.next && (r.next = a)),
              a
            );
          })(t, e, n, i, s)),
            Me.lFrame.inI18n && (r.flags |= 64);
        else if (64 & r.type) {
          (r.type = n), (r.value = i), (r.attrs = s);
          const t = (function () {
            const t = Me.lFrame,
              e = t.currentTNode;
            return t.isParent ? e : e.parent;
          })();
          r.injectorIndex = null === t ? -1 : t.injectorIndex;
        }
        return Be(r, !0), r;
      }
      function ur(t, e, n, i) {
        if (0 === n) return -1;
        const s = e.length;
        for (let r = 0; r < n; r++) e.push(i), t.blueprint.push(i), t.data.push(null);
        return s;
      }
      function dr(t, e, n) {
        en(e);
        try {
          const i = t.viewQuery;
          null !== i && Hr(1, i, n);
          const s = t.template;
          null !== s && fr(t, e, s, 1, n),
            t.firstCreatePass && (t.firstCreatePass = !1),
            t.staticContentQueries && lr(t, e),
            t.staticViewQueries && Hr(2, t.viewQuery, n);
          const r = t.components;
          null !== r &&
            (function (t, e) {
              for (let n = 0; n < e.length; n++) Nr(t, e[n]);
            })(e, r);
        } catch (i) {
          throw (t.firstCreatePass && (t.incompleteFirstPass = !0), i);
        } finally {
          (e[2] &= -5), an();
        }
      }
      function pr(t, e, n, i) {
        const s = e[2];
        if (256 == (256 & s)) return;
        en(e);
        const r = He();
        try {
          Te(e), (Me.lFrame.bindingIndex = t.bindingStartIndex), null !== n && fr(t, e, n, 2, i);
          const o = 3 == (3 & s);
          if (!r)
            if (o) {
              const n = t.preOrderCheckHooks;
              null !== n && mn(e, n, null);
            } else {
              const n = t.preOrderHooks;
              null !== n && fn(e, n, 0, null), gn(e, 0);
            }
          if (
            ((function (t) {
              for (let e = gs(t); null !== e; e = _s(e)) {
                if (!e[2]) continue;
                const t = e[9];
                for (let e = 0; e < t.length; e++) {
                  const n = t[e],
                    i = n[3];
                  0 == (1024 & n[2]) && De(i, 1), (n[2] |= 1024);
                }
              }
            })(e),
            (function (t) {
              for (let e = gs(t); null !== e; e = _s(e))
                for (let t = ne; t < e.length; t++) {
                  const n = e[t],
                    i = n[1];
                  Pe(n) && pr(i, n, i.template, n[8]);
                }
            })(e),
            null !== t.contentQueries && lr(t, e),
            !r)
          )
            if (o) {
              const n = t.contentCheckHooks;
              null !== n && mn(e, n);
            } else {
              const n = t.contentHooks;
              null !== n && fn(e, n, 1), gn(e, 1);
            }
          !(function (t, e) {
            const n = t.hostBindingOpCodes;
            if (null !== n)
              try {
                for (let t = 0; t < n.length; t++) {
                  const i = n[t];
                  if (i < 0) cn(~i);
                  else {
                    const s = i,
                      r = n[++t],
                      o = n[++t];
                    Ge(r, s), o(2, e[s]);
                  }
                }
              } finally {
                cn(-1);
              }
          })(t, e);
          const a = t.components;
          null !== a &&
            (function (t, e) {
              for (let n = 0; n < e.length; n++) Lr(t, e[n]);
            })(e, a);
          const l = t.viewQuery;
          if ((null !== l && Hr(2, l, i), !r))
            if (o) {
              const n = t.viewCheckHooks;
              null !== n && mn(e, n);
            } else {
              const n = t.viewHooks;
              null !== n && fn(e, n, 2), gn(e, 2);
            }
          !0 === t.firstUpdatePass && (t.firstUpdatePass = !1),
            r || (e[2] &= -73),
            1024 & e[2] && ((e[2] &= -1025), De(e[3], -1));
        } finally {
          an();
        }
      }
      function mr(t, e, n, i) {
        const s = e[10],
          r = !He(),
          o = Oe(e);
        try {
          r && !o && s.begin && s.begin(), o && dr(t, e, i), pr(t, e, n, i);
        } finally {
          r && !o && s.end && s.end();
        }
      }
      function fr(t, e, n, i, s) {
        const r = ln(),
          o = 2 & i;
        try {
          cn(-1), o && e.length > ee && er(t, e, ee, He()), n(i, s);
        } finally {
          cn(r);
        }
      }
      function gr(t, e, n) {
        if (re(e)) {
          const i = e.directiveEnd;
          for (let s = e.directiveStart; s < i; s++) {
            const e = t.data[s];
            e.contentQueries && e.contentQueries(1, n[s], s);
          }
        }
      }
      function _r(t, e, n) {
        Re() &&
          ((function (t, e, n, i) {
            const s = n.directiveStart,
              r = n.directiveEnd;
            t.firstCreatePass || Mn(n, e), cs(i, e);
            const o = n.initialInputs;
            for (let a = s; a < r; a++) {
              const i = t.data[a],
                r = le(i);
              r && Dr(e, n, i);
              const l = qn(e, t, a, n);
              cs(l, e), null !== o && Mr(0, a - s, l, i, 0, o), r && (Se(n.index, e)[8] = l);
            }
          })(t, e, n, xe(n, e)),
          128 == (128 & n.flags) &&
            (function (t, e, n) {
              const i = n.directiveStart,
                s = n.directiveEnd,
                r = n.index,
                o = Me.lFrame.currentDirectiveIndex;
              try {
                cn(r);
                for (let n = i; n < s; n++) {
                  const i = t.data[n],
                    s = e[n];
                  Qe(n), (null === i.hostBindings && 0 === i.hostVars && null === i.hostAttrs) || Er(i, s);
                }
              } finally {
                cn(-1), Qe(o);
              }
            })(t, e, n));
      }
      function br(t, e, n = xe) {
        const i = e.localNames;
        if (null !== i) {
          let s = e.index + 1;
          for (let r = 0; r < i.length; r += 2) {
            const o = i[r + 1],
              a = -1 === o ? n(e, t) : t[o];
            t[s++] = a;
          }
        }
      }
      function yr(t) {
        const e = t.tView;
        return null === e || e.incompleteFirstPass
          ? (t.tView = vr(
              1,
              null,
              t.template,
              t.decls,
              t.vars,
              t.directiveDefs,
              t.pipeDefs,
              t.viewQuery,
              t.schemas,
              t.consts
            ))
          : e;
      }
      function vr(t, e, n, i, s, r, o, a, l, c) {
        const h = ee + i,
          u = h + s,
          d = (function (t, e) {
            const n = [];
            for (let i = 0; i < e; i++) n.push(i < t ? null : Js);
            return n;
          })(h, u),
          p = 'function' == typeof c ? c() : c;
        return (d[1] = {
          type: t,
          blueprint: d,
          template: n,
          queries: null,
          viewQuery: a,
          declTNode: e,
          data: d.slice().fill(null, h),
          bindingStartIndex: h,
          expandoStartIndex: u,
          hostBindingOpCodes: null,
          firstCreatePass: !0,
          firstUpdatePass: !0,
          staticViewQueries: !1,
          staticContentQueries: !1,
          preOrderHooks: null,
          preOrderCheckHooks: null,
          contentHooks: null,
          contentCheckHooks: null,
          viewHooks: null,
          viewCheckHooks: null,
          destroyHooks: null,
          cleanup: null,
          contentQueries: null,
          components: null,
          directiveRegistry: 'function' == typeof r ? r() : r,
          pipeRegistry: 'function' == typeof o ? o() : o,
          firstChild: null,
          schemas: l,
          consts: p,
          incompleteFirstPass: !1,
        });
      }
      function wr(t, e, n, i) {
        const s = qr(e);
        null === n ? s.push(i) : (s.push(n), t.firstCreatePass && Wr(t).push(i, s.length - 1));
      }
      function xr(t, e, n) {
        for (let i in t)
          if (t.hasOwnProperty(i)) {
            const s = t[i];
            (n = null === n ? {} : n).hasOwnProperty(i) ? n[i].push(e, s) : (n[i] = [e, s]);
          }
        return n;
      }
      function Cr(t, e, n, i, s, r, o, a) {
        const l = xe(e, n);
        let c,
          h = e.inputs;
        var u;
        !a && null != h && (c = h[i])
          ? (Gr(t, n, c, i, s),
            oe(e) &&
              (function (t, e) {
                const n = Se(e, t);
                16 & n[2] || (n[2] |= 64);
              })(n, e.index))
          : 3 & e.type &&
            ((i =
              'class' === (u = i)
                ? 'className'
                : 'for' === u
                ? 'htmlFor'
                : 'formaction' === u
                ? 'formAction'
                : 'innerHtml' === u
                ? 'innerHTML'
                : 'readonly' === u
                ? 'readOnly'
                : 'tabindex' === u
                ? 'tabIndex'
                : u),
            (s = null != o ? o(s, e.value || '', i) : s),
            be(r) ? r.setProperty(l, i, s) : Cn(i) || (l.setProperty ? l.setProperty(i, s) : (l[i] = s)));
      }
      function kr(t, e, n, i) {
        let s = !1;
        if (Re()) {
          const r = (function (t, e, n) {
              const i = t.directiveRegistry;
              let s = null;
              if (i)
                for (let r = 0; r < i.length; r++) {
                  const o = i[r];
                  Qs(n, o.selectors, !1) &&
                    (s || (s = []), Fn(Mn(n, e), t, o.type), le(o) ? (Or(t, n), s.unshift(o)) : s.push(o));
                }
              return s;
            })(t, e, n),
            o = null === i ? null : { '': -1 };
          if (null !== r) {
            (s = !0), Ar(n, t.data.length, r.length);
            for (let t = 0; t < r.length; t++) {
              const e = r[t];
              e.providersResolver && e.providersResolver(e);
            }
            let i = !1,
              a = !1,
              l = ur(t, e, r.length, null);
            for (let s = 0; s < r.length; s++) {
              const c = r[s];
              (n.mergedAttrs = kn(n.mergedAttrs, c.hostAttrs)),
                Tr(t, n, e, l, c),
                Pr(l, c, o),
                null !== c.contentQueries && (n.flags |= 8),
                (null === c.hostBindings && null === c.hostAttrs && 0 === c.hostVars) || (n.flags |= 128);
              const h = c.type.prototype;
              !i &&
                (h.ngOnChanges || h.ngOnInit || h.ngDoCheck) &&
                ((t.preOrderHooks || (t.preOrderHooks = [])).push(n.index), (i = !0)),
                a ||
                  (!h.ngOnChanges && !h.ngDoCheck) ||
                  ((t.preOrderCheckHooks || (t.preOrderCheckHooks = [])).push(n.index), (a = !0)),
                l++;
            }
            !(function (t, e) {
              const n = e.directiveEnd,
                i = t.data,
                s = e.attrs,
                r = [];
              let o = null,
                a = null;
              for (let l = e.directiveStart; l < n; l++) {
                const t = i[l],
                  n = t.inputs,
                  c = null === s || qs(e) ? null : Rr(n, s);
                r.push(c), (o = xr(n, l, o)), (a = xr(t.outputs, l, a));
              }
              null !== o &&
                (o.hasOwnProperty('class') && (e.flags |= 16), o.hasOwnProperty('style') && (e.flags |= 32)),
                (e.initialInputs = r),
                (e.inputs = o),
                (e.outputs = a);
            })(t, n);
          }
          o &&
            (function (t, e, n) {
              if (e) {
                const i = (t.localNames = []);
                for (let t = 0; t < e.length; t += 2) {
                  const s = n[e[t + 1]];
                  if (null == s) throw new ct('301', `Export of name '${e[t + 1]}' not found!`);
                  i.push(e[t], s);
                }
              }
            })(n, i, o);
        }
        return (n.mergedAttrs = kn(n.mergedAttrs, n.attrs)), s;
      }
      function Sr(t, e, n, i, s, r) {
        const o = r.hostBindings;
        if (o) {
          let n = t.hostBindingOpCodes;
          null === n && (n = t.hostBindingOpCodes = []);
          const r = ~e.index;
          (function (t) {
            let e = t.length;
            for (; e > 0; ) {
              const n = t[--e];
              if ('number' == typeof n && n < 0) return n;
            }
            return 0;
          })(n) != r && n.push(r),
            n.push(i, s, o);
        }
      }
      function Er(t, e) {
        null !== t.hostBindings && t.hostBindings(1, e);
      }
      function Or(t, e) {
        (e.flags |= 2), (t.components || (t.components = [])).push(e.index);
      }
      function Pr(t, e, n) {
        if (n) {
          if (e.exportAs) for (let i = 0; i < e.exportAs.length; i++) n[e.exportAs[i]] = t;
          le(e) && (n[''] = t);
        }
      }
      function Ar(t, e, n) {
        (t.flags |= 1), (t.directiveStart = e), (t.directiveEnd = e + n), (t.providerIndexes = e);
      }
      function Tr(t, e, n, i, s) {
        t.data[i] = s;
        const r = s.factory || (s.factory = ce(s.type)),
          o = new vn(r, le(s), null);
        (t.blueprint[i] = o), (n[i] = o), Sr(t, e, 0, i, ur(t, n, s.hostVars, Js), s);
      }
      function Dr(t, e, n) {
        const i = xe(e, t),
          s = yr(n),
          r = t[10],
          o = Vr(t, cr(t, s, null, n.onPush ? 64 : 16, i, e, r, r.createRenderer(i, n), null, null));
        t[e.index] = o;
      }
      function Mr(t, e, n, i, s, r) {
        const o = r[e];
        if (null !== o) {
          const t = i.setInput;
          for (let e = 0; e < o.length; ) {
            const s = o[e++],
              r = o[e++],
              a = o[e++];
            null !== t ? i.setInput(n, a, s, r) : (n[r] = a);
          }
        }
      }
      function Rr(t, e) {
        let n = null,
          i = 0;
        for (; i < e.length; ) {
          const s = e[i];
          if (0 !== s)
            if (5 !== s) {
              if ('number' == typeof s) break;
              t.hasOwnProperty(s) && (null === n && (n = []), n.push(s, t[s], e[i + 1])), (i += 2);
            } else i += 2;
          else i += 4;
        }
        return n;
      }
      function Ir(t, e, n, i) {
        return new Array(t, !0, !1, e, null, 0, i, n, null, null);
      }
      function Lr(t, e) {
        const n = Se(e, t);
        if (Pe(n)) {
          const t = n[1];
          80 & n[2] ? pr(t, n, t.template, n[8]) : n[5] > 0 && Fr(n);
        }
      }
      function Fr(t) {
        for (let n = gs(t); null !== n; n = _s(n))
          for (let t = ne; t < n.length; t++) {
            const e = n[t];
            if (1024 & e[2]) {
              const t = e[1];
              pr(t, e, t.template, e[8]);
            } else e[5] > 0 && Fr(e);
          }
        const e = t[1].components;
        if (null !== e)
          for (let n = 0; n < e.length; n++) {
            const i = Se(e[n], t);
            Pe(i) && i[5] > 0 && Fr(i);
          }
      }
      function Nr(t, e) {
        const n = Se(e, t),
          i = n[1];
        !(function (t, e) {
          for (let n = e.length; n < t.blueprint.length; n++) e.push(t.blueprint[n]);
        })(i, n),
          dr(i, n, n[8]);
      }
      function Vr(t, e) {
        return t[13] ? (t[14][4] = e) : (t[13] = e), (t[14] = e), e;
      }
      function Br(t) {
        for (; t; ) {
          t[2] |= 64;
          const e = fs(t);
          if (0 != (512 & t[2]) && !e) return t;
          t = e;
        }
        return null;
      }
      function zr(t, e, n) {
        const i = e[10];
        i.begin && i.begin();
        try {
          pr(t, e, t.template, n);
        } catch (s) {
          throw (Yr(e, s), s);
        } finally {
          i.end && i.end();
        }
      }
      function jr(t) {
        !(function (t) {
          for (let e = 0; e < t.components.length; e++) {
            const n = t.components[e],
              i = Ee(n),
              s = i[1];
            mr(s, i, s.template, n);
          }
        })(t[8]);
      }
      function Hr(t, e, n) {
        Ze(0), e(t, n);
      }
      const $r = (() => Promise.resolve(null))();
      function qr(t) {
        return t[7] || (t[7] = []);
      }
      function Wr(t) {
        return t.cleanup || (t.cleanup = []);
      }
      function Ur(t, e, n) {
        return (
          (null === t || le(t)) &&
            (n = (function (t) {
              for (; Array.isArray(t); ) {
                if ('object' == typeof t[1]) return t;
                t = t[0];
              }
              return null;
            })(n[e.index])),
          n[11]
        );
      }
      function Yr(t, e) {
        const n = t[9],
          i = n ? n.get(ls, null) : null;
        i && i.handleError(e);
      }
      function Gr(t, e, n, i, s) {
        for (let r = 0; r < n.length; ) {
          const o = n[r++],
            a = n[r++],
            l = e[o],
            c = t.data[o];
          null !== c.setInput ? c.setInput(l, s, i, a) : (l[a] = s);
        }
      }
      function Qr(t, e, n) {
        const i = we(e, t);
        !(function (t, e, n) {
          be(t) ? t.setValue(e, n) : (e.textContent = n);
        })(t[11], i, n);
      }
      function Kr(t, e, n) {
        let i = n ? t.styles : null,
          s = n ? t.classes : null,
          r = 0;
        if (null !== e)
          for (let o = 0; o < e.length; o++) {
            const t = e[o];
            'number' == typeof t ? (r = t) : 1 == r ? (s = st(s, t)) : 2 == r && (i = st(i, t + ': ' + e[++o] + ';'));
          }
        n ? (t.styles = i) : (t.stylesWithoutHost = i), n ? (t.classes = s) : (t.classesWithoutHost = s);
      }
      const Xr = new Jn('INJECTOR', -1);
      class Zr {
        get(t, e = hi) {
          if (e === hi) {
            const e = new Error(`NullInjectorError: No provider for ${it(t)}!`);
            throw ((e.name = 'NullInjectorError'), e);
          }
          return e;
        }
      }
      const Jr = new Jn('Set Injector scope.'),
        to = {},
        eo = {},
        no = [];
      let io;
      function so() {
        return void 0 === io && (io = new Zr()), io;
      }
      function ro(t, e = null, n = null, i) {
        return new oo(t, n, e || so(), i);
      }
      class oo {
        constructor(t, e, n, i = null) {
          (this.parent = n),
            (this.records = new Map()),
            (this.injectorDefTypes = new Set()),
            (this.onDestroy = new Set()),
            (this._destroyed = !1);
          const s = [];
          e && ii(e, (n) => this.processProvider(n, t, e)),
            ii([t], (t) => this.processInjectorType(t, [], s)),
            this.records.set(Xr, co(void 0, this));
          const r = this.records.get(Jr);
          (this.scope = null != r ? r.value : null), (this.source = i || ('object' == typeof t ? null : it(t)));
        }
        get destroyed() {
          return this._destroyed;
        }
        destroy() {
          this.assertNotDestroyed(), (this._destroyed = !0);
          try {
            this.onDestroy.forEach((t) => t.ngOnDestroy());
          } finally {
            this.records.clear(), this.onDestroy.clear(), this.injectorDefTypes.clear();
          }
        }
        get(t, e = hi, n = xt.Default) {
          this.assertNotDestroyed();
          const i = fi(this);
          try {
            if (!(n & xt.SkipSelf)) {
              let e = this.records.get(t);
              if (void 0 === e) {
                const n = ('function' == typeof (s = t) || ('object' == typeof s && s instanceof Jn)) && ft(t);
                (e = n && this.injectableDefInScope(n) ? co(ao(t), to) : null), this.records.set(t, e);
              }
              if (null != e) return this.hydrate(t, e);
            }
            return (n & xt.Self ? so() : this.parent).get(t, (e = n & xt.Optional && e === hi ? null : e));
          } catch (r) {
            if ('NullInjectorError' === r.name) {
              if (((r.ngTempTokenPath = r.ngTempTokenPath || []).unshift(it(t)), i)) throw r;
              return (function (t, e, n, i) {
                const s = t.ngTempTokenPath;
                throw (
                  (e[di] && s.unshift(e[di]),
                  (t.message = (function (t, e, n, i = null) {
                    t = t && '\n' === t.charAt(0) && '\u0275' == t.charAt(1) ? t.substr(2) : t;
                    let s = it(e);
                    if (Array.isArray(e)) s = e.map(it).join(' -> ');
                    else if ('object' == typeof e) {
                      let t = [];
                      for (let n in e)
                        if (e.hasOwnProperty(n)) {
                          let i = e[n];
                          t.push(n + ':' + ('string' == typeof i ? JSON.stringify(i) : it(i)));
                        }
                      s = `{${t.join(', ')}}`;
                    }
                    return `${n}${i ? '(' + i + ')' : ''}[${s}]: ${t.replace(ui, '\n  ')}`;
                  })('\n' + t.message, s, n, i)),
                  (t.ngTokenPath = s),
                  (t.ngTempTokenPath = null),
                  t)
                );
              })(r, t, 'R3InjectorError', this.source);
            }
            throw r;
          } finally {
            fi(i);
          }
          var s;
        }
        _resolveInjectorDefTypes() {
          this.injectorDefTypes.forEach((t) => this.get(t));
        }
        toString() {
          const t = [];
          return this.records.forEach((e, n) => t.push(it(n))), `R3Injector[${t.join(', ')}]`;
        }
        assertNotDestroyed() {
          if (this._destroyed) throw new Error('Injector has already been destroyed.');
        }
        processInjectorType(t, e, n) {
          if (!(t = at(t))) return !1;
          let i = _t(t);
          const s = (null == i && t.ngModule) || void 0,
            r = void 0 === s ? t : s,
            o = -1 !== n.indexOf(r);
          if ((void 0 !== s && (i = _t(s)), null == i)) return !1;
          if (null != i.imports && !o) {
            let t;
            n.push(r);
            try {
              ii(i.imports, (i) => {
                this.processInjectorType(i, e, n) && (void 0 === t && (t = []), t.push(i));
              });
            } finally {
            }
            if (void 0 !== t)
              for (let e = 0; e < t.length; e++) {
                const { ngModule: n, providers: i } = t[e];
                ii(i, (t) => this.processProvider(t, n, i || no));
              }
          }
          this.injectorDefTypes.add(r);
          const a = ce(r) || (() => new r());
          this.records.set(r, co(a, to));
          const l = i.providers;
          if (null != l && !o) {
            const e = t;
            ii(l, (t) => this.processProvider(t, e, l));
          }
          return void 0 !== s && void 0 !== t.providers;
        }
        processProvider(t, e, n) {
          let i = uo((t = at(t))) ? t : at(t && t.provide);
          const s = (function (t, e, n) {
            return ho(t) ? co(void 0, t.useValue) : co(lo(t), to);
          })(t);
          if (uo(t) || !0 !== t.multi) this.records.get(i);
          else {
            let e = this.records.get(i);
            e || ((e = co(void 0, to, !0)), (e.factory = () => yi(e.multi)), this.records.set(i, e)),
              (i = t),
              e.multi.push(t);
          }
          this.records.set(i, s);
        }
        hydrate(t, e) {
          var n;
          return (
            e.value === to && ((e.value = eo), (e.value = e.factory())),
            'object' == typeof e.value &&
              e.value &&
              null !== (n = e.value) &&
              'object' == typeof n &&
              'function' == typeof n.ngOnDestroy &&
              this.onDestroy.add(e.value),
            e.value
          );
        }
        injectableDefInScope(t) {
          return (
            !!t.providedIn &&
            ('string' == typeof t.providedIn
              ? 'any' === t.providedIn || t.providedIn === this.scope
              : this.injectorDefTypes.has(t.providedIn))
          );
        }
      }
      function ao(t) {
        const e = ft(t),
          n = null !== e ? e.factory : ce(t);
        if (null !== n) return n;
        if (t instanceof Jn) throw new Error(`Token ${it(t)} is missing a \u0275prov definition.`);
        if (t instanceof Function)
          return (function (t) {
            const e = t.length;
            if (e > 0) {
              const n = oi(e, '?');
              throw new Error(`Can't resolve all parameters for ${it(t)}: (${n.join(', ')}).`);
            }
            const n = (function (t) {
              const e = t && (t[bt] || t[vt]);
              if (e) {
                const n = (function (t) {
                  if (t.hasOwnProperty('name')) return t.name;
                  const e = ('' + t).match(/^function\s*([^\s(]+)/);
                  return null === e ? '' : e[1];
                })(t);
                return (
                  console.warn(
                    `DEPRECATED: DI is instantiating a token "${n}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${n}" class.`
                  ),
                  e
                );
              }
              return null;
            })(t);
            return null !== n ? () => n.factory(t) : () => new t();
          })(t);
        throw new Error('unreachable');
      }
      function lo(t, e, n) {
        let i;
        if (uo(t)) {
          const e = at(t);
          return ce(e) || ao(e);
        }
        if (ho(t)) i = () => at(t.useValue);
        else if ((s = t) && s.useFactory) i = () => t.useFactory(...yi(t.deps || []));
        else if (
          (function (t) {
            return !(!t || !t.useExisting);
          })(t)
        )
          i = () => _i(at(t.useExisting));
        else {
          const e = at(t && (t.useClass || t.provide));
          if (
            !(function (t) {
              return !!t.deps;
            })(t)
          )
            return ce(e) || ao(e);
          i = () => new e(...yi(t.deps));
        }
        var s;
        return i;
      }
      function co(t, e, n = !1) {
        return { factory: t, value: e, multi: n ? [] : void 0 };
      }
      function ho(t) {
        return null !== t && 'object' == typeof t && pi in t;
      }
      function uo(t) {
        return 'function' == typeof t;
      }
      const po = function (t, e, n) {
        return (function (t, e = null, n = null, i) {
          const s = ro(t, e, n, i);
          return s._resolveInjectorDefTypes(), s;
        })({ name: n }, e, t, n);
      };
      class mo {
        static create(t, e) {
          return Array.isArray(t) ? po(t, e, '') : po(t.providers, t.parent, t.name || '');
        }
      }
      function fo(t, e) {
        pn(Ee(t)[1], Ne());
      }
      function go(t) {
        let e = Object.getPrototypeOf(t.type.prototype).constructor,
          n = !0;
        const i = [t];
        for (; e; ) {
          let s;
          if (le(t)) s = e.ɵcmp || e.ɵdir;
          else {
            if (e.ɵcmp) throw new Error('Directives cannot inherit Components');
            s = e.ɵdir;
          }
          if (s) {
            if (n) {
              i.push(s);
              const e = t;
              (e.inputs = _o(t.inputs)), (e.declaredInputs = _o(t.declaredInputs)), (e.outputs = _o(t.outputs));
              const n = s.hostBindings;
              n && vo(t, n);
              const r = s.viewQuery,
                o = s.contentQueries;
              if (
                (r && bo(t, r),
                o && yo(t, o),
                nt(t.inputs, s.inputs),
                nt(t.declaredInputs, s.declaredInputs),
                nt(t.outputs, s.outputs),
                le(s) && s.data.animation)
              ) {
                const e = t.data;
                e.animation = (e.animation || []).concat(s.data.animation);
              }
            }
            const e = s.features;
            if (e)
              for (let i = 0; i < e.length; i++) {
                const s = e[i];
                s && s.ngInherit && s(t), s === go && (n = !1);
              }
          }
          e = Object.getPrototypeOf(e);
        }
        !(function (t) {
          let e = 0,
            n = null;
          for (let i = t.length - 1; i >= 0; i--) {
            const s = t[i];
            (s.hostVars = e += s.hostVars), (s.hostAttrs = kn(s.hostAttrs, (n = kn(n, s.hostAttrs))));
          }
        })(i);
      }
      function _o(t) {
        return t === It ? {} : t === Ft ? [] : t;
      }
      function bo(t, e) {
        const n = t.viewQuery;
        t.viewQuery = n
          ? (t, i) => {
              e(t, i), n(t, i);
            }
          : e;
      }
      function yo(t, e) {
        const n = t.contentQueries;
        t.contentQueries = n
          ? (t, i, s) => {
              e(t, i, s), n(t, i, s);
            }
          : e;
      }
      function vo(t, e) {
        const n = t.hostBindings;
        t.hostBindings = n
          ? (t, i) => {
              e(t, i), n(t, i);
            }
          : e;
      }
      (mo.THROW_IF_NOT_FOUND = hi),
        (mo.NULL = new Zr()),
        (mo.ɵprov = pt({ token: mo, providedIn: 'any', factory: () => _i(Xr) })),
        (mo.__NG_ELEMENT_ID__ = -1);
      let wo = null;
      function xo() {
        if (!wo) {
          const t = Rt.Symbol;
          if (t && t.iterator) wo = t.iterator;
          else {
            const t = Object.getOwnPropertyNames(Map.prototype);
            for (let e = 0; e < t.length; ++e) {
              const n = t[e];
              'entries' !== n && 'size' !== n && Map.prototype[n] === Map.prototype.entries && (wo = n);
            }
          }
        }
        return wo;
      }
      class Co {
        constructor(t) {
          this.wrapped = t;
        }
        static wrap(t) {
          return new Co(t);
        }
        static unwrap(t) {
          return Co.isWrapped(t) ? t.wrapped : t;
        }
        static isWrapped(t) {
          return t instanceof Co;
        }
      }
      function ko(t) {
        return !!So(t) && (Array.isArray(t) || (!(t instanceof Map) && xo() in t));
      }
      function So(t) {
        return null !== t && ('function' == typeof t || 'object' == typeof t);
      }
      function Eo(t, e, n) {
        return (t[e] = n);
      }
      function Oo(t, e, n) {
        return !Object.is(t[e], n) && ((t[e] = n), !0);
      }
      function Po(t, e, n, i) {
        const s = Oo(t, e, n);
        return Oo(t, e + 1, i) || s;
      }
      function Ao(t, e, n, i) {
        const s = Ie();
        return (
          Oo(s, Ue(), e) &&
            (Le(),
            (function (t, e, n, i, s, r) {
              const o = xe(t, e);
              !(function (t, e, n, i, s, r, o) {
                if (null == r) be(t) ? t.removeAttribute(e, s, n) : e.removeAttribute(s);
                else {
                  const a = null == o ? ht(r) : o(r, i || '', s);
                  be(t) ? t.setAttribute(e, s, a, n) : n ? e.setAttributeNS(n, s, a) : e.setAttribute(s, a);
                }
              })(e[11], o, r, t.value, n, i, s);
            })(hn(), s, t, e, n, i)),
          Ao
        );
      }
      function To(t, e, n, i) {
        return Oo(t, Ue(), n) ? e + ht(n) + i : Js;
      }
      function Do(t, e, n, i, s, r, o, a) {
        const l = Ie(),
          c = Le(),
          h = t + ee,
          u = c.firstCreatePass
            ? (function (t, e, n, i, s, r, o, a, l) {
                const c = e.consts,
                  h = hr(e, t, 4, o || null, Ae(c, a));
                kr(e, n, h, Ae(c, l)), pn(e, h);
                const u = (h.tViews = vr(2, h, i, s, r, e.directiveRegistry, e.pipeRegistry, null, e.schemas, c));
                return null !== e.queries && (e.queries.template(e, h), (u.queries = e.queries.embeddedTView(h))), h;
              })(h, c, l, e, n, i, s, r, o)
            : c.data[h];
        Be(u, !1);
        const d = l[11].createComment('');
        Ms(c, l, d, u), cs(d, l), Vr(l, (l[h] = Ir(d, l, d, u))), ae(u) && _r(c, l, u), null != o && br(l, u, a);
      }
      function Mo(t) {
        return ke(Me.lFrame.contextLView, ee + t);
      }
      function Ro(t, e = xt.Default) {
        const n = Ie();
        return null === n ? _i(t, e) : Bn(Ne(), n, at(t), e);
      }
      function Io(t, e, n) {
        const i = Ie();
        return Oo(i, Ue(), e) && Cr(Le(), hn(), i, t, e, i[11], n, !1), Io;
      }
      function Lo(t, e, n, i, s) {
        const r = s ? 'class' : 'style';
        Gr(t, n, e.inputs[r], r, i);
      }
      function Fo(t, e, n, i) {
        const s = Ie(),
          r = Le(),
          o = ee + t,
          a = s[11],
          l = (s[o] = vs(a, e, Me.lFrame.currentNamespace)),
          c = r.firstCreatePass
            ? (function (t, e, n, i, s, r, o) {
                const a = e.consts,
                  l = hr(e, t, 2, s, Ae(a, r));
                return (
                  kr(e, n, l, Ae(a, o)),
                  null !== l.attrs && Kr(l, l.attrs, !1),
                  null !== l.mergedAttrs && Kr(l, l.mergedAttrs, !0),
                  null !== e.queries && e.queries.elementStart(e, l),
                  l
                );
              })(o, r, s, 0, e, n, i)
            : r.data[o];
        Be(c, !0);
        const h = c.mergedAttrs;
        null !== h && wn(a, l, h);
        const u = c.classes;
        null !== u && zs(a, l, u);
        const d = c.styles;
        null !== d && Bs(a, l, d),
          64 != (64 & c.flags) && Ms(r, s, l, c),
          0 === Me.lFrame.elementDepthCount && cs(l, s),
          Me.lFrame.elementDepthCount++,
          ae(c) && (_r(r, s, c), gr(r, c, s)),
          null !== i && br(s, c);
      }
      function No() {
        let t = Ne();
        ze() ? je() : ((t = t.parent), Be(t, !1));
        const e = t;
        Me.lFrame.elementDepthCount--;
        const n = Le();
        n.firstCreatePass && (pn(n, t), re(t) && n.queries.elementEnd(t)),
          null != e.classesWithoutHost &&
            (function (t) {
              return 0 != (16 & t.flags);
            })(e) &&
            Lo(n, e, Ie(), e.classesWithoutHost, !0),
          null != e.stylesWithoutHost &&
            (function (t) {
              return 0 != (32 & t.flags);
            })(e) &&
            Lo(n, e, Ie(), e.stylesWithoutHost, !1);
      }
      function Vo(t, e, n, i) {
        Fo(t, e, n, i), No();
      }
      function Bo(t, e, n) {
        const i = Ie(),
          s = Le(),
          r = t + ee,
          o = s.firstCreatePass
            ? (function (t, e, n, i, s) {
                const r = e.consts,
                  o = Ae(r, i),
                  a = hr(e, t, 8, 'ng-container', o);
                return (
                  null !== o && Kr(a, o, !0),
                  kr(e, n, a, Ae(r, s)),
                  null !== e.queries && e.queries.elementStart(e, a),
                  a
                );
              })(r, s, i, e, n)
            : s.data[r];
        Be(o, !0);
        const a = (i[r] = i[11].createComment(''));
        Ms(s, i, a, o), cs(a, i), ae(o) && (_r(s, i, o), gr(s, o, i)), null != n && br(i, o);
      }
      function zo() {
        let t = Ne();
        const e = Le();
        ze() ? je() : ((t = t.parent), Be(t, !1)), e.firstCreatePass && (pn(e, t), re(t) && e.queries.elementEnd(t));
      }
      function jo(t, e, n) {
        Bo(t, e, n), zo();
      }
      function Ho() {
        return Ie();
      }
      function $o(t) {
        return !!t && 'function' == typeof t.then;
      }
      function qo(t) {
        return !!t && 'function' == typeof t.subscribe;
      }
      const Wo = qo;
      function Uo(t, e, n = !1, i) {
        const s = Ie(),
          r = Le(),
          o = Ne();
        return Go(r, s, s[11], o, t, e, n, i), Uo;
      }
      function Yo(t, e, n = !1, i) {
        const s = Ne(),
          r = Ie(),
          o = Le();
        return Go(o, r, Ur(Ke(o.data), s, r), s, t, e, n, i), Yo;
      }
      function Go(t, e, n, i, s, r, o = !1, a) {
        const l = ae(i),
          c = t.firstCreatePass && Wr(t),
          h = qr(e);
        let u = !0;
        if (3 & i.type) {
          const d = xe(i, e),
            p = a ? a(d) : It,
            m = p.target || d,
            f = h.length,
            g = a ? (t) => a(ve(t[i.index])).target : i.index;
          if (be(n)) {
            let o = null;
            if (
              (!a &&
                l &&
                (o = (function (t, e, n, i) {
                  const s = t.cleanup;
                  if (null != s)
                    for (let r = 0; r < s.length - 1; r += 2) {
                      const t = s[r];
                      if (t === n && s[r + 1] === i) {
                        const t = e[7],
                          n = s[r + 2];
                        return t.length > n ? t[n] : null;
                      }
                      'string' == typeof t && (r += 2);
                    }
                  return null;
                })(t, e, s, i.index)),
              null !== o)
            )
              ((o.__ngLastListenerFn__ || o).__ngNextListenerFn__ = r), (o.__ngLastListenerFn__ = r), (u = !1);
            else {
              r = Ko(i, e, 0, r, !1);
              const t = n.listen(p.name || m, s, r);
              h.push(r, t), c && c.push(s, g, f, f + 1);
            }
          } else (r = Ko(i, e, 0, r, !0)), m.addEventListener(s, r, o), h.push(r), c && c.push(s, g, f, o);
        } else r = Ko(i, e, 0, r, !1);
        const d = i.outputs;
        let p;
        if (u && null !== d && (p = d[s])) {
          const t = p.length;
          if (t)
            for (let n = 0; n < t; n += 2) {
              const t = e[p[n]][p[n + 1]].subscribe(r),
                o = h.length;
              h.push(r, t), c && c.push(s, i.index, o, -(o + 1));
            }
        }
      }
      function Qo(t, e, n, i) {
        try {
          return !1 !== n(i);
        } catch (s) {
          return Yr(t, s), !1;
        }
      }
      function Ko(t, e, n, i, s) {
        return function n(r) {
          if (r === Function) return i;
          const o = 2 & t.flags ? Se(t.index, e) : e;
          0 == (32 & e[2]) && Br(o);
          let a = Qo(e, 0, i, r),
            l = n.__ngNextListenerFn__;
          for (; l; ) (a = Qo(e, 0, l, r) && a), (l = l.__ngNextListenerFn__);
          return s && !1 === a && (r.preventDefault(), (r.returnValue = !1)), a;
        };
      }
      function Xo(t = 1) {
        return (function (t) {
          return (Me.lFrame.contextLView = (function (t, e) {
            for (; t > 0; ) (e = e[15]), t--;
            return e;
          })(t, Me.lFrame.contextLView))[8];
        })(t);
      }
      function Zo(t, e) {
        let n = null;
        const i = (function (t) {
          const e = t.attrs;
          if (null != e) {
            const t = e.indexOf(5);
            if (0 == (1 & t)) return e[t + 1];
          }
          return null;
        })(t);
        for (let s = 0; s < e.length; s++) {
          const r = e[s];
          if ('*' !== r) {
            if (null === i ? Qs(t, r, !0) : Ks(i, r)) return s;
          } else n = s;
        }
        return n;
      }
      function Jo(t) {
        const e = Ie()[16][6];
        if (!e.projection) {
          const n = (e.projection = oi(t ? t.length : 1, null)),
            i = n.slice();
          let s = e.child;
          for (; null !== s; ) {
            const e = t ? Zo(s, t) : 0;
            null !== e && (i[e] ? (i[e].projectionNext = s) : (n[e] = s), (i[e] = s)), (s = s.next);
          }
        }
      }
      function ta(t, e = 0, n) {
        const i = Ie(),
          s = Le(),
          r = hr(s, ee + t, 16, null, n || null);
        null === r.projection && (r.projection = e),
          je(),
          64 != (64 & r.flags) &&
            (function (t, e, n) {
              Vs(e[11], 0, e, n, Ss(t, n, e), Ts(n.parent || e[6], n, e));
            })(s, i, r);
      }
      function ea(t, e, n) {
        return na(t, '', e, '', n), ea;
      }
      function na(t, e, n, i, s) {
        const r = Ie(),
          o = To(r, e, n, i);
        return o !== Js && Cr(Le(), hn(), r, t, o, r[11], s, !1), na;
      }
      function ia(t, e, n, i, s) {
        const r = t[n + 1],
          o = null === e;
        let a = i ? ir(r) : rr(r),
          l = !1;
        for (; 0 !== a && (!1 === l || o); ) {
          const n = t[a + 1];
          sa(t[a], e) && ((l = !0), (t[a + 1] = i ? ar(n) : sr(n))), (a = i ? ir(n) : rr(n));
        }
        l && (t[n + 1] = i ? sr(r) : ar(r));
      }
      function sa(t, e) {
        return (
          null === t ||
          null == e ||
          (Array.isArray(t) ? t[1] : t) === e ||
          (!(!Array.isArray(t) || 'string' != typeof e) && ci(t, e) >= 0)
        );
      }
      const ra = { textEnd: 0, key: 0, keyEnd: 0, value: 0, valueEnd: 0 };
      function oa(t) {
        return t.substring(ra.key, ra.keyEnd);
      }
      function aa(t, e) {
        const n = ra.textEnd;
        return n === e
          ? -1
          : ((e = ra.keyEnd =
              (function (t, e, n) {
                for (; e < n && t.charCodeAt(e) > 32; ) e++;
                return e;
              })(t, (ra.key = e), n)),
            la(t, e, n));
      }
      function la(t, e, n) {
        for (; e < n && t.charCodeAt(e) <= 32; ) e++;
        return e;
      }
      function ca(t, e, n) {
        return pa(t, e, n, !1), ca;
      }
      function ha(t, e) {
        return pa(t, e, null, !0), ha;
      }
      function ua(t) {
        ma(ai, da, t, !0);
      }
      function da(t, e) {
        for (
          let n = (function (t) {
            return (
              (function (t) {
                (ra.key = 0), (ra.keyEnd = 0), (ra.value = 0), (ra.valueEnd = 0), (ra.textEnd = t.length);
              })(t),
              aa(t, la(t, 0, ra.textEnd))
            );
          })(e);
          n >= 0;
          n = aa(e, n)
        )
          ai(t, oa(e), !0);
      }
      function pa(t, e, n, i) {
        const s = Ie(),
          r = Le(),
          o = Ye(2);
        r.firstUpdatePass && ga(r, t, o, i),
          e !== Js &&
            Oo(s, o, e) &&
            ya(
              r,
              r.data[ln()],
              s,
              s[11],
              t,
              (s[o + 1] = (function (t, e) {
                return null == t || ('string' == typeof e ? (t += e) : 'object' == typeof t && (t = it(Mi(t)))), t;
              })(e, n)),
              i,
              o
            );
      }
      function ma(t, e, n, i) {
        const s = Le(),
          r = Ye(2);
        s.firstUpdatePass && ga(s, null, r, i);
        const o = Ie();
        if (n !== Js && Oo(o, r, n)) {
          const a = s.data[ln()];
          if (xa(a, i) && !fa(s, r)) {
            let t = i ? a.classesWithoutHost : a.stylesWithoutHost;
            null !== t && (n = st(t, n || '')), Lo(s, a, o, n, i);
          } else
            !(function (t, e, n, i, s, r, o, a) {
              s === Js && (s = Lt);
              let l = 0,
                c = 0,
                h = 0 < s.length ? s[0] : null,
                u = 0 < r.length ? r[0] : null;
              for (; null !== h || null !== u; ) {
                const d = l < s.length ? s[l + 1] : void 0,
                  p = c < r.length ? r[c + 1] : void 0;
                let m,
                  f = null;
                h === u
                  ? ((l += 2), (c += 2), d !== p && ((f = u), (m = p)))
                  : null === u || (null !== h && h < u)
                  ? ((l += 2), (f = h))
                  : ((c += 2), (f = u), (m = p)),
                  null !== f && ya(t, e, n, i, f, m, o, a),
                  (h = l < s.length ? s[l] : null),
                  (u = c < r.length ? r[c] : null);
              }
            })(
              s,
              a,
              o,
              o[11],
              o[r + 1],
              (o[r + 1] = (function (t, e, n) {
                if (null == n || '' === n) return Lt;
                const i = [],
                  s = Mi(n);
                if (Array.isArray(s)) for (let r = 0; r < s.length; r++) t(i, s[r], !0);
                else if ('object' == typeof s) for (const r in s) s.hasOwnProperty(r) && t(i, r, s[r]);
                else 'string' == typeof s && e(i, s);
                return i;
              })(t, e, n)),
              i,
              r
            );
        }
      }
      function fa(t, e) {
        return e >= t.expandoStartIndex;
      }
      function ga(t, e, n, i) {
        const s = t.data;
        if (null === s[n + 1]) {
          const r = s[ln()],
            o = fa(t, n);
          xa(r, i) && null === e && !o && (e = !1),
            (e = (function (t, e, n, i) {
              const s = Ke(t);
              let r = i ? e.residualClasses : e.residualStyles;
              if (null === s)
                0 === (i ? e.classBindings : e.styleBindings) &&
                  ((n = ba((n = _a(null, t, e, n, i)), e.attrs, i)), (r = null));
              else {
                const o = e.directiveStylingLast;
                if (-1 === o || t[o] !== s)
                  if (((n = _a(s, t, e, n, i)), null === r)) {
                    let n = (function (t, e, n) {
                      const i = n ? e.classBindings : e.styleBindings;
                      if (0 !== rr(i)) return t[ir(i)];
                    })(t, e, i);
                    void 0 !== n &&
                      Array.isArray(n) &&
                      ((n = _a(null, t, e, n[1], i)),
                      (n = ba(n, e.attrs, i)),
                      (function (t, e, n, i) {
                        t[ir(n ? e.classBindings : e.styleBindings)] = i;
                      })(t, e, i, n));
                  } else
                    r = (function (t, e, n) {
                      let i;
                      const s = e.directiveEnd;
                      for (let r = 1 + e.directiveStylingLast; r < s; r++) i = ba(i, t[r].hostAttrs, n);
                      return ba(i, e.attrs, n);
                    })(t, e, i);
              }
              return void 0 !== r && (i ? (e.residualClasses = r) : (e.residualStyles = r)), n;
            })(s, r, e, i)),
            (function (t, e, n, i, s, r) {
              let o = r ? e.classBindings : e.styleBindings,
                a = ir(o),
                l = rr(o);
              t[i] = n;
              let c,
                h = !1;
              if (Array.isArray(n)) {
                const t = n;
                (c = t[1]), (null === c || ci(t, c) > 0) && (h = !0);
              } else c = n;
              if (s)
                if (0 !== l) {
                  const e = ir(t[a + 1]);
                  (t[i + 1] = nr(e, a)),
                    0 !== e && (t[e + 1] = or(t[e + 1], i)),
                    (t[a + 1] = (131071 & t[a + 1]) | (i << 17));
                } else (t[i + 1] = nr(a, 0)), 0 !== a && (t[a + 1] = or(t[a + 1], i)), (a = i);
              else (t[i + 1] = nr(l, 0)), 0 === a ? (a = i) : (t[l + 1] = or(t[l + 1], i)), (l = i);
              h && (t[i + 1] = sr(t[i + 1])),
                ia(t, c, i, !0),
                ia(t, c, i, !1),
                (function (t, e, n, i, s) {
                  const r = s ? t.residualClasses : t.residualStyles;
                  null != r && 'string' == typeof e && ci(r, e) >= 0 && (n[i + 1] = ar(n[i + 1]));
                })(e, c, t, i, r),
                (o = nr(a, l)),
                r ? (e.classBindings = o) : (e.styleBindings = o);
            })(s, r, e, n, o, i);
        }
      }
      function _a(t, e, n, i, s) {
        let r = null;
        const o = n.directiveEnd;
        let a = n.directiveStylingLast;
        for (-1 === a ? (a = n.directiveStart) : a++; a < o && ((r = e[a]), (i = ba(i, r.hostAttrs, s)), r !== t); )
          a++;
        return null !== t && (n.directiveStylingLast = a), i;
      }
      function ba(t, e, n) {
        const i = n ? 1 : 2;
        let s = -1;
        if (null !== e)
          for (let r = 0; r < e.length; r++) {
            const o = e[r];
            'number' == typeof o
              ? (s = o)
              : s === i && (Array.isArray(t) || (t = void 0 === t ? [] : ['', t]), ai(t, o, !!n || e[++r]));
          }
        return void 0 === t ? null : t;
      }
      function ya(t, e, n, i, s, r, o, a) {
        if (!(3 & e.type)) return;
        const l = t.data,
          c = l[a + 1];
        wa(1 == (1 & c) ? va(l, e, n, s, rr(c), o) : void 0) ||
          (wa(r) || (2 == (2 & c) && (r = va(l, null, n, s, a, o))),
          (function (t, e, n, i, s) {
            const r = be(t);
            if (e) s ? (r ? t.addClass(n, i) : n.classList.add(i)) : r ? t.removeClass(n, i) : n.classList.remove(i);
            else {
              let e = -1 === i.indexOf('-') ? void 0 : ps.DashCase;
              if (null == s) r ? t.removeStyle(n, i, e) : n.style.removeProperty(i);
              else {
                const o = 'string' == typeof s && s.endsWith('!important');
                o && ((s = s.slice(0, -10)), (e |= ps.Important)),
                  r ? t.setStyle(n, i, s, e) : n.style.setProperty(i, s, o ? 'important' : '');
              }
            }
          })(i, o, we(ln(), n), s, r));
      }
      function va(t, e, n, i, s, r) {
        const o = null === e;
        let a;
        for (; s > 0; ) {
          const e = t[s],
            r = Array.isArray(e),
            l = r ? e[1] : e,
            c = null === l;
          let h = n[s + 1];
          h === Js && (h = c ? Lt : void 0);
          let u = c ? li(h, i) : l === i ? h : void 0;
          if ((r && !wa(u) && (u = li(e, i)), wa(u) && ((a = u), o))) return a;
          const d = t[s + 1];
          s = o ? ir(d) : rr(d);
        }
        if (null !== e) {
          let t = r ? e.residualClasses : e.residualStyles;
          null != t && (a = li(t, i));
        }
        return a;
      }
      function wa(t) {
        return void 0 !== t;
      }
      function xa(t, e) {
        return 0 != (t.flags & (e ? 16 : 32));
      }
      function Ca(t, e = '') {
        const n = Ie(),
          i = Le(),
          s = t + ee,
          r = i.firstCreatePass ? hr(i, s, 1, e, null) : i.data[s],
          o = (n[s] = (function (t, e) {
            return be(t) ? t.createText(e) : t.createTextNode(e);
          })(n[11], e));
        Ms(i, n, o, r), Be(r, !1);
      }
      function ka(t) {
        return Sa('', t, ''), ka;
      }
      function Sa(t, e, n) {
        const i = Ie(),
          s = To(i, t, e, n);
        return s !== Js && Qr(i, ln(), s), Sa;
      }
      function Ea(t, e, n, i, s) {
        const r = Ie(),
          o = (function (t, e, n, i, s, r) {
            const o = Po(t, We(), n, s);
            return Ye(2), o ? e + ht(n) + i + ht(s) + r : Js;
          })(r, t, e, n, i, s);
        return o !== Js && Qr(r, ln(), o), Ea;
      }
      function Oa(t, e, n) {
        const i = Ie();
        return Oo(i, Ue(), e) && Cr(Le(), hn(), i, t, e, i[11], n, !0), Oa;
      }
      function Pa(t, e, n) {
        const i = Ie();
        if (Oo(i, Ue(), e)) {
          const s = Le(),
            r = hn();
          Cr(s, r, i, t, e, Ur(Ke(s.data), r, i), n, !0);
        }
        return Pa;
      }
      const Aa = void 0;
      var Ta = [
        'en',
        [['a', 'p'], ['AM', 'PM'], Aa],
        [['AM', 'PM'], Aa, Aa],
        [
          ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
          ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
          ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
        ],
        Aa,
        [
          ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
          ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
        ],
        Aa,
        [
          ['B', 'A'],
          ['BC', 'AD'],
          ['Before Christ', 'Anno Domini'],
        ],
        0,
        [6, 0],
        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],
        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'],
        ['{1}, {0}', Aa, "{1} 'at' {0}", Aa],
        ['.', ',', ';', '%', '+', '-', 'E', '\xd7', '\u2030', '\u221e', 'NaN', ':'],
        ['#,##0.###', '#,##0%', '\xa4#,##0.00', '#E0'],
        'USD',
        '$',
        'US Dollar',
        {},
        'ltr',
        function (t) {
          let e = Math.floor(Math.abs(t)),
            n = t.toString().replace(/^[^.]*\.?/, '').length;
          return 1 === e && 0 === n ? 1 : 5;
        },
      ];
      let Da = {};
      function Ma(t) {
        const e = (function (t) {
          return t.toLowerCase().replace(/_/g, '-');
        })(t);
        let n = Ra(e);
        if (n) return n;
        const i = e.split('-')[0];
        if (((n = Ra(i)), n)) return n;
        if ('en' === i) return Ta;
        throw new Error(`Missing locale data for the locale "${t}".`);
      }
      function Ra(t) {
        return t in Da || (Da[t] = Rt.ng && Rt.ng.common && Rt.ng.common.locales && Rt.ng.common.locales[t]), Da[t];
      }
      var Ia = (() => (
        ((Ia = Ia || {})[(Ia.LocaleId = 0)] = 'LocaleId'),
        (Ia[(Ia.DayPeriodsFormat = 1)] = 'DayPeriodsFormat'),
        (Ia[(Ia.DayPeriodsStandalone = 2)] = 'DayPeriodsStandalone'),
        (Ia[(Ia.DaysFormat = 3)] = 'DaysFormat'),
        (Ia[(Ia.DaysStandalone = 4)] = 'DaysStandalone'),
        (Ia[(Ia.MonthsFormat = 5)] = 'MonthsFormat'),
        (Ia[(Ia.MonthsStandalone = 6)] = 'MonthsStandalone'),
        (Ia[(Ia.Eras = 7)] = 'Eras'),
        (Ia[(Ia.FirstDayOfWeek = 8)] = 'FirstDayOfWeek'),
        (Ia[(Ia.WeekendRange = 9)] = 'WeekendRange'),
        (Ia[(Ia.DateFormat = 10)] = 'DateFormat'),
        (Ia[(Ia.TimeFormat = 11)] = 'TimeFormat'),
        (Ia[(Ia.DateTimeFormat = 12)] = 'DateTimeFormat'),
        (Ia[(Ia.NumberSymbols = 13)] = 'NumberSymbols'),
        (Ia[(Ia.NumberFormats = 14)] = 'NumberFormats'),
        (Ia[(Ia.CurrencyCode = 15)] = 'CurrencyCode'),
        (Ia[(Ia.CurrencySymbol = 16)] = 'CurrencySymbol'),
        (Ia[(Ia.CurrencyName = 17)] = 'CurrencyName'),
        (Ia[(Ia.Currencies = 18)] = 'Currencies'),
        (Ia[(Ia.Directionality = 19)] = 'Directionality'),
        (Ia[(Ia.PluralCase = 20)] = 'PluralCase'),
        (Ia[(Ia.ExtraData = 21)] = 'ExtraData'),
        Ia
      ))();
      const La = 'en-US';
      let Fa = La;
      function Na(t) {
        var e, n;
        (n = 'Expected localeId to be defined'),
          null == (e = t) &&
            (function (t, e, n, i) {
              throw new Error(`ASSERTION ERROR: ${t} [Expected=> null != ${e} <=Actual]`);
            })(n, e),
          'string' == typeof t && (Fa = t.toLowerCase().replace(/_/g, '-'));
      }
      function Va(t, e, n, i, s) {
        if (((t = at(t)), Array.isArray(t))) for (let r = 0; r < t.length; r++) Va(t[r], e, n, i, s);
        else {
          const r = Le(),
            o = Ie();
          let a = uo(t) ? t : at(t.provide),
            l = lo(t);
          const c = Ne(),
            h = 1048575 & c.providerIndexes,
            u = c.directiveStart,
            d = c.providerIndexes >> 20;
          if (uo(t) || !t.multi) {
            const i = new vn(l, s, Ro),
              p = ja(a, e, s ? h : h + d, u);
            -1 === p
              ? (Fn(Mn(c, o), r, a),
                Ba(r, t, e.length),
                e.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                s && (c.providerIndexes += 1048576),
                n.push(i),
                o.push(i))
              : ((n[p] = i), (o[p] = i));
          } else {
            const p = ja(a, e, h + d, u),
              m = ja(a, e, h, h + d),
              f = p >= 0 && n[p],
              g = m >= 0 && n[m];
            if ((s && !g) || (!s && !f)) {
              Fn(Mn(c, o), r, a);
              const h = (function (t, e, n, i, s) {
                const r = new vn(t, n, Ro);
                return (r.multi = []), (r.index = e), (r.componentProviders = 0), za(r, s, i && !n), r;
              })(s ? $a : Ha, n.length, s, i, l);
              !s && g && (n[m].providerFactory = h),
                Ba(r, t, e.length, 0),
                e.push(a),
                c.directiveStart++,
                c.directiveEnd++,
                s && (c.providerIndexes += 1048576),
                n.push(h),
                o.push(h);
            } else Ba(r, t, p > -1 ? p : m, za(n[s ? m : p], l, !s && i));
            !s && i && g && n[m].componentProviders++;
          }
        }
      }
      function Ba(t, e, n, i) {
        const s = uo(e);
        if (s || e.useClass) {
          const r = (e.useClass || e).prototype.ngOnDestroy;
          if (r) {
            const o = t.destroyHooks || (t.destroyHooks = []);
            if (!s && e.multi) {
              const t = o.indexOf(n);
              -1 === t ? o.push(n, [i, r]) : o[t + 1].push(i, r);
            } else o.push(n, r);
          }
        }
      }
      function za(t, e, n) {
        return n && t.componentProviders++, t.multi.push(e) - 1;
      }
      function ja(t, e, n, i) {
        for (let s = n; s < i; s++) if (e[s] === t) return s;
        return -1;
      }
      function Ha(t, e, n, i) {
        return qa(this.multi, []);
      }
      function $a(t, e, n, i) {
        const s = this.multi;
        let r;
        if (this.providerFactory) {
          const t = this.providerFactory.componentProviders,
            e = qn(n, n[1], this.providerFactory.index, i);
          (r = e.slice(0, t)), qa(s, r);
          for (let n = t; n < e.length; n++) r.push(e[n]);
        } else (r = []), qa(s, r);
        return r;
      }
      function qa(t, e) {
        for (let n = 0; n < t.length; n++) e.push((0, t[n])());
        return e;
      }
      function Wa(t, e = []) {
        return (n) => {
          n.providersResolver = (n, i) =>
            (function (t, e, n) {
              const i = Le();
              if (i.firstCreatePass) {
                const s = le(t);
                Va(n, i.data, i.blueprint, s, !0), Va(e, i.data, i.blueprint, s, !1);
              }
            })(n, i ? i(t) : t, e);
        };
      }
      class Ua {}
      class Ya {
        resolveComponentFactory(t) {
          throw (function (t) {
            const e = Error(`No component factory found for ${it(t)}. Did you add it to @NgModule.entryComponents?`);
            return (e.ngComponent = t), e;
          })(t);
        }
      }
      class Ga {}
      function Qa(...t) {}
      function Ka(t, e) {
        return new Za(xe(t, e));
      }
      Ga.NULL = new Ya();
      const Xa = function () {
        return Ka(Ne(), Ie());
      };
      let Za = (() => {
        class t {
          constructor(t) {
            this.nativeElement = t;
          }
        }
        return (t.__NG_ELEMENT_ID__ = Xa), t;
      })();
      function Ja(t) {
        return t instanceof Za ? t.nativeElement : t;
      }
      class tl {}
      let el = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = () => nl()), t;
      })();
      const nl = function () {
        const t = Ie(),
          e = Se(Ne().index, t);
        return (function (t) {
          return t[11];
        })(ie(e) ? e : t);
      };
      let il = (() => {
        class t {}
        return (t.ɵprov = pt({ token: t, providedIn: 'root', factory: () => null })), t;
      })();
      class sl {
        constructor(t) {
          (this.full = t),
            (this.major = t.split('.')[0]),
            (this.minor = t.split('.')[1]),
            (this.patch = t.split('.').slice(2).join('.'));
        }
      }
      const rl = new sl('11.2.14');
      class ol {
        constructor() {}
        supports(t) {
          return ko(t);
        }
        create(t) {
          return new ll(t);
        }
      }
      const al = (t, e) => e;
      class ll {
        constructor(t) {
          (this.length = 0),
            (this._linkedRecords = null),
            (this._unlinkedRecords = null),
            (this._previousItHead = null),
            (this._itHead = null),
            (this._itTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._movesHead = null),
            (this._movesTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null),
            (this._identityChangesHead = null),
            (this._identityChangesTail = null),
            (this._trackByFn = t || al);
        }
        forEachItem(t) {
          let e;
          for (e = this._itHead; null !== e; e = e._next) t(e);
        }
        forEachOperation(t) {
          let e = this._itHead,
            n = this._removalsHead,
            i = 0,
            s = null;
          for (; e || n; ) {
            const r = !n || (e && e.currentIndex < dl(n, i, s)) ? e : n,
              o = dl(r, i, s),
              a = r.currentIndex;
            if (r === n) i--, (n = n._nextRemoved);
            else if (((e = e._next), null == r.previousIndex)) i++;
            else {
              s || (s = []);
              const t = o - i,
                e = a - i;
              if (t != e) {
                for (let n = 0; n < t; n++) {
                  const i = n < s.length ? s[n] : (s[n] = 0),
                    r = i + n;
                  e <= r && r < t && (s[n] = i + 1);
                }
                s[r.previousIndex] = e - t;
              }
            }
            o !== a && t(r, o, a);
          }
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousItHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachMovedItem(t) {
          let e;
          for (e = this._movesHead; null !== e; e = e._nextMoved) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        forEachIdentityChange(t) {
          let e;
          for (e = this._identityChangesHead; null !== e; e = e._nextIdentityChange) t(e);
        }
        diff(t) {
          if ((null == t && (t = []), !ko(t)))
            throw new Error(`Error trying to diff '${it(t)}'. Only arrays and iterables are allowed`);
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e,
            n,
            i,
            s = this._itHead,
            r = !1;
          if (Array.isArray(t)) {
            this.length = t.length;
            for (let e = 0; e < this.length; e++)
              (n = t[e]),
                (i = this._trackByFn(e, n)),
                null !== s && Object.is(s.trackById, i)
                  ? (r && (s = this._verifyReinsertion(s, n, i, e)),
                    Object.is(s.item, n) || this._addIdentityChange(s, n))
                  : ((s = this._mismatch(s, n, i, e)), (r = !0)),
                (s = s._next);
          } else
            (e = 0),
              (function (t, e) {
                if (Array.isArray(t)) for (let n = 0; n < t.length; n++) e(t[n]);
                else {
                  const n = t[xo()]();
                  let i;
                  for (; !(i = n.next()).done; ) e(i.value);
                }
              })(t, (t) => {
                (i = this._trackByFn(e, t)),
                  null !== s && Object.is(s.trackById, i)
                    ? (r && (s = this._verifyReinsertion(s, t, i, e)),
                      Object.is(s.item, t) || this._addIdentityChange(s, t))
                    : ((s = this._mismatch(s, t, i, e)), (r = !0)),
                  (s = s._next),
                  e++;
              }),
              (this.length = e);
          return this._truncate(s), (this.collection = t), this.isDirty;
        }
        get isDirty() {
          return (
            null !== this._additionsHead ||
            null !== this._movesHead ||
            null !== this._removalsHead ||
            null !== this._identityChangesHead
          );
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (t = this._previousItHead = this._itHead; null !== t; t = t._next) t._nextPrevious = t._next;
            for (t = this._additionsHead; null !== t; t = t._nextAdded) t.previousIndex = t.currentIndex;
            for (this._additionsHead = this._additionsTail = null, t = this._movesHead; null !== t; t = t._nextMoved)
              t.previousIndex = t.currentIndex;
            (this._movesHead = this._movesTail = null),
              (this._removalsHead = this._removalsTail = null),
              (this._identityChangesHead = this._identityChangesTail = null);
          }
        }
        _mismatch(t, e, n, i) {
          let s;
          return (
            null === t ? (s = this._itTail) : ((s = t._prev), this._remove(t)),
            null !== (t = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n, null))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e), this._reinsertAfter(t, s, i))
              : null !== (t = null === this._linkedRecords ? null : this._linkedRecords.get(n, i))
              ? (Object.is(t.item, e) || this._addIdentityChange(t, e), this._moveAfter(t, s, i))
              : (t = this._addAfter(new cl(e, n), s, i)),
            t
          );
        }
        _verifyReinsertion(t, e, n, i) {
          let s = null === this._unlinkedRecords ? null : this._unlinkedRecords.get(n, null);
          return (
            null !== s
              ? (t = this._reinsertAfter(s, t._prev, i))
              : t.currentIndex != i && ((t.currentIndex = i), this._addToMoves(t, i)),
            t
          );
        }
        _truncate(t) {
          for (; null !== t; ) {
            const e = t._next;
            this._addToRemovals(this._unlink(t)), (t = e);
          }
          null !== this._unlinkedRecords && this._unlinkedRecords.clear(),
            null !== this._additionsTail && (this._additionsTail._nextAdded = null),
            null !== this._movesTail && (this._movesTail._nextMoved = null),
            null !== this._itTail && (this._itTail._next = null),
            null !== this._removalsTail && (this._removalsTail._nextRemoved = null),
            null !== this._identityChangesTail && (this._identityChangesTail._nextIdentityChange = null);
        }
        _reinsertAfter(t, e, n) {
          null !== this._unlinkedRecords && this._unlinkedRecords.remove(t);
          const i = t._prevRemoved,
            s = t._nextRemoved;
          return (
            null === i ? (this._removalsHead = s) : (i._nextRemoved = s),
            null === s ? (this._removalsTail = i) : (s._prevRemoved = i),
            this._insertAfter(t, e, n),
            this._addToMoves(t, n),
            t
          );
        }
        _moveAfter(t, e, n) {
          return this._unlink(t), this._insertAfter(t, e, n), this._addToMoves(t, n), t;
        }
        _addAfter(t, e, n) {
          return (
            this._insertAfter(t, e, n),
            (this._additionsTail =
              null === this._additionsTail ? (this._additionsHead = t) : (this._additionsTail._nextAdded = t)),
            t
          );
        }
        _insertAfter(t, e, n) {
          const i = null === e ? this._itHead : e._next;
          return (
            (t._next = i),
            (t._prev = e),
            null === i ? (this._itTail = t) : (i._prev = t),
            null === e ? (this._itHead = t) : (e._next = t),
            null === this._linkedRecords && (this._linkedRecords = new ul()),
            this._linkedRecords.put(t),
            (t.currentIndex = n),
            t
          );
        }
        _remove(t) {
          return this._addToRemovals(this._unlink(t));
        }
        _unlink(t) {
          null !== this._linkedRecords && this._linkedRecords.remove(t);
          const e = t._prev,
            n = t._next;
          return null === e ? (this._itHead = n) : (e._next = n), null === n ? (this._itTail = e) : (n._prev = e), t;
        }
        _addToMoves(t, e) {
          return (
            t.previousIndex === e ||
              (this._movesTail = null === this._movesTail ? (this._movesHead = t) : (this._movesTail._nextMoved = t)),
            t
          );
        }
        _addToRemovals(t) {
          return (
            null === this._unlinkedRecords && (this._unlinkedRecords = new ul()),
            this._unlinkedRecords.put(t),
            (t.currentIndex = null),
            (t._nextRemoved = null),
            null === this._removalsTail
              ? ((this._removalsTail = this._removalsHead = t), (t._prevRemoved = null))
              : ((t._prevRemoved = this._removalsTail), (this._removalsTail = this._removalsTail._nextRemoved = t)),
            t
          );
        }
        _addIdentityChange(t, e) {
          return (
            (t.item = e),
            (this._identityChangesTail =
              null === this._identityChangesTail
                ? (this._identityChangesHead = t)
                : (this._identityChangesTail._nextIdentityChange = t)),
            t
          );
        }
      }
      class cl {
        constructor(t, e) {
          (this.item = t),
            (this.trackById = e),
            (this.currentIndex = null),
            (this.previousIndex = null),
            (this._nextPrevious = null),
            (this._prev = null),
            (this._next = null),
            (this._prevDup = null),
            (this._nextDup = null),
            (this._prevRemoved = null),
            (this._nextRemoved = null),
            (this._nextAdded = null),
            (this._nextMoved = null),
            (this._nextIdentityChange = null);
        }
      }
      class hl {
        constructor() {
          (this._head = null), (this._tail = null);
        }
        add(t) {
          null === this._head
            ? ((this._head = this._tail = t), (t._nextDup = null), (t._prevDup = null))
            : ((this._tail._nextDup = t), (t._prevDup = this._tail), (t._nextDup = null), (this._tail = t));
        }
        get(t, e) {
          let n;
          for (n = this._head; null !== n; n = n._nextDup)
            if ((null === e || e <= n.currentIndex) && Object.is(n.trackById, t)) return n;
          return null;
        }
        remove(t) {
          const e = t._prevDup,
            n = t._nextDup;
          return (
            null === e ? (this._head = n) : (e._nextDup = n),
            null === n ? (this._tail = e) : (n._prevDup = e),
            null === this._head
          );
        }
      }
      class ul {
        constructor() {
          this.map = new Map();
        }
        put(t) {
          const e = t.trackById;
          let n = this.map.get(e);
          n || ((n = new hl()), this.map.set(e, n)), n.add(t);
        }
        get(t, e) {
          const n = this.map.get(t);
          return n ? n.get(t, e) : null;
        }
        remove(t) {
          const e = t.trackById;
          return this.map.get(e).remove(t) && this.map.delete(e), t;
        }
        get isEmpty() {
          return 0 === this.map.size;
        }
        clear() {
          this.map.clear();
        }
      }
      function dl(t, e, n) {
        const i = t.previousIndex;
        if (null === i) return i;
        let s = 0;
        return n && i < n.length && (s = n[i]), i + e + s;
      }
      class pl {
        constructor() {}
        supports(t) {
          return t instanceof Map || So(t);
        }
        create() {
          return new ml();
        }
      }
      class ml {
        constructor() {
          (this._records = new Map()),
            (this._mapHead = null),
            (this._appendAfter = null),
            (this._previousMapHead = null),
            (this._changesHead = null),
            (this._changesTail = null),
            (this._additionsHead = null),
            (this._additionsTail = null),
            (this._removalsHead = null),
            (this._removalsTail = null);
        }
        get isDirty() {
          return null !== this._additionsHead || null !== this._changesHead || null !== this._removalsHead;
        }
        forEachItem(t) {
          let e;
          for (e = this._mapHead; null !== e; e = e._next) t(e);
        }
        forEachPreviousItem(t) {
          let e;
          for (e = this._previousMapHead; null !== e; e = e._nextPrevious) t(e);
        }
        forEachChangedItem(t) {
          let e;
          for (e = this._changesHead; null !== e; e = e._nextChanged) t(e);
        }
        forEachAddedItem(t) {
          let e;
          for (e = this._additionsHead; null !== e; e = e._nextAdded) t(e);
        }
        forEachRemovedItem(t) {
          let e;
          for (e = this._removalsHead; null !== e; e = e._nextRemoved) t(e);
        }
        diff(t) {
          if (t) {
            if (!(t instanceof Map || So(t)))
              throw new Error(`Error trying to diff '${it(t)}'. Only maps and objects are allowed`);
          } else t = new Map();
          return this.check(t) ? this : null;
        }
        onDestroy() {}
        check(t) {
          this._reset();
          let e = this._mapHead;
          if (
            ((this._appendAfter = null),
            this._forEach(t, (t, n) => {
              if (e && e.key === n) this._maybeAddToChanges(e, t), (this._appendAfter = e), (e = e._next);
              else {
                const i = this._getOrCreateRecordForKey(n, t);
                e = this._insertBeforeOrAppend(e, i);
              }
            }),
            e)
          ) {
            e._prev && (e._prev._next = null), (this._removalsHead = e);
            for (let t = e; null !== t; t = t._nextRemoved)
              t === this._mapHead && (this._mapHead = null),
                this._records.delete(t.key),
                (t._nextRemoved = t._next),
                (t.previousValue = t.currentValue),
                (t.currentValue = null),
                (t._prev = null),
                (t._next = null);
          }
          return (
            this._changesTail && (this._changesTail._nextChanged = null),
            this._additionsTail && (this._additionsTail._nextAdded = null),
            this.isDirty
          );
        }
        _insertBeforeOrAppend(t, e) {
          if (t) {
            const n = t._prev;
            return (
              (e._next = t),
              (e._prev = n),
              (t._prev = e),
              n && (n._next = e),
              t === this._mapHead && (this._mapHead = e),
              (this._appendAfter = t),
              t
            );
          }
          return (
            this._appendAfter ? ((this._appendAfter._next = e), (e._prev = this._appendAfter)) : (this._mapHead = e),
            (this._appendAfter = e),
            null
          );
        }
        _getOrCreateRecordForKey(t, e) {
          if (this._records.has(t)) {
            const n = this._records.get(t);
            this._maybeAddToChanges(n, e);
            const i = n._prev,
              s = n._next;
            return i && (i._next = s), s && (s._prev = i), (n._next = null), (n._prev = null), n;
          }
          const n = new fl(t);
          return this._records.set(t, n), (n.currentValue = e), this._addToAdditions(n), n;
        }
        _reset() {
          if (this.isDirty) {
            let t;
            for (this._previousMapHead = this._mapHead, t = this._previousMapHead; null !== t; t = t._next)
              t._nextPrevious = t._next;
            for (t = this._changesHead; null !== t; t = t._nextChanged) t.previousValue = t.currentValue;
            for (t = this._additionsHead; null != t; t = t._nextAdded) t.previousValue = t.currentValue;
            (this._changesHead = this._changesTail = null),
              (this._additionsHead = this._additionsTail = null),
              (this._removalsHead = null);
          }
        }
        _maybeAddToChanges(t, e) {
          Object.is(e, t.currentValue) ||
            ((t.previousValue = t.currentValue), (t.currentValue = e), this._addToChanges(t));
        }
        _addToAdditions(t) {
          null === this._additionsHead
            ? (this._additionsHead = this._additionsTail = t)
            : ((this._additionsTail._nextAdded = t), (this._additionsTail = t));
        }
        _addToChanges(t) {
          null === this._changesHead
            ? (this._changesHead = this._changesTail = t)
            : ((this._changesTail._nextChanged = t), (this._changesTail = t));
        }
        _forEach(t, e) {
          t instanceof Map ? t.forEach(e) : Object.keys(t).forEach((n) => e(t[n], n));
        }
      }
      class fl {
        constructor(t) {
          (this.key = t),
            (this.previousValue = null),
            (this.currentValue = null),
            (this._nextPrevious = null),
            (this._next = null),
            (this._prev = null),
            (this._nextAdded = null),
            (this._nextRemoved = null),
            (this._nextChanged = null);
        }
      }
      function gl() {
        return new _l([new ol()]);
      }
      let _l = (() => {
        class t {
          constructor(t) {
            this.factories = t;
          }
          static create(e, n) {
            if (null != n) {
              const t = n.factories.slice();
              e = e.concat(t);
            }
            return new t(e);
          }
          static extend(e) {
            return { provide: t, useFactory: (n) => t.create(e, n || gl()), deps: [[t, new Ci(), new xi()]] };
          }
          find(t) {
            const e = this.factories.find((e) => e.supports(t));
            if (null != e) return e;
            throw new Error(`Cannot find a differ supporting object '${t}' of type '${((n = t), n.name || typeof n)}'`);
            var n;
          }
        }
        return (t.ɵprov = pt({ token: t, providedIn: 'root', factory: gl })), t;
      })();
      function bl() {
        return new yl([new pl()]);
      }
      let yl = (() => {
        class t {
          constructor(t) {
            this.factories = t;
          }
          static create(e, n) {
            if (n) {
              const t = n.factories.slice();
              e = e.concat(t);
            }
            return new t(e);
          }
          static extend(e) {
            return { provide: t, useFactory: (n) => t.create(e, n || bl()), deps: [[t, new Ci(), new xi()]] };
          }
          find(t) {
            const e = this.factories.find((e) => e.supports(t));
            if (e) return e;
            throw new Error(`Cannot find a differ supporting object '${t}'`);
          }
        }
        return (t.ɵprov = pt({ token: t, providedIn: 'root', factory: bl })), t;
      })();
      function vl(t, e, n, i, s = !1) {
        for (; null !== n; ) {
          const r = e[n.index];
          if ((null !== r && i.push(ve(r)), se(r)))
            for (let t = ne; t < r.length; t++) {
              const e = r[t],
                n = e[1].firstChild;
              null !== n && vl(e[1], e, n, i);
            }
          const o = n.type;
          if (8 & o) vl(t, e, n.child, i);
          else if (32 & o) {
            const t = ms(n, e);
            let s;
            for (; (s = t()); ) i.push(s);
          } else if (16 & o) {
            const t = Is(e, n);
            if (Array.isArray(t)) i.push(...t);
            else {
              const n = fs(e[16]);
              vl(n[1], n, t, i, !0);
            }
          }
          n = s ? n.projectionNext : n.next;
        }
        return i;
      }
      class wl {
        constructor(t, e) {
          (this._lView = t),
            (this._cdRefInjectingView = e),
            (this._appRef = null),
            (this._attachedToViewContainer = !1);
        }
        get rootNodes() {
          const t = this._lView,
            e = t[1];
          return vl(e, t, e.firstChild, []);
        }
        get context() {
          return this._lView[8];
        }
        get destroyed() {
          return 256 == (256 & this._lView[2]);
        }
        destroy() {
          if (this._appRef) this._appRef.detachView(this);
          else if (this._attachedToViewContainer) {
            const t = this._lView[3];
            if (se(t)) {
              const e = t[8],
                n = e ? e.indexOf(this) : -1;
              n > -1 && (xs(t, n), ri(e, n));
            }
            this._attachedToViewContainer = !1;
          }
          Cs(this._lView[1], this._lView);
        }
        onDestroy(t) {
          wr(this._lView[1], this._lView, null, t);
        }
        markForCheck() {
          Br(this._cdRefInjectingView || this._lView);
        }
        detach() {
          this._lView[2] &= -129;
        }
        reattach() {
          this._lView[2] |= 128;
        }
        detectChanges() {
          zr(this._lView[1], this._lView, this.context);
        }
        checkNoChanges() {
          !(function (t, e, n) {
            $e(!0);
            try {
              zr(t, e, n);
            } finally {
              $e(!1);
            }
          })(this._lView[1], this._lView, this.context);
        }
        attachToViewContainerRef() {
          if (this._appRef) throw new Error('This view is already attached directly to the ApplicationRef!');
          this._attachedToViewContainer = !0;
        }
        detachFromAppRef() {
          var t;
          (this._appRef = null), Ns(this._lView[1], (t = this._lView), t[11], 2, null, null);
        }
        attachToAppRef(t) {
          if (this._attachedToViewContainer) throw new Error('This view is already attached to a ViewContainer!');
          this._appRef = t;
        }
      }
      class xl extends wl {
        constructor(t) {
          super(t), (this._view = t);
        }
        detectChanges() {
          jr(this._view);
        }
        checkNoChanges() {
          !(function (t) {
            $e(!0);
            try {
              jr(t);
            } finally {
              $e(!1);
            }
          })(this._view);
        }
        get context() {
          return null;
        }
      }
      const Cl = Sl;
      let kl = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = Cl), (t.__ChangeDetectorRef__ = !0), t;
      })();
      function Sl(t = !1) {
        return (function (t, e, n) {
          if (!n && oe(t)) {
            const n = Se(t.index, e);
            return new wl(n, n);
          }
          return 47 & t.type ? new wl(e[16], e) : null;
        })(Ne(), Ie(), t);
      }
      const El = [new pl()],
        Ol = new _l([new ol()]),
        Pl = new yl(El),
        Al = function () {
          return Rl(Ne(), Ie());
        };
      let Tl = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = Al), t;
      })();
      const Dl = Tl,
        Ml = class extends Dl {
          constructor(t, e, n) {
            super(), (this._declarationLView = t), (this._declarationTContainer = e), (this.elementRef = n);
          }
          createEmbeddedView(t) {
            const e = this._declarationTContainer.tViews,
              n = cr(this._declarationLView, e, t, 16, null, e.declTNode, null, null, null, null);
            n[17] = this._declarationLView[this._declarationTContainer.index];
            const i = this._declarationLView[19];
            return null !== i && (n[19] = i.createEmbeddedView(e)), dr(e, n, t), new wl(n);
          }
        };
      function Rl(t, e) {
        return 4 & t.type ? new Ml(e, t, Ka(t, e)) : null;
      }
      class Il {}
      class Ll {}
      const Fl = function () {
        return Hl(Ne(), Ie());
      };
      let Nl = (() => {
        class t {}
        return (t.__NG_ELEMENT_ID__ = Fl), t;
      })();
      const Vl = Nl,
        Bl = class extends Vl {
          constructor(t, e, n) {
            super(), (this._lContainer = t), (this._hostTNode = e), (this._hostLView = n);
          }
          get element() {
            return Ka(this._hostTNode, this._hostLView);
          }
          get injector() {
            return new Yn(this._hostTNode, this._hostLView);
          }
          get parentInjector() {
            const t = Ln(this._hostTNode, this._hostLView);
            if (En(t)) {
              const e = Pn(t, this._hostLView),
                n = On(t);
              return new Yn(e[1].data[n + 8], e);
            }
            return new Yn(null, this._hostLView);
          }
          clear() {
            for (; this.length > 0; ) this.remove(this.length - 1);
          }
          get(t) {
            const e = zl(this._lContainer);
            return (null !== e && e[t]) || null;
          }
          get length() {
            return this._lContainer.length - ne;
          }
          createEmbeddedView(t, e, n) {
            const i = t.createEmbeddedView(e || {});
            return this.insert(i, n), i;
          }
          createComponent(t, e, n, i, s) {
            const r = n || this.parentInjector;
            if (!s && null == t.ngModule && r) {
              const t = r.get(Il, null);
              t && (s = t);
            }
            const o = t.create(r, i, void 0, s);
            return this.insert(o.hostView, e), o;
          }
          insert(t, e) {
            const n = t._lView,
              i = n[1];
            if (se(n[3])) {
              const e = this.indexOf(t);
              if (-1 !== e) this.detach(e);
              else {
                const e = n[3],
                  i = new Bl(e, e[6], e[3]);
                i.detach(i.indexOf(t));
              }
            }
            const s = this._adjustIndex(e),
              r = this._lContainer;
            !(function (t, e, n, i) {
              const s = ne + i,
                r = n.length;
              i > 0 && (n[s - 1][4] = e),
                i < r - ne ? ((e[4] = n[s]), si(n, ne + i, e)) : (n.push(e), (e[4] = null)),
                (e[3] = n);
              const o = e[17];
              null !== o &&
                n !== o &&
                (function (t, e) {
                  const n = t[9];
                  e[16] !== e[3][3][16] && (t[2] = !0), null === n ? (t[9] = [e]) : n.push(e);
                })(o, e);
              const a = e[19];
              null !== a && a.insertView(t), (e[2] |= 128);
            })(i, n, r, s);
            const o = Ls(s, r),
              a = n[11],
              l = As(a, r[7]);
            return (
              null !== l &&
                (function (t, e, n, i, s, r) {
                  (i[0] = s), (i[6] = e), Ns(t, i, n, 1, s, r);
                })(i, r[6], a, n, l, o),
              t.attachToViewContainerRef(),
              si(jl(r), s, t),
              t
            );
          }
          move(t, e) {
            return this.insert(t, e);
          }
          indexOf(t) {
            const e = zl(this._lContainer);
            return null !== e ? e.indexOf(t) : -1;
          }
          remove(t) {
            const e = this._adjustIndex(t, -1),
              n = xs(this._lContainer, e);
            n && (ri(jl(this._lContainer), e), Cs(n[1], n));
          }
          detach(t) {
            const e = this._adjustIndex(t, -1),
              n = xs(this._lContainer, e);
            return n && null != ri(jl(this._lContainer), e) ? new wl(n) : null;
          }
          _adjustIndex(t, e = 0) {
            return null == t ? this.length + e : t;
          }
        };
      function zl(t) {
        return t[8];
      }
      function jl(t) {
        return t[8] || (t[8] = []);
      }
      function Hl(t, e) {
        let n;
        const i = e[t.index];
        if (se(i)) n = i;
        else {
          let s;
          if (8 & t.type) s = ve(i);
          else {
            const n = e[11];
            s = n.createComment('');
            const i = xe(t, e);
            Es(
              n,
              As(n, i),
              s,
              (function (t, e) {
                return be(t) ? t.nextSibling(e) : e.nextSibling;
              })(n, i),
              !1
            );
          }
          (e[t.index] = n = Ir(i, e, s, t)), Vr(e, n);
        }
        return new Bl(n, t, e);
      }
      const $l = {};
      class ql extends Ga {
        constructor(t) {
          super(), (this.ngModule = t);
        }
        resolveComponentFactory(t) {
          const e = Jt(t);
          return new Yl(e, this.ngModule);
        }
      }
      function Wl(t) {
        const e = [];
        for (let n in t) t.hasOwnProperty(n) && e.push({ propName: t[n], templateName: n });
        return e;
      }
      const Ul = new Jn('SCHEDULER_TOKEN', { providedIn: 'root', factory: () => hs });
      class Yl extends Ua {
        constructor(t, e) {
          super(),
            (this.componentDef = t),
            (this.ngModule = e),
            (this.componentType = t.type),
            (this.selector = t.selectors.map(Zs).join(',')),
            (this.ngContentSelectors = t.ngContentSelectors ? t.ngContentSelectors : []),
            (this.isBoundToModule = !!e);
        }
        get inputs() {
          return Wl(this.componentDef.inputs);
        }
        get outputs() {
          return Wl(this.componentDef.outputs);
        }
        create(t, e, n, i) {
          const s = (i = i || this.ngModule)
              ? (function (t, e) {
                  return {
                    get: (n, i, s) => {
                      const r = t.get(n, $l, s);
                      return r !== $l || i === $l ? r : e.get(n, i, s);
                    },
                  };
                })(t, i.injector)
              : t,
            r = s.get(tl, ye),
            o = s.get(il, null),
            a = r.createRenderer(null, this.componentDef),
            l = this.componentDef.selectors[0][0] || 'div',
            c = n
              ? (function (t, e, n) {
                  if (be(t)) return t.selectRootElement(e, n === Pt.ShadowDom);
                  let i = 'string' == typeof e ? t.querySelector(e) : e;
                  return (i.textContent = ''), i;
                })(a, n, this.componentDef.encapsulation)
              : vs(
                  r.createRenderer(null, this.componentDef),
                  l,
                  (function (t) {
                    const e = t.toLowerCase();
                    return 'svg' === e ? ge : 'math' === e ? 'http://www.w3.org/1998/MathML/' : null;
                  })(l)
                ),
            h = this.componentDef.onPush ? 576 : 528,
            u = { components: [], scheduler: hs, clean: $r, playerHandler: null, flags: 0 },
            d = vr(0, null, null, 1, 0, null, null, null, null, null),
            p = cr(null, d, u, h, null, null, r, a, o, s);
          let m, f;
          en(p);
          try {
            const t = (function (t, e, n, i, s, r) {
              const o = n[1];
              n[20] = t;
              const a = hr(o, 20, 2, '#host', null),
                l = (a.mergedAttrs = e.hostAttrs);
              null !== l &&
                (Kr(a, l, !0),
                null !== t &&
                  (wn(s, t, l), null !== a.classes && zs(s, t, a.classes), null !== a.styles && Bs(s, t, a.styles)));
              const c = i.createRenderer(t, e),
                h = cr(n, yr(e), null, e.onPush ? 64 : 16, n[20], a, i, c, null, null);
              return (
                o.firstCreatePass && (Fn(Mn(a, n), o, e.type), Or(o, a), Ar(a, n.length, 1)), Vr(n, h), (n[20] = h)
              );
            })(c, this.componentDef, p, r, a);
            if (c)
              if (n) wn(a, c, ['ng-version', rl.full]);
              else {
                const { attrs: t, classes: e } = (function (t) {
                  const e = [],
                    n = [];
                  let i = 1,
                    s = 2;
                  for (; i < t.length; ) {
                    let r = t[i];
                    if ('string' == typeof r) 2 === s ? '' !== r && e.push(r, t[++i]) : 8 === s && n.push(r);
                    else {
                      if (!Ys(s)) break;
                      s = r;
                    }
                    i++;
                  }
                  return { attrs: e, classes: n };
                })(this.componentDef.selectors[0]);
                t && wn(a, c, t), e && e.length > 0 && zs(a, c, e.join(' '));
              }
            if (((f = Ce(d, ee)), void 0 !== e)) {
              const t = (f.projection = []);
              for (let n = 0; n < this.ngContentSelectors.length; n++) {
                const i = e[n];
                t.push(null != i ? Array.from(i) : null);
              }
            }
            (m = (function (t, e, n, i, s) {
              const r = n[1],
                o = (function (t, e, n) {
                  const i = Ne();
                  t.firstCreatePass &&
                    (n.providersResolver && n.providersResolver(n), Tr(t, i, e, ur(t, e, 1, null), n));
                  const s = qn(e, t, i.directiveStart, i);
                  cs(s, e);
                  const r = xe(i, e);
                  return r && cs(r, e), s;
                })(r, n, e);
              if ((i.components.push(o), (t[8] = o), s && s.forEach((t) => t(o, e)), e.contentQueries)) {
                const t = Ne();
                e.contentQueries(1, o, t.directiveStart);
              }
              const a = Ne();
              return (
                !r.firstCreatePass ||
                  (null === e.hostBindings && null === e.hostAttrs) ||
                  (cn(a.index), Sr(n[1], a, 0, a.directiveStart, a.directiveEnd, e), Er(e, o)),
                o
              );
            })(t, this.componentDef, p, u, [fo])),
              dr(d, p, null);
          } finally {
            an();
          }
          return new Gl(this.componentType, m, Ka(f, p), p, f);
        }
      }
      class Gl extends class {} {
        constructor(t, e, n, i, s) {
          super(),
            (this.location = n),
            (this._rootLView = i),
            (this._tNode = s),
            (this.instance = e),
            (this.hostView = this.changeDetectorRef = new xl(i)),
            (this.componentType = t);
        }
        get injector() {
          return new Yn(this._tNode, this._rootLView);
        }
        destroy() {
          this.hostView.destroy();
        }
        onDestroy(t) {
          this.hostView.onDestroy(t);
        }
      }
      const Ql = new Map();
      class Kl extends Il {
        constructor(t, e) {
          super(),
            (this._parent = e),
            (this._bootstrapComponents = []),
            (this.injector = this),
            (this.destroyCbs = []),
            (this.componentFactoryResolver = new ql(this));
          const n = te(t),
            i = t[jt] || null;
          i && Na(i),
            (this._bootstrapComponents = ds(n.bootstrap)),
            (this._r3Injector = ro(
              t,
              e,
              [
                { provide: Il, useValue: this },
                { provide: Ga, useValue: this.componentFactoryResolver },
              ],
              it(t)
            )),
            this._r3Injector._resolveInjectorDefTypes(),
            (this.instance = this.get(t));
        }
        get(t, e = mo.THROW_IF_NOT_FOUND, n = xt.Default) {
          return t === mo || t === Il || t === Xr ? this : this._r3Injector.get(t, e, n);
        }
        destroy() {
          const t = this._r3Injector;
          !t.destroyed && t.destroy(), this.destroyCbs.forEach((t) => t()), (this.destroyCbs = null);
        }
        onDestroy(t) {
          this.destroyCbs.push(t);
        }
      }
      class Xl extends Ll {
        constructor(t) {
          super(),
            (this.moduleType = t),
            null !== te(t) &&
              (function (t) {
                const e = new Set();
                !(function t(n) {
                  const i = te(n, !0),
                    s = i.id;
                  null !== s &&
                    ((function (t, e, n) {
                      if (e && e !== n)
                        throw new Error(`Duplicate module registered for ${t} - ${it(e)} vs ${it(e.name)}`);
                    })(s, Ql.get(s), n),
                    Ql.set(s, n));
                  const r = ds(i.imports);
                  for (const o of r) e.has(o) || (e.add(o), t(o));
                })(t);
              })(t);
        }
        create(t) {
          return new Kl(this.moduleType, t);
        }
      }
      function Zl(t, e, n) {
        const i = qe() + t,
          s = Ie();
        return s[i] === Js
          ? Eo(s, i, n ? e.call(n) : e())
          : (function (t, e) {
              return t[e];
            })(s, i);
      }
      function Jl(t, e, n, i) {
        return ec(Ie(), qe(), t, e, n, i);
      }
      function tc(t, e) {
        const n = t[e];
        return n === Js ? void 0 : n;
      }
      function ec(t, e, n, i, s, r) {
        const o = e + n;
        return Oo(t, o, s) ? Eo(t, o + 1, r ? i.call(r, s) : i(s)) : tc(t, o + 1);
      }
      function nc(t, e, n, i, s, r, o) {
        const a = e + n;
        return Po(t, a, s, r) ? Eo(t, a + 2, o ? i.call(o, s, r) : i(s, r)) : tc(t, a + 2);
      }
      function ic(t, e) {
        const n = Le();
        let i;
        const s = t + ee;
        n.firstCreatePass
          ? ((i = (function (t, e) {
              if (e)
                for (let n = e.length - 1; n >= 0; n--) {
                  const i = e[n];
                  if (t === i.name) return i;
                }
              throw new ct('302', `The pipe '${t}' could not be found!`);
            })(e, n.pipeRegistry)),
            (n.data[s] = i),
            i.onDestroy && (n.destroyHooks || (n.destroyHooks = [])).push(s, i.onDestroy))
          : (i = n.data[s]);
        const r = i.factory || (i.factory = ce(i.type)),
          o = kt(Ro);
        try {
          const t = Tn(!1),
            e = r();
          return (
            Tn(t),
            (function (t, e, n, i) {
              n >= t.data.length && ((t.data[n] = null), (t.blueprint[n] = null)), (e[n] = i);
            })(n, Ie(), s, e),
            e
          );
        } finally {
          kt(o);
        }
      }
      function sc(t, e, n) {
        const i = t + ee,
          s = Ie(),
          r = ke(s, i);
        return ac(s, oc(s, i) ? ec(s, qe(), e, r.transform, n, r) : r.transform(n));
      }
      function rc(t, e, n, i, s) {
        const r = t + ee,
          o = Ie(),
          a = ke(o, r);
        return ac(
          o,
          oc(o, r)
            ? (function (t, e, n, i, s, r, o, a) {
                const l = e + n;
                return (function (t, e, n, i, s) {
                  const r = Po(t, e, n, i);
                  return Oo(t, e + 2, s) || r;
                })(t, l, s, r, o)
                  ? Eo(t, l + 3, a ? i.call(a, s, r, o) : i(s, r, o))
                  : tc(t, l + 3);
              })(o, qe(), e, a.transform, n, i, s, a)
            : a.transform(n, i, s)
        );
      }
      function oc(t, e) {
        return t[1].data[e].pure;
      }
      function ac(t, e) {
        return Co.isWrapped(e) && ((e = Co.unwrap(e)), (t[We()] = Js)), e;
      }
      function lc(t) {
        return (e) => {
          setTimeout(t, void 0, e);
        };
      }
      const cc = class extends C {
        constructor(t = !1) {
          super(), (this.__isAsync = t);
        }
        emit(t) {
          super.next(t);
        }
        subscribe(t, e, n) {
          var i, s, r;
          let o = t,
            a = e || (() => null),
            l = n;
          if (t && 'object' == typeof t) {
            const e = t;
            (o = null === (i = e.next) || void 0 === i ? void 0 : i.bind(e)),
              (a = null === (s = e.error) || void 0 === s ? void 0 : s.bind(e)),
              (l = null === (r = e.complete) || void 0 === r ? void 0 : r.bind(e));
          }
          this.__isAsync && ((a = lc(a)), o && (o = lc(o)), l && (l = lc(l)));
          const c = super.subscribe({ next: o, error: a, complete: l });
          return t instanceof u && t.add(c), c;
        }
      };
      function hc() {
        return this._results[xo()]();
      }
      class uc {
        constructor(t = !1) {
          (this._emitDistinctChangesOnly = t),
            (this.dirty = !0),
            (this._results = []),
            (this._changesDetected = !1),
            (this._changes = null),
            (this.length = 0),
            (this.first = void 0),
            (this.last = void 0);
          const e = xo(),
            n = uc.prototype;
          n[e] || (n[e] = hc);
        }
        get changes() {
          return this._changes || (this._changes = new cc());
        }
        get(t) {
          return this._results[t];
        }
        map(t) {
          return this._results.map(t);
        }
        filter(t) {
          return this._results.filter(t);
        }
        find(t) {
          return this._results.find(t);
        }
        reduce(t, e) {
          return this._results.reduce(t, e);
        }
        forEach(t) {
          this._results.forEach(t);
        }
        some(t) {
          return this._results.some(t);
        }
        toArray() {
          return this._results.slice();
        }
        toString() {
          return this._results.toString();
        }
        reset(t, e) {
          const n = this;
          n.dirty = !1;
          const i = ni(t);
          (this._changesDetected = !(function (t, e, n) {
            if (t.length !== e.length) return !1;
            for (let i = 0; i < t.length; i++) {
              let s = t[i],
                r = e[i];
              if ((n && ((s = n(s)), (r = n(r))), r !== s)) return !1;
            }
            return !0;
          })(n._results, i, e)) &&
            ((n._results = i), (n.length = i.length), (n.last = i[this.length - 1]), (n.first = i[0]));
        }
        notifyOnChanges() {
          !this._changes || (!this._changesDetected && this._emitDistinctChangesOnly) || this._changes.emit(this);
        }
        setDirty() {
          this.dirty = !0;
        }
        destroy() {
          this.changes.complete(), this.changes.unsubscribe();
        }
      }
      class dc {
        constructor(t) {
          (this.queryList = t), (this.matches = null);
        }
        clone() {
          return new dc(this.queryList);
        }
        setDirty() {
          this.queryList.setDirty();
        }
      }
      class pc {
        constructor(t = []) {
          this.queries = t;
        }
        createEmbeddedView(t) {
          const e = t.queries;
          if (null !== e) {
            const n = null !== t.contentQueries ? t.contentQueries[0] : e.length,
              i = [];
            for (let t = 0; t < n; t++) {
              const n = e.getByIndex(t);
              i.push(this.queries[n.indexInDeclarationView].clone());
            }
            return new pc(i);
          }
          return null;
        }
        insertView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        detachView(t) {
          this.dirtyQueriesWithMatches(t);
        }
        dirtyQueriesWithMatches(t) {
          for (let e = 0; e < this.queries.length; e++) null !== Oc(t, e).matches && this.queries[e].setDirty();
        }
      }
      class mc {
        constructor(t, e, n = null) {
          (this.predicate = t), (this.flags = e), (this.read = n);
        }
      }
      class fc {
        constructor(t = []) {
          this.queries = t;
        }
        elementStart(t, e) {
          for (let n = 0; n < this.queries.length; n++) this.queries[n].elementStart(t, e);
        }
        elementEnd(t) {
          for (let e = 0; e < this.queries.length; e++) this.queries[e].elementEnd(t);
        }
        embeddedTView(t) {
          let e = null;
          for (let n = 0; n < this.length; n++) {
            const i = null !== e ? e.length : 0,
              s = this.getByIndex(n).embeddedTView(t, i);
            s && ((s.indexInDeclarationView = n), null !== e ? e.push(s) : (e = [s]));
          }
          return null !== e ? new fc(e) : null;
        }
        template(t, e) {
          for (let n = 0; n < this.queries.length; n++) this.queries[n].template(t, e);
        }
        getByIndex(t) {
          return this.queries[t];
        }
        get length() {
          return this.queries.length;
        }
        track(t) {
          this.queries.push(t);
        }
      }
      class gc {
        constructor(t, e = -1) {
          (this.metadata = t),
            (this.matches = null),
            (this.indexInDeclarationView = -1),
            (this.crossesNgTemplate = !1),
            (this._appliesToNextNode = !0),
            (this._declarationNodeIndex = e);
        }
        elementStart(t, e) {
          this.isApplyingToNode(e) && this.matchTNode(t, e);
        }
        elementEnd(t) {
          this._declarationNodeIndex === t.index && (this._appliesToNextNode = !1);
        }
        template(t, e) {
          this.elementStart(t, e);
        }
        embeddedTView(t, e) {
          return this.isApplyingToNode(t)
            ? ((this.crossesNgTemplate = !0), this.addMatch(-t.index, e), new gc(this.metadata))
            : null;
        }
        isApplyingToNode(t) {
          if (this._appliesToNextNode && 1 != (1 & this.metadata.flags)) {
            const e = this._declarationNodeIndex;
            let n = t.parent;
            for (; null !== n && 8 & n.type && n.index !== e; ) n = n.parent;
            return e === (null !== n ? n.index : -1);
          }
          return this._appliesToNextNode;
        }
        matchTNode(t, e) {
          const n = this.metadata.predicate;
          if (Array.isArray(n))
            for (let i = 0; i < n.length; i++) {
              const s = n[i];
              this.matchTNodeWithReadOption(t, e, _c(e, s)), this.matchTNodeWithReadOption(t, e, $n(e, t, s, !1, !1));
            }
          else
            n === Tl
              ? 4 & e.type && this.matchTNodeWithReadOption(t, e, -1)
              : this.matchTNodeWithReadOption(t, e, $n(e, t, n, !1, !1));
        }
        matchTNodeWithReadOption(t, e, n) {
          if (null !== n) {
            const i = this.metadata.read;
            if (null !== i)
              if (i === Za || i === Nl || (i === Tl && 4 & e.type)) this.addMatch(e.index, -2);
              else {
                const n = $n(e, t, i, !1, !1);
                null !== n && this.addMatch(e.index, n);
              }
            else this.addMatch(e.index, n);
          }
        }
        addMatch(t, e) {
          null === this.matches ? (this.matches = [t, e]) : this.matches.push(t, e);
        }
      }
      function _c(t, e) {
        const n = t.localNames;
        if (null !== n) for (let i = 0; i < n.length; i += 2) if (n[i] === e) return n[i + 1];
        return null;
      }
      function bc(t, e, n, i) {
        return -1 === n
          ? (function (t, e) {
              return 11 & t.type ? Ka(t, e) : 4 & t.type ? Rl(t, e) : null;
            })(e, t)
          : -2 === n
          ? (function (t, e, n) {
              return n === Za ? Ka(e, t) : n === Tl ? Rl(e, t) : n === Nl ? Hl(e, t) : void 0;
            })(t, e, i)
          : qn(t, t[1], n, e);
      }
      function yc(t, e, n, i) {
        const s = e[19].queries[i];
        if (null === s.matches) {
          const i = t.data,
            r = n.matches,
            o = [];
          for (let t = 0; t < r.length; t += 2) {
            const s = r[t];
            o.push(s < 0 ? null : bc(e, i[s], r[t + 1], n.metadata.read));
          }
          s.matches = o;
        }
        return s.matches;
      }
      function vc(t, e, n, i) {
        const s = t.queries.getByIndex(n),
          r = s.matches;
        if (null !== r) {
          const o = yc(t, e, s, n);
          for (let t = 0; t < r.length; t += 2) {
            const n = r[t];
            if (n > 0) i.push(o[t / 2]);
            else {
              const s = r[t + 1],
                o = e[-n];
              for (let t = ne; t < o.length; t++) {
                const e = o[t];
                e[17] === e[3] && vc(e[1], e, s, i);
              }
              if (null !== o[9]) {
                const t = o[9];
                for (let e = 0; e < t.length; e++) {
                  const n = t[e];
                  vc(n[1], n, s, i);
                }
              }
            }
          }
        }
        return i;
      }
      function wc(t) {
        const e = Ie(),
          n = Le(),
          i = Xe();
        Ze(i + 1);
        const s = Oc(n, i);
        if (t.dirty && Oe(e) === (2 == (2 & s.metadata.flags))) {
          if (null === s.matches) t.reset([]);
          else {
            const r = s.crossesNgTemplate ? vc(n, e, i, []) : yc(n, e, s, i);
            t.reset(r, Ja), t.notifyOnChanges();
          }
          return !0;
        }
        return !1;
      }
      function xc(t, e, n) {
        const i = Le();
        i.firstCreatePass && (Ec(i, new mc(t, e, n), -1), 2 == (2 & e) && (i.staticViewQueries = !0)), Sc(i, Ie(), e);
      }
      function Cc(t, e, n, i) {
        const s = Le();
        if (s.firstCreatePass) {
          const r = Ne();
          Ec(s, new mc(e, n, i), r.index),
            (function (t, e) {
              const n = t.contentQueries || (t.contentQueries = []);
              e !== (n.length ? n[n.length - 1] : -1) && n.push(t.queries.length - 1, e);
            })(s, t),
            2 == (2 & n) && (s.staticContentQueries = !0);
        }
        Sc(s, Ie(), n);
      }
      function kc() {
        return (t = Ie()), (e = Xe()), t[19].queries[e].queryList;
        var t, e;
      }
      function Sc(t, e, n) {
        const i = new uc(4 == (4 & n));
        wr(t, e, i, i.destroy), null === e[19] && (e[19] = new pc()), e[19].queries.push(new dc(i));
      }
      function Ec(t, e, n) {
        null === t.queries && (t.queries = new fc()), t.queries.track(new gc(e, n));
      }
      function Oc(t, e) {
        return t.queries.getByIndex(e);
      }
      function Pc(t, e) {
        return Rl(t, e);
      }
      function Ac(t = xt.Default) {
        const e = Sl(!0);
        if (null != e || t & xt.Optional) return e;
        dt('ChangeDetectorRef');
      }
      const Tc = new Jn('Application Initializer');
      let Dc = (() => {
        class t {
          constructor(t) {
            (this.appInits = t),
              (this.resolve = Qa),
              (this.reject = Qa),
              (this.initialized = !1),
              (this.done = !1),
              (this.donePromise = new Promise((t, e) => {
                (this.resolve = t), (this.reject = e);
              }));
          }
          runInitializers() {
            if (this.initialized) return;
            const t = [],
              e = () => {
                (this.done = !0), this.resolve();
              };
            if (this.appInits)
              for (let n = 0; n < this.appInits.length; n++) {
                const e = this.appInits[n]();
                $o(e) && t.push(e);
              }
            Promise.all(t)
              .then(() => {
                e();
              })
              .catch((t) => {
                this.reject(t);
              }),
              0 === t.length && e(),
              (this.initialized = !0);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Tc, 8));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Mc = new Jn('AppId'),
        Rc = {
          provide: Mc,
          useFactory: function () {
            return `${Ic()}${Ic()}${Ic()}`;
          },
          deps: [],
        };
      function Ic() {
        return String.fromCharCode(97 + Math.floor(25 * Math.random()));
      }
      const Lc = new Jn('Platform Initializer'),
        Fc = new Jn('Platform ID'),
        Nc = new Jn('appBootstrapListener');
      let Vc = (() => {
        class t {
          log(t) {
            console.log(t);
          }
          warn(t) {
            console.warn(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Bc = new Jn('LocaleId'),
        zc = new Jn('DefaultCurrencyCode');
      class jc {
        constructor(t, e) {
          (this.ngModuleFactory = t), (this.componentFactories = e);
        }
      }
      const Hc = function (t) {
          return new Xl(t);
        },
        $c = Hc,
        qc = function (t) {
          return Promise.resolve(Hc(t));
        },
        Wc = function (t) {
          const e = Hc(t),
            n = ds(te(t).declarations).reduce((t, e) => {
              const n = Jt(e);
              return n && t.push(new Yl(n)), t;
            }, []);
          return new jc(e, n);
        },
        Uc = Wc,
        Yc = function (t) {
          return Promise.resolve(Wc(t));
        };
      let Gc = (() => {
        class t {
          constructor() {
            (this.compileModuleSync = $c),
              (this.compileModuleAsync = qc),
              (this.compileModuleAndAllComponentsSync = Uc),
              (this.compileModuleAndAllComponentsAsync = Yc);
          }
          clearCache() {}
          clearCacheFor(t) {}
          getModuleId(t) {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Qc = (() => Promise.resolve(0))();
      function Kc(t) {
        'undefined' == typeof Zone
          ? Qc.then(() => {
              t && t.apply(null, null);
            })
          : Zone.current.scheduleMicroTask('scheduleMicrotask', t);
      }
      class Xc {
        constructor({
          enableLongStackTrace: t = !1,
          shouldCoalesceEventChangeDetection: e = !1,
          shouldCoalesceRunChangeDetection: n = !1,
        }) {
          if (
            ((this.hasPendingMacrotasks = !1),
            (this.hasPendingMicrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new cc(!1)),
            (this.onMicrotaskEmpty = new cc(!1)),
            (this.onStable = new cc(!1)),
            (this.onError = new cc(!1)),
            'undefined' == typeof Zone)
          )
            throw new Error('In this configuration Angular requires Zone.js');
          Zone.assertZonePatched();
          const i = this;
          (i._nesting = 0),
            (i._outer = i._inner = Zone.current),
            Zone.TaskTrackingZoneSpec && (i._inner = i._inner.fork(new Zone.TaskTrackingZoneSpec())),
            t && Zone.longStackTraceZoneSpec && (i._inner = i._inner.fork(Zone.longStackTraceZoneSpec)),
            (i.shouldCoalesceEventChangeDetection = !n && e),
            (i.shouldCoalesceRunChangeDetection = n),
            (i.lastRequestAnimationFrameId = -1),
            (i.nativeRequestAnimationFrame = (function () {
              let t = Rt.requestAnimationFrame,
                e = Rt.cancelAnimationFrame;
              if ('undefined' != typeof Zone && t && e) {
                const n = t[Zone.__symbol__('OriginalDelegate')];
                n && (t = n);
                const i = e[Zone.__symbol__('OriginalDelegate')];
                i && (e = i);
              }
              return { nativeRequestAnimationFrame: t, nativeCancelAnimationFrame: e };
            })().nativeRequestAnimationFrame),
            (function (t) {
              const e = () => {
                !(function (t) {
                  -1 === t.lastRequestAnimationFrameId &&
                    ((t.lastRequestAnimationFrameId = t.nativeRequestAnimationFrame.call(Rt, () => {
                      t.fakeTopEventTask ||
                        (t.fakeTopEventTask = Zone.root.scheduleEventTask(
                          'fakeTopEventTask',
                          () => {
                            (t.lastRequestAnimationFrameId = -1), th(t), Jc(t);
                          },
                          void 0,
                          () => {},
                          () => {}
                        )),
                        t.fakeTopEventTask.invoke();
                    })),
                    th(t));
                })(t);
              };
              t._inner = t._inner.fork({
                name: 'angular',
                properties: { isAngularZone: !0 },
                onInvokeTask: (n, i, s, r, o, a) => {
                  try {
                    return eh(t), n.invokeTask(s, r, o, a);
                  } finally {
                    ((t.shouldCoalesceEventChangeDetection && 'eventTask' === r.type) ||
                      t.shouldCoalesceRunChangeDetection) &&
                      e(),
                      nh(t);
                  }
                },
                onInvoke: (n, i, s, r, o, a, l) => {
                  try {
                    return eh(t), n.invoke(s, r, o, a, l);
                  } finally {
                    t.shouldCoalesceRunChangeDetection && e(), nh(t);
                  }
                },
                onHasTask: (e, n, i, s) => {
                  e.hasTask(i, s),
                    n === i &&
                      ('microTask' == s.change
                        ? ((t._hasPendingMicrotasks = s.microTask), th(t), Jc(t))
                        : 'macroTask' == s.change && (t.hasPendingMacrotasks = s.macroTask));
                },
                onHandleError: (e, n, i, s) => (e.handleError(i, s), t.runOutsideAngular(() => t.onError.emit(s)), !1),
              });
            })(i);
        }
        static isInAngularZone() {
          return !0 === Zone.current.get('isAngularZone');
        }
        static assertInAngularZone() {
          if (!Xc.isInAngularZone()) throw new Error('Expected to be in Angular Zone, but it is not!');
        }
        static assertNotInAngularZone() {
          if (Xc.isInAngularZone()) throw new Error('Expected to not be in Angular Zone, but it is!');
        }
        run(t, e, n) {
          return this._inner.run(t, e, n);
        }
        runTask(t, e, n, i) {
          const s = this._inner,
            r = s.scheduleEventTask('NgZoneEvent: ' + i, t, Zc, Qa, Qa);
          try {
            return s.runTask(r, e, n);
          } finally {
            s.cancelTask(r);
          }
        }
        runGuarded(t, e, n) {
          return this._inner.runGuarded(t, e, n);
        }
        runOutsideAngular(t) {
          return this._outer.run(t);
        }
      }
      const Zc = {};
      function Jc(t) {
        if (0 == t._nesting && !t.hasPendingMicrotasks && !t.isStable)
          try {
            t._nesting++, t.onMicrotaskEmpty.emit(null);
          } finally {
            if ((t._nesting--, !t.hasPendingMicrotasks))
              try {
                t.runOutsideAngular(() => t.onStable.emit(null));
              } finally {
                t.isStable = !0;
              }
          }
      }
      function th(t) {
        t.hasPendingMicrotasks = !!(
          t._hasPendingMicrotasks ||
          ((t.shouldCoalesceEventChangeDetection || t.shouldCoalesceRunChangeDetection) &&
            -1 !== t.lastRequestAnimationFrameId)
        );
      }
      function eh(t) {
        t._nesting++, t.isStable && ((t.isStable = !1), t.onUnstable.emit(null));
      }
      function nh(t) {
        t._nesting--, Jc(t);
      }
      class ih {
        constructor() {
          (this.hasPendingMicrotasks = !1),
            (this.hasPendingMacrotasks = !1),
            (this.isStable = !0),
            (this.onUnstable = new cc()),
            (this.onMicrotaskEmpty = new cc()),
            (this.onStable = new cc()),
            (this.onError = new cc());
        }
        run(t, e, n) {
          return t.apply(e, n);
        }
        runGuarded(t, e, n) {
          return t.apply(e, n);
        }
        runOutsideAngular(t) {
          return t();
        }
        runTask(t, e, n, i) {
          return t.apply(e, n);
        }
      }
      let sh = (() => {
          class t {
            constructor(t) {
              (this._ngZone = t),
                (this._pendingCount = 0),
                (this._isZoneStable = !0),
                (this._didWork = !1),
                (this._callbacks = []),
                (this.taskTrackingZone = null),
                this._watchAngularEvents(),
                t.run(() => {
                  this.taskTrackingZone = 'undefined' == typeof Zone ? null : Zone.current.get('TaskTrackingZone');
                });
            }
            _watchAngularEvents() {
              this._ngZone.onUnstable.subscribe({
                next: () => {
                  (this._didWork = !0), (this._isZoneStable = !1);
                },
              }),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.subscribe({
                    next: () => {
                      Xc.assertNotInAngularZone(),
                        Kc(() => {
                          (this._isZoneStable = !0), this._runCallbacksIfReady();
                        });
                    },
                  });
                });
            }
            increasePendingRequestCount() {
              return (this._pendingCount += 1), (this._didWork = !0), this._pendingCount;
            }
            decreasePendingRequestCount() {
              if (((this._pendingCount -= 1), this._pendingCount < 0))
                throw new Error('pending async requests below zero');
              return this._runCallbacksIfReady(), this._pendingCount;
            }
            isStable() {
              return this._isZoneStable && 0 === this._pendingCount && !this._ngZone.hasPendingMacrotasks;
            }
            _runCallbacksIfReady() {
              if (this.isStable())
                Kc(() => {
                  for (; 0 !== this._callbacks.length; ) {
                    let t = this._callbacks.pop();
                    clearTimeout(t.timeoutId), t.doneCb(this._didWork);
                  }
                  this._didWork = !1;
                });
              else {
                let t = this.getPendingTasks();
                (this._callbacks = this._callbacks.filter(
                  (e) => !e.updateCb || !e.updateCb(t) || (clearTimeout(e.timeoutId), !1)
                )),
                  (this._didWork = !0);
              }
            }
            getPendingTasks() {
              return this.taskTrackingZone
                ? this.taskTrackingZone.macroTasks.map((t) => ({
                    source: t.source,
                    creationLocation: t.creationLocation,
                    data: t.data,
                  }))
                : [];
            }
            addCallback(t, e, n) {
              let i = -1;
              e &&
                e > 0 &&
                (i = setTimeout(() => {
                  (this._callbacks = this._callbacks.filter((t) => t.timeoutId !== i)),
                    t(this._didWork, this.getPendingTasks());
                }, e)),
                this._callbacks.push({ doneCb: t, timeoutId: i, updateCb: n });
            }
            whenStable(t, e, n) {
              if (n && !this.taskTrackingZone)
                throw new Error(
                  'Task tracking zone is required when passing an update callback to whenStable(). Is "zone.js/dist/task-tracking.js" loaded?'
                );
              this.addCallback(t, e, n), this._runCallbacksIfReady();
            }
            getPendingRequestCount() {
              return this._pendingCount;
            }
            findProviders(t, e, n) {
              return [];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Xc));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        rh = (() => {
          class t {
            constructor() {
              (this._applications = new Map()), lh.addToWindow(this);
            }
            registerApplication(t, e) {
              this._applications.set(t, e);
            }
            unregisterApplication(t) {
              this._applications.delete(t);
            }
            unregisterAllApplications() {
              this._applications.clear();
            }
            getTestability(t) {
              return this._applications.get(t) || null;
            }
            getAllTestabilities() {
              return Array.from(this._applications.values());
            }
            getAllRootElements() {
              return Array.from(this._applications.keys());
            }
            findTestabilityInTree(t, e = !0) {
              return lh.findTestabilityInTree(this, t, e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      class oh {
        addToWindow(t) {}
        findTestabilityInTree(t, e, n) {
          return null;
        }
      }
      let ah,
        lh = new oh(),
        ch = !0,
        hh = !1;
      function uh() {
        return (hh = !0), ch;
      }
      const dh = new Jn('AllowMultipleToken');
      class ph {
        constructor(t, e) {
          (this.name = t), (this.token = e);
        }
      }
      function mh(t, e, n = []) {
        const i = `Platform: ${e}`,
          s = new Jn(i);
        return (e = []) => {
          let r = fh();
          if (!r || r.injector.get(dh, !1))
            if (t) t(n.concat(e).concat({ provide: s, useValue: !0 }));
            else {
              const t = n.concat(e).concat({ provide: s, useValue: !0 }, { provide: Jr, useValue: 'platform' });
              !(function (t) {
                if (ah && !ah.destroyed && !ah.injector.get(dh, !1))
                  throw new Error('There can be only one platform. Destroy the previous one to create a new one.');
                ah = t.get(gh);
                const e = t.get(Lc, null);
                e && e.forEach((t) => t());
              })(mo.create({ providers: t, name: i }));
            }
          return (function (t) {
            const e = fh();
            if (!e) throw new Error('No platform exists!');
            if (!e.injector.get(t, null))
              throw new Error('A platform with a different configuration has been created. Please destroy it first.');
            return e;
          })(s);
        };
      }
      function fh() {
        return ah && !ah.destroyed ? ah : null;
      }
      let gh = (() => {
        class t {
          constructor(t) {
            (this._injector = t), (this._modules = []), (this._destroyListeners = []), (this._destroyed = !1);
          }
          bootstrapModuleFactory(t, e) {
            const n = (function (t, e) {
                let n;
                return (
                  (n =
                    'noop' === t
                      ? new ih()
                      : ('zone.js' === t ? void 0 : t) ||
                        new Xc({
                          enableLongStackTrace: uh(),
                          shouldCoalesceEventChangeDetection: !!(null == e ? void 0 : e.ngZoneEventCoalescing),
                          shouldCoalesceRunChangeDetection: !!(null == e ? void 0 : e.ngZoneRunCoalescing),
                        })),
                  n
                );
              })(e ? e.ngZone : void 0, {
                ngZoneEventCoalescing: (e && e.ngZoneEventCoalescing) || !1,
                ngZoneRunCoalescing: (e && e.ngZoneRunCoalescing) || !1,
              }),
              i = [{ provide: Xc, useValue: n }];
            return n.run(() => {
              const e = mo.create({ providers: i, parent: this.injector, name: t.moduleType.name }),
                s = t.create(e),
                r = s.injector.get(ls, null);
              if (!r) throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');
              return (
                n.runOutsideAngular(() => {
                  const t = n.onError.subscribe({
                    next: (t) => {
                      r.handleError(t);
                    },
                  });
                  s.onDestroy(() => {
                    yh(this._modules, s), t.unsubscribe();
                  });
                }),
                (function (t, e, n) {
                  try {
                    const i = n();
                    return $o(i)
                      ? i.catch((n) => {
                          throw (e.runOutsideAngular(() => t.handleError(n)), n);
                        })
                      : i;
                  } catch (i) {
                    throw (e.runOutsideAngular(() => t.handleError(i)), i);
                  }
                })(r, n, () => {
                  const t = s.injector.get(Dc);
                  return (
                    t.runInitializers(),
                    t.donePromise.then(() => (Na(s.injector.get(Bc, La) || La), this._moduleDoBootstrap(s), s))
                  );
                })
              );
            });
          }
          bootstrapModule(t, e = []) {
            const n = _h({}, e);
            return (function (t, e, n) {
              const i = new Xl(n);
              return Promise.resolve(i);
            })(0, 0, t).then((t) => this.bootstrapModuleFactory(t, n));
          }
          _moduleDoBootstrap(t) {
            const e = t.injector.get(bh);
            if (t._bootstrapComponents.length > 0) t._bootstrapComponents.forEach((t) => e.bootstrap(t));
            else {
              if (!t.instance.ngDoBootstrap)
                throw new Error(
                  `The module ${it(
                    t.instance.constructor
                  )} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`
                );
              t.instance.ngDoBootstrap(e);
            }
            this._modules.push(t);
          }
          onDestroy(t) {
            this._destroyListeners.push(t);
          }
          get injector() {
            return this._injector;
          }
          destroy() {
            if (this._destroyed) throw new Error('The platform has already been destroyed!');
            this._modules.slice().forEach((t) => t.destroy()),
              this._destroyListeners.forEach((t) => t()),
              (this._destroyed = !0);
          }
          get destroyed() {
            return this._destroyed;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(mo));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function _h(t, e) {
        return Array.isArray(e) ? e.reduce(_h, t) : Object.assign(Object.assign({}, t), e);
      }
      let bh = (() => {
        class t {
          constructor(t, e, n, i, s) {
            (this._zone = t),
              (this._injector = e),
              (this._exceptionHandler = n),
              (this._componentFactoryResolver = i),
              (this._initStatus = s),
              (this._bootstrapListeners = []),
              (this._views = []),
              (this._runningTick = !1),
              (this._stable = !0),
              (this.componentTypes = []),
              (this.components = []),
              (this._onMicrotaskEmptySubscription = this._zone.onMicrotaskEmpty.subscribe({
                next: () => {
                  this._zone.run(() => {
                    this.tick();
                  });
                },
              }));
            const r = new b((t) => {
                (this._stable =
                  this._zone.isStable && !this._zone.hasPendingMacrotasks && !this._zone.hasPendingMicrotasks),
                  this._zone.runOutsideAngular(() => {
                    t.next(this._stable), t.complete();
                  });
              }),
              o = new b((t) => {
                let e;
                this._zone.runOutsideAngular(() => {
                  e = this._zone.onStable.subscribe(() => {
                    Xc.assertNotInAngularZone(),
                      Kc(() => {
                        this._stable ||
                          this._zone.hasPendingMacrotasks ||
                          this._zone.hasPendingMicrotasks ||
                          ((this._stable = !0), t.next(!0));
                      });
                  });
                });
                const n = this._zone.onUnstable.subscribe(() => {
                  Xc.assertInAngularZone(),
                    this._stable &&
                      ((this._stable = !1),
                      this._zone.runOutsideAngular(() => {
                        t.next(!1);
                      }));
                });
                return () => {
                  e.unsubscribe(), n.unsubscribe();
                };
              });
            this.isStable = q(r, o.pipe(tt()));
          }
          bootstrap(t, e) {
            if (!this._initStatus.done)
              throw new Error(
                'Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.'
              );
            let n;
            (n = t instanceof Ua ? t : this._componentFactoryResolver.resolveComponentFactory(t)),
              this.componentTypes.push(n.componentType);
            const i = n.isBoundToModule ? void 0 : this._injector.get(Il),
              s = n.create(mo.NULL, [], e || n.selector, i),
              r = s.location.nativeElement,
              o = s.injector.get(sh, null),
              a = o && s.injector.get(rh);
            return (
              o && a && a.registerApplication(r, o),
              s.onDestroy(() => {
                this.detachView(s.hostView), yh(this.components, s), a && a.unregisterApplication(r);
              }),
              this._loadComponent(s),
              s
            );
          }
          tick() {
            if (this._runningTick) throw new Error('ApplicationRef.tick is called recursively');
            try {
              this._runningTick = !0;
              for (let t of this._views) t.detectChanges();
            } catch (t) {
              this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(t));
            } finally {
              this._runningTick = !1;
            }
          }
          attachView(t) {
            const e = t;
            this._views.push(e), e.attachToAppRef(this);
          }
          detachView(t) {
            const e = t;
            yh(this._views, e), e.detachFromAppRef();
          }
          _loadComponent(t) {
            this.attachView(t.hostView),
              this.tick(),
              this.components.push(t),
              this._injector
                .get(Nc, [])
                .concat(this._bootstrapListeners)
                .forEach((e) => e(t));
          }
          ngOnDestroy() {
            this._views.slice().forEach((t) => t.destroy()), this._onMicrotaskEmptySubscription.unsubscribe();
          }
          get viewCount() {
            return this._views.length;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Xc), _i(mo), _i(ls), _i(Ga), _i(Dc));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function yh(t, e) {
        const n = t.indexOf(e);
        n > -1 && t.splice(n, 1);
      }
      class vh {}
      class wh {}
      const xh = { factoryPathPrefix: '', factoryPathSuffix: '.ngfactory' };
      let Ch = (() => {
        class t {
          constructor(t, e) {
            (this._compiler = t), (this._config = e || xh);
          }
          load(t) {
            return this.loadAndCompile(t);
          }
          loadAndCompile(t) {
            let [e, i] = t.split('#');
            return (
              void 0 === i && (i = 'default'),
              n(255)(e)
                .then((t) => t[i])
                .then((t) => kh(t, e, i))
                .then((t) => this._compiler.compileModuleAsync(t))
            );
          }
          loadFactory(t) {
            let [e, i] = t.split('#'),
              s = 'NgFactory';
            return (
              void 0 === i && ((i = 'default'), (s = '')),
              n(255)(this._config.factoryPathPrefix + e + this._config.factoryPathSuffix)
                .then((t) => t[i + s])
                .then((t) => kh(t, e, i))
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Gc), _i(wh, 8));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function kh(t, e, n) {
        if (!t) throw new Error(`Cannot find '${n}' in '${e}'`);
        return t;
      }
      const Sh = mh(null, 'core', [
          { provide: Fc, useValue: 'unknown' },
          { provide: gh, deps: [mo] },
          { provide: rh, deps: [] },
          { provide: Vc, deps: [] },
        ]),
        Eh = [
          { provide: bh, useClass: bh, deps: [Xc, mo, ls, Ga, Dc] },
          {
            provide: Ul,
            deps: [Xc],
            useFactory: function (t) {
              let e = [];
              return (
                t.onStable.subscribe(() => {
                  for (; e.length; ) e.pop()();
                }),
                function (t) {
                  e.push(t);
                }
              );
            },
          },
          { provide: Dc, useClass: Dc, deps: [[new xi(), Tc]] },
          { provide: Gc, useClass: Gc, deps: [] },
          Rc,
          {
            provide: _l,
            useFactory: function () {
              return Ol;
            },
            deps: [],
          },
          {
            provide: yl,
            useFactory: function () {
              return Pl;
            },
            deps: [],
          },
          {
            provide: Bc,
            useFactory: function (t) {
              return Na((t = t || ('undefined' != typeof $localize && $localize.locale) || La)), t;
            },
            deps: [[new wi(Bc), new xi(), new Ci()]],
          },
          { provide: zc, useValue: 'USD' },
        ];
      let Oh = (() => {
          class t {
            constructor(t) {}
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(bh));
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: Eh })),
            t
          );
        })(),
        Ph = null;
      function Ah() {
        return Ph;
      }
      const Th = new Jn('DocumentToken');
      let Dh = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({ factory: Mh, token: t, providedIn: 'platform' })),
          t
        );
      })();
      function Mh() {
        return _i(Ih);
      }
      const Rh = new Jn('Location Initialized');
      let Ih = (() => {
        class t extends Dh {
          constructor(t) {
            super(), (this._doc = t), this._init();
          }
          _init() {
            (this.location = Ah().getLocation()), (this._history = Ah().getHistory());
          }
          getBaseHrefFromDOM() {
            return Ah().getBaseHref(this._doc);
          }
          onPopState(t) {
            Ah().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', t, !1);
          }
          onHashChange(t) {
            Ah().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', t, !1);
          }
          get href() {
            return this.location.href;
          }
          get protocol() {
            return this.location.protocol;
          }
          get hostname() {
            return this.location.hostname;
          }
          get port() {
            return this.location.port;
          }
          get pathname() {
            return this.location.pathname;
          }
          get search() {
            return this.location.search;
          }
          get hash() {
            return this.location.hash;
          }
          set pathname(t) {
            this.location.pathname = t;
          }
          pushState(t, e, n) {
            Lh() ? this._history.pushState(t, e, n) : (this.location.hash = n);
          }
          replaceState(t, e, n) {
            Lh() ? this._history.replaceState(t, e, n) : (this.location.hash = n);
          }
          forward() {
            this._history.forward();
          }
          back() {
            this._history.back();
          }
          getState() {
            return this._history.state;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Th));
          }),
          (t.ɵprov = pt({ factory: Fh, token: t, providedIn: 'platform' })),
          t
        );
      })();
      function Lh() {
        return !!window.history.pushState;
      }
      function Fh() {
        return new Ih(_i(Th));
      }
      function Nh(t, e) {
        if (0 == t.length) return e;
        if (0 == e.length) return t;
        let n = 0;
        return (
          t.endsWith('/') && n++, e.startsWith('/') && n++, 2 == n ? t + e.substring(1) : 1 == n ? t + e : t + '/' + e
        );
      }
      function Vh(t) {
        const e = t.match(/#|\?|$/),
          n = (e && e.index) || t.length;
        return t.slice(0, n - ('/' === t[n - 1] ? 1 : 0)) + t.slice(n);
      }
      function Bh(t) {
        return t && '?' !== t[0] ? '?' + t : t;
      }
      let zh = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({ factory: jh, token: t, providedIn: 'root' })),
          t
        );
      })();
      function jh(t) {
        const e = _i(Th).location;
        return new $h(_i(Dh), (e && e.origin) || '');
      }
      const Hh = new Jn('appBaseHref');
      let $h = (() => {
          class t extends zh {
            constructor(t, e) {
              if (
                (super(),
                (this._platformLocation = t),
                null == e && (e = this._platformLocation.getBaseHrefFromDOM()),
                null == e)
              )
                throw new Error(
                  'No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.'
                );
              this._baseHref = e;
            }
            onPopState(t) {
              this._platformLocation.onPopState(t), this._platformLocation.onHashChange(t);
            }
            getBaseHref() {
              return this._baseHref;
            }
            prepareExternalUrl(t) {
              return Nh(this._baseHref, t);
            }
            path(t = !1) {
              const e = this._platformLocation.pathname + Bh(this._platformLocation.search),
                n = this._platformLocation.hash;
              return n && t ? `${e}${n}` : e;
            }
            pushState(t, e, n, i) {
              const s = this.prepareExternalUrl(n + Bh(i));
              this._platformLocation.pushState(t, e, s);
            }
            replaceState(t, e, n, i) {
              const s = this.prepareExternalUrl(n + Bh(i));
              this._platformLocation.replaceState(t, e, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Dh), _i(Hh, 8));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        qh = (() => {
          class t extends zh {
            constructor(t, e) {
              super(), (this._platformLocation = t), (this._baseHref = ''), null != e && (this._baseHref = e);
            }
            onPopState(t) {
              this._platformLocation.onPopState(t), this._platformLocation.onHashChange(t);
            }
            getBaseHref() {
              return this._baseHref;
            }
            path(t = !1) {
              let e = this._platformLocation.hash;
              return null == e && (e = '#'), e.length > 0 ? e.substring(1) : e;
            }
            prepareExternalUrl(t) {
              const e = Nh(this._baseHref, t);
              return e.length > 0 ? '#' + e : e;
            }
            pushState(t, e, n, i) {
              let s = this.prepareExternalUrl(n + Bh(i));
              0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.pushState(t, e, s);
            }
            replaceState(t, e, n, i) {
              let s = this.prepareExternalUrl(n + Bh(i));
              0 == s.length && (s = this._platformLocation.pathname), this._platformLocation.replaceState(t, e, s);
            }
            forward() {
              this._platformLocation.forward();
            }
            back() {
              this._platformLocation.back();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Dh), _i(Hh, 8));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Wh = (() => {
          class t {
            constructor(t, e) {
              (this._subject = new cc()), (this._urlChangeListeners = []), (this._platformStrategy = t);
              const n = this._platformStrategy.getBaseHref();
              (this._platformLocation = e),
                (this._baseHref = Vh(Yh(n))),
                this._platformStrategy.onPopState((t) => {
                  this._subject.emit({ url: this.path(!0), pop: !0, state: t.state, type: t.type });
                });
            }
            path(t = !1) {
              return this.normalize(this._platformStrategy.path(t));
            }
            getState() {
              return this._platformLocation.getState();
            }
            isCurrentPathEqualTo(t, e = '') {
              return this.path() == this.normalize(t + Bh(e));
            }
            normalize(e) {
              return t.stripTrailingSlash(
                (function (t, e) {
                  return t && e.startsWith(t) ? e.substring(t.length) : e;
                })(this._baseHref, Yh(e))
              );
            }
            prepareExternalUrl(t) {
              return t && '/' !== t[0] && (t = '/' + t), this._platformStrategy.prepareExternalUrl(t);
            }
            go(t, e = '', n = null) {
              this._platformStrategy.pushState(n, '', t, e),
                this._notifyUrlChangeListeners(this.prepareExternalUrl(t + Bh(e)), n);
            }
            replaceState(t, e = '', n = null) {
              this._platformStrategy.replaceState(n, '', t, e),
                this._notifyUrlChangeListeners(this.prepareExternalUrl(t + Bh(e)), n);
            }
            forward() {
              this._platformStrategy.forward();
            }
            back() {
              this._platformStrategy.back();
            }
            onUrlChange(t) {
              this._urlChangeListeners.push(t),
                this._urlChangeSubscription ||
                  (this._urlChangeSubscription = this.subscribe((t) => {
                    this._notifyUrlChangeListeners(t.url, t.state);
                  }));
            }
            _notifyUrlChangeListeners(t = '', e) {
              this._urlChangeListeners.forEach((n) => n(t, e));
            }
            subscribe(t, e, n) {
              return this._subject.subscribe({ next: t, error: e, complete: n });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(zh), _i(Dh));
            }),
            (t.normalizeQueryParams = Bh),
            (t.joinWithSlash = Nh),
            (t.stripTrailingSlash = Vh),
            (t.ɵprov = pt({ factory: Uh, token: t, providedIn: 'root' })),
            t
          );
        })();
      function Uh() {
        return new Wh(_i(zh), _i(Dh));
      }
      function Yh(t) {
        return t.replace(/\/index.html$/, '');
      }
      var Gh = (() => (
          ((Gh = Gh || {})[(Gh.Zero = 0)] = 'Zero'),
          (Gh[(Gh.One = 1)] = 'One'),
          (Gh[(Gh.Two = 2)] = 'Two'),
          (Gh[(Gh.Few = 3)] = 'Few'),
          (Gh[(Gh.Many = 4)] = 'Many'),
          (Gh[(Gh.Other = 5)] = 'Other'),
          Gh
        ))(),
        Qh = (() => (((Qh = Qh || {})[(Qh.Format = 0)] = 'Format'), (Qh[(Qh.Standalone = 1)] = 'Standalone'), Qh))(),
        Kh = (() => (
          ((Kh = Kh || {})[(Kh.Narrow = 0)] = 'Narrow'),
          (Kh[(Kh.Abbreviated = 1)] = 'Abbreviated'),
          (Kh[(Kh.Wide = 2)] = 'Wide'),
          (Kh[(Kh.Short = 3)] = 'Short'),
          Kh
        ))(),
        Xh = (() => (
          ((Xh = Xh || {})[(Xh.Short = 0)] = 'Short'),
          (Xh[(Xh.Medium = 1)] = 'Medium'),
          (Xh[(Xh.Long = 2)] = 'Long'),
          (Xh[(Xh.Full = 3)] = 'Full'),
          Xh
        ))(),
        Zh = (() => (
          ((Zh = Zh || {})[(Zh.Decimal = 0)] = 'Decimal'),
          (Zh[(Zh.Group = 1)] = 'Group'),
          (Zh[(Zh.List = 2)] = 'List'),
          (Zh[(Zh.PercentSign = 3)] = 'PercentSign'),
          (Zh[(Zh.PlusSign = 4)] = 'PlusSign'),
          (Zh[(Zh.MinusSign = 5)] = 'MinusSign'),
          (Zh[(Zh.Exponential = 6)] = 'Exponential'),
          (Zh[(Zh.SuperscriptingExponent = 7)] = 'SuperscriptingExponent'),
          (Zh[(Zh.PerMille = 8)] = 'PerMille'),
          (Zh[(Zh[1 / 0] = 9)] = 'Infinity'),
          (Zh[(Zh.NaN = 10)] = 'NaN'),
          (Zh[(Zh.TimeSeparator = 11)] = 'TimeSeparator'),
          (Zh[(Zh.CurrencyDecimal = 12)] = 'CurrencyDecimal'),
          (Zh[(Zh.CurrencyGroup = 13)] = 'CurrencyGroup'),
          Zh
        ))();
      function Jh(t, e) {
        return su(Ma(t)[Ia.DateFormat], e);
      }
      function tu(t, e) {
        return su(Ma(t)[Ia.TimeFormat], e);
      }
      function eu(t, e) {
        return su(Ma(t)[Ia.DateTimeFormat], e);
      }
      function nu(t, e) {
        const n = Ma(t),
          i = n[Ia.NumberSymbols][e];
        if (void 0 === i) {
          if (e === Zh.CurrencyDecimal) return n[Ia.NumberSymbols][Zh.Decimal];
          if (e === Zh.CurrencyGroup) return n[Ia.NumberSymbols][Zh.Group];
        }
        return i;
      }
      function iu(t) {
        if (!t[Ia.ExtraData])
          throw new Error(
            `Missing extra locale data for the locale "${
              t[Ia.LocaleId]
            }". Use "registerLocaleData" to load new data. See the "I18n guide" on angular.io to know more.`
          );
      }
      function su(t, e) {
        for (let n = e; n > -1; n--) if (void 0 !== t[n]) return t[n];
        throw new Error('Locale data API: locale data undefined');
      }
      function ru(t) {
        const [e, n] = t.split(':');
        return { hours: +e, minutes: +n };
      }
      const ou = /^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/,
        au = {},
        lu =
          /((?:[^GyYMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|Y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\s\S]*)/;
      var cu = (() => (
          ((cu = cu || {})[(cu.Short = 0)] = 'Short'),
          (cu[(cu.ShortGMT = 1)] = 'ShortGMT'),
          (cu[(cu.Long = 2)] = 'Long'),
          (cu[(cu.Extended = 3)] = 'Extended'),
          cu
        ))(),
        hu = (() => (
          ((hu = hu || {})[(hu.FullYear = 0)] = 'FullYear'),
          (hu[(hu.Month = 1)] = 'Month'),
          (hu[(hu.Date = 2)] = 'Date'),
          (hu[(hu.Hours = 3)] = 'Hours'),
          (hu[(hu.Minutes = 4)] = 'Minutes'),
          (hu[(hu.Seconds = 5)] = 'Seconds'),
          (hu[(hu.FractionalSeconds = 6)] = 'FractionalSeconds'),
          (hu[(hu.Day = 7)] = 'Day'),
          hu
        ))(),
        uu = (() => (
          ((uu = uu || {})[(uu.DayPeriods = 0)] = 'DayPeriods'),
          (uu[(uu.Days = 1)] = 'Days'),
          (uu[(uu.Months = 2)] = 'Months'),
          (uu[(uu.Eras = 3)] = 'Eras'),
          uu
        ))();
      function du(t, e, n, i) {
        let s = (function (t) {
          if (Su(t)) return t;
          if ('number' == typeof t && !isNaN(t)) return new Date(t);
          if ('string' == typeof t) {
            if (((t = t.trim()), /^(\d{4}(-\d{1,2}(-\d{1,2})?)?)$/.test(t))) {
              const [e, n = 1, i = 1] = t.split('-').map((t) => +t);
              return pu(e, n - 1, i);
            }
            const e = parseFloat(t);
            if (!isNaN(t - e)) return new Date(e);
            let n;
            if ((n = t.match(ou)))
              return (function (t) {
                const e = new Date(0);
                let n = 0,
                  i = 0;
                const s = t[8] ? e.setUTCFullYear : e.setFullYear,
                  r = t[8] ? e.setUTCHours : e.setHours;
                t[9] && ((n = Number(t[9] + t[10])), (i = Number(t[9] + t[11]))),
                  s.call(e, Number(t[1]), Number(t[2]) - 1, Number(t[3]));
                const o = Number(t[4] || 0) - n,
                  a = Number(t[5] || 0) - i,
                  l = Number(t[6] || 0),
                  c = Math.floor(1e3 * parseFloat('0.' + (t[7] || 0)));
                return r.call(e, o, a, l, c), e;
              })(n);
          }
          const e = new Date(t);
          if (!Su(e)) throw new Error(`Unable to convert "${t}" into a date`);
          return e;
        })(t);
        e = mu(n, e) || e;
        let r,
          o = [];
        for (; e; ) {
          if (((r = lu.exec(e)), !r)) {
            o.push(e);
            break;
          }
          {
            o = o.concat(r.slice(1));
            const t = o.pop();
            if (!t) break;
            e = t;
          }
        }
        let a = s.getTimezoneOffset();
        i &&
          ((a = ku(i, a)),
          (s = (function (t, e, n) {
            const i = t.getTimezoneOffset();
            return (function (t, e) {
              return (t = new Date(t.getTime())).setMinutes(t.getMinutes() + e), t;
            })(t, -1 * (ku(e, i) - i));
          })(s, i)));
        let l = '';
        return (
          o.forEach((t) => {
            const e = (function (t) {
              if (Cu[t]) return Cu[t];
              let e;
              switch (t) {
                case 'G':
                case 'GG':
                case 'GGG':
                  e = bu(uu.Eras, Kh.Abbreviated);
                  break;
                case 'GGGG':
                  e = bu(uu.Eras, Kh.Wide);
                  break;
                case 'GGGGG':
                  e = bu(uu.Eras, Kh.Narrow);
                  break;
                case 'y':
                  e = _u(hu.FullYear, 1, 0, !1, !0);
                  break;
                case 'yy':
                  e = _u(hu.FullYear, 2, 0, !0, !0);
                  break;
                case 'yyy':
                  e = _u(hu.FullYear, 3, 0, !1, !0);
                  break;
                case 'yyyy':
                  e = _u(hu.FullYear, 4, 0, !1, !0);
                  break;
                case 'Y':
                  e = xu(1);
                  break;
                case 'YY':
                  e = xu(2, !0);
                  break;
                case 'YYY':
                  e = xu(3);
                  break;
                case 'YYYY':
                  e = xu(4);
                  break;
                case 'M':
                case 'L':
                  e = _u(hu.Month, 1, 1);
                  break;
                case 'MM':
                case 'LL':
                  e = _u(hu.Month, 2, 1);
                  break;
                case 'MMM':
                  e = bu(uu.Months, Kh.Abbreviated);
                  break;
                case 'MMMM':
                  e = bu(uu.Months, Kh.Wide);
                  break;
                case 'MMMMM':
                  e = bu(uu.Months, Kh.Narrow);
                  break;
                case 'LLL':
                  e = bu(uu.Months, Kh.Abbreviated, Qh.Standalone);
                  break;
                case 'LLLL':
                  e = bu(uu.Months, Kh.Wide, Qh.Standalone);
                  break;
                case 'LLLLL':
                  e = bu(uu.Months, Kh.Narrow, Qh.Standalone);
                  break;
                case 'w':
                  e = wu(1);
                  break;
                case 'ww':
                  e = wu(2);
                  break;
                case 'W':
                  e = wu(1, !0);
                  break;
                case 'd':
                  e = _u(hu.Date, 1);
                  break;
                case 'dd':
                  e = _u(hu.Date, 2);
                  break;
                case 'E':
                case 'EE':
                case 'EEE':
                  e = bu(uu.Days, Kh.Abbreviated);
                  break;
                case 'EEEE':
                  e = bu(uu.Days, Kh.Wide);
                  break;
                case 'EEEEE':
                  e = bu(uu.Days, Kh.Narrow);
                  break;
                case 'EEEEEE':
                  e = bu(uu.Days, Kh.Short);
                  break;
                case 'a':
                case 'aa':
                case 'aaa':
                  e = bu(uu.DayPeriods, Kh.Abbreviated);
                  break;
                case 'aaaa':
                  e = bu(uu.DayPeriods, Kh.Wide);
                  break;
                case 'aaaaa':
                  e = bu(uu.DayPeriods, Kh.Narrow);
                  break;
                case 'b':
                case 'bb':
                case 'bbb':
                  e = bu(uu.DayPeriods, Kh.Abbreviated, Qh.Standalone, !0);
                  break;
                case 'bbbb':
                  e = bu(uu.DayPeriods, Kh.Wide, Qh.Standalone, !0);
                  break;
                case 'bbbbb':
                  e = bu(uu.DayPeriods, Kh.Narrow, Qh.Standalone, !0);
                  break;
                case 'B':
                case 'BB':
                case 'BBB':
                  e = bu(uu.DayPeriods, Kh.Abbreviated, Qh.Format, !0);
                  break;
                case 'BBBB':
                  e = bu(uu.DayPeriods, Kh.Wide, Qh.Format, !0);
                  break;
                case 'BBBBB':
                  e = bu(uu.DayPeriods, Kh.Narrow, Qh.Format, !0);
                  break;
                case 'h':
                  e = _u(hu.Hours, 1, -12);
                  break;
                case 'hh':
                  e = _u(hu.Hours, 2, -12);
                  break;
                case 'H':
                  e = _u(hu.Hours, 1);
                  break;
                case 'HH':
                  e = _u(hu.Hours, 2);
                  break;
                case 'm':
                  e = _u(hu.Minutes, 1);
                  break;
                case 'mm':
                  e = _u(hu.Minutes, 2);
                  break;
                case 's':
                  e = _u(hu.Seconds, 1);
                  break;
                case 'ss':
                  e = _u(hu.Seconds, 2);
                  break;
                case 'S':
                  e = _u(hu.FractionalSeconds, 1);
                  break;
                case 'SS':
                  e = _u(hu.FractionalSeconds, 2);
                  break;
                case 'SSS':
                  e = _u(hu.FractionalSeconds, 3);
                  break;
                case 'Z':
                case 'ZZ':
                case 'ZZZ':
                  e = yu(cu.Short);
                  break;
                case 'ZZZZZ':
                  e = yu(cu.Extended);
                  break;
                case 'O':
                case 'OO':
                case 'OOO':
                case 'z':
                case 'zz':
                case 'zzz':
                  e = yu(cu.ShortGMT);
                  break;
                case 'OOOO':
                case 'ZZZZ':
                case 'zzzz':
                  e = yu(cu.Long);
                  break;
                default:
                  return null;
              }
              return (Cu[t] = e), e;
            })(t);
            l += e ? e(s, n, a) : "''" === t ? "'" : t.replace(/(^'|'$)/g, '').replace(/''/g, "'");
          }),
          l
        );
      }
      function pu(t, e, n) {
        const i = new Date(0);
        return i.setFullYear(t, e, n), i.setHours(0, 0, 0), i;
      }
      function mu(t, e) {
        const n = (function (t) {
          return Ma(t)[Ia.LocaleId];
        })(t);
        if (((au[n] = au[n] || {}), au[n][e])) return au[n][e];
        let i = '';
        switch (e) {
          case 'shortDate':
            i = Jh(t, Xh.Short);
            break;
          case 'mediumDate':
            i = Jh(t, Xh.Medium);
            break;
          case 'longDate':
            i = Jh(t, Xh.Long);
            break;
          case 'fullDate':
            i = Jh(t, Xh.Full);
            break;
          case 'shortTime':
            i = tu(t, Xh.Short);
            break;
          case 'mediumTime':
            i = tu(t, Xh.Medium);
            break;
          case 'longTime':
            i = tu(t, Xh.Long);
            break;
          case 'fullTime':
            i = tu(t, Xh.Full);
            break;
          case 'short':
            const e = mu(t, 'shortTime'),
              n = mu(t, 'shortDate');
            i = fu(eu(t, Xh.Short), [e, n]);
            break;
          case 'medium':
            const s = mu(t, 'mediumTime'),
              r = mu(t, 'mediumDate');
            i = fu(eu(t, Xh.Medium), [s, r]);
            break;
          case 'long':
            const o = mu(t, 'longTime'),
              a = mu(t, 'longDate');
            i = fu(eu(t, Xh.Long), [o, a]);
            break;
          case 'full':
            const l = mu(t, 'fullTime'),
              c = mu(t, 'fullDate');
            i = fu(eu(t, Xh.Full), [l, c]);
        }
        return i && (au[n][e] = i), i;
      }
      function fu(t, e) {
        return (
          e &&
            (t = t.replace(/\{([^}]+)}/g, function (t, n) {
              return null != e && n in e ? e[n] : t;
            })),
          t
        );
      }
      function gu(t, e, n = '-', i, s) {
        let r = '';
        (t < 0 || (s && t <= 0)) && (s ? (t = 1 - t) : ((t = -t), (r = n)));
        let o = String(t);
        for (; o.length < e; ) o = '0' + o;
        return i && (o = o.substr(o.length - e)), r + o;
      }
      function _u(t, e, n = 0, i = !1, s = !1) {
        return function (r, o) {
          let a = (function (t, e) {
            switch (t) {
              case hu.FullYear:
                return e.getFullYear();
              case hu.Month:
                return e.getMonth();
              case hu.Date:
                return e.getDate();
              case hu.Hours:
                return e.getHours();
              case hu.Minutes:
                return e.getMinutes();
              case hu.Seconds:
                return e.getSeconds();
              case hu.FractionalSeconds:
                return e.getMilliseconds();
              case hu.Day:
                return e.getDay();
              default:
                throw new Error(`Unknown DateType value "${t}".`);
            }
          })(t, r);
          if (((n > 0 || a > -n) && (a += n), t === hu.Hours)) 0 === a && -12 === n && (a = 12);
          else if (t === hu.FractionalSeconds) return (l = e), gu(a, 3).substr(0, l);
          var l;
          const c = nu(o, Zh.MinusSign);
          return gu(a, e, c, i, s);
        };
      }
      function bu(t, e, n = Qh.Format, i = !1) {
        return function (s, r) {
          return (function (t, e, n, i, s, r) {
            switch (n) {
              case uu.Months:
                return (function (t, e, n) {
                  const i = Ma(t),
                    s = su([i[Ia.MonthsFormat], i[Ia.MonthsStandalone]], e);
                  return su(s, n);
                })(e, s, i)[t.getMonth()];
              case uu.Days:
                return (function (t, e, n) {
                  const i = Ma(t),
                    s = su([i[Ia.DaysFormat], i[Ia.DaysStandalone]], e);
                  return su(s, n);
                })(e, s, i)[t.getDay()];
              case uu.DayPeriods:
                const o = t.getHours(),
                  a = t.getMinutes();
                if (r) {
                  const t = (function (t) {
                      const e = Ma(t);
                      return (
                        iu(e),
                        (e[Ia.ExtraData][2] || []).map((t) => ('string' == typeof t ? ru(t) : [ru(t[0]), ru(t[1])]))
                      );
                    })(e),
                    n = (function (t, e, n) {
                      const i = Ma(t);
                      iu(i);
                      const s = su([i[Ia.ExtraData][0], i[Ia.ExtraData][1]], e) || [];
                      return su(s, n) || [];
                    })(e, s, i),
                    r = t.findIndex((t) => {
                      if (Array.isArray(t)) {
                        const [e, n] = t,
                          i = o >= e.hours && a >= e.minutes,
                          s = o < n.hours || (o === n.hours && a < n.minutes);
                        if (e.hours < n.hours) {
                          if (i && s) return !0;
                        } else if (i || s) return !0;
                      } else if (t.hours === o && t.minutes === a) return !0;
                      return !1;
                    });
                  if (-1 !== r) return n[r];
                }
                return (function (t, e, n) {
                  const i = Ma(t),
                    s = su([i[Ia.DayPeriodsFormat], i[Ia.DayPeriodsStandalone]], e);
                  return su(s, n);
                })(e, s, i)[o < 12 ? 0 : 1];
              case uu.Eras:
                return (function (t, e) {
                  return su(Ma(t)[Ia.Eras], e);
                })(e, i)[t.getFullYear() <= 0 ? 0 : 1];
              default:
                throw new Error(`unexpected translation type ${n}`);
            }
          })(s, r, t, e, n, i);
        };
      }
      function yu(t) {
        return function (e, n, i) {
          const s = -1 * i,
            r = nu(n, Zh.MinusSign),
            o = s > 0 ? Math.floor(s / 60) : Math.ceil(s / 60);
          switch (t) {
            case cu.Short:
              return (s >= 0 ? '+' : '') + gu(o, 2, r) + gu(Math.abs(s % 60), 2, r);
            case cu.ShortGMT:
              return 'GMT' + (s >= 0 ? '+' : '') + gu(o, 1, r);
            case cu.Long:
              return 'GMT' + (s >= 0 ? '+' : '') + gu(o, 2, r) + ':' + gu(Math.abs(s % 60), 2, r);
            case cu.Extended:
              return 0 === i ? 'Z' : (s >= 0 ? '+' : '') + gu(o, 2, r) + ':' + gu(Math.abs(s % 60), 2, r);
            default:
              throw new Error(`Unknown zone width "${t}"`);
          }
        };
      }
      function vu(t) {
        return pu(t.getFullYear(), t.getMonth(), t.getDate() + (4 - t.getDay()));
      }
      function wu(t, e = !1) {
        return function (n, i) {
          let s;
          if (e) {
            const t = new Date(n.getFullYear(), n.getMonth(), 1).getDay() - 1,
              e = n.getDate();
            s = 1 + Math.floor((e + t) / 7);
          } else {
            const t = vu(n),
              e = (function (t) {
                const e = pu(t, 0, 1).getDay();
                return pu(t, 0, 1 + (e <= 4 ? 4 : 11) - e);
              })(t.getFullYear()),
              i = t.getTime() - e.getTime();
            s = 1 + Math.round(i / 6048e5);
          }
          return gu(s, t, nu(i, Zh.MinusSign));
        };
      }
      function xu(t, e = !1) {
        return function (n, i) {
          return gu(vu(n).getFullYear(), t, nu(i, Zh.MinusSign), e);
        };
      }
      const Cu = {};
      function ku(t, e) {
        t = t.replace(/:/g, '');
        const n = Date.parse('Jan 01, 1970 00:00:00 ' + t) / 6e4;
        return isNaN(n) ? e : n;
      }
      function Su(t) {
        return t instanceof Date && !isNaN(t.valueOf());
      }
      class Eu {}
      let Ou = (() => {
        class t extends Eu {
          constructor(t) {
            super(), (this.locale = t);
          }
          getPluralCategory(t, e) {
            switch (
              (function (t) {
                return Ma(t)[Ia.PluralCase];
              })(e || this.locale)(t)
            ) {
              case Gh.Zero:
                return 'zero';
              case Gh.One:
                return 'one';
              case Gh.Two:
                return 'two';
              case Gh.Few:
                return 'few';
              case Gh.Many:
                return 'many';
              default:
                return 'other';
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Bc));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function Pu(t, e) {
        e = encodeURIComponent(e);
        for (const n of t.split(';')) {
          const t = n.indexOf('='),
            [i, s] = -1 == t ? [n, ''] : [n.slice(0, t), n.slice(t + 1)];
          if (i.trim() === e) return decodeURIComponent(s);
        }
        return null;
      }
      let Au = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._iterableDiffers = t),
              (this._keyValueDiffers = e),
              (this._ngEl = n),
              (this._renderer = i),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._initialClasses = []),
              (this._rawClass = null);
          }
          set klass(t) {
            this._removeClasses(this._initialClasses),
              (this._initialClasses = 'string' == typeof t ? t.split(/\s+/) : []),
              this._applyClasses(this._initialClasses),
              this._applyClasses(this._rawClass);
          }
          set ngClass(t) {
            this._removeClasses(this._rawClass),
              this._applyClasses(this._initialClasses),
              (this._iterableDiffer = null),
              (this._keyValueDiffer = null),
              (this._rawClass = 'string' == typeof t ? t.split(/\s+/) : t),
              this._rawClass &&
                (ko(this._rawClass)
                  ? (this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create())
                  : (this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create()));
          }
          ngDoCheck() {
            if (this._iterableDiffer) {
              const t = this._iterableDiffer.diff(this._rawClass);
              t && this._applyIterableChanges(t);
            } else if (this._keyValueDiffer) {
              const t = this._keyValueDiffer.diff(this._rawClass);
              t && this._applyKeyValueChanges(t);
            }
          }
          _applyKeyValueChanges(t) {
            t.forEachAddedItem((t) => this._toggleClass(t.key, t.currentValue)),
              t.forEachChangedItem((t) => this._toggleClass(t.key, t.currentValue)),
              t.forEachRemovedItem((t) => {
                t.previousValue && this._toggleClass(t.key, !1);
              });
          }
          _applyIterableChanges(t) {
            t.forEachAddedItem((t) => {
              if ('string' != typeof t.item)
                throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${it(t.item)}`);
              this._toggleClass(t.item, !0);
            }),
              t.forEachRemovedItem((t) => this._toggleClass(t.item, !1));
          }
          _applyClasses(t) {
            t &&
              (Array.isArray(t) || t instanceof Set
                ? t.forEach((t) => this._toggleClass(t, !0))
                : Object.keys(t).forEach((e) => this._toggleClass(e, !!t[e])));
          }
          _removeClasses(t) {
            t &&
              (Array.isArray(t) || t instanceof Set
                ? t.forEach((t) => this._toggleClass(t, !1))
                : Object.keys(t).forEach((t) => this._toggleClass(t, !1)));
          }
          _toggleClass(t, e) {
            (t = t.trim()) &&
              t.split(/\s+/g).forEach((t) => {
                e
                  ? this._renderer.addClass(this._ngEl.nativeElement, t)
                  : this._renderer.removeClass(this._ngEl.nativeElement, t);
              });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(_l), Ro(yl), Ro(Za), Ro(el));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'ngClass', '']],
            inputs: { klass: ['class', 'klass'], ngClass: 'ngClass' },
          })),
          t
        );
      })();
      class Tu {
        constructor(t, e, n, i) {
          (this.$implicit = t), (this.ngForOf = e), (this.index = n), (this.count = i);
        }
        get first() {
          return 0 === this.index;
        }
        get last() {
          return this.index === this.count - 1;
        }
        get even() {
          return this.index % 2 == 0;
        }
        get odd() {
          return !this.even;
        }
      }
      let Du = (() => {
        class t {
          constructor(t, e, n) {
            (this._viewContainer = t),
              (this._template = e),
              (this._differs = n),
              (this._ngForOf = null),
              (this._ngForOfDirty = !0),
              (this._differ = null);
          }
          set ngForOf(t) {
            (this._ngForOf = t), (this._ngForOfDirty = !0);
          }
          set ngForTrackBy(t) {
            this._trackByFn = t;
          }
          get ngForTrackBy() {
            return this._trackByFn;
          }
          set ngForTemplate(t) {
            t && (this._template = t);
          }
          ngDoCheck() {
            if (this._ngForOfDirty) {
              this._ngForOfDirty = !1;
              const n = this._ngForOf;
              if (!this._differ && n)
                try {
                  this._differ = this._differs.find(n).create(this.ngForTrackBy);
                } catch (e) {
                  throw new Error(
                    `Cannot find a differ supporting object '${n}' of type '${
                      ((t = n), t.name || typeof t)
                    }'. NgFor only supports binding to Iterables such as Arrays.`
                  );
                }
            }
            var t;
            if (this._differ) {
              const t = this._differ.diff(this._ngForOf);
              t && this._applyChanges(t);
            }
          }
          _applyChanges(t) {
            const e = [];
            t.forEachOperation((t, n, i) => {
              if (null == t.previousIndex) {
                const n = this._viewContainer.createEmbeddedView(
                    this._template,
                    new Tu(null, this._ngForOf, -1, -1),
                    null === i ? void 0 : i
                  ),
                  s = new Mu(t, n);
                e.push(s);
              } else if (null == i) this._viewContainer.remove(null === n ? void 0 : n);
              else if (null !== n) {
                const s = this._viewContainer.get(n);
                this._viewContainer.move(s, i);
                const r = new Mu(t, s);
                e.push(r);
              }
            });
            for (let n = 0; n < e.length; n++) this._perViewChange(e[n].view, e[n].record);
            for (let n = 0, i = this._viewContainer.length; n < i; n++) {
              const t = this._viewContainer.get(n);
              (t.context.index = n), (t.context.count = i), (t.context.ngForOf = this._ngForOf);
            }
            t.forEachIdentityChange((t) => {
              this._viewContainer.get(t.currentIndex).context.$implicit = t.item;
            });
          }
          _perViewChange(t, e) {
            t.context.$implicit = e.item;
          }
          static ngTemplateContextGuard(t, e) {
            return !0;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(Nl), Ro(Tl), Ro(_l));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'ngFor', '', 'ngForOf', '']],
            inputs: { ngForOf: 'ngForOf', ngForTrackBy: 'ngForTrackBy', ngForTemplate: 'ngForTemplate' },
          })),
          t
        );
      })();
      class Mu {
        constructor(t, e) {
          (this.record = t), (this.view = e);
        }
      }
      let Ru = (() => {
        class t {
          constructor(t, e) {
            (this._viewContainer = t),
              (this._context = new Iu()),
              (this._thenTemplateRef = null),
              (this._elseTemplateRef = null),
              (this._thenViewRef = null),
              (this._elseViewRef = null),
              (this._thenTemplateRef = e);
          }
          set ngIf(t) {
            (this._context.$implicit = this._context.ngIf = t), this._updateView();
          }
          set ngIfThen(t) {
            Lu('ngIfThen', t), (this._thenTemplateRef = t), (this._thenViewRef = null), this._updateView();
          }
          set ngIfElse(t) {
            Lu('ngIfElse', t), (this._elseTemplateRef = t), (this._elseViewRef = null), this._updateView();
          }
          _updateView() {
            this._context.$implicit
              ? this._thenViewRef ||
                (this._viewContainer.clear(),
                (this._elseViewRef = null),
                this._thenTemplateRef &&
                  (this._thenViewRef = this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context)))
              : this._elseViewRef ||
                (this._viewContainer.clear(),
                (this._thenViewRef = null),
                this._elseTemplateRef &&
                  (this._elseViewRef = this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context)));
          }
          static ngTemplateContextGuard(t, e) {
            return !0;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(Nl), Ro(Tl));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'ngIf', '']],
            inputs: { ngIf: 'ngIf', ngIfThen: 'ngIfThen', ngIfElse: 'ngIfElse' },
          })),
          t
        );
      })();
      class Iu {
        constructor() {
          (this.$implicit = null), (this.ngIf = null);
        }
      }
      function Lu(t, e) {
        if (e && !e.createEmbeddedView) throw new Error(`${t} must be a TemplateRef, but received '${it(e)}'.`);
      }
      class Fu {
        constructor(t, e) {
          (this._viewContainerRef = t), (this._templateRef = e), (this._created = !1);
        }
        create() {
          (this._created = !0), this._viewContainerRef.createEmbeddedView(this._templateRef);
        }
        destroy() {
          (this._created = !1), this._viewContainerRef.clear();
        }
        enforceState(t) {
          t && !this._created ? this.create() : !t && this._created && this.destroy();
        }
      }
      let Nu = (() => {
          class t {
            constructor() {
              (this._defaultUsed = !1),
                (this._caseCount = 0),
                (this._lastCaseCheckIndex = 0),
                (this._lastCasesMatched = !1);
            }
            set ngSwitch(t) {
              (this._ngSwitch = t), 0 === this._caseCount && this._updateDefaultCases(!0);
            }
            _addCase() {
              return this._caseCount++;
            }
            _addDefault(t) {
              this._defaultViews || (this._defaultViews = []), this._defaultViews.push(t);
            }
            _matchCase(t) {
              const e = t == this._ngSwitch;
              return (
                (this._lastCasesMatched = this._lastCasesMatched || e),
                this._lastCaseCheckIndex++,
                this._lastCaseCheckIndex === this._caseCount &&
                  (this._updateDefaultCases(!this._lastCasesMatched),
                  (this._lastCaseCheckIndex = 0),
                  (this._lastCasesMatched = !1)),
                e
              );
            }
            _updateDefaultCases(t) {
              if (this._defaultViews && t !== this._defaultUsed) {
                this._defaultUsed = t;
                for (let e = 0; e < this._defaultViews.length; e++) this._defaultViews[e].enforceState(t);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'ngSwitch', '']], inputs: { ngSwitch: 'ngSwitch' } })),
            t
          );
        })(),
        Vu = (() => {
          class t {
            constructor(t, e, n) {
              (this.ngSwitch = n), n._addCase(), (this._view = new Fu(t, e));
            }
            ngDoCheck() {
              this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Nl), Ro(Tl), Ro(Nu, 9));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'ngSwitchCase', '']], inputs: { ngSwitchCase: 'ngSwitchCase' } })),
            t
          );
        })(),
        Bu = (() => {
          class t {
            constructor(t, e, n) {
              n._addDefault(new Fu(t, e));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Nl), Ro(Tl), Ro(Nu, 9));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'ngSwitchDefault', '']] })),
            t
          );
        })(),
        zu = (() => {
          class t {
            constructor(t) {
              (this._viewContainerRef = t),
                (this._viewRef = null),
                (this.ngTemplateOutletContext = null),
                (this.ngTemplateOutlet = null);
            }
            ngOnChanges(t) {
              if (this._shouldRecreateView(t)) {
                const t = this._viewContainerRef;
                this._viewRef && t.remove(t.indexOf(this._viewRef)),
                  (this._viewRef = this.ngTemplateOutlet
                    ? t.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext)
                    : null);
              } else
                this._viewRef &&
                  this.ngTemplateOutletContext &&
                  this._updateExistingContext(this.ngTemplateOutletContext);
            }
            _shouldRecreateView(t) {
              const e = t.ngTemplateOutletContext;
              return !!t.ngTemplateOutlet || (e && this._hasContextShapeChanged(e));
            }
            _hasContextShapeChanged(t) {
              const e = Object.keys(t.previousValue || {}),
                n = Object.keys(t.currentValue || {});
              if (e.length === n.length) {
                for (let t of n) if (-1 === e.indexOf(t)) return !0;
                return !1;
              }
              return !0;
            }
            _updateExistingContext(t) {
              for (let e of Object.keys(t)) this._viewRef.context[e] = this.ngTemplateOutletContext[e];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Nl));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'ngTemplateOutlet', '']],
              inputs: { ngTemplateOutletContext: 'ngTemplateOutletContext', ngTemplateOutlet: 'ngTemplateOutlet' },
              features: [ue],
            })),
            t
          );
        })();
      function ju(t, e) {
        return Error(`InvalidPipeArgument: '${e}' for pipe '${it(t)}'`);
      }
      class Hu {
        createSubscription(t, e) {
          return t.subscribe({
            next: e,
            error: (t) => {
              throw t;
            },
          });
        }
        dispose(t) {
          t.unsubscribe();
        }
        onDestroy(t) {
          t.unsubscribe();
        }
      }
      class $u {
        createSubscription(t, e) {
          return t.then(e, (t) => {
            throw t;
          });
        }
        dispose(t) {}
        onDestroy(t) {}
      }
      const qu = new $u(),
        Wu = new Hu();
      let Uu = (() => {
          class t {
            constructor(t) {
              (this._ref = t),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null),
                (this._strategy = null);
            }
            ngOnDestroy() {
              this._subscription && this._dispose();
            }
            transform(t) {
              return this._obj
                ? t !== this._obj
                  ? (this._dispose(), this.transform(t))
                  : this._latestValue
                : (t && this._subscribe(t), this._latestValue);
            }
            _subscribe(t) {
              (this._obj = t),
                (this._strategy = this._selectStrategy(t)),
                (this._subscription = this._strategy.createSubscription(t, (e) => this._updateLatestValue(t, e)));
            }
            _selectStrategy(e) {
              if ($o(e)) return qu;
              if (qo(e)) return Wu;
              throw ju(t, e);
            }
            _dispose() {
              this._strategy.dispose(this._subscription),
                (this._latestValue = null),
                (this._subscription = null),
                (this._obj = null);
            }
            _updateLatestValue(t, e) {
              t === this._obj && ((this._latestValue = e), this._ref.markForCheck());
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ac());
            }),
            (t.ɵpipe = Zt({ name: 'async', type: t, pure: !1 })),
            t
          );
        })(),
        Yu = (() => {
          class t {
            constructor(t) {
              this.locale = t;
            }
            transform(e, n = 'mediumDate', i, s) {
              if (null == e || '' === e || e != e) return null;
              try {
                return du(e, n, s || this.locale, i);
              } catch (r) {
                throw ju(t, r.message);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Bc));
            }),
            (t.ɵpipe = Zt({ name: 'date', type: t, pure: !0 })),
            t
          );
        })(),
        Gu = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [{ provide: Eu, useClass: Ou }] })),
            t
          );
        })();
      function Qu(t) {
        return 'browser' === t;
      }
      function Ku(t) {
        return 'server' === t;
      }
      let Xu = (() => {
        class t {}
        return (t.ɵprov = pt({ token: t, providedIn: 'root', factory: () => new Zu(_i(Th), window) })), t;
      })();
      class Zu {
        constructor(t, e) {
          (this.document = t), (this.window = e), (this.offset = () => [0, 0]);
        }
        setOffset(t) {
          this.offset = Array.isArray(t) ? () => t : t;
        }
        getScrollPosition() {
          return this.supportsScrolling() ? [this.window.pageXOffset, this.window.pageYOffset] : [0, 0];
        }
        scrollToPosition(t) {
          this.supportsScrolling() && this.window.scrollTo(t[0], t[1]);
        }
        scrollToAnchor(t) {
          if (!this.supportsScrolling()) return;
          const e = (function (t, e) {
            const n = t.getElementById(e) || t.getElementsByName(e)[0];
            if (n) return n;
            if ('function' == typeof t.createTreeWalker && t.body && (t.body.createShadowRoot || t.body.attachShadow)) {
              const n = t.createTreeWalker(t.body, NodeFilter.SHOW_ELEMENT);
              let i = n.currentNode;
              for (; i; ) {
                const t = i.shadowRoot;
                if (t) {
                  const n = t.getElementById(e) || t.querySelector(`[name="${e}"]`);
                  if (n) return n;
                }
                i = n.nextNode();
              }
            }
            return null;
          })(this.document, t);
          e && (this.scrollToElement(e), this.attemptFocus(e));
        }
        setHistoryScrollRestoration(t) {
          if (this.supportScrollRestoration()) {
            const e = this.window.history;
            e && e.scrollRestoration && (e.scrollRestoration = t);
          }
        }
        scrollToElement(t) {
          const e = t.getBoundingClientRect(),
            n = e.left + this.window.pageXOffset,
            i = e.top + this.window.pageYOffset,
            s = this.offset();
          this.window.scrollTo(n - s[0], i - s[1]);
        }
        attemptFocus(t) {
          return t.focus(), this.document.activeElement === t;
        }
        supportScrollRestoration() {
          try {
            if (!this.supportsScrolling()) return !1;
            const t = Ju(this.window.history) || Ju(Object.getPrototypeOf(this.window.history));
            return !(!t || (!t.writable && !t.set));
          } catch (t) {
            return !1;
          }
        }
        supportsScrolling() {
          try {
            return !!this.window && !!this.window.scrollTo && 'pageXOffset' in this.window;
          } catch (t) {
            return !1;
          }
        }
      }
      function Ju(t) {
        return Object.getOwnPropertyDescriptor(t, 'scrollRestoration');
      }
      class td extends class extends class {} {
        constructor() {
          super();
        }
        supportsDOMEvents() {
          return !0;
        }
      } {
        static makeCurrent() {
          var t;
          (t = new td()), Ph || (Ph = t);
        }
        getProperty(t, e) {
          return t[e];
        }
        log(t) {
          window.console && window.console.log && window.console.log(t);
        }
        logGroup(t) {
          window.console && window.console.group && window.console.group(t);
        }
        logGroupEnd() {
          window.console && window.console.groupEnd && window.console.groupEnd();
        }
        onAndCancel(t, e, n) {
          return (
            t.addEventListener(e, n, !1),
            () => {
              t.removeEventListener(e, n, !1);
            }
          );
        }
        dispatchEvent(t, e) {
          t.dispatchEvent(e);
        }
        remove(t) {
          return t.parentNode && t.parentNode.removeChild(t), t;
        }
        getValue(t) {
          return t.value;
        }
        createElement(t, e) {
          return (e = e || this.getDefaultDocument()).createElement(t);
        }
        createHtmlDocument() {
          return document.implementation.createHTMLDocument('fakeTitle');
        }
        getDefaultDocument() {
          return document;
        }
        isElementNode(t) {
          return t.nodeType === Node.ELEMENT_NODE;
        }
        isShadowRoot(t) {
          return t instanceof DocumentFragment;
        }
        getGlobalEventTarget(t, e) {
          return 'window' === e ? window : 'document' === e ? t : 'body' === e ? t.body : null;
        }
        getHistory() {
          return window.history;
        }
        getLocation() {
          return window.location;
        }
        getBaseHref(t) {
          const e = nd || ((nd = document.querySelector('base')), nd) ? nd.getAttribute('href') : null;
          return null == e
            ? null
            : ((n = e),
              ed || (ed = document.createElement('a')),
              ed.setAttribute('href', n),
              '/' === ed.pathname.charAt(0) ? ed.pathname : '/' + ed.pathname);
          var n;
        }
        resetBaseElement() {
          nd = null;
        }
        getUserAgent() {
          return window.navigator.userAgent;
        }
        performanceNow() {
          return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();
        }
        supportsCookies() {
          return !0;
        }
        getCookie(t) {
          return Pu(document.cookie, t);
        }
      }
      let ed,
        nd = null;
      const id = new Jn('TRANSITION_ID'),
        sd = [
          {
            provide: Tc,
            useFactory: function (t, e, n) {
              return () => {
                n.get(Dc).donePromise.then(() => {
                  const n = Ah();
                  Array.prototype.slice
                    .apply(e.querySelectorAll('style[ng-transition]'))
                    .filter((e) => e.getAttribute('ng-transition') === t)
                    .forEach((t) => n.remove(t));
                });
              };
            },
            deps: [id, Th, mo],
            multi: !0,
          },
        ];
      class rd {
        static init() {
          var t;
          (t = new rd()), (lh = t);
        }
        addToWindow(t) {
          (Rt.getAngularTestability = (e, n = !0) => {
            const i = t.findTestabilityInTree(e, n);
            if (null == i) throw new Error('Could not find testability for element.');
            return i;
          }),
            (Rt.getAllAngularTestabilities = () => t.getAllTestabilities()),
            (Rt.getAllAngularRootElements = () => t.getAllRootElements()),
            Rt.frameworkStabilizers || (Rt.frameworkStabilizers = []),
            Rt.frameworkStabilizers.push((t) => {
              const e = Rt.getAllAngularTestabilities();
              let n = e.length,
                i = !1;
              const s = function (e) {
                (i = i || e), n--, 0 == n && t(i);
              };
              e.forEach(function (t) {
                t.whenStable(s);
              });
            });
        }
        findTestabilityInTree(t, e, n) {
          if (null == e) return null;
          const i = t.getTestability(e);
          return null != i
            ? i
            : n
            ? Ah().isShadowRoot(e)
              ? this.findTestabilityInTree(t, e.host, !0)
              : this.findTestabilityInTree(t, e.parentElement, !0)
            : null;
        }
      }
      const od = new Jn('EventManagerPlugins');
      let ad = (() => {
        class t {
          constructor(t, e) {
            (this._zone = e),
              (this._eventNameToPlugin = new Map()),
              t.forEach((t) => (t.manager = this)),
              (this._plugins = t.slice().reverse());
          }
          addEventListener(t, e, n) {
            return this._findPluginFor(e).addEventListener(t, e, n);
          }
          addGlobalEventListener(t, e, n) {
            return this._findPluginFor(e).addGlobalEventListener(t, e, n);
          }
          getZone() {
            return this._zone;
          }
          _findPluginFor(t) {
            const e = this._eventNameToPlugin.get(t);
            if (e) return e;
            const n = this._plugins;
            for (let i = 0; i < n.length; i++) {
              const e = n[i];
              if (e.supports(t)) return this._eventNameToPlugin.set(t, e), e;
            }
            throw new Error(`No event manager plugin found for event ${t}`);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(od), _i(Xc));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class ld {
        constructor(t) {
          this._doc = t;
        }
        addGlobalEventListener(t, e, n) {
          const i = Ah().getGlobalEventTarget(this._doc, t);
          if (!i) throw new Error(`Unsupported event target ${i} for event ${e}`);
          return this.addEventListener(i, e, n);
        }
      }
      let cd = (() => {
          class t {
            constructor() {
              this._stylesSet = new Set();
            }
            addStyles(t) {
              const e = new Set();
              t.forEach((t) => {
                this._stylesSet.has(t) || (this._stylesSet.add(t), e.add(t));
              }),
                this.onStylesAdded(e);
            }
            onStylesAdded(t) {}
            getAllStyles() {
              return Array.from(this._stylesSet);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        hd = (() => {
          class t extends cd {
            constructor(t) {
              super(), (this._doc = t), (this._hostNodes = new Map()), this._hostNodes.set(t.head, []);
            }
            _addStylesToHost(t, e, n) {
              t.forEach((t) => {
                const i = this._doc.createElement('style');
                (i.textContent = t), n.push(e.appendChild(i));
              });
            }
            addHost(t) {
              const e = [];
              this._addStylesToHost(this._stylesSet, t, e), this._hostNodes.set(t, e);
            }
            removeHost(t) {
              const e = this._hostNodes.get(t);
              e && e.forEach(ud), this._hostNodes.delete(t);
            }
            onStylesAdded(t) {
              this._hostNodes.forEach((e, n) => {
                this._addStylesToHost(t, n, e);
              });
            }
            ngOnDestroy() {
              this._hostNodes.forEach((t) => t.forEach(ud));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Th));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      function ud(t) {
        Ah().remove(t);
      }
      const dd = {
          svg: 'http://www.w3.org/2000/svg',
          xhtml: 'http://www.w3.org/1999/xhtml',
          xlink: 'http://www.w3.org/1999/xlink',
          xml: 'http://www.w3.org/XML/1998/namespace',
          xmlns: 'http://www.w3.org/2000/xmlns/',
        },
        pd = /%COMP%/g;
      function md(t, e, n) {
        for (let i = 0; i < e.length; i++) {
          let s = e[i];
          Array.isArray(s) ? md(t, s, n) : ((s = s.replace(pd, t)), n.push(s));
        }
        return n;
      }
      function fd(t) {
        return (e) => {
          if ('__ngUnwrap__' === e) return t;
          !1 === t(e) && (e.preventDefault(), (e.returnValue = !1));
        };
      }
      let gd = (() => {
        class t {
          constructor(t, e, n) {
            (this.eventManager = t),
              (this.sharedStylesHost = e),
              (this.appId = n),
              (this.rendererByCompId = new Map()),
              (this.defaultRenderer = new _d(t));
          }
          createRenderer(t, e) {
            if (!t || !e) return this.defaultRenderer;
            switch (e.encapsulation) {
              case Pt.Emulated: {
                let n = this.rendererByCompId.get(e.id);
                return (
                  n ||
                    ((n = new bd(this.eventManager, this.sharedStylesHost, e, this.appId)),
                    this.rendererByCompId.set(e.id, n)),
                  n.applyToHost(t),
                  n
                );
              }
              case 1:
              case Pt.ShadowDom:
                return new yd(this.eventManager, this.sharedStylesHost, t, e);
              default:
                if (!this.rendererByCompId.has(e.id)) {
                  const t = md(e.id, e.styles, []);
                  this.sharedStylesHost.addStyles(t), this.rendererByCompId.set(e.id, this.defaultRenderer);
                }
                return this.defaultRenderer;
            }
          }
          begin() {}
          end() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(ad), _i(hd), _i(Mc));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class _d {
        constructor(t) {
          (this.eventManager = t), (this.data = Object.create(null));
        }
        destroy() {}
        createElement(t, e) {
          return e ? document.createElementNS(dd[e] || e, t) : document.createElement(t);
        }
        createComment(t) {
          return document.createComment(t);
        }
        createText(t) {
          return document.createTextNode(t);
        }
        appendChild(t, e) {
          t.appendChild(e);
        }
        insertBefore(t, e, n) {
          t && t.insertBefore(e, n);
        }
        removeChild(t, e) {
          t && t.removeChild(e);
        }
        selectRootElement(t, e) {
          let n = 'string' == typeof t ? document.querySelector(t) : t;
          if (!n) throw new Error(`The selector "${t}" did not match any elements`);
          return e || (n.textContent = ''), n;
        }
        parentNode(t) {
          return t.parentNode;
        }
        nextSibling(t) {
          return t.nextSibling;
        }
        setAttribute(t, e, n, i) {
          if (i) {
            e = i + ':' + e;
            const s = dd[i];
            s ? t.setAttributeNS(s, e, n) : t.setAttribute(e, n);
          } else t.setAttribute(e, n);
        }
        removeAttribute(t, e, n) {
          if (n) {
            const i = dd[n];
            i ? t.removeAttributeNS(i, e) : t.removeAttribute(`${n}:${e}`);
          } else t.removeAttribute(e);
        }
        addClass(t, e) {
          t.classList.add(e);
        }
        removeClass(t, e) {
          t.classList.remove(e);
        }
        setStyle(t, e, n, i) {
          i & (ps.DashCase | ps.Important)
            ? t.style.setProperty(e, n, i & ps.Important ? 'important' : '')
            : (t.style[e] = n);
        }
        removeStyle(t, e, n) {
          n & ps.DashCase ? t.style.removeProperty(e) : (t.style[e] = '');
        }
        setProperty(t, e, n) {
          t[e] = n;
        }
        setValue(t, e) {
          t.nodeValue = e;
        }
        listen(t, e, n) {
          return 'string' == typeof t
            ? this.eventManager.addGlobalEventListener(t, e, fd(n))
            : this.eventManager.addEventListener(t, e, fd(n));
        }
      }
      class bd extends _d {
        constructor(t, e, n, i) {
          super(t), (this.component = n);
          const s = md(i + '-' + n.id, n.styles, []);
          e.addStyles(s),
            (this.contentAttr = '_ngcontent-%COMP%'.replace(pd, i + '-' + n.id)),
            (this.hostAttr = '_nghost-%COMP%'.replace(pd, i + '-' + n.id));
        }
        applyToHost(t) {
          super.setAttribute(t, this.hostAttr, '');
        }
        createElement(t, e) {
          const n = super.createElement(t, e);
          return super.setAttribute(n, this.contentAttr, ''), n;
        }
      }
      class yd extends _d {
        constructor(t, e, n, i) {
          super(t),
            (this.sharedStylesHost = e),
            (this.hostEl = n),
            (this.shadowRoot = n.attachShadow({ mode: 'open' })),
            this.sharedStylesHost.addHost(this.shadowRoot);
          const s = md(i.id, i.styles, []);
          for (let r = 0; r < s.length; r++) {
            const t = document.createElement('style');
            (t.textContent = s[r]), this.shadowRoot.appendChild(t);
          }
        }
        nodeOrShadowRoot(t) {
          return t === this.hostEl ? this.shadowRoot : t;
        }
        destroy() {
          this.sharedStylesHost.removeHost(this.shadowRoot);
        }
        appendChild(t, e) {
          return super.appendChild(this.nodeOrShadowRoot(t), e);
        }
        insertBefore(t, e, n) {
          return super.insertBefore(this.nodeOrShadowRoot(t), e, n);
        }
        removeChild(t, e) {
          return super.removeChild(this.nodeOrShadowRoot(t), e);
        }
        parentNode(t) {
          return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(t)));
        }
      }
      let vd = (() => {
        class t extends ld {
          constructor(t) {
            super(t);
          }
          supports(t) {
            return !0;
          }
          addEventListener(t, e, n) {
            return t.addEventListener(e, n, !1), () => this.removeEventListener(t, e, n);
          }
          removeEventListener(t, e, n) {
            return t.removeEventListener(e, n);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Th));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const wd = ['alt', 'control', 'meta', 'shift'],
        xd = {
          '\b': 'Backspace',
          '\t': 'Tab',
          '\x7f': 'Delete',
          '\x1b': 'Escape',
          Del: 'Delete',
          Esc: 'Escape',
          Left: 'ArrowLeft',
          Right: 'ArrowRight',
          Up: 'ArrowUp',
          Down: 'ArrowDown',
          Menu: 'ContextMenu',
          Scroll: 'ScrollLock',
          Win: 'OS',
        },
        Cd = {
          A: '1',
          B: '2',
          C: '3',
          D: '4',
          E: '5',
          F: '6',
          G: '7',
          H: '8',
          I: '9',
          J: '*',
          K: '+',
          M: '-',
          N: '.',
          O: '/',
          '`': '0',
          '\x90': 'NumLock',
        },
        kd = { alt: (t) => t.altKey, control: (t) => t.ctrlKey, meta: (t) => t.metaKey, shift: (t) => t.shiftKey };
      let Sd = (() => {
          class t extends ld {
            constructor(t) {
              super(t);
            }
            supports(e) {
              return null != t.parseEventName(e);
            }
            addEventListener(e, n, i) {
              const s = t.parseEventName(n),
                r = t.eventCallback(s.fullKey, i, this.manager.getZone());
              return this.manager.getZone().runOutsideAngular(() => Ah().onAndCancel(e, s.domEventName, r));
            }
            static parseEventName(e) {
              const n = e.toLowerCase().split('.'),
                i = n.shift();
              if (0 === n.length || ('keydown' !== i && 'keyup' !== i)) return null;
              const s = t._normalizeKey(n.pop());
              let r = '';
              if (
                (wd.forEach((t) => {
                  const e = n.indexOf(t);
                  e > -1 && (n.splice(e, 1), (r += t + '.'));
                }),
                (r += s),
                0 != n.length || 0 === s.length)
              )
                return null;
              const o = {};
              return (o.domEventName = i), (o.fullKey = r), o;
            }
            static getEventFullKey(t) {
              let e = '',
                n = (function (t) {
                  let e = t.key;
                  if (null == e) {
                    if (((e = t.keyIdentifier), null == e)) return 'Unidentified';
                    e.startsWith('U+') &&
                      ((e = String.fromCharCode(parseInt(e.substring(2), 16))),
                      3 === t.location && Cd.hasOwnProperty(e) && (e = Cd[e]));
                  }
                  return xd[e] || e;
                })(t);
              return (
                (n = n.toLowerCase()),
                ' ' === n ? (n = 'space') : '.' === n && (n = 'dot'),
                wd.forEach((i) => {
                  i != n && (0, kd[i])(t) && (e += i + '.');
                }),
                (e += n),
                e
              );
            }
            static eventCallback(e, n, i) {
              return (s) => {
                t.getEventFullKey(s) === e && i.runGuarded(() => n(s));
              };
            }
            static _normalizeKey(t) {
              switch (t) {
                case 'esc':
                  return 'escape';
                default:
                  return t;
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Th));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Ed = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({
              factory: function () {
                return _i(Pd);
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      function Od(t) {
        return new Pd(t.get(Th));
      }
      let Pd = (() => {
        class t extends Ed {
          constructor(t) {
            super(), (this._doc = t);
          }
          sanitize(t, e) {
            if (null == e) return null;
            switch (t) {
              case is.NONE:
                return e;
              case is.HTML:
                return Ri(e, 'HTML')
                  ? Mi(e)
                  : (function (t, e) {
                      let n = null;
                      try {
                        es =
                          es ||
                          (function (t) {
                            const e = new Fi(t);
                            return (function () {
                              try {
                                return !!new window.DOMParser().parseFromString(Si(''), 'text/html');
                              } catch (t) {
                                return !1;
                              }
                            })()
                              ? new Li(e)
                              : e;
                          })(t);
                        let i = e ? String(e) : '';
                        n = es.getInertBodyElement(i);
                        let s = 5,
                          r = i;
                        do {
                          if (0 === s) throw new Error('Failed to sanitize html because the input is unstable');
                          s--, (i = r), (r = n.innerHTML), (n = es.getInertBodyElement(i));
                        } while (i !== r);
                        return Si(new Xi().sanitizeChildren(ns(n) || n));
                      } finally {
                        if (n) {
                          const t = ns(n) || n;
                          for (; t.firstChild; ) t.removeChild(t.firstChild);
                        }
                      }
                    })(this._doc, String(e)).toString();
              case is.STYLE:
                return Ri(e, 'Style') ? Mi(e) : e;
              case is.SCRIPT:
                if (Ri(e, 'Script')) return Mi(e);
                throw new Error('unsafe value used in a script context');
              case is.URL:
                return Ii(e), Ri(e, 'URL') ? Mi(e) : Bi(String(e));
              case is.RESOURCE_URL:
                if (Ri(e, 'ResourceURL')) return Mi(e);
                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');
              default:
                throw new Error(`Unexpected SecurityContext ${t} (see https://g.co/ng/security#xss)`);
            }
          }
          bypassSecurityTrustHtml(t) {
            return new Oi(t);
          }
          bypassSecurityTrustStyle(t) {
            return new Pi(t);
          }
          bypassSecurityTrustScript(t) {
            return new Ai(t);
          }
          bypassSecurityTrustUrl(t) {
            return new Ti(t);
          }
          bypassSecurityTrustResourceUrl(t) {
            return new Di(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Th));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return Od(_i(Xr));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const Ad = mh(Sh, 'browser', [
          { provide: Fc, useValue: 'browser' },
          {
            provide: Lc,
            useValue: function () {
              td.makeCurrent(), rd.init();
            },
            multi: !0,
          },
          {
            provide: Th,
            useFactory: function () {
              return (
                (function (t) {
                  _e = t;
                })(document),
                document
              );
            },
            deps: [],
          },
        ]),
        Td = [
          [],
          { provide: Jr, useValue: 'root' },
          {
            provide: ls,
            useFactory: function () {
              return new ls();
            },
            deps: [],
          },
          { provide: od, useClass: vd, multi: !0, deps: [Th, Xc, Fc] },
          { provide: od, useClass: Sd, multi: !0, deps: [Th] },
          [],
          { provide: gd, useClass: gd, deps: [ad, hd, Mc] },
          { provide: tl, useExisting: gd },
          { provide: cd, useExisting: hd },
          { provide: hd, useClass: hd, deps: [Th] },
          { provide: sh, useClass: sh, deps: [Xc] },
          { provide: ad, useClass: ad, deps: [od, Xc] },
          [],
        ];
      let Dd = (() => {
        class t {
          constructor(t) {
            if (t)
              throw new Error(
                'BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.'
              );
          }
          static withServerTransition(e) {
            return {
              ngModule: t,
              providers: [{ provide: Mc, useValue: e.appId }, { provide: id, useExisting: Mc }, sd],
            };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(t, 12));
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ providers: Td, imports: [Gu, Oh] })),
          t
        );
      })();
      function Md() {
        return new Rd(_i(Th));
      }
      let Rd = (() => {
        class t {
          constructor(t) {
            this._doc = t;
          }
          getTitle() {
            return this._doc.title;
          }
          setTitle(t) {
            this._doc.title = t || '';
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Th));
          }),
          (t.ɵprov = pt({ factory: Md, token: t, providedIn: 'root' })),
          t
        );
      })();
      function Id(...t) {
        if (1 === t.length) {
          const e = t[0];
          if (l(e)) return Ld(e, null);
          if (c(e) && Object.getPrototypeOf(e) === Object.prototype) {
            const t = Object.keys(e);
            return Ld(
              t.map((t) => e[t]),
              t
            );
          }
        }
        if ('function' == typeof t[t.length - 1]) {
          const e = t.pop();
          return Ld((t = 1 === t.length && l(t[0]) ? t[0] : t), null).pipe(E((t) => e(...t)));
        }
        return Ld(t, null);
      }
      function Ld(t, e) {
        return new b((n) => {
          const i = t.length;
          if (0 === i) return void n.complete();
          const s = new Array(i);
          let r = 0,
            o = 0;
          for (let a = 0; a < i; a++) {
            const l = L(t[a]);
            let c = !1;
            n.add(
              l.subscribe({
                next: (t) => {
                  c || ((c = !0), o++), (s[a] = t);
                },
                error: (t) => n.error(t),
                complete: () => {
                  r++,
                    (r !== i && c) ||
                      (o === i && n.next(e ? e.reduce((t, e, n) => ((t[e] = s[n]), t), {}) : s), n.complete());
                },
              })
            );
          }
        });
      }
      'undefined' != typeof window && window;
      class Fd {}
      const Nd = new Jn('NgValueAccessor'),
        Vd = { provide: Nd, useExisting: ot(() => zd), multi: !0 },
        Bd = new Jn('CompositionEventMode');
      let zd = (() => {
        class t {
          constructor(t, e, n) {
            (this._renderer = t),
              (this._elementRef = e),
              (this._compositionMode = n),
              (this.onChange = (t) => {}),
              (this.onTouched = () => {}),
              (this._composing = !1),
              null == this._compositionMode &&
                (this._compositionMode = !(function () {
                  const t = Ah() ? Ah().getUserAgent() : '';
                  return /android (\d+)/.test(t.toLowerCase());
                })());
          }
          writeValue(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'value', null == t ? '' : t);
          }
          registerOnChange(t) {
            this.onChange = t;
          }
          registerOnTouched(t) {
            this.onTouched = t;
          }
          setDisabledState(t) {
            this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
          }
          _handleInput(t) {
            (!this._compositionMode || (this._compositionMode && !this._composing)) && this.onChange(t);
          }
          _compositionStart() {
            this._composing = !0;
          }
          _compositionEnd(t) {
            (this._composing = !1), this._compositionMode && this.onChange(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(el), Ro(Za), Ro(Bd, 8));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [
              ['input', 'formControlName', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControlName', ''],
              ['input', 'formControl', '', 3, 'type', 'checkbox'],
              ['textarea', 'formControl', ''],
              ['input', 'ngModel', '', 3, 'type', 'checkbox'],
              ['textarea', 'ngModel', ''],
              ['', 'ngDefaultControl', ''],
            ],
            hostBindings: function (t, e) {
              1 & t &&
                Uo('input', function (t) {
                  return e._handleInput(t.target.value);
                })('blur', function () {
                  return e.onTouched();
                })('compositionstart', function () {
                  return e._compositionStart();
                })('compositionend', function (t) {
                  return e._compositionEnd(t.target.value);
                });
            },
            features: [Wa([Vd])],
          })),
          t
        );
      })();
      function jd(t) {
        return null == t || 0 === t.length;
      }
      function Hd(t) {
        return null != t && 'number' == typeof t.length;
      }
      const $d = new Jn('NgValidators'),
        qd = new Jn('NgAsyncValidators'),
        Wd =
          /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
      class Ud {
        static min(t) {
          return (function (t) {
            return (e) => {
              if (jd(e.value) || jd(t)) return null;
              const n = parseFloat(e.value);
              return !isNaN(n) && n < t ? { min: { min: t, actual: e.value } } : null;
            };
          })(t);
        }
        static max(t) {
          return (function (t) {
            return (e) => {
              if (jd(e.value) || jd(t)) return null;
              const n = parseFloat(e.value);
              return !isNaN(n) && n > t ? { max: { max: t, actual: e.value } } : null;
            };
          })(t);
        }
        static required(t) {
          return Yd(t);
        }
        static requiredTrue(t) {
          return (function (t) {
            return !0 === t.value ? null : { required: !0 };
          })(t);
        }
        static email(t) {
          return (function (t) {
            return jd(t.value) || Wd.test(t.value) ? null : { email: !0 };
          })(t);
        }
        static minLength(t) {
          return (function (t) {
            return (e) =>
              jd(e.value) || !Hd(e.value)
                ? null
                : e.value.length < t
                ? { minlength: { requiredLength: t, actualLength: e.value.length } }
                : null;
          })(t);
        }
        static maxLength(t) {
          return (function (t) {
            return (e) =>
              Hd(e.value) && e.value.length > t
                ? { maxlength: { requiredLength: t, actualLength: e.value.length } }
                : null;
          })(t);
        }
        static pattern(t) {
          return (function (t) {
            if (!t) return Gd;
            let e, n;
            return (
              'string' == typeof t
                ? ((n = ''),
                  '^' !== t.charAt(0) && (n += '^'),
                  (n += t),
                  '$' !== t.charAt(t.length - 1) && (n += '$'),
                  (e = new RegExp(n)))
                : ((n = t.toString()), (e = t)),
              (t) => {
                if (jd(t.value)) return null;
                const i = t.value;
                return e.test(i) ? null : { pattern: { requiredPattern: n, actualValue: i } };
              }
            );
          })(t);
        }
        static nullValidator(t) {
          return null;
        }
        static compose(t) {
          return tp(t);
        }
        static composeAsync(t) {
          return np(t);
        }
      }
      function Yd(t) {
        return jd(t.value) ? { required: !0 } : null;
      }
      function Gd(t) {
        return null;
      }
      function Qd(t) {
        return null != t;
      }
      function Kd(t) {
        const e = $o(t) ? L(t) : t;
        return Wo(e), e;
      }
      function Xd(t) {
        let e = {};
        return (
          t.forEach((t) => {
            e = null != t ? Object.assign(Object.assign({}, e), t) : e;
          }),
          0 === Object.keys(e).length ? null : e
        );
      }
      function Zd(t, e) {
        return e.map((e) => e(t));
      }
      function Jd(t) {
        return t.map((t) =>
          (function (t) {
            return !t.validate;
          })(t)
            ? t
            : (e) => t.validate(e)
        );
      }
      function tp(t) {
        if (!t) return null;
        const e = t.filter(Qd);
        return 0 == e.length
          ? null
          : function (t) {
              return Xd(Zd(t, e));
            };
      }
      function ep(t) {
        return null != t ? tp(Jd(t)) : null;
      }
      function np(t) {
        if (!t) return null;
        const e = t.filter(Qd);
        return 0 == e.length
          ? null
          : function (t) {
              return Id(Zd(t, e).map(Kd)).pipe(E(Xd));
            };
      }
      function ip(t) {
        return null != t ? np(Jd(t)) : null;
      }
      function sp(t, e) {
        return null === t ? [e] : Array.isArray(t) ? [...t, e] : [t, e];
      }
      function rp(t) {
        return t._rawValidators;
      }
      function op(t) {
        return t._rawAsyncValidators;
      }
      let ap = (() => {
          class t {
            constructor() {
              (this._rawValidators = []), (this._rawAsyncValidators = []), (this._onDestroyCallbacks = []);
            }
            get value() {
              return this.control ? this.control.value : null;
            }
            get valid() {
              return this.control ? this.control.valid : null;
            }
            get invalid() {
              return this.control ? this.control.invalid : null;
            }
            get pending() {
              return this.control ? this.control.pending : null;
            }
            get disabled() {
              return this.control ? this.control.disabled : null;
            }
            get enabled() {
              return this.control ? this.control.enabled : null;
            }
            get errors() {
              return this.control ? this.control.errors : null;
            }
            get pristine() {
              return this.control ? this.control.pristine : null;
            }
            get dirty() {
              return this.control ? this.control.dirty : null;
            }
            get touched() {
              return this.control ? this.control.touched : null;
            }
            get status() {
              return this.control ? this.control.status : null;
            }
            get untouched() {
              return this.control ? this.control.untouched : null;
            }
            get statusChanges() {
              return this.control ? this.control.statusChanges : null;
            }
            get valueChanges() {
              return this.control ? this.control.valueChanges : null;
            }
            get path() {
              return null;
            }
            _setValidators(t) {
              (this._rawValidators = t || []), (this._composedValidatorFn = ep(this._rawValidators));
            }
            _setAsyncValidators(t) {
              (this._rawAsyncValidators = t || []), (this._composedAsyncValidatorFn = ip(this._rawAsyncValidators));
            }
            get validator() {
              return this._composedValidatorFn || null;
            }
            get asyncValidator() {
              return this._composedAsyncValidatorFn || null;
            }
            _registerOnDestroy(t) {
              this._onDestroyCallbacks.push(t);
            }
            _invokeOnDestroyCallbacks() {
              this._onDestroyCallbacks.forEach((t) => t()), (this._onDestroyCallbacks = []);
            }
            reset(t) {
              this.control && this.control.reset(t);
            }
            hasError(t, e) {
              return !!this.control && this.control.hasError(t, e);
            }
            getError(t, e) {
              return this.control ? this.control.getError(t, e) : null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({ type: t })),
            t
          );
        })(),
        lp = (() => {
          class t extends ap {
            get formDirective() {
              return null;
            }
            get path() {
              return null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return cp(e || t);
            }),
            (t.ɵdir = Xt({ type: t, features: [go] })),
            t
          );
        })();
      const cp = Gn(lp);
      class hp extends ap {
        constructor() {
          super(...arguments), (this._parent = null), (this.name = null), (this.valueAccessor = null);
        }
      }
      class up {
        constructor(t) {
          this._cd = t;
        }
        is(t) {
          var e, n;
          return !!(null === (n = null === (e = this._cd) || void 0 === e ? void 0 : e.control) || void 0 === n
            ? void 0
            : n[t]);
        }
      }
      let dp = (() => {
          class t extends up {
            constructor(t) {
              super(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(hp, 2));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'formControlName', ''],
                ['', 'ngModel', ''],
                ['', 'formControl', ''],
              ],
              hostVars: 14,
              hostBindings: function (t, e) {
                2 & t &&
                  ha('ng-untouched', e.is('untouched'))('ng-touched', e.is('touched'))('ng-pristine', e.is('pristine'))(
                    'ng-dirty',
                    e.is('dirty')
                  )('ng-valid', e.is('valid'))('ng-invalid', e.is('invalid'))('ng-pending', e.is('pending'));
              },
              features: [go],
            })),
            t
          );
        })(),
        pp = (() => {
          class t extends up {
            constructor(t) {
              super(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(lp, 10));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'formGroupName', ''],
                ['', 'formArrayName', ''],
                ['', 'ngModelGroup', ''],
                ['', 'formGroup', ''],
                ['form', 3, 'ngNoForm', ''],
                ['', 'ngForm', ''],
              ],
              hostVars: 14,
              hostBindings: function (t, e) {
                2 & t &&
                  ha('ng-untouched', e.is('untouched'))('ng-touched', e.is('touched'))('ng-pristine', e.is('pristine'))(
                    'ng-dirty',
                    e.is('dirty')
                  )('ng-valid', e.is('valid'))('ng-invalid', e.is('invalid'))('ng-pending', e.is('pending'));
              },
              features: [go],
            })),
            t
          );
        })();
      function mp(t, e) {
        return [...e.path, t];
      }
      function fp(t, e) {
        bp(t, e, !0),
          e.valueAccessor.writeValue(t.value),
          (function (t, e) {
            e.valueAccessor.registerOnChange((n) => {
              (t._pendingValue = n),
                (t._pendingChange = !0),
                (t._pendingDirty = !0),
                'change' === t.updateOn && vp(t, e);
            });
          })(t, e),
          (function (t, e) {
            const n = (t, n) => {
              e.valueAccessor.writeValue(t), n && e.viewToModelUpdate(t);
            };
            t.registerOnChange(n),
              e._registerOnDestroy(() => {
                t._unregisterOnChange(n);
              });
          })(t, e),
          (function (t, e) {
            e.valueAccessor.registerOnTouched(() => {
              (t._pendingTouched = !0),
                'blur' === t.updateOn && t._pendingChange && vp(t, e),
                'submit' !== t.updateOn && t.markAsTouched();
            });
          })(t, e),
          (function (t, e) {
            if (e.valueAccessor.setDisabledState) {
              const n = (t) => {
                e.valueAccessor.setDisabledState(t);
              };
              t.registerOnDisabledChange(n),
                e._registerOnDestroy(() => {
                  t._unregisterOnDisabledChange(n);
                });
            }
          })(t, e);
      }
      function gp(t, e, n = !0) {
        const i = () => {};
        e.valueAccessor && (e.valueAccessor.registerOnChange(i), e.valueAccessor.registerOnTouched(i)),
          yp(t, e, !0),
          t && (e._invokeOnDestroyCallbacks(), t._registerOnCollectionChange(() => {}));
      }
      function _p(t, e) {
        t.forEach((t) => {
          t.registerOnValidatorChange && t.registerOnValidatorChange(e);
        });
      }
      function bp(t, e, n) {
        const i = rp(t);
        null !== e.validator ? t.setValidators(sp(i, e.validator)) : 'function' == typeof i && t.setValidators([i]);
        const s = op(t);
        if (
          (null !== e.asyncValidator
            ? t.setAsyncValidators(sp(s, e.asyncValidator))
            : 'function' == typeof s && t.setAsyncValidators([s]),
          n)
        ) {
          const n = () => t.updateValueAndValidity();
          _p(e._rawValidators, n), _p(e._rawAsyncValidators, n);
        }
      }
      function yp(t, e, n) {
        let i = !1;
        if (null !== t) {
          if (null !== e.validator) {
            const n = rp(t);
            if (Array.isArray(n) && n.length > 0) {
              const s = n.filter((t) => t !== e.validator);
              s.length !== n.length && ((i = !0), t.setValidators(s));
            }
          }
          if (null !== e.asyncValidator) {
            const n = op(t);
            if (Array.isArray(n) && n.length > 0) {
              const s = n.filter((t) => t !== e.asyncValidator);
              s.length !== n.length && ((i = !0), t.setAsyncValidators(s));
            }
          }
        }
        if (n) {
          const t = () => {};
          _p(e._rawValidators, t), _p(e._rawAsyncValidators, t);
        }
        return i;
      }
      function vp(t, e) {
        t._pendingDirty && t.markAsDirty(),
          t.setValue(t._pendingValue, { emitModelToViewChange: !1 }),
          e.viewToModelUpdate(t._pendingValue),
          (t._pendingChange = !1);
      }
      function wp(t, e) {
        bp(t, e, !1);
      }
      function xp(t, e) {
        if (!t.hasOwnProperty('model')) return !1;
        const n = t.model;
        return !!n.isFirstChange() || !Object.is(e, n.currentValue);
      }
      function Cp(t, e) {
        t._syncPendingControls(),
          e.forEach((t) => {
            const e = t.control;
            'submit' === e.updateOn &&
              e._pendingChange &&
              (t.viewToModelUpdate(e._pendingValue), (e._pendingChange = !1));
          });
      }
      function kp(t, e) {
        if (!e) return null;
        let n, i, s;
        return (
          Array.isArray(e),
          e.forEach((t) => {
            t.constructor === zd ? (n = t) : Object.getPrototypeOf(t.constructor) === Fd ? (i = t) : (s = t);
          }),
          s || i || n || null
        );
      }
      function Sp(t, e) {
        const n = t.indexOf(e);
        n > -1 && t.splice(n, 1);
      }
      const Ep = 'VALID',
        Op = 'INVALID',
        Pp = 'PENDING',
        Ap = 'DISABLED';
      function Tp(t) {
        return (Ip(t) ? t.validators : t) || null;
      }
      function Dp(t) {
        return Array.isArray(t) ? ep(t) : t || null;
      }
      function Mp(t, e) {
        return (Ip(e) ? e.asyncValidators : t) || null;
      }
      function Rp(t) {
        return Array.isArray(t) ? ip(t) : t || null;
      }
      function Ip(t) {
        return null != t && !Array.isArray(t) && 'object' == typeof t;
      }
      class Lp {
        constructor(t, e) {
          (this._hasOwnPendingAsyncValidator = !1),
            (this._onCollectionChange = () => {}),
            (this._parent = null),
            (this.pristine = !0),
            (this.touched = !1),
            (this._onDisabledChange = []),
            (this._rawValidators = t),
            (this._rawAsyncValidators = e),
            (this._composedValidatorFn = Dp(this._rawValidators)),
            (this._composedAsyncValidatorFn = Rp(this._rawAsyncValidators));
        }
        get validator() {
          return this._composedValidatorFn;
        }
        set validator(t) {
          this._rawValidators = this._composedValidatorFn = t;
        }
        get asyncValidator() {
          return this._composedAsyncValidatorFn;
        }
        set asyncValidator(t) {
          this._rawAsyncValidators = this._composedAsyncValidatorFn = t;
        }
        get parent() {
          return this._parent;
        }
        get valid() {
          return this.status === Ep;
        }
        get invalid() {
          return this.status === Op;
        }
        get pending() {
          return this.status == Pp;
        }
        get disabled() {
          return this.status === Ap;
        }
        get enabled() {
          return this.status !== Ap;
        }
        get dirty() {
          return !this.pristine;
        }
        get untouched() {
          return !this.touched;
        }
        get updateOn() {
          return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';
        }
        setValidators(t) {
          (this._rawValidators = t), (this._composedValidatorFn = Dp(t));
        }
        setAsyncValidators(t) {
          (this._rawAsyncValidators = t), (this._composedAsyncValidatorFn = Rp(t));
        }
        clearValidators() {
          this.validator = null;
        }
        clearAsyncValidators() {
          this.asyncValidator = null;
        }
        markAsTouched(t = {}) {
          (this.touched = !0), this._parent && !t.onlySelf && this._parent.markAsTouched(t);
        }
        markAllAsTouched() {
          this.markAsTouched({ onlySelf: !0 }), this._forEachChild((t) => t.markAllAsTouched());
        }
        markAsUntouched(t = {}) {
          (this.touched = !1),
            (this._pendingTouched = !1),
            this._forEachChild((t) => {
              t.markAsUntouched({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        markAsDirty(t = {}) {
          (this.pristine = !1), this._parent && !t.onlySelf && this._parent.markAsDirty(t);
        }
        markAsPristine(t = {}) {
          (this.pristine = !0),
            (this._pendingDirty = !1),
            this._forEachChild((t) => {
              t.markAsPristine({ onlySelf: !0 });
            }),
            this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        markAsPending(t = {}) {
          (this.status = Pp),
            !1 !== t.emitEvent && this.statusChanges.emit(this.status),
            this._parent && !t.onlySelf && this._parent.markAsPending(t);
        }
        disable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Ap),
            (this.errors = null),
            this._forEachChild((e) => {
              e.disable(Object.assign(Object.assign({}, t), { onlySelf: !0 }));
            }),
            this._updateValue(),
            !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)),
            this._updateAncestors(Object.assign(Object.assign({}, t), { skipPristineCheck: e })),
            this._onDisabledChange.forEach((t) => t(!0));
        }
        enable(t = {}) {
          const e = this._parentMarkedDirty(t.onlySelf);
          (this.status = Ep),
            this._forEachChild((e) => {
              e.enable(Object.assign(Object.assign({}, t), { onlySelf: !0 }));
            }),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent }),
            this._updateAncestors(Object.assign(Object.assign({}, t), { skipPristineCheck: e })),
            this._onDisabledChange.forEach((t) => t(!1));
        }
        _updateAncestors(t) {
          this._parent &&
            !t.onlySelf &&
            (this._parent.updateValueAndValidity(t),
            t.skipPristineCheck || this._parent._updatePristine(),
            this._parent._updateTouched());
        }
        setParent(t) {
          this._parent = t;
        }
        updateValueAndValidity(t = {}) {
          this._setInitialStatus(),
            this._updateValue(),
            this.enabled &&
              (this._cancelExistingSubscription(),
              (this.errors = this._runValidator()),
              (this.status = this._calculateStatus()),
              (this.status !== Ep && this.status !== Pp) || this._runAsyncValidator(t.emitEvent)),
            !1 !== t.emitEvent && (this.valueChanges.emit(this.value), this.statusChanges.emit(this.status)),
            this._parent && !t.onlySelf && this._parent.updateValueAndValidity(t);
        }
        _updateTreeValidity(t = { emitEvent: !0 }) {
          this._forEachChild((e) => e._updateTreeValidity(t)),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: t.emitEvent });
        }
        _setInitialStatus() {
          this.status = this._allControlsDisabled() ? Ap : Ep;
        }
        _runValidator() {
          return this.validator ? this.validator(this) : null;
        }
        _runAsyncValidator(t) {
          if (this.asyncValidator) {
            (this.status = Pp), (this._hasOwnPendingAsyncValidator = !0);
            const e = Kd(this.asyncValidator(this));
            this._asyncValidationSubscription = e.subscribe((e) => {
              (this._hasOwnPendingAsyncValidator = !1), this.setErrors(e, { emitEvent: t });
            });
          }
        }
        _cancelExistingSubscription() {
          this._asyncValidationSubscription &&
            (this._asyncValidationSubscription.unsubscribe(), (this._hasOwnPendingAsyncValidator = !1));
        }
        setErrors(t, e = {}) {
          (this.errors = t), this._updateControlsErrors(!1 !== e.emitEvent);
        }
        get(t) {
          return (function (t, e, n) {
            if (null == e) return null;
            if ((Array.isArray(e) || (e = e.split('.')), Array.isArray(e) && 0 === e.length)) return null;
            let i = t;
            return (
              e.forEach((t) => {
                i =
                  i instanceof Np
                    ? i.controls.hasOwnProperty(t)
                      ? i.controls[t]
                      : null
                    : (i instanceof Vp && i.at(t)) || null;
              }),
              i
            );
          })(this, t);
        }
        getError(t, e) {
          const n = e ? this.get(e) : this;
          return n && n.errors ? n.errors[t] : null;
        }
        hasError(t, e) {
          return !!this.getError(t, e);
        }
        get root() {
          let t = this;
          for (; t._parent; ) t = t._parent;
          return t;
        }
        _updateControlsErrors(t) {
          (this.status = this._calculateStatus()),
            t && this.statusChanges.emit(this.status),
            this._parent && this._parent._updateControlsErrors(t);
        }
        _initObservables() {
          (this.valueChanges = new cc()), (this.statusChanges = new cc());
        }
        _calculateStatus() {
          return this._allControlsDisabled()
            ? Ap
            : this.errors
            ? Op
            : this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(Pp)
            ? Pp
            : this._anyControlsHaveStatus(Op)
            ? Op
            : Ep;
        }
        _anyControlsHaveStatus(t) {
          return this._anyControls((e) => e.status === t);
        }
        _anyControlsDirty() {
          return this._anyControls((t) => t.dirty);
        }
        _anyControlsTouched() {
          return this._anyControls((t) => t.touched);
        }
        _updatePristine(t = {}) {
          (this.pristine = !this._anyControlsDirty()), this._parent && !t.onlySelf && this._parent._updatePristine(t);
        }
        _updateTouched(t = {}) {
          (this.touched = this._anyControlsTouched()), this._parent && !t.onlySelf && this._parent._updateTouched(t);
        }
        _isBoxedValue(t) {
          return 'object' == typeof t && null !== t && 2 === Object.keys(t).length && 'value' in t && 'disabled' in t;
        }
        _registerOnCollectionChange(t) {
          this._onCollectionChange = t;
        }
        _setUpdateStrategy(t) {
          Ip(t) && null != t.updateOn && (this._updateOn = t.updateOn);
        }
        _parentMarkedDirty(t) {
          return !t && !(!this._parent || !this._parent.dirty) && !this._parent._anyControlsDirty();
        }
      }
      class Fp extends Lp {
        constructor(t = null, e, n) {
          super(Tp(e), Mp(n, e)),
            (this._onChange = []),
            this._applyFormState(t),
            this._setUpdateStrategy(e),
            this._initObservables(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!n });
        }
        setValue(t, e = {}) {
          (this.value = this._pendingValue = t),
            this._onChange.length &&
              !1 !== e.emitModelToViewChange &&
              this._onChange.forEach((t) => t(this.value, !1 !== e.emitViewToModelChange)),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          this.setValue(t, e);
        }
        reset(t = null, e = {}) {
          this._applyFormState(t),
            this.markAsPristine(e),
            this.markAsUntouched(e),
            this.setValue(this.value, e),
            (this._pendingChange = !1);
        }
        _updateValue() {}
        _anyControls(t) {
          return !1;
        }
        _allControlsDisabled() {
          return this.disabled;
        }
        registerOnChange(t) {
          this._onChange.push(t);
        }
        _unregisterOnChange(t) {
          Sp(this._onChange, t);
        }
        registerOnDisabledChange(t) {
          this._onDisabledChange.push(t);
        }
        _unregisterOnDisabledChange(t) {
          Sp(this._onDisabledChange, t);
        }
        _forEachChild(t) {}
        _syncPendingControls() {
          return !(
            'submit' !== this.updateOn ||
            (this._pendingDirty && this.markAsDirty(),
            this._pendingTouched && this.markAsTouched(),
            !this._pendingChange) ||
            (this.setValue(this._pendingValue, { onlySelf: !0, emitModelToViewChange: !1 }), 0)
          );
        }
        _applyFormState(t) {
          this._isBoxedValue(t)
            ? ((this.value = this._pendingValue = t.value),
              t.disabled ? this.disable({ onlySelf: !0, emitEvent: !1 }) : this.enable({ onlySelf: !0, emitEvent: !1 }))
            : (this.value = this._pendingValue = t);
        }
      }
      class Np extends Lp {
        constructor(t, e, n) {
          super(Tp(e), Mp(n, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!n });
        }
        registerControl(t, e) {
          return this.controls[t]
            ? this.controls[t]
            : ((this.controls[t] = e), e.setParent(this), e._registerOnCollectionChange(this._onCollectionChange), e);
        }
        addControl(t, e) {
          this.registerControl(t, e), this.updateValueAndValidity(), this._onCollectionChange();
        }
        removeControl(t) {
          this.controls[t] && this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        setControl(t, e) {
          this.controls[t] && this.controls[t]._registerOnCollectionChange(() => {}),
            delete this.controls[t],
            e && this.registerControl(t, e),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        contains(t) {
          return this.controls.hasOwnProperty(t) && this.controls[t].enabled;
        }
        setValue(t, e = {}) {
          this._checkAllValuesPresent(t),
            Object.keys(t).forEach((n) => {
              this._throwIfControlMissing(n), this.controls[n].setValue(t[n], { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (Object.keys(t).forEach((n) => {
              this.controls[n] && this.controls[n].patchValue(t[n], { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = {}, e = {}) {
          this._forEachChild((n, i) => {
            n.reset(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this._reduceChildren({}, (t, e, n) => ((t[n] = e instanceof Fp ? e.value : e.getRawValue()), t));
        }
        _syncPendingControls() {
          let t = this._reduceChildren(!1, (t, e) => !!e._syncPendingControls() || t);
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _throwIfControlMissing(t) {
          if (!Object.keys(this.controls).length)
            throw new Error(
              "\n        There are no form controls registered with this group yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.controls[t]) throw new Error(`Cannot find form control with name: ${t}.`);
        }
        _forEachChild(t) {
          Object.keys(this.controls).forEach((e) => {
            const n = this.controls[e];
            n && t(n, e);
          });
        }
        _setUpControls() {
          this._forEachChild((t) => {
            t.setParent(this), t._registerOnCollectionChange(this._onCollectionChange);
          });
        }
        _updateValue() {
          this.value = this._reduceValue();
        }
        _anyControls(t) {
          for (const e of Object.keys(this.controls)) {
            const n = this.controls[e];
            if (this.contains(e) && t(n)) return !0;
          }
          return !1;
        }
        _reduceValue() {
          return this._reduceChildren({}, (t, e, n) => ((e.enabled || this.disabled) && (t[n] = e.value), t));
        }
        _reduceChildren(t, e) {
          let n = t;
          return (
            this._forEachChild((t, i) => {
              n = e(n, t, i);
            }),
            n
          );
        }
        _allControlsDisabled() {
          for (const t of Object.keys(this.controls)) if (this.controls[t].enabled) return !1;
          return Object.keys(this.controls).length > 0 || this.disabled;
        }
        _checkAllValuesPresent(t) {
          this._forEachChild((e, n) => {
            if (void 0 === t[n]) throw new Error(`Must supply a value for form control with name: '${n}'.`);
          });
        }
      }
      class Vp extends Lp {
        constructor(t, e, n) {
          super(Tp(e), Mp(n, e)),
            (this.controls = t),
            this._initObservables(),
            this._setUpdateStrategy(e),
            this._setUpControls(),
            this.updateValueAndValidity({ onlySelf: !0, emitEvent: !!n });
        }
        at(t) {
          return this.controls[t];
        }
        push(t) {
          this.controls.push(t), this._registerControl(t), this.updateValueAndValidity(), this._onCollectionChange();
        }
        insert(t, e) {
          this.controls.splice(t, 0, e), this._registerControl(e), this.updateValueAndValidity();
        }
        removeAt(t) {
          this.controls[t] && this.controls[t]._registerOnCollectionChange(() => {}),
            this.controls.splice(t, 1),
            this.updateValueAndValidity();
        }
        setControl(t, e) {
          this.controls[t] && this.controls[t]._registerOnCollectionChange(() => {}),
            this.controls.splice(t, 1),
            e && (this.controls.splice(t, 0, e), this._registerControl(e)),
            this.updateValueAndValidity(),
            this._onCollectionChange();
        }
        get length() {
          return this.controls.length;
        }
        setValue(t, e = {}) {
          this._checkAllValuesPresent(t),
            t.forEach((t, n) => {
              this._throwIfControlMissing(n), this.at(n).setValue(t, { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e);
        }
        patchValue(t, e = {}) {
          null != t &&
            (t.forEach((t, n) => {
              this.at(n) && this.at(n).patchValue(t, { onlySelf: !0, emitEvent: e.emitEvent });
            }),
            this.updateValueAndValidity(e));
        }
        reset(t = [], e = {}) {
          this._forEachChild((n, i) => {
            n.reset(t[i], { onlySelf: !0, emitEvent: e.emitEvent });
          }),
            this._updatePristine(e),
            this._updateTouched(e),
            this.updateValueAndValidity(e);
        }
        getRawValue() {
          return this.controls.map((t) => (t instanceof Fp ? t.value : t.getRawValue()));
        }
        clear() {
          this.controls.length < 1 ||
            (this._forEachChild((t) => t._registerOnCollectionChange(() => {})),
            this.controls.splice(0),
            this.updateValueAndValidity());
        }
        _syncPendingControls() {
          let t = this.controls.reduce((t, e) => !!e._syncPendingControls() || t, !1);
          return t && this.updateValueAndValidity({ onlySelf: !0 }), t;
        }
        _throwIfControlMissing(t) {
          if (!this.controls.length)
            throw new Error(
              "\n        There are no form controls registered with this array yet. If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      "
            );
          if (!this.at(t)) throw new Error(`Cannot find form control at index ${t}`);
        }
        _forEachChild(t) {
          this.controls.forEach((e, n) => {
            t(e, n);
          });
        }
        _updateValue() {
          this.value = this.controls.filter((t) => t.enabled || this.disabled).map((t) => t.value);
        }
        _anyControls(t) {
          return this.controls.some((e) => e.enabled && t(e));
        }
        _setUpControls() {
          this._forEachChild((t) => this._registerControl(t));
        }
        _checkAllValuesPresent(t) {
          this._forEachChild((e, n) => {
            if (void 0 === t[n]) throw new Error(`Must supply a value for form control at index: ${n}.`);
          });
        }
        _allControlsDisabled() {
          for (const t of this.controls) if (t.enabled) return !1;
          return this.controls.length > 0 || this.disabled;
        }
        _registerControl(t) {
          t.setParent(this), t._registerOnCollectionChange(this._onCollectionChange);
        }
      }
      const Bp = { provide: lp, useExisting: ot(() => jp) },
        zp = (() => Promise.resolve(null))();
      let jp = (() => {
          class t extends lp {
            constructor(t, e) {
              super(),
                (this.submitted = !1),
                (this._directives = []),
                (this.ngSubmit = new cc()),
                (this.form = new Np({}, ep(t), ip(e)));
            }
            ngAfterViewInit() {
              this._setUpdateStrategy();
            }
            get formDirective() {
              return this;
            }
            get control() {
              return this.form;
            }
            get path() {
              return [];
            }
            get controls() {
              return this.form.controls;
            }
            addControl(t) {
              zp.then(() => {
                const e = this._findContainer(t.path);
                (t.control = e.registerControl(t.name, t.control)),
                  fp(t.control, t),
                  t.control.updateValueAndValidity({ emitEvent: !1 }),
                  this._directives.push(t);
              });
            }
            getControl(t) {
              return this.form.get(t.path);
            }
            removeControl(t) {
              zp.then(() => {
                const e = this._findContainer(t.path);
                e && e.removeControl(t.name), Sp(this._directives, t);
              });
            }
            addFormGroup(t) {
              zp.then(() => {
                const e = this._findContainer(t.path),
                  n = new Np({});
                wp(n, t), e.registerControl(t.name, n), n.updateValueAndValidity({ emitEvent: !1 });
              });
            }
            removeFormGroup(t) {
              zp.then(() => {
                const e = this._findContainer(t.path);
                e && e.removeControl(t.name);
              });
            }
            getFormGroup(t) {
              return this.form.get(t.path);
            }
            updateModel(t, e) {
              zp.then(() => {
                this.form.get(t.path).setValue(e);
              });
            }
            setValue(t) {
              this.control.setValue(t);
            }
            onSubmit(t) {
              return (this.submitted = !0), Cp(this.form, this._directives), this.ngSubmit.emit(t), !1;
            }
            onReset() {
              this.resetForm();
            }
            resetForm(t) {
              this.form.reset(t), (this.submitted = !1);
            }
            _setUpdateStrategy() {
              this.options && null != this.options.updateOn && (this.form._updateOn = this.options.updateOn);
            }
            _findContainer(t) {
              return t.pop(), t.length ? this.form.get(t) : this.form;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro($d, 10), Ro(qd, 10));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['form', 3, 'ngNoForm', '', 3, 'formGroup', ''], ['ng-form'], ['', 'ngForm', '']],
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('submit', function (t) {
                    return e.onSubmit(t);
                  })('reset', function () {
                    return e.onReset();
                  });
              },
              inputs: { options: ['ngFormOptions', 'options'] },
              outputs: { ngSubmit: 'ngSubmit' },
              exportAs: ['ngForm'],
              features: [Wa([Bp]), go],
            })),
            t
          );
        })(),
        Hp = (() => {
          class t extends lp {
            ngOnInit() {
              this._checkParentType(), this.formDirective.addFormGroup(this);
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeFormGroup(this);
            }
            get control() {
              return this.formDirective.getFormGroup(this);
            }
            get path() {
              return mp(null == this.name ? this.name : this.name.toString(), this._parent);
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            _checkParentType() {}
          }
          return (
            (t.ɵfac = function (e) {
              return $p(e || t);
            }),
            (t.ɵdir = Xt({ type: t, features: [go] })),
            t
          );
        })();
      const $p = Gn(Hp),
        qp = { provide: hp, useExisting: ot(() => Up) },
        Wp = (() => Promise.resolve(null))();
      let Up = (() => {
          class t extends hp {
            constructor(t, e, n, i) {
              super(),
                (this.control = new Fp()),
                (this._registered = !1),
                (this.update = new cc()),
                (this._parent = t),
                this._setValidators(e),
                this._setAsyncValidators(n),
                (this.valueAccessor = kp(0, i));
            }
            ngOnChanges(t) {
              this._checkForErrors(),
                this._registered || this._setUpControl(),
                'isDisabled' in t && this._updateDisabled(t),
                xp(t, this.viewModel) && (this._updateValue(this.model), (this.viewModel = this.model));
            }
            ngOnDestroy() {
              this.formDirective && this.formDirective.removeControl(this);
            }
            get path() {
              return this._parent ? mp(this.name, this._parent) : [this.name];
            }
            get formDirective() {
              return this._parent ? this._parent.formDirective : null;
            }
            viewToModelUpdate(t) {
              (this.viewModel = t), this.update.emit(t);
            }
            _setUpControl() {
              this._setUpdateStrategy(),
                this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this),
                (this._registered = !0);
            }
            _setUpdateStrategy() {
              this.options && null != this.options.updateOn && (this.control._updateOn = this.options.updateOn);
            }
            _isStandalone() {
              return !this._parent || !(!this.options || !this.options.standalone);
            }
            _setUpStandalone() {
              fp(this.control, this), this.control.updateValueAndValidity({ emitEvent: !1 });
            }
            _checkForErrors() {
              this._isStandalone() || this._checkParentType(), this._checkName();
            }
            _checkParentType() {}
            _checkName() {
              this.options && this.options.name && (this.name = this.options.name), this._isStandalone();
            }
            _updateValue(t) {
              Wp.then(() => {
                this.control.setValue(t, { emitViewToModelChange: !1 });
              });
            }
            _updateDisabled(t) {
              const e = t.isDisabled.currentValue,
                n = '' === e || (e && 'false' !== e);
              Wp.then(() => {
                n && !this.control.disabled
                  ? this.control.disable()
                  : !n && this.control.disabled && this.control.enable();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(lp, 9), Ro($d, 10), Ro(qd, 10), Ro(Nd, 10));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'ngModel', '', 3, 'formControlName', '', 3, 'formControl', '']],
              inputs: {
                name: 'name',
                isDisabled: ['disabled', 'isDisabled'],
                model: ['ngModel', 'model'],
                options: ['ngModelOptions', 'options'],
              },
              outputs: { update: 'ngModelChange' },
              exportAs: ['ngModel'],
              features: [Wa([qp]), go, ue],
            })),
            t
          );
        })(),
        Yp = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['form', 3, 'ngNoForm', '', 3, 'ngNativeValidate', '']],
              hostAttrs: ['novalidate', ''],
            })),
            t
          );
        })();
      const Gp = { provide: Nd, useExisting: ot(() => Qp), multi: !0 };
      let Qp = (() => {
          class t extends Fd {
            constructor(t, e) {
              super(),
                (this._renderer = t),
                (this._elementRef = e),
                (this.onChange = (t) => {}),
                (this.onTouched = () => {});
            }
            writeValue(t) {
              this._renderer.setProperty(this._elementRef.nativeElement, 'value', null == t ? '' : t);
            }
            registerOnChange(t) {
              this.onChange = (e) => {
                t('' == e ? null : parseFloat(e));
              };
            }
            registerOnTouched(t) {
              this.onTouched = t;
            }
            setDisabledState(t) {
              this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(el), Ro(Za));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['input', 'type', 'number', 'formControlName', ''],
                ['input', 'type', 'number', 'formControl', ''],
                ['input', 'type', 'number', 'ngModel', ''],
              ],
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('input', function (t) {
                    return e.onChange(t.target.value);
                  })('blur', function () {
                    return e.onTouched();
                  });
              },
              features: [Wa([Gp]), go],
            })),
            t
          );
        })(),
        Kp = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })();
      const Xp = new Jn('NgModelWithFormControlWarning'),
        Zp = { provide: hp, useExisting: ot(() => Jp) };
      let Jp = (() => {
        class t extends hp {
          constructor(t, e, n, i) {
            super(),
              (this._ngModelWarningConfig = i),
              (this.update = new cc()),
              (this._ngModelWarningSent = !1),
              this._setValidators(t),
              this._setAsyncValidators(e),
              (this.valueAccessor = kp(0, n));
          }
          set isDisabled(t) {}
          ngOnChanges(t) {
            if (this._isControlChanged(t)) {
              const e = t.form.previousValue;
              e && gp(e, this, !1),
                fp(this.form, this),
                this.control.disabled && this.valueAccessor.setDisabledState && this.valueAccessor.setDisabledState(!0),
                this.form.updateValueAndValidity({ emitEvent: !1 });
            }
            xp(t, this.viewModel) && (this.form.setValue(this.model), (this.viewModel = this.model));
          }
          ngOnDestroy() {
            this.form && gp(this.form, this, !1);
          }
          get path() {
            return [];
          }
          get control() {
            return this.form;
          }
          viewToModelUpdate(t) {
            (this.viewModel = t), this.update.emit(t);
          }
          _isControlChanged(t) {
            return t.hasOwnProperty('form');
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro($d, 10), Ro(qd, 10), Ro(Nd, 10), Ro(Xp, 8));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'formControl', '']],
            inputs: {
              isDisabled: ['disabled', 'isDisabled'],
              form: ['formControl', 'form'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            exportAs: ['ngForm'],
            features: [Wa([Zp]), go, ue],
          })),
          (t._ngModelWarningSentOnce = !1),
          t
        );
      })();
      const tm = { provide: lp, useExisting: ot(() => em) };
      let em = (() => {
        class t extends lp {
          constructor(t, e) {
            super(),
              (this.validators = t),
              (this.asyncValidators = e),
              (this.submitted = !1),
              (this._onCollectionChange = () => this._updateDomValue()),
              (this.directives = []),
              (this.form = null),
              (this.ngSubmit = new cc()),
              this._setValidators(t),
              this._setAsyncValidators(e);
          }
          ngOnChanges(t) {
            this._checkFormPresent(),
              t.hasOwnProperty('form') &&
                (this._updateValidators(),
                this._updateDomValue(),
                this._updateRegistrations(),
                (this._oldForm = this.form));
          }
          ngOnDestroy() {
            this.form &&
              (yp(this.form, this, !1),
              this.form._onCollectionChange === this._onCollectionChange &&
                this.form._registerOnCollectionChange(() => {}));
          }
          get formDirective() {
            return this;
          }
          get control() {
            return this.form;
          }
          get path() {
            return [];
          }
          addControl(t) {
            const e = this.form.get(t.path);
            return fp(e, t), e.updateValueAndValidity({ emitEvent: !1 }), this.directives.push(t), e;
          }
          getControl(t) {
            return this.form.get(t.path);
          }
          removeControl(t) {
            gp(t.control || null, t, !1), Sp(this.directives, t);
          }
          addFormGroup(t) {
            this._setUpFormContainer(t);
          }
          removeFormGroup(t) {
            this._cleanUpFormContainer(t);
          }
          getFormGroup(t) {
            return this.form.get(t.path);
          }
          addFormArray(t) {
            this._setUpFormContainer(t);
          }
          removeFormArray(t) {
            this._cleanUpFormContainer(t);
          }
          getFormArray(t) {
            return this.form.get(t.path);
          }
          updateModel(t, e) {
            this.form.get(t.path).setValue(e);
          }
          onSubmit(t) {
            return (this.submitted = !0), Cp(this.form, this.directives), this.ngSubmit.emit(t), !1;
          }
          onReset() {
            this.resetForm();
          }
          resetForm(t) {
            this.form.reset(t), (this.submitted = !1);
          }
          _updateDomValue() {
            this.directives.forEach((t) => {
              const e = t.control,
                n = this.form.get(t.path);
              e !== n && (gp(e || null, t), n instanceof Fp && (fp(n, t), (t.control = n)));
            }),
              this.form._updateTreeValidity({ emitEvent: !1 });
          }
          _setUpFormContainer(t) {
            const e = this.form.get(t.path);
            wp(e, t), e.updateValueAndValidity({ emitEvent: !1 });
          }
          _cleanUpFormContainer(t) {
            if (this.form) {
              const e = this.form.get(t.path);
              e &&
                (function (t, e) {
                  return yp(t, e, !1);
                })(e, t) &&
                e.updateValueAndValidity({ emitEvent: !1 });
            }
          }
          _updateRegistrations() {
            this.form._registerOnCollectionChange(this._onCollectionChange),
              this._oldForm && this._oldForm._registerOnCollectionChange(() => {});
          }
          _updateValidators() {
            bp(this.form, this, !1), this._oldForm && yp(this._oldForm, this, !1);
          }
          _checkFormPresent() {}
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro($d, 10), Ro(qd, 10));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'formGroup', '']],
            hostBindings: function (t, e) {
              1 & t &&
                Uo('submit', function (t) {
                  return e.onSubmit(t);
                })('reset', function () {
                  return e.onReset();
                });
            },
            inputs: { form: ['formGroup', 'form'] },
            outputs: { ngSubmit: 'ngSubmit' },
            exportAs: ['ngForm'],
            features: [Wa([tm]), go, ue],
          })),
          t
        );
      })();
      const nm = { provide: lp, useExisting: ot(() => im) };
      let im = (() => {
        class t extends Hp {
          constructor(t, e, n) {
            super(), (this._parent = t), this._setValidators(e), this._setAsyncValidators(n);
          }
          _checkParentType() {
            om(this._parent);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(lp, 13), Ro($d, 10), Ro(qd, 10));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'formGroupName', '']],
            inputs: { name: ['formGroupName', 'name'] },
            features: [Wa([nm]), go],
          })),
          t
        );
      })();
      const sm = { provide: lp, useExisting: ot(() => rm) };
      let rm = (() => {
        class t extends lp {
          constructor(t, e, n) {
            super(), (this._parent = t), this._setValidators(e), this._setAsyncValidators(n);
          }
          ngOnInit() {
            this._checkParentType(), this.formDirective.addFormArray(this);
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeFormArray(this);
          }
          get control() {
            return this.formDirective.getFormArray(this);
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          get path() {
            return mp(null == this.name ? this.name : this.name.toString(), this._parent);
          }
          _checkParentType() {
            om(this._parent);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(lp, 13), Ro($d, 10), Ro(qd, 10));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'formArrayName', '']],
            inputs: { name: ['formArrayName', 'name'] },
            features: [Wa([sm]), go],
          })),
          t
        );
      })();
      function om(t) {
        return !(t instanceof im || t instanceof em || t instanceof rm);
      }
      const am = { provide: hp, useExisting: ot(() => lm) };
      let lm = (() => {
        class t extends hp {
          constructor(t, e, n, i, s) {
            super(),
              (this._ngModelWarningConfig = s),
              (this._added = !1),
              (this.update = new cc()),
              (this._ngModelWarningSent = !1),
              (this._parent = t),
              this._setValidators(e),
              this._setAsyncValidators(n),
              (this.valueAccessor = kp(0, i));
          }
          set isDisabled(t) {}
          ngOnChanges(t) {
            this._added || this._setUpControl(),
              xp(t, this.viewModel) &&
                ((this.viewModel = this.model), this.formDirective.updateModel(this, this.model));
          }
          ngOnDestroy() {
            this.formDirective && this.formDirective.removeControl(this);
          }
          viewToModelUpdate(t) {
            (this.viewModel = t), this.update.emit(t);
          }
          get path() {
            return mp(null == this.name ? this.name : this.name.toString(), this._parent);
          }
          get formDirective() {
            return this._parent ? this._parent.formDirective : null;
          }
          _checkParentType() {}
          _setUpControl() {
            this._checkParentType(),
              (this.control = this.formDirective.addControl(this)),
              this.control.disabled && this.valueAccessor.setDisabledState && this.valueAccessor.setDisabledState(!0),
              (this._added = !0);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(lp, 13), Ro($d, 10), Ro(qd, 10), Ro(Nd, 10), Ro(Xp, 8));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'formControlName', '']],
            inputs: {
              isDisabled: ['disabled', 'isDisabled'],
              name: ['formControlName', 'name'],
              model: ['ngModel', 'model'],
            },
            outputs: { update: 'ngModelChange' },
            features: [Wa([am]), go, ue],
          })),
          (t._ngModelWarningSentOnce = !1),
          t
        );
      })();
      const cm = { provide: $d, useExisting: ot(() => hm), multi: !0 };
      let hm = (() => {
          class t {
            constructor() {
              this._required = !1;
            }
            get required() {
              return this._required;
            }
            set required(t) {
              (this._required = null != t && !1 !== t && 'false' != `${t}`), this._onChange && this._onChange();
            }
            validate(t) {
              return this.required ? Yd(t) : null;
            }
            registerOnValidatorChange(t) {
              this._onChange = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'required', '', 'formControlName', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'formControl', '', 3, 'type', 'checkbox'],
                ['', 'required', '', 'ngModel', '', 3, 'type', 'checkbox'],
              ],
              hostVars: 1,
              hostBindings: function (t, e) {
                2 & t && Ao('required', e.required ? '' : null);
              },
              inputs: { required: 'required' },
              features: [Wa([cm])],
            })),
            t
          );
        })(),
        um = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Kp]] })),
            t
          );
        })(),
        dm = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [um] })),
            t
          );
        })(),
        pm = (() => {
          class t {
            static withConfig(e) {
              return { ngModule: t, providers: [{ provide: Xp, useValue: e.warnOnNgModelWithFormControl }] };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [um] })),
            t
          );
        })(),
        mm = (() => {
          class t {
            group(t, e = null) {
              const n = this._reduceControls(t);
              let i,
                s = null,
                r = null;
              return (
                null != e &&
                  ((function (t) {
                    return void 0 !== t.asyncValidators || void 0 !== t.validators || void 0 !== t.updateOn;
                  })(e)
                    ? ((s = null != e.validators ? e.validators : null),
                      (r = null != e.asyncValidators ? e.asyncValidators : null),
                      (i = null != e.updateOn ? e.updateOn : void 0))
                    : ((s = null != e.validator ? e.validator : null),
                      (r = null != e.asyncValidator ? e.asyncValidator : null))),
                new Np(n, { asyncValidators: r, updateOn: i, validators: s })
              );
            }
            control(t, e, n) {
              return new Fp(t, e, n);
            }
            array(t, e, n) {
              const i = t.map((t) => this._createControl(t));
              return new Vp(i, e, n);
            }
            _reduceControls(t) {
              const e = {};
              return (
                Object.keys(t).forEach((n) => {
                  e[n] = this._createControl(t[n]);
                }),
                e
              );
            }
            _createControl(t) {
              return t instanceof Fp || t instanceof Np || t instanceof Vp
                ? t
                : Array.isArray(t)
                ? this.control(t[0], t.length > 1 ? t[1] : null, t.length > 2 ? t[2] : null)
                : this.control(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: pm,
            })),
            t
          );
        })();
      function fm(...t) {
        let e = t[t.length - 1];
        return S(e) ? (t.pop(), I(t, e)) : $(t);
      }
      function gm(t, e) {
        return B(t, e, 1);
      }
      function _m(t, e) {
        return function (n) {
          return n.lift(new bm(t, e));
        };
      }
      class bm {
        constructor(t, e) {
          (this.predicate = t), (this.thisArg = e);
        }
        call(t, e) {
          return e.subscribe(new ym(t, this.predicate, this.thisArg));
        }
      }
      class ym extends m {
        constructor(t, e, n) {
          super(t), (this.predicate = e), (this.thisArg = n), (this.count = 0);
        }
        _next(t) {
          let e;
          try {
            e = this.predicate.call(this.thisArg, t, this.count++);
          } catch (n) {
            return void this.destination.error(n);
          }
          e && this.destination.next(t);
        }
      }
      class vm {}
      class wm {}
      class xm {
        constructor(t) {
          (this.normalizedNames = new Map()),
            (this.lazyUpdate = null),
            t
              ? (this.lazyInit =
                  'string' == typeof t
                    ? () => {
                        (this.headers = new Map()),
                          t.split('\n').forEach((t) => {
                            const e = t.indexOf(':');
                            if (e > 0) {
                              const n = t.slice(0, e),
                                i = n.toLowerCase(),
                                s = t.slice(e + 1).trim();
                              this.maybeSetNormalizedName(n, i),
                                this.headers.has(i) ? this.headers.get(i).push(s) : this.headers.set(i, [s]);
                            }
                          });
                      }
                    : () => {
                        (this.headers = new Map()),
                          Object.keys(t).forEach((e) => {
                            let n = t[e];
                            const i = e.toLowerCase();
                            'string' == typeof n && (n = [n]),
                              n.length > 0 && (this.headers.set(i, n), this.maybeSetNormalizedName(e, i));
                          });
                      })
              : (this.headers = new Map());
        }
        has(t) {
          return this.init(), this.headers.has(t.toLowerCase());
        }
        get(t) {
          this.init();
          const e = this.headers.get(t.toLowerCase());
          return e && e.length > 0 ? e[0] : null;
        }
        keys() {
          return this.init(), Array.from(this.normalizedNames.values());
        }
        getAll(t) {
          return this.init(), this.headers.get(t.toLowerCase()) || null;
        }
        append(t, e) {
          return this.clone({ name: t, value: e, op: 'a' });
        }
        set(t, e) {
          return this.clone({ name: t, value: e, op: 's' });
        }
        delete(t, e) {
          return this.clone({ name: t, value: e, op: 'd' });
        }
        maybeSetNormalizedName(t, e) {
          this.normalizedNames.has(e) || this.normalizedNames.set(e, t);
        }
        init() {
          this.lazyInit &&
            (this.lazyInit instanceof xm ? this.copyFrom(this.lazyInit) : this.lazyInit(),
            (this.lazyInit = null),
            this.lazyUpdate && (this.lazyUpdate.forEach((t) => this.applyUpdate(t)), (this.lazyUpdate = null)));
        }
        copyFrom(t) {
          t.init(),
            Array.from(t.headers.keys()).forEach((e) => {
              this.headers.set(e, t.headers.get(e)), this.normalizedNames.set(e, t.normalizedNames.get(e));
            });
        }
        clone(t) {
          const e = new xm();
          return (
            (e.lazyInit = this.lazyInit && this.lazyInit instanceof xm ? this.lazyInit : this),
            (e.lazyUpdate = (this.lazyUpdate || []).concat([t])),
            e
          );
        }
        applyUpdate(t) {
          const e = t.name.toLowerCase();
          switch (t.op) {
            case 'a':
            case 's':
              let n = t.value;
              if (('string' == typeof n && (n = [n]), 0 === n.length)) return;
              this.maybeSetNormalizedName(t.name, e);
              const i = ('a' === t.op ? this.headers.get(e) : void 0) || [];
              i.push(...n), this.headers.set(e, i);
              break;
            case 'd':
              const s = t.value;
              if (s) {
                let t = this.headers.get(e);
                if (!t) return;
                (t = t.filter((t) => -1 === s.indexOf(t))),
                  0 === t.length ? (this.headers.delete(e), this.normalizedNames.delete(e)) : this.headers.set(e, t);
              } else this.headers.delete(e), this.normalizedNames.delete(e);
          }
        }
        forEach(t) {
          this.init(),
            Array.from(this.normalizedNames.keys()).forEach((e) => t(this.normalizedNames.get(e), this.headers.get(e)));
        }
      }
      class Cm {
        encodeKey(t) {
          return km(t);
        }
        encodeValue(t) {
          return km(t);
        }
        decodeKey(t) {
          return decodeURIComponent(t);
        }
        decodeValue(t) {
          return decodeURIComponent(t);
        }
      }
      function km(t) {
        return encodeURIComponent(t)
          .replace(/%40/gi, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/gi, '$')
          .replace(/%2C/gi, ',')
          .replace(/%3B/gi, ';')
          .replace(/%2B/gi, '+')
          .replace(/%3D/gi, '=')
          .replace(/%3F/gi, '?')
          .replace(/%2F/gi, '/');
      }
      class Sm {
        constructor(t = {}) {
          if (((this.updates = null), (this.cloneFrom = null), (this.encoder = t.encoder || new Cm()), t.fromString)) {
            if (t.fromObject) throw new Error('Cannot specify both fromString and fromObject.');
            this.map = (function (t, e) {
              const n = new Map();
              return (
                t.length > 0 &&
                  t
                    .replace(/^\?/, '')
                    .split('&')
                    .forEach((t) => {
                      const i = t.indexOf('='),
                        [s, r] =
                          -1 == i ? [e.decodeKey(t), ''] : [e.decodeKey(t.slice(0, i)), e.decodeValue(t.slice(i + 1))],
                        o = n.get(s) || [];
                      o.push(r), n.set(s, o);
                    }),
                n
              );
            })(t.fromString, this.encoder);
          } else
            t.fromObject
              ? ((this.map = new Map()),
                Object.keys(t.fromObject).forEach((e) => {
                  const n = t.fromObject[e];
                  this.map.set(e, Array.isArray(n) ? n : [n]);
                }))
              : (this.map = null);
        }
        has(t) {
          return this.init(), this.map.has(t);
        }
        get(t) {
          this.init();
          const e = this.map.get(t);
          return e ? e[0] : null;
        }
        getAll(t) {
          return this.init(), this.map.get(t) || null;
        }
        keys() {
          return this.init(), Array.from(this.map.keys());
        }
        append(t, e) {
          return this.clone({ param: t, value: e, op: 'a' });
        }
        appendAll(t) {
          const e = [];
          return (
            Object.keys(t).forEach((n) => {
              const i = t[n];
              Array.isArray(i)
                ? i.forEach((t) => {
                    e.push({ param: n, value: t, op: 'a' });
                  })
                : e.push({ param: n, value: i, op: 'a' });
            }),
            this.clone(e)
          );
        }
        set(t, e) {
          return this.clone({ param: t, value: e, op: 's' });
        }
        delete(t, e) {
          return this.clone({ param: t, value: e, op: 'd' });
        }
        toString() {
          return (
            this.init(),
            this.keys()
              .map((t) => {
                const e = this.encoder.encodeKey(t);
                return this.map
                  .get(t)
                  .map((t) => e + '=' + this.encoder.encodeValue(t))
                  .join('&');
              })
              .filter((t) => '' !== t)
              .join('&')
          );
        }
        clone(t) {
          const e = new Sm({ encoder: this.encoder });
          return (e.cloneFrom = this.cloneFrom || this), (e.updates = (this.updates || []).concat(t)), e;
        }
        init() {
          null === this.map && (this.map = new Map()),
            null !== this.cloneFrom &&
              (this.cloneFrom.init(),
              this.cloneFrom.keys().forEach((t) => this.map.set(t, this.cloneFrom.map.get(t))),
              this.updates.forEach((t) => {
                switch (t.op) {
                  case 'a':
                  case 's':
                    const e = ('a' === t.op ? this.map.get(t.param) : void 0) || [];
                    e.push(t.value), this.map.set(t.param, e);
                    break;
                  case 'd':
                    if (void 0 === t.value) {
                      this.map.delete(t.param);
                      break;
                    }
                    {
                      let e = this.map.get(t.param) || [];
                      const n = e.indexOf(t.value);
                      -1 !== n && e.splice(n, 1), e.length > 0 ? this.map.set(t.param, e) : this.map.delete(t.param);
                    }
                }
              }),
              (this.cloneFrom = this.updates = null));
        }
      }
      function Em(t) {
        return 'undefined' != typeof ArrayBuffer && t instanceof ArrayBuffer;
      }
      function Om(t) {
        return 'undefined' != typeof Blob && t instanceof Blob;
      }
      function Pm(t) {
        return 'undefined' != typeof FormData && t instanceof FormData;
      }
      class Am {
        constructor(t, e, n, i) {
          let s;
          if (
            ((this.url = e),
            (this.body = null),
            (this.reportProgress = !1),
            (this.withCredentials = !1),
            (this.responseType = 'json'),
            (this.method = t.toUpperCase()),
            (function (t) {
              switch (t) {
                case 'DELETE':
                case 'GET':
                case 'HEAD':
                case 'OPTIONS':
                case 'JSONP':
                  return !1;
                default:
                  return !0;
              }
            })(this.method) || i
              ? ((this.body = void 0 !== n ? n : null), (s = i))
              : (s = n),
            s &&
              ((this.reportProgress = !!s.reportProgress),
              (this.withCredentials = !!s.withCredentials),
              s.responseType && (this.responseType = s.responseType),
              s.headers && (this.headers = s.headers),
              s.params && (this.params = s.params)),
            this.headers || (this.headers = new xm()),
            this.params)
          ) {
            const t = this.params.toString();
            if (0 === t.length) this.urlWithParams = e;
            else {
              const n = e.indexOf('?');
              this.urlWithParams = e + (-1 === n ? '?' : n < e.length - 1 ? '&' : '') + t;
            }
          } else (this.params = new Sm()), (this.urlWithParams = e);
        }
        serializeBody() {
          return null === this.body
            ? null
            : Em(this.body) || Om(this.body) || Pm(this.body) || 'string' == typeof this.body
            ? this.body
            : this.body instanceof Sm
            ? this.body.toString()
            : 'object' == typeof this.body || 'boolean' == typeof this.body || Array.isArray(this.body)
            ? JSON.stringify(this.body)
            : this.body.toString();
        }
        detectContentTypeHeader() {
          return null === this.body || Pm(this.body)
            ? null
            : Om(this.body)
            ? this.body.type || null
            : Em(this.body)
            ? null
            : 'string' == typeof this.body
            ? 'text/plain'
            : this.body instanceof Sm
            ? 'application/x-www-form-urlencoded;charset=UTF-8'
            : 'object' == typeof this.body || 'number' == typeof this.body || 'boolean' == typeof this.body
            ? 'application/json'
            : null;
        }
        clone(t = {}) {
          const e = t.method || this.method,
            n = t.url || this.url,
            i = t.responseType || this.responseType,
            s = void 0 !== t.body ? t.body : this.body,
            r = void 0 !== t.withCredentials ? t.withCredentials : this.withCredentials,
            o = void 0 !== t.reportProgress ? t.reportProgress : this.reportProgress;
          let a = t.headers || this.headers,
            l = t.params || this.params;
          return (
            void 0 !== t.setHeaders && (a = Object.keys(t.setHeaders).reduce((e, n) => e.set(n, t.setHeaders[n]), a)),
            t.setParams && (l = Object.keys(t.setParams).reduce((e, n) => e.set(n, t.setParams[n]), l)),
            new Am(e, n, s, { params: l, headers: a, reportProgress: o, responseType: i, withCredentials: r })
          );
        }
      }
      var Tm = (() => (
        ((Tm = Tm || {})[(Tm.Sent = 0)] = 'Sent'),
        (Tm[(Tm.UploadProgress = 1)] = 'UploadProgress'),
        (Tm[(Tm.ResponseHeader = 2)] = 'ResponseHeader'),
        (Tm[(Tm.DownloadProgress = 3)] = 'DownloadProgress'),
        (Tm[(Tm.Response = 4)] = 'Response'),
        (Tm[(Tm.User = 5)] = 'User'),
        Tm
      ))();
      class Dm {
        constructor(t, e = 200, n = 'OK') {
          (this.headers = t.headers || new xm()),
            (this.status = void 0 !== t.status ? t.status : e),
            (this.statusText = t.statusText || n),
            (this.url = t.url || null),
            (this.ok = this.status >= 200 && this.status < 300);
        }
      }
      class Mm extends Dm {
        constructor(t = {}) {
          super(t), (this.type = Tm.ResponseHeader);
        }
        clone(t = {}) {
          return new Mm({
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class Rm extends Dm {
        constructor(t = {}) {
          super(t), (this.type = Tm.Response), (this.body = void 0 !== t.body ? t.body : null);
        }
        clone(t = {}) {
          return new Rm({
            body: void 0 !== t.body ? t.body : this.body,
            headers: t.headers || this.headers,
            status: void 0 !== t.status ? t.status : this.status,
            statusText: t.statusText || this.statusText,
            url: t.url || this.url || void 0,
          });
        }
      }
      class Im extends Dm {
        constructor(t) {
          super(t, 0, 'Unknown Error'),
            (this.name = 'HttpErrorResponse'),
            (this.ok = !1),
            (this.message =
              this.status >= 200 && this.status < 300
                ? `Http failure during parsing for ${t.url || '(unknown url)'}`
                : `Http failure response for ${t.url || '(unknown url)'}: ${t.status} ${t.statusText}`),
            (this.error = t.error || null);
        }
      }
      function Lm(t, e) {
        return {
          body: e,
          headers: t.headers,
          observe: t.observe,
          params: t.params,
          reportProgress: t.reportProgress,
          responseType: t.responseType,
          withCredentials: t.withCredentials,
        };
      }
      let Fm = (() => {
        class t {
          constructor(t) {
            this.handler = t;
          }
          request(t, e, n = {}) {
            let i;
            if (t instanceof Am) i = t;
            else {
              let s, r;
              (s = n.headers instanceof xm ? n.headers : new xm(n.headers)),
                n.params && (r = n.params instanceof Sm ? n.params : new Sm({ fromObject: n.params })),
                (i = new Am(t, e, void 0 !== n.body ? n.body : null, {
                  headers: s,
                  params: r,
                  reportProgress: n.reportProgress,
                  responseType: n.responseType || 'json',
                  withCredentials: n.withCredentials,
                }));
            }
            const s = fm(i).pipe(gm((t) => this.handler.handle(t)));
            if (t instanceof Am || 'events' === n.observe) return s;
            const r = s.pipe(_m((t) => t instanceof Rm));
            switch (n.observe || 'body') {
              case 'body':
                switch (i.responseType) {
                  case 'arraybuffer':
                    return r.pipe(
                      E((t) => {
                        if (null !== t.body && !(t.body instanceof ArrayBuffer))
                          throw new Error('Response is not an ArrayBuffer.');
                        return t.body;
                      })
                    );
                  case 'blob':
                    return r.pipe(
                      E((t) => {
                        if (null !== t.body && !(t.body instanceof Blob)) throw new Error('Response is not a Blob.');
                        return t.body;
                      })
                    );
                  case 'text':
                    return r.pipe(
                      E((t) => {
                        if (null !== t.body && 'string' != typeof t.body) throw new Error('Response is not a string.');
                        return t.body;
                      })
                    );
                  case 'json':
                  default:
                    return r.pipe(E((t) => t.body));
                }
              case 'response':
                return r;
              default:
                throw new Error(`Unreachable: unhandled observe type ${n.observe}}`);
            }
          }
          delete(t, e = {}) {
            return this.request('DELETE', t, e);
          }
          get(t, e = {}) {
            return this.request('GET', t, e);
          }
          head(t, e = {}) {
            return this.request('HEAD', t, e);
          }
          jsonp(t, e) {
            return this.request('JSONP', t, {
              params: new Sm().append(e, 'JSONP_CALLBACK'),
              observe: 'body',
              responseType: 'json',
            });
          }
          options(t, e = {}) {
            return this.request('OPTIONS', t, e);
          }
          patch(t, e, n = {}) {
            return this.request('PATCH', t, Lm(n, e));
          }
          post(t, e, n = {}) {
            return this.request('POST', t, Lm(n, e));
          }
          put(t, e, n = {}) {
            return this.request('PUT', t, Lm(n, e));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(vm));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Nm {
        constructor(t, e) {
          (this.next = t), (this.interceptor = e);
        }
        handle(t) {
          return this.interceptor.intercept(t, this.next);
        }
      }
      const Vm = new Jn('HTTP_INTERCEPTORS');
      let Bm = (() => {
        class t {
          intercept(t, e) {
            return e.handle(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const zm = /^\)\]\}',?\n/;
      class jm {}
      let Hm = (() => {
          class t {
            constructor() {}
            build() {
              return new XMLHttpRequest();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        $m = (() => {
          class t {
            constructor(t) {
              this.xhrFactory = t;
            }
            handle(t) {
              if ('JSONP' === t.method)
                throw new Error('Attempted to construct Jsonp request without HttpClientJsonpModule installed.');
              return new b((e) => {
                const n = this.xhrFactory.build();
                if (
                  (n.open(t.method, t.urlWithParams),
                  t.withCredentials && (n.withCredentials = !0),
                  t.headers.forEach((t, e) => n.setRequestHeader(t, e.join(','))),
                  t.headers.has('Accept') || n.setRequestHeader('Accept', 'application/json, text/plain, */*'),
                  !t.headers.has('Content-Type'))
                ) {
                  const e = t.detectContentTypeHeader();
                  null !== e && n.setRequestHeader('Content-Type', e);
                }
                if (t.responseType) {
                  const e = t.responseType.toLowerCase();
                  n.responseType = 'json' !== e ? e : 'text';
                }
                const i = t.serializeBody();
                let s = null;
                const r = () => {
                    if (null !== s) return s;
                    const e = 1223 === n.status ? 204 : n.status,
                      i = n.statusText || 'OK',
                      r = new xm(n.getAllResponseHeaders()),
                      o =
                        (function (t) {
                          return 'responseURL' in t && t.responseURL
                            ? t.responseURL
                            : /^X-Request-URL:/m.test(t.getAllResponseHeaders())
                            ? t.getResponseHeader('X-Request-URL')
                            : null;
                        })(n) || t.url;
                    return (s = new Mm({ headers: r, status: e, statusText: i, url: o })), s;
                  },
                  o = () => {
                    let { headers: i, status: s, statusText: o, url: a } = r(),
                      l = null;
                    204 !== s && (l = void 0 === n.response ? n.responseText : n.response),
                      0 === s && (s = l ? 200 : 0);
                    let c = s >= 200 && s < 300;
                    if ('json' === t.responseType && 'string' == typeof l) {
                      const t = l;
                      l = l.replace(zm, '');
                      try {
                        l = '' !== l ? JSON.parse(l) : null;
                      } catch (h) {
                        (l = t), c && ((c = !1), (l = { error: h, text: l }));
                      }
                    }
                    c
                      ? (e.next(new Rm({ body: l, headers: i, status: s, statusText: o, url: a || void 0 })),
                        e.complete())
                      : e.error(new Im({ error: l, headers: i, status: s, statusText: o, url: a || void 0 }));
                  },
                  a = (t) => {
                    const { url: i } = r(),
                      s = new Im({
                        error: t,
                        status: n.status || 0,
                        statusText: n.statusText || 'Unknown Error',
                        url: i || void 0,
                      });
                    e.error(s);
                  };
                let l = !1;
                const c = (i) => {
                    l || (e.next(r()), (l = !0));
                    let s = { type: Tm.DownloadProgress, loaded: i.loaded };
                    i.lengthComputable && (s.total = i.total),
                      'text' === t.responseType && n.responseText && (s.partialText = n.responseText),
                      e.next(s);
                  },
                  h = (t) => {
                    let n = { type: Tm.UploadProgress, loaded: t.loaded };
                    t.lengthComputable && (n.total = t.total), e.next(n);
                  };
                return (
                  n.addEventListener('load', o),
                  n.addEventListener('error', a),
                  n.addEventListener('timeout', a),
                  n.addEventListener('abort', a),
                  t.reportProgress &&
                    (n.addEventListener('progress', c),
                    null !== i && n.upload && n.upload.addEventListener('progress', h)),
                  n.send(i),
                  e.next({ type: Tm.Sent }),
                  () => {
                    n.removeEventListener('error', a),
                      n.removeEventListener('abort', a),
                      n.removeEventListener('load', o),
                      n.removeEventListener('timeout', a),
                      t.reportProgress &&
                        (n.removeEventListener('progress', c),
                        null !== i && n.upload && n.upload.removeEventListener('progress', h)),
                      n.readyState !== n.DONE && n.abort();
                  }
                );
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(jm));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const qm = new Jn('XSRF_COOKIE_NAME'),
        Wm = new Jn('XSRF_HEADER_NAME');
      class Um {}
      let Ym = (() => {
          class t {
            constructor(t, e, n) {
              (this.doc = t),
                (this.platform = e),
                (this.cookieName = n),
                (this.lastCookieString = ''),
                (this.lastToken = null),
                (this.parseCount = 0);
            }
            getToken() {
              if ('server' === this.platform) return null;
              const t = this.doc.cookie || '';
              return (
                t !== this.lastCookieString &&
                  (this.parseCount++, (this.lastToken = Pu(t, this.cookieName)), (this.lastCookieString = t)),
                this.lastToken
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Th), _i(Fc), _i(qm));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Gm = (() => {
          class t {
            constructor(t, e) {
              (this.tokenService = t), (this.headerName = e);
            }
            intercept(t, e) {
              const n = t.url.toLowerCase();
              if ('GET' === t.method || 'HEAD' === t.method || n.startsWith('http://') || n.startsWith('https://'))
                return e.handle(t);
              const i = this.tokenService.getToken();
              return (
                null === i ||
                  t.headers.has(this.headerName) ||
                  (t = t.clone({ headers: t.headers.set(this.headerName, i) })),
                e.handle(t)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Um), _i(Wm));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Qm = (() => {
          class t {
            constructor(t, e) {
              (this.backend = t), (this.injector = e), (this.chain = null);
            }
            handle(t) {
              if (null === this.chain) {
                const t = this.injector.get(Vm, []);
                this.chain = t.reduceRight((t, e) => new Nm(t, e), this.backend);
              }
              return this.chain.handle(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(wm), _i(mo));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Km = (() => {
          class t {
            static disable() {
              return { ngModule: t, providers: [{ provide: Gm, useClass: Bm }] };
            }
            static withOptions(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.cookieName ? { provide: qm, useValue: e.cookieName } : [],
                  e.headerName ? { provide: Wm, useValue: e.headerName } : [],
                ],
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({
              providers: [
                Gm,
                { provide: Vm, useExisting: Gm, multi: !0 },
                { provide: Um, useClass: Ym },
                { provide: qm, useValue: 'XSRF-TOKEN' },
                { provide: Wm, useValue: 'X-XSRF-TOKEN' },
              ],
            })),
            t
          );
        })(),
        Xm = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({
              providers: [
                Fm,
                { provide: vm, useClass: Qm },
                $m,
                { provide: wm, useExisting: $m },
                Hm,
                { provide: jm, useExisting: Hm },
              ],
              imports: [[Km.withOptions({ cookieName: 'XSRF-TOKEN', headerName: 'X-XSRF-TOKEN' })]],
            })),
            t
          );
        })();
      const Zm = new b((t) => t.complete());
      function Jm(t) {
        return t
          ? (function (t) {
              return new b((e) => t.schedule(() => e.complete()));
            })(t)
          : Zm;
      }
      function tf(t) {
        return new b((e) => {
          let n;
          try {
            n = t();
          } catch (i) {
            return void e.error(i);
          }
          return (n ? L(n) : Jm()).subscribe(e);
        });
      }
      function ef(t, e) {
        return new b(e ? (n) => e.schedule(nf, 0, { error: t, subscriber: n }) : (e) => e.error(t));
      }
      function nf({ error: t, subscriber: e }) {
        e.error(t);
      }
      function sf(t, e, n, s) {
        return (
          i(n) && ((s = n), (n = void 0)),
          s
            ? sf(t, e, n).pipe(E((t) => (l(t) ? s(...t) : s(t))))
            : new b((i) => {
                rf(
                  t,
                  e,
                  function (t) {
                    i.next(arguments.length > 1 ? Array.prototype.slice.call(arguments) : t);
                  },
                  i,
                  n
                );
              })
        );
      }
      function rf(t, e, n, i, s) {
        let r;
        if (
          (function (t) {
            return t && 'function' == typeof t.addEventListener && 'function' == typeof t.removeEventListener;
          })(t)
        ) {
          const i = t;
          t.addEventListener(e, n, s), (r = () => i.removeEventListener(e, n, s));
        } else if (
          (function (t) {
            return t && 'function' == typeof t.on && 'function' == typeof t.off;
          })(t)
        ) {
          const i = t;
          t.on(e, n), (r = () => i.off(e, n));
        } else if (
          (function (t) {
            return t && 'function' == typeof t.addListener && 'function' == typeof t.removeListener;
          })(t)
        ) {
          const i = t;
          t.addListener(e, n), (r = () => i.removeListener(e, n));
        } else {
          if (!t || !t.length) throw new TypeError('Invalid event target');
          for (let r = 0, o = t.length; r < o; r++) rf(t[r], e, n, i, s);
        }
        i.add(r);
      }
      function of(...t) {
        return H(1)(fm(...t));
      }
      function af() {}
      const lf = new b(af);
      function cf(t, e) {
        return 'function' == typeof e
          ? (n) => n.pipe(cf((n, i) => L(t(n, i)).pipe(E((t, s) => e(n, t, i, s)))))
          : (e) => e.lift(new hf(t));
      }
      class hf {
        constructor(t) {
          this.project = t;
        }
        call(t, e) {
          return e.subscribe(new uf(t, this.project));
        }
      }
      class uf extends N {
        constructor(t, e) {
          super(t), (this.project = e), (this.index = 0);
        }
        _next(t) {
          let e;
          const n = this.index++;
          try {
            e = this.project(t, n);
          } catch (i) {
            return void this.destination.error(i);
          }
          this._innerSub(e);
        }
        _innerSub(t) {
          const e = this.innerSubscription;
          e && e.unsubscribe();
          const n = new F(this),
            i = this.destination;
          i.add(n), (this.innerSubscription = V(t, n)), this.innerSubscription !== n && i.add(this.innerSubscription);
        }
        _complete() {
          const { innerSubscription: t } = this;
          (t && !t.closed) || super._complete(), this.unsubscribe();
        }
        _unsubscribe() {
          this.innerSubscription = void 0;
        }
        notifyComplete() {
          (this.innerSubscription = void 0), this.isStopped && super._complete();
        }
        notifyNext(t) {
          this.destination.next(t);
        }
      }
      const df = (() => {
        function t() {
          return (
            Error.call(this), (this.message = 'argument out of range'), (this.name = 'ArgumentOutOfRangeError'), this
          );
        }
        return (t.prototype = Object.create(Error.prototype)), t;
      })();
      function pf(t) {
        return (e) => (0 === t ? Jm() : e.lift(new mf(t)));
      }
      class mf {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new df();
        }
        call(t, e) {
          return e.subscribe(new ff(t, this.total));
        }
      }
      class ff extends m {
        constructor(t, e) {
          super(t), (this.total = e), (this.count = 0);
        }
        _next(t) {
          const e = this.total,
            n = ++this.count;
          n <= e && (this.destination.next(t), n === e && (this.destination.complete(), this.unsubscribe()));
        }
      }
      function gf(t, e, n) {
        return function (i) {
          return i.lift(new _f(t, e, n));
        };
      }
      class _f {
        constructor(t, e, n) {
          (this.nextOrObserver = t), (this.error = e), (this.complete = n);
        }
        call(t, e) {
          return e.subscribe(new bf(t, this.nextOrObserver, this.error, this.complete));
        }
      }
      class bf extends m {
        constructor(t, e, n, s) {
          super(t),
            (this._tapNext = af),
            (this._tapError = af),
            (this._tapComplete = af),
            (this._tapError = n || af),
            (this._tapComplete = s || af),
            i(e)
              ? ((this._context = this), (this._tapNext = e))
              : e &&
                ((this._context = e),
                (this._tapNext = e.next || af),
                (this._tapError = e.error || af),
                (this._tapComplete = e.complete || af));
        }
        _next(t) {
          try {
            this._tapNext.call(this._context, t);
          } catch (e) {
            return void this.destination.error(e);
          }
          this.destination.next(t);
        }
        _error(t) {
          try {
            this._tapError.call(this._context, t);
          } catch (t) {
            return void this.destination.error(t);
          }
          this.destination.error(t);
        }
        _complete() {
          try {
            this._tapComplete.call(this._context);
          } catch (t) {
            return void this.destination.error(t);
          }
          return this.destination.complete();
        }
      }
      class yf extends u {
        constructor(t, e) {
          super();
        }
        schedule(t, e = 0) {
          return this;
        }
      }
      class vf extends yf {
        constructor(t, e) {
          super(t, e), (this.scheduler = t), (this.work = e), (this.pending = !1);
        }
        schedule(t, e = 0) {
          if (this.closed) return this;
          this.state = t;
          const n = this.id,
            i = this.scheduler;
          return (
            null != n && (this.id = this.recycleAsyncId(i, n, e)),
            (this.pending = !0),
            (this.delay = e),
            (this.id = this.id || this.requestAsyncId(i, this.id, e)),
            this
          );
        }
        requestAsyncId(t, e, n = 0) {
          return setInterval(t.flush.bind(t, this), n);
        }
        recycleAsyncId(t, e, n = 0) {
          if (null !== n && this.delay === n && !1 === this.pending) return e;
          clearInterval(e);
        }
        execute(t, e) {
          if (this.closed) return new Error('executing a cancelled action');
          this.pending = !1;
          const n = this._execute(t, e);
          if (n) return n;
          !1 === this.pending && null != this.id && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));
        }
        _execute(t, e) {
          let n,
            i = !1;
          try {
            this.work(t);
          } catch (s) {
            (i = !0), (n = (!!s && s) || new Error(s));
          }
          if (i) return this.unsubscribe(), n;
        }
        _unsubscribe() {
          const t = this.id,
            e = this.scheduler,
            n = e.actions,
            i = n.indexOf(this);
          (this.work = null),
            (this.state = null),
            (this.pending = !1),
            (this.scheduler = null),
            -1 !== i && n.splice(i, 1),
            null != t && (this.id = this.recycleAsyncId(e, t, null)),
            (this.delay = null);
        }
      }
      let wf = (() => {
        class t {
          constructor(e, n = t.now) {
            (this.SchedulerAction = e), (this.now = n);
          }
          schedule(t, e = 0, n) {
            return new this.SchedulerAction(this, t).schedule(n, e);
          }
        }
        return (t.now = () => Date.now()), t;
      })();
      class xf extends wf {
        constructor(t, e = wf.now) {
          super(t, () => (xf.delegate && xf.delegate !== this ? xf.delegate.now() : e())),
            (this.actions = []),
            (this.active = !1),
            (this.scheduled = void 0);
        }
        schedule(t, e = 0, n) {
          return xf.delegate && xf.delegate !== this ? xf.delegate.schedule(t, e, n) : super.schedule(t, e, n);
        }
        flush(t) {
          const { actions: e } = this;
          if (this.active) return void e.push(t);
          let n;
          this.active = !0;
          do {
            if ((n = t.execute(t.state, t.delay))) break;
          } while ((t = e.shift()));
          if (((this.active = !1), n)) {
            for (; (t = e.shift()); ) t.unsubscribe();
            throw n;
          }
        }
      }
      const Cf = new xf(vf);
      class kf {
        constructor(t, e, n) {
          (this.kind = t), (this.value = e), (this.error = n), (this.hasValue = 'N' === t);
        }
        observe(t) {
          switch (this.kind) {
            case 'N':
              return t.next && t.next(this.value);
            case 'E':
              return t.error && t.error(this.error);
            case 'C':
              return t.complete && t.complete();
          }
        }
        do(t, e, n) {
          switch (this.kind) {
            case 'N':
              return t && t(this.value);
            case 'E':
              return e && e(this.error);
            case 'C':
              return n && n();
          }
        }
        accept(t, e, n) {
          return t && 'function' == typeof t.next ? this.observe(t) : this.do(t, e, n);
        }
        toObservable() {
          switch (this.kind) {
            case 'N':
              return fm(this.value);
            case 'E':
              return ef(this.error);
            case 'C':
              return Jm();
          }
          throw new Error('unexpected notification kind value');
        }
        static createNext(t) {
          return void 0 !== t ? new kf('N', t) : kf.undefinedValueNotification;
        }
        static createError(t) {
          return new kf('E', void 0, t);
        }
        static createComplete() {
          return kf.completeNotification;
        }
      }
      function Sf(t, e = Cf) {
        var n;
        const i = (n = t) instanceof Date && !isNaN(+n) ? +t - e.now() : Math.abs(t);
        return (t) => t.lift(new Ef(i, e));
      }
      (kf.completeNotification = new kf('C')), (kf.undefinedValueNotification = new kf('N', void 0));
      class Ef {
        constructor(t, e) {
          (this.delay = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new Of(t, this.delay, this.scheduler));
        }
      }
      class Of extends m {
        constructor(t, e, n) {
          super(t), (this.delay = e), (this.scheduler = n), (this.queue = []), (this.active = !1), (this.errored = !1);
        }
        static dispatch(t) {
          const e = t.source,
            n = e.queue,
            i = t.scheduler,
            s = t.destination;
          for (; n.length > 0 && n[0].time - i.now() <= 0; ) n.shift().notification.observe(s);
          if (n.length > 0) {
            const e = Math.max(0, n[0].time - i.now());
            this.schedule(t, e);
          } else this.unsubscribe(), (e.active = !1);
        }
        _schedule(t) {
          (this.active = !0),
            this.destination.add(
              t.schedule(Of.dispatch, this.delay, { source: this, destination: this.destination, scheduler: t })
            );
        }
        scheduleNotification(t) {
          if (!0 === this.errored) return;
          const e = this.scheduler,
            n = new Pf(e.now() + this.delay, t);
          this.queue.push(n), !1 === this.active && this._schedule(e);
        }
        _next(t) {
          this.scheduleNotification(kf.createNext(t));
        }
        _error(t) {
          (this.errored = !0), (this.queue = []), this.destination.error(t), this.unsubscribe();
        }
        _complete() {
          this.scheduleNotification(kf.createComplete()), this.unsubscribe();
        }
      }
      class Pf {
        constructor(t, e) {
          (this.time = t), (this.notification = e);
        }
      }
      const Af = 'Service workers are disabled or not supported by this browser';
      class Tf {
        constructor(t) {
          if (((this.serviceWorker = t), t)) {
            const e = sf(t, 'controllerchange').pipe(E(() => t.controller)),
              n = of(
                tf(() => fm(t.controller)),
                e
              );
            (this.worker = n.pipe(_m((t) => !!t))),
              (this.registration = this.worker.pipe(cf(() => t.getRegistration())));
            const i = sf(t, 'message')
              .pipe(E((t) => t.data))
              .pipe(_m((t) => t && t.type))
              .pipe(X(new C()));
            i.connect(), (this.events = i);
          } else
            this.worker =
              this.events =
              this.registration =
                tf(() => ef(new Error('Service workers are disabled or not supported by this browser')));
        }
        postMessage(t, e) {
          return this.worker
            .pipe(
              pf(1),
              gf((n) => {
                n.postMessage(Object.assign({ action: t }, e));
              })
            )
            .toPromise()
            .then(() => {});
        }
        postMessageWithStatus(t, e, n) {
          const i = this.waitForStatus(n),
            s = this.postMessage(t, e);
          return Promise.all([i, s]).then(() => {});
        }
        generateNonce() {
          return Math.round(1e7 * Math.random());
        }
        eventsOfType(t) {
          return this.events.pipe(_m((e) => e.type === t));
        }
        nextEventOfType(t) {
          return this.eventsOfType(t).pipe(pf(1));
        }
        waitForStatus(t) {
          return this.eventsOfType('STATUS')
            .pipe(
              _m((e) => e.nonce === t),
              pf(1),
              E((t) => {
                if (!t.status) throw new Error(t.error);
              })
            )
            .toPromise();
        }
        get isEnabled() {
          return !!this.serviceWorker;
        }
      }
      let Df = (() => {
          class t {
            constructor(t) {
              if (((this.sw = t), (this.subscriptionChanges = new C()), !t.isEnabled))
                return (this.messages = lf), (this.notificationClicks = lf), void (this.subscription = lf);
              (this.messages = this.sw.eventsOfType('PUSH').pipe(E((t) => t.data))),
                (this.notificationClicks = this.sw.eventsOfType('NOTIFICATION_CLICK').pipe(E((t) => t.data))),
                (this.pushManager = this.sw.registration.pipe(E((t) => t.pushManager)));
              const e = this.pushManager.pipe(cf((t) => t.getSubscription()));
              this.subscription = q(e, this.subscriptionChanges);
            }
            get isEnabled() {
              return this.sw.isEnabled;
            }
            requestSubscription(t) {
              if (!this.sw.isEnabled) return Promise.reject(new Error(Af));
              const e = { userVisibleOnly: !0 };
              let n = this.decodeBase64(t.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+')),
                i = new Uint8Array(new ArrayBuffer(n.length));
              for (let s = 0; s < n.length; s++) i[s] = n.charCodeAt(s);
              return (
                (e.applicationServerKey = i),
                this.pushManager
                  .pipe(
                    cf((t) => t.subscribe(e)),
                    pf(1)
                  )
                  .toPromise()
                  .then((t) => (this.subscriptionChanges.next(t), t))
              );
            }
            unsubscribe() {
              return this.sw.isEnabled
                ? this.subscription
                    .pipe(
                      pf(1),
                      cf((t) => {
                        if (null === t) throw new Error('Not subscribed to push notifications.');
                        return t.unsubscribe().then((t) => {
                          if (!t) throw new Error('Unsubscribe failed!');
                          this.subscriptionChanges.next(null);
                        });
                      })
                    )
                    .toPromise()
                : Promise.reject(new Error(Af));
            }
            decodeBase64(t) {
              return atob(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Tf));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Mf = (() => {
          class t {
            constructor(t) {
              if (((this.sw = t), !t.isEnabled))
                return (this.available = lf), (this.activated = lf), void (this.unrecoverable = lf);
              (this.available = this.sw.eventsOfType('UPDATE_AVAILABLE')),
                (this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED')),
                (this.unrecoverable = this.sw.eventsOfType('UNRECOVERABLE_STATE'));
            }
            get isEnabled() {
              return this.sw.isEnabled;
            }
            checkForUpdate() {
              if (!this.sw.isEnabled) return Promise.reject(new Error(Af));
              const t = this.sw.generateNonce();
              return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce: t }, t);
            }
            activateUpdate() {
              if (!this.sw.isEnabled) return Promise.reject(new Error(Af));
              const t = this.sw.generateNonce();
              return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce: t }, t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Tf));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      class Rf {}
      const If = new Jn('NGSW_REGISTER_SCRIPT');
      function Lf(t, e, n, i) {
        return () => {
          if (!Qu(i) || !('serviceWorker' in navigator) || !1 === n.enabled) return;
          let s;
          if (
            (navigator.serviceWorker.addEventListener('controllerchange', () => {
              null !== navigator.serviceWorker.controller &&
                navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });
            }),
            'function' == typeof n.registrationStrategy)
          )
            s = n.registrationStrategy();
          else {
            const [e, ...i] = (n.registrationStrategy || 'registerWhenStable:30000').split(':');
            switch (e) {
              case 'registerImmediately':
                s = fm(null);
                break;
              case 'registerWithDelay':
                s = Ff(+i[0] || 0);
                break;
              case 'registerWhenStable':
                s = i[0] ? q(Nf(t), Ff(+i[0])) : Nf(t);
                break;
              default:
                throw new Error(`Unknown ServiceWorker registration strategy: ${n.registrationStrategy}`);
            }
          }
          t.get(Xc).runOutsideAngular(() =>
            s
              .pipe(pf(1))
              .subscribe(() =>
                navigator.serviceWorker
                  .register(e, { scope: n.scope })
                  .catch((t) => console.error('Service worker registration failed with:', t))
              )
          );
        };
      }
      function Ff(t) {
        return fm(null).pipe(Sf(t));
      }
      function Nf(t) {
        return t.get(bh).isStable.pipe(_m((t) => t));
      }
      function Vf(t, e) {
        return new Tf(Qu(e) && !1 !== t.enabled ? navigator.serviceWorker : void 0);
      }
      let Bf = (() => {
        class t {
          static register(e, n = {}) {
            return {
              ngModule: t,
              providers: [
                { provide: If, useValue: e },
                { provide: Rf, useValue: n },
                { provide: Tf, useFactory: Vf, deps: [Rf, Fc] },
                { provide: Tc, useFactory: Lf, deps: [mo, If, Rf, Fc], multi: !0 },
              ],
            };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ providers: [Df, Mf] })),
          t
        );
      })();
      function zf(t) {
        return !!t && (t instanceof b || ('function' == typeof t.lift && 'function' == typeof t.subscribe));
      }
      const jf = new (class extends xf {})(
        class extends vf {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          schedule(t, e = 0) {
            return e > 0
              ? super.schedule(t, e)
              : ((this.delay = e), (this.state = t), this.scheduler.flush(this), this);
          }
          execute(t, e) {
            return e > 0 || this.closed ? super.execute(t, e) : this._execute(t, e);
          }
          requestAsyncId(t, e, n = 0) {
            return (null !== n && n > 0) || (null === n && this.delay > 0)
              ? super.requestAsyncId(t, e, n)
              : t.flush(this);
          }
        }
      );
      class Hf extends m {
        constructor(t, e, n = 0) {
          super(t), (this.scheduler = e), (this.delay = n);
        }
        static dispatch(t) {
          const { notification: e, destination: n } = t;
          e.observe(n), this.unsubscribe();
        }
        scheduleMessage(t) {
          this.destination.add(this.scheduler.schedule(Hf.dispatch, this.delay, new $f(t, this.destination)));
        }
        _next(t) {
          this.scheduleMessage(kf.createNext(t));
        }
        _error(t) {
          this.scheduleMessage(kf.createError(t)), this.unsubscribe();
        }
        _complete() {
          this.scheduleMessage(kf.createComplete()), this.unsubscribe();
        }
      }
      class $f {
        constructor(t, e) {
          (this.notification = t), (this.destination = e);
        }
      }
      class qf extends C {
        constructor(t = Number.POSITIVE_INFINITY, e = Number.POSITIVE_INFINITY, n) {
          super(),
            (this.scheduler = n),
            (this._events = []),
            (this._infiniteTimeWindow = !1),
            (this._bufferSize = t < 1 ? 1 : t),
            (this._windowTime = e < 1 ? 1 : e),
            e === Number.POSITIVE_INFINITY
              ? ((this._infiniteTimeWindow = !0), (this.next = this.nextInfiniteTimeWindow))
              : (this.next = this.nextTimeWindow);
        }
        nextInfiniteTimeWindow(t) {
          if (!this.isStopped) {
            const e = this._events;
            e.push(t), e.length > this._bufferSize && e.shift();
          }
          super.next(t);
        }
        nextTimeWindow(t) {
          this.isStopped || (this._events.push(new Wf(this._getNow(), t)), this._trimBufferThenGetEvents()),
            super.next(t);
        }
        _subscribe(t) {
          const e = this._infiniteTimeWindow,
            n = e ? this._events : this._trimBufferThenGetEvents(),
            i = this.scheduler,
            s = n.length;
          let r;
          if (this.closed) throw new v();
          if (
            (this.isStopped || this.hasError ? (r = u.EMPTY) : (this.observers.push(t), (r = new w(this, t))),
            i && t.add((t = new Hf(t, i))),
            e)
          )
            for (let o = 0; o < s && !t.closed; o++) t.next(n[o]);
          else for (let o = 0; o < s && !t.closed; o++) t.next(n[o].value);
          return this.hasError ? t.error(this.thrownError) : this.isStopped && t.complete(), r;
        }
        _getNow() {
          return (this.scheduler || jf).now();
        }
        _trimBufferThenGetEvents() {
          const t = this._getNow(),
            e = this._bufferSize,
            n = this._windowTime,
            i = this._events,
            s = i.length;
          let r = 0;
          for (; r < s && !(t - i[r].time < n); ) r++;
          return s > e && (r = Math.max(r, s - e)), r > 0 && i.splice(0, r), i;
        }
      }
      class Wf {
        constructor(t, e) {
          (this.time = t), (this.value = e);
        }
      }
      function Uf(t, e, n) {
        let i;
        return (
          (i = t && 'object' == typeof t ? t : { bufferSize: t, windowTime: e, refCount: !1, scheduler: n }),
          (t) =>
            t.lift(
              (function ({
                bufferSize: t = Number.POSITIVE_INFINITY,
                windowTime: e = Number.POSITIVE_INFINITY,
                refCount: n,
                scheduler: i,
              }) {
                let s,
                  r,
                  o = 0,
                  a = !1,
                  l = !1;
                return function (c) {
                  let h;
                  o++,
                    !s || a
                      ? ((a = !1),
                        (s = new qf(t, e, i)),
                        (h = s.subscribe(this)),
                        (r = c.subscribe({
                          next(t) {
                            s.next(t);
                          },
                          error(t) {
                            (a = !0), s.error(t);
                          },
                          complete() {
                            (l = !0), (r = void 0), s.complete();
                          },
                        })),
                        l && (r = void 0))
                      : (h = s.subscribe(this)),
                    this.add(() => {
                      o--,
                        h.unsubscribe(),
                        (h = void 0),
                        r && !l && n && 0 === o && (r.unsubscribe(), (r = void 0), (s = void 0));
                    });
                };
              })(i)
            )
        );
      }
      class Yf {}
      let Gf = (() => {
        class t extends Yf {
          getTranslation(t) {
            return fm({});
          }
        }
        return (
          (t.ɵfac = function (e) {
            return Qf(e || t);
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const Qf = Gn(Gf);
      class Kf {}
      let Xf = (() => {
        class t {
          handle(t) {
            return t.key;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function Zf(t, e) {
        if (t === e) return !0;
        if (null === t || null === e) return !1;
        if (t != t && e != e) return !0;
        let n,
          i,
          s,
          r = typeof t;
        if (r == typeof e && 'object' == r) {
          if (!Array.isArray(t)) {
            if (Array.isArray(e)) return !1;
            for (i in ((s = Object.create(null)), t)) {
              if (!Zf(t[i], e[i])) return !1;
              s[i] = !0;
            }
            for (i in e) if (!(i in s) && void 0 !== e[i]) return !1;
            return !0;
          }
          if (!Array.isArray(e)) return !1;
          if ((n = t.length) == e.length) {
            for (i = 0; i < n; i++) if (!Zf(t[i], e[i])) return !1;
            return !0;
          }
        }
        return !1;
      }
      function Jf(t) {
        return null != t;
      }
      function tg(t) {
        return t && 'object' == typeof t && !Array.isArray(t);
      }
      function eg(t, e) {
        let n = Object.assign({}, t);
        return (
          tg(t) &&
            tg(e) &&
            Object.keys(e).forEach((i) => {
              tg(e[i])
                ? i in t
                  ? (n[i] = eg(t[i], e[i]))
                  : Object.assign(n, { [i]: e[i] })
                : Object.assign(n, { [i]: e[i] });
            }),
          n
        );
      }
      class ng {}
      let ig = (() => {
        class t extends ng {
          constructor() {
            super(...arguments), (this.templateMatcher = /{{\s?([^{}\s]*)\s?}}/g);
          }
          interpolate(t, e) {
            let n;
            return (
              (n =
                'string' == typeof t
                  ? this.interpolateString(t, e)
                  : 'function' == typeof t
                  ? this.interpolateFunction(t, e)
                  : t),
              n
            );
          }
          getValue(t, e) {
            let n = 'string' == typeof e ? e.split('.') : [e];
            e = '';
            do {
              (e += n.shift()),
                !Jf(t) || !Jf(t[e]) || ('object' != typeof t[e] && n.length)
                  ? n.length
                    ? (e += '.')
                    : (t = void 0)
                  : ((t = t[e]), (e = ''));
            } while (n.length);
            return t;
          }
          interpolateFunction(t, e) {
            return t(e);
          }
          interpolateString(t, e) {
            return e
              ? t.replace(this.templateMatcher, (t, n) => {
                  let i = this.getValue(e, n);
                  return Jf(i) ? i : t;
                })
              : t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return sg(e || t);
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const sg = Gn(ig);
      class rg {}
      let og = (() => {
        class t extends rg {
          compile(t, e) {
            return t;
          }
          compileTranslations(t, e) {
            return t;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return ag(e || t);
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const ag = Gn(og);
      class lg {
        constructor() {
          (this.currentLang = this.defaultLang),
            (this.translations = {}),
            (this.langs = []),
            (this.onTranslationChange = new cc()),
            (this.onLangChange = new cc()),
            (this.onDefaultLangChange = new cc());
        }
      }
      const cg = new Jn('USE_STORE'),
        hg = new Jn('USE_DEFAULT_LANG'),
        ug = new Jn('DEFAULT_LANGUAGE'),
        dg = new Jn('USE_EXTEND');
      let pg = (() => {
          class t {
            constructor(t, e, n, i, s, r = !0, o = !1, a = !1, l) {
              (this.store = t),
                (this.currentLoader = e),
                (this.compiler = n),
                (this.parser = i),
                (this.missingTranslationHandler = s),
                (this.useDefaultLang = r),
                (this.isolate = o),
                (this.extend = a),
                (this.pending = !1),
                (this._onTranslationChange = new cc()),
                (this._onLangChange = new cc()),
                (this._onDefaultLangChange = new cc()),
                (this._langs = []),
                (this._translations = {}),
                (this._translationRequests = {}),
                l && this.setDefaultLang(l);
            }
            get onTranslationChange() {
              return this.isolate ? this._onTranslationChange : this.store.onTranslationChange;
            }
            get onLangChange() {
              return this.isolate ? this._onLangChange : this.store.onLangChange;
            }
            get onDefaultLangChange() {
              return this.isolate ? this._onDefaultLangChange : this.store.onDefaultLangChange;
            }
            get defaultLang() {
              return this.isolate ? this._defaultLang : this.store.defaultLang;
            }
            set defaultLang(t) {
              this.isolate ? (this._defaultLang = t) : (this.store.defaultLang = t);
            }
            get currentLang() {
              return this.isolate ? this._currentLang : this.store.currentLang;
            }
            set currentLang(t) {
              this.isolate ? (this._currentLang = t) : (this.store.currentLang = t);
            }
            get langs() {
              return this.isolate ? this._langs : this.store.langs;
            }
            set langs(t) {
              this.isolate ? (this._langs = t) : (this.store.langs = t);
            }
            get translations() {
              return this.isolate ? this._translations : this.store.translations;
            }
            set translations(t) {
              this.isolate ? (this._translations = t) : (this.store.translations = t);
            }
            setDefaultLang(t) {
              if (t === this.defaultLang) return;
              let e = this.retrieveTranslations(t);
              void 0 !== e
                ? (null == this.defaultLang && (this.defaultLang = t),
                  e.pipe(pf(1)).subscribe((e) => {
                    this.changeDefaultLang(t);
                  }))
                : this.changeDefaultLang(t);
            }
            getDefaultLang() {
              return this.defaultLang;
            }
            use(t) {
              if (t === this.currentLang) return fm(this.translations[t]);
              let e = this.retrieveTranslations(t);
              return void 0 !== e
                ? (this.currentLang || (this.currentLang = t),
                  e.pipe(pf(1)).subscribe((e) => {
                    this.changeLang(t);
                  }),
                  e)
                : (this.changeLang(t), fm(this.translations[t]));
            }
            retrieveTranslations(t) {
              let e;
              return (
                (void 0 === this.translations[t] || this.extend) &&
                  ((this._translationRequests[t] = this._translationRequests[t] || this.getTranslation(t)),
                  (e = this._translationRequests[t])),
                e
              );
            }
            getTranslation(t) {
              this.pending = !0;
              const e = this.currentLoader.getTranslation(t).pipe(Uf(1), pf(1));
              return (
                (this.loadingTranslations = e.pipe(
                  E((e) => this.compiler.compileTranslations(e, t)),
                  Uf(1),
                  pf(1)
                )),
                this.loadingTranslations.subscribe({
                  next: (e) => {
                    (this.translations[t] =
                      this.extend && this.translations[t]
                        ? Object.assign(Object.assign({}, e), this.translations[t])
                        : e),
                      this.updateLangs(),
                      (this.pending = !1);
                  },
                  error: (t) => {
                    this.pending = !1;
                  },
                }),
                e
              );
            }
            setTranslation(t, e, n = !1) {
              (e = this.compiler.compileTranslations(e, t)),
                (this.translations[t] = (n || this.extend) && this.translations[t] ? eg(this.translations[t], e) : e),
                this.updateLangs(),
                this.onTranslationChange.emit({ lang: t, translations: this.translations[t] });
            }
            getLangs() {
              return this.langs;
            }
            addLangs(t) {
              t.forEach((t) => {
                -1 === this.langs.indexOf(t) && this.langs.push(t);
              });
            }
            updateLangs() {
              this.addLangs(Object.keys(this.translations));
            }
            getParsedResult(t, e, n) {
              let i;
              if (e instanceof Array) {
                let i = {},
                  s = !1;
                for (let r of e) (i[r] = this.getParsedResult(t, r, n)), zf(i[r]) && (s = !0);
                return s
                  ? Id(e.map((t) => (zf(i[t]) ? i[t] : fm(i[t])))).pipe(
                      E((t) => {
                        let n = {};
                        return (
                          t.forEach((t, i) => {
                            n[e[i]] = t;
                          }),
                          n
                        );
                      })
                    )
                  : i;
              }
              if (
                (t && (i = this.parser.interpolate(this.parser.getValue(t, e), n)),
                void 0 === i &&
                  null != this.defaultLang &&
                  this.defaultLang !== this.currentLang &&
                  this.useDefaultLang &&
                  (i = this.parser.interpolate(this.parser.getValue(this.translations[this.defaultLang], e), n)),
                void 0 === i)
              ) {
                let t = { key: e, translateService: this };
                void 0 !== n && (t.interpolateParams = n), (i = this.missingTranslationHandler.handle(t));
              }
              return void 0 !== i ? i : e;
            }
            get(t, e) {
              if (!Jf(t) || !t.length) throw new Error('Parameter "key" required');
              if (this.pending)
                return this.loadingTranslations.pipe(gm((n) => (zf((n = this.getParsedResult(n, t, e))) ? n : fm(n))));
              {
                let n = this.getParsedResult(this.translations[this.currentLang], t, e);
                return zf(n) ? n : fm(n);
              }
            }
            getStreamOnTranslationChange(t, e) {
              if (!Jf(t) || !t.length) throw new Error('Parameter "key" required');
              return of(
                tf(() => this.get(t, e)),
                this.onTranslationChange.pipe(
                  cf((n) => {
                    const i = this.getParsedResult(n.translations, t, e);
                    return 'function' == typeof i.subscribe ? i : fm(i);
                  })
                )
              );
            }
            stream(t, e) {
              if (!Jf(t) || !t.length) throw new Error('Parameter "key" required');
              return of(
                tf(() => this.get(t, e)),
                this.onLangChange.pipe(
                  cf((n) => {
                    const i = this.getParsedResult(n.translations, t, e);
                    return zf(i) ? i : fm(i);
                  })
                )
              );
            }
            instant(t, e) {
              if (!Jf(t) || !t.length) throw new Error('Parameter "key" required');
              let n = this.getParsedResult(this.translations[this.currentLang], t, e);
              if (zf(n)) {
                if (t instanceof Array) {
                  let e = {};
                  return (
                    t.forEach((n, i) => {
                      e[t[i]] = t[i];
                    }),
                    e
                  );
                }
                return t;
              }
              return n;
            }
            set(t, e, n = this.currentLang) {
              (this.translations[n][t] = this.compiler.compile(e, n)),
                this.updateLangs(),
                this.onTranslationChange.emit({ lang: n, translations: this.translations[n] });
            }
            changeLang(t) {
              (this.currentLang = t),
                this.onLangChange.emit({ lang: t, translations: this.translations[t] }),
                null == this.defaultLang && this.changeDefaultLang(t);
            }
            changeDefaultLang(t) {
              (this.defaultLang = t), this.onDefaultLangChange.emit({ lang: t, translations: this.translations[t] });
            }
            reloadLang(t) {
              return this.resetLang(t), this.getTranslation(t);
            }
            resetLang(t) {
              (this._translationRequests[t] = void 0), (this.translations[t] = void 0);
            }
            getBrowserLang() {
              if ('undefined' == typeof window || void 0 === window.navigator) return;
              let t = window.navigator.languages ? window.navigator.languages[0] : null;
              return (
                (t =
                  t || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage),
                void 0 !== t
                  ? (-1 !== t.indexOf('-') && (t = t.split('-')[0]), -1 !== t.indexOf('_') && (t = t.split('_')[0]), t)
                  : void 0
              );
            }
            getBrowserCultureLang() {
              if ('undefined' == typeof window || void 0 === window.navigator) return;
              let t = window.navigator.languages ? window.navigator.languages[0] : null;
              return (
                (t =
                  t || window.navigator.language || window.navigator.browserLanguage || window.navigator.userLanguage),
                t
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(lg), _i(Yf), _i(rg), _i(ng), _i(Kf), _i(hg), _i(cg), _i(dg), _i(ug));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        mg = (() => {
          class t {
            constructor(t, e, n) {
              (this.translateService = t),
                (this.element = e),
                (this._ref = n),
                this.onTranslationChangeSub ||
                  (this.onTranslationChangeSub = this.translateService.onTranslationChange.subscribe((t) => {
                    t.lang === this.translateService.currentLang && this.checkNodes(!0, t.translations);
                  })),
                this.onLangChangeSub ||
                  (this.onLangChangeSub = this.translateService.onLangChange.subscribe((t) => {
                    this.checkNodes(!0, t.translations);
                  })),
                this.onDefaultLangChangeSub ||
                  (this.onDefaultLangChangeSub = this.translateService.onDefaultLangChange.subscribe((t) => {
                    this.checkNodes(!0);
                  }));
            }
            set translate(t) {
              t && ((this.key = t), this.checkNodes());
            }
            set translateParams(t) {
              Zf(this.currentParams, t) || ((this.currentParams = t), this.checkNodes(!0));
            }
            ngAfterViewChecked() {
              this.checkNodes();
            }
            checkNodes(t = !1, e) {
              let n = this.element.nativeElement.childNodes;
              n.length ||
                (this.setContent(this.element.nativeElement, this.key), (n = this.element.nativeElement.childNodes));
              for (let i = 0; i < n.length; ++i) {
                let s = n[i];
                if (3 === s.nodeType) {
                  let n;
                  if ((t && (s.lastKey = null), Jf(s.lookupKey))) n = s.lookupKey;
                  else if (this.key) n = this.key;
                  else {
                    let t = this.getContent(s),
                      e = t.trim();
                    e.length &&
                      ((s.lookupKey = e),
                      t !== s.currentValue
                        ? ((n = e), (s.originalContent = t || s.originalContent))
                        : s.originalContent
                        ? (n = s.originalContent.trim())
                        : t !== s.currentValue && ((n = e), (s.originalContent = t || s.originalContent)));
                  }
                  this.updateValue(n, s, e);
                }
              }
            }
            updateValue(t, e, n) {
              if (t) {
                if (e.lastKey === t && this.lastParams === this.currentParams) return;
                this.lastParams = this.currentParams;
                let i = (n) => {
                  n !== t && (e.lastKey = t),
                    e.originalContent || (e.originalContent = this.getContent(e)),
                    (e.currentValue = Jf(n) ? n : e.originalContent || t),
                    this.setContent(e, this.key ? e.currentValue : e.originalContent.replace(t, e.currentValue)),
                    this._ref.markForCheck();
                };
                if (Jf(n)) {
                  let e = this.translateService.getParsedResult(n, t, this.currentParams);
                  zf(e) ? e.subscribe(i) : i(e);
                } else this.translateService.get(t, this.currentParams).subscribe(i);
              }
            }
            getContent(t) {
              return Jf(t.textContent) ? t.textContent : t.data;
            }
            setContent(t, e) {
              Jf(t.textContent) ? (t.textContent = e) : (t.data = e);
            }
            ngOnDestroy() {
              this.onLangChangeSub && this.onLangChangeSub.unsubscribe(),
                this.onDefaultLangChangeSub && this.onDefaultLangChangeSub.unsubscribe(),
                this.onTranslationChangeSub && this.onTranslationChangeSub.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(pg), Ro(Za), Ro(kl));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'translate', ''],
                ['', 'ngx-translate', ''],
              ],
              inputs: { translate: 'translate', translateParams: 'translateParams' },
            })),
            t
          );
        })(),
        fg = (() => {
          class t {
            constructor(t, e) {
              (this.translate = t), (this._ref = e), (this.value = '');
            }
            updateValue(t, e, n) {
              let i = (e) => {
                (this.value = void 0 !== e ? e : t), (this.lastKey = t), this._ref.markForCheck();
              };
              if (n) {
                let s = this.translate.getParsedResult(n, t, e);
                zf(s.subscribe) ? s.subscribe(i) : i(s);
              }
              this.translate.get(t, e).subscribe(i);
            }
            transform(t, ...e) {
              if (!t || !t.length) return t;
              if (Zf(t, this.lastKey) && Zf(e, this.lastParams)) return this.value;
              let n;
              if (Jf(e[0]) && e.length)
                if ('string' == typeof e[0] && e[0].length) {
                  let t = e[0]
                    .replace(/(\')?([a-zA-Z0-9_]+)(\')?(\s)?:/g, '"$2":')
                    .replace(/:(\s)?(\')(.*?)(\')/g, ':"$3"');
                  try {
                    n = JSON.parse(t);
                  } catch (i) {
                    throw new SyntaxError(
                      `Wrong parameter in TranslatePipe. Expected a valid Object, received: ${e[0]}`
                    );
                  }
                } else 'object' != typeof e[0] || Array.isArray(e[0]) || (n = e[0]);
              return (
                (this.lastKey = t),
                (this.lastParams = e),
                this.updateValue(t, n),
                this._dispose(),
                this.onTranslationChange ||
                  (this.onTranslationChange = this.translate.onTranslationChange.subscribe((e) => {
                    this.lastKey &&
                      e.lang === this.translate.currentLang &&
                      ((this.lastKey = null), this.updateValue(t, n, e.translations));
                  })),
                this.onLangChange ||
                  (this.onLangChange = this.translate.onLangChange.subscribe((e) => {
                    this.lastKey && ((this.lastKey = null), this.updateValue(t, n, e.translations));
                  })),
                this.onDefaultLangChange ||
                  (this.onDefaultLangChange = this.translate.onDefaultLangChange.subscribe(() => {
                    this.lastKey && ((this.lastKey = null), this.updateValue(t, n));
                  })),
                this.value
              );
            }
            _dispose() {
              void 0 !== this.onTranslationChange &&
                (this.onTranslationChange.unsubscribe(), (this.onTranslationChange = void 0)),
                void 0 !== this.onLangChange && (this.onLangChange.unsubscribe(), (this.onLangChange = void 0)),
                void 0 !== this.onDefaultLangChange &&
                  (this.onDefaultLangChange.unsubscribe(), (this.onDefaultLangChange = void 0));
            }
            ngOnDestroy() {
              this._dispose();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(pg), Ac());
            }),
            (t.ɵpipe = Zt({ name: 'translate', type: t, pure: !1 })),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        gg = (() => {
          class t {
            static forRoot(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.loader || { provide: Yf, useClass: Gf },
                  e.compiler || { provide: rg, useClass: og },
                  e.parser || { provide: ng, useClass: ig },
                  e.missingTranslationHandler || { provide: Kf, useClass: Xf },
                  lg,
                  { provide: cg, useValue: e.isolate },
                  { provide: hg, useValue: e.useDefaultLang },
                  { provide: dg, useValue: e.extend },
                  { provide: ug, useValue: e.defaultLanguage },
                  pg,
                ],
              };
            }
            static forChild(e = {}) {
              return {
                ngModule: t,
                providers: [
                  e.loader || { provide: Yf, useClass: Gf },
                  e.compiler || { provide: rg, useClass: og },
                  e.parser || { provide: ng, useClass: ig },
                  e.missingTranslationHandler || { provide: Kf, useClass: Xf },
                  { provide: cg, useValue: e.isolate },
                  { provide: hg, useValue: e.useDefaultLang },
                  { provide: dg, useValue: e.extend },
                  { provide: ug, useValue: e.defaultLanguage },
                  pg,
                ],
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })();
      class _g {}
      const bg = '*';
      function yg(t, e) {
        return { type: 7, name: t, definitions: e, options: {} };
      }
      function vg(t, e = null) {
        return { type: 4, styles: e, timings: t };
      }
      function wg(t, e = null) {
        return { type: 2, steps: t, options: e };
      }
      function xg(t) {
        return { type: 6, styles: t, offset: null };
      }
      function Cg(t, e, n) {
        return { type: 0, name: t, styles: e, options: n };
      }
      function kg(t) {
        return { type: 5, steps: t };
      }
      function Sg(t, e, n = null) {
        return { type: 1, expr: t, animation: e, options: n };
      }
      function Eg(t = null) {
        return { type: 9, options: t };
      }
      function Og(t, e, n = null) {
        return { type: 11, selector: t, animation: e, options: n };
      }
      function Pg(t) {
        Promise.resolve(null).then(t);
      }
      class Ag {
        constructor(t = 0, e = 0) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this._destroyed = !1),
            (this._finished = !1),
            (this._position = 0),
            (this.parentPlayer = null),
            (this.totalTime = t + e);
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        init() {}
        play() {
          this.hasStarted() || (this._onStart(), this.triggerMicrotask()), (this._started = !0);
        }
        triggerMicrotask() {
          Pg(() => this._onFinish());
        }
        _onStart() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        pause() {}
        restart() {}
        finish() {
          this._onFinish();
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.hasStarted() || this._onStart(),
            this.finish(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {}
        setPosition(t) {
          this._position = this.totalTime ? t * this.totalTime : 1;
        }
        getPosition() {
          return this.totalTime ? this._position / this.totalTime : 1;
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      class Tg {
        constructor(t) {
          (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this._onDestroyFns = []),
            (this.parentPlayer = null),
            (this.totalTime = 0),
            (this.players = t);
          let e = 0,
            n = 0,
            i = 0;
          const s = this.players.length;
          0 == s
            ? Pg(() => this._onFinish())
            : this.players.forEach((t) => {
                t.onDone(() => {
                  ++e == s && this._onFinish();
                }),
                  t.onDestroy(() => {
                    ++n == s && this._onDestroy();
                  }),
                  t.onStart(() => {
                    ++i == s && this._onStart();
                  });
              }),
            (this.totalTime = this.players.reduce((t, e) => Math.max(t, e.totalTime), 0));
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        init() {
          this.players.forEach((t) => t.init());
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        _onStart() {
          this.hasStarted() || ((this._started = !0), this._onStartFns.forEach((t) => t()), (this._onStartFns = []));
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this.parentPlayer || this.init(), this._onStart(), this.players.forEach((t) => t.play());
        }
        pause() {
          this.players.forEach((t) => t.pause());
        }
        restart() {
          this.players.forEach((t) => t.restart());
        }
        finish() {
          this._onFinish(), this.players.forEach((t) => t.finish());
        }
        destroy() {
          this._onDestroy();
        }
        _onDestroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._onFinish(),
            this.players.forEach((t) => t.destroy()),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        reset() {
          this.players.forEach((t) => t.reset()), (this._destroyed = !1), (this._finished = !1), (this._started = !1);
        }
        setPosition(t) {
          const e = t * this.totalTime;
          this.players.forEach((t) => {
            const n = t.totalTime ? Math.min(1, e / t.totalTime) : 1;
            t.setPosition(n);
          });
        }
        getPosition() {
          const t = this.players.reduce((t, e) => (null === t || e.totalTime > t.totalTime ? e : t), null);
          return null != t ? t.getPosition() : 0;
        }
        beforeDestroy() {
          this.players.forEach((t) => {
            t.beforeDestroy && t.beforeDestroy();
          });
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      function Dg() {
        return 'undefined' != typeof process && '[object process]' === {}.toString.call(process);
      }
      function Mg(t) {
        switch (t.length) {
          case 0:
            return new Ag();
          case 1:
            return t[0];
          default:
            return new Tg(t);
        }
      }
      function Rg(t, e, n, i, s = {}, r = {}) {
        const o = [],
          a = [];
        let l = -1,
          c = null;
        if (
          (i.forEach((t) => {
            const n = t.offset,
              i = n == l,
              h = (i && c) || {};
            Object.keys(t).forEach((n) => {
              let i = n,
                a = t[n];
              if ('offset' !== n)
                switch (((i = e.normalizePropertyName(i, o)), a)) {
                  case '!':
                    a = s[n];
                    break;
                  case bg:
                    a = r[n];
                    break;
                  default:
                    a = e.normalizeStyleValue(n, i, a, o);
                }
              h[i] = a;
            }),
              i || a.push(h),
              (c = h),
              (l = n);
          }),
          o.length)
        ) {
          const t = '\n - ';
          throw new Error(`Unable to animate due to the following errors:${t}${o.join(t)}`);
        }
        return a;
      }
      function Ig(t, e, n, i) {
        switch (e) {
          case 'start':
            t.onStart(() => i(n && Lg(n, 'start', t)));
            break;
          case 'done':
            t.onDone(() => i(n && Lg(n, 'done', t)));
            break;
          case 'destroy':
            t.onDestroy(() => i(n && Lg(n, 'destroy', t)));
        }
      }
      function Lg(t, e, n) {
        const i = n.totalTime,
          s = Fg(
            t.element,
            t.triggerName,
            t.fromState,
            t.toState,
            e || t.phaseName,
            null == i ? t.totalTime : i,
            !!n.disabled
          ),
          r = t._data;
        return null != r && (s._data = r), s;
      }
      function Fg(t, e, n, i, s = '', r = 0, o) {
        return { element: t, triggerName: e, fromState: n, toState: i, phaseName: s, totalTime: r, disabled: !!o };
      }
      function Ng(t, e, n) {
        let i;
        return t instanceof Map ? ((i = t.get(e)), i || t.set(e, (i = n))) : ((i = t[e]), i || (i = t[e] = n)), i;
      }
      function Vg(t) {
        const e = t.indexOf(':');
        return [t.substring(1, e), t.substr(e + 1)];
      }
      let Bg = (t, e) => !1,
        zg = (t, e) => !1,
        jg = (t, e, n) => [];
      const Hg = Dg();
      (Hg || 'undefined' != typeof Element) &&
        ((Bg = (t, e) => t.contains(e)),
        (zg = (() => {
          if (Hg || Element.prototype.matches) return (t, e) => t.matches(e);
          {
            const t = Element.prototype,
              e =
                t.matchesSelector ||
                t.mozMatchesSelector ||
                t.msMatchesSelector ||
                t.oMatchesSelector ||
                t.webkitMatchesSelector;
            return e ? (t, n) => e.apply(t, [n]) : zg;
          }
        })()),
        (jg = (t, e, n) => {
          let i = [];
          if (n) {
            const n = t.querySelectorAll(e);
            for (let t = 0; t < n.length; t++) i.push(n[t]);
          } else {
            const n = t.querySelector(e);
            n && i.push(n);
          }
          return i;
        }));
      let $g = null,
        qg = !1;
      function Wg(t) {
        $g ||
          (($g = ('undefined' != typeof document ? document.body : null) || {}),
          (qg = !!$g.style && 'WebkitAppearance' in $g.style));
        let e = !0;
        return (
          $g.style &&
            !(function (t) {
              return 'ebkit' == t.substring(1, 6);
            })(t) &&
            ((e = t in $g.style), !e && qg) &&
            (e = 'Webkit' + t.charAt(0).toUpperCase() + t.substr(1) in $g.style),
          e
        );
      }
      const Ug = zg,
        Yg = Bg,
        Gg = jg;
      function Qg(t) {
        const e = {};
        return (
          Object.keys(t).forEach((n) => {
            const i = n.replace(/([a-z])([A-Z])/g, '$1-$2');
            e[i] = t[n];
          }),
          e
        );
      }
      let Kg = (() => {
        class t {
          validateStyleProperty(t) {
            return Wg(t);
          }
          matchesElement(t, e) {
            return Ug(t, e);
          }
          containsElement(t, e) {
            return Yg(t, e);
          }
          query(t, e, n) {
            return Gg(t, e, n);
          }
          computeStyle(t, e, n) {
            return n || '';
          }
          animate(t, e, n, i, s, r = [], o) {
            return new Ag(n, i);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Xg {}
      Xg.NOOP = new Kg();
      const Zg = 'ng-enter',
        Jg = 'ng-leave',
        t_ = 'ng-trigger',
        e_ = '.ng-trigger',
        n_ = 'ng-animating',
        i_ = '.ng-animating';
      function s_(t) {
        if ('number' == typeof t) return t;
        const e = t.match(/^(-?[\.\d]+)(m?s)/);
        return !e || e.length < 2 ? 0 : r_(parseFloat(e[1]), e[2]);
      }
      function r_(t, e) {
        switch (e) {
          case 's':
            return 1e3 * t;
          default:
            return t;
        }
      }
      function o_(t, e, n) {
        return t.hasOwnProperty('duration')
          ? t
          : (function (t, e, n) {
              let i,
                s = 0,
                r = '';
              if ('string' == typeof t) {
                const n = t.match(/^(-?[\.\d]+)(m?s)(?:\s+(-?[\.\d]+)(m?s))?(?:\s+([-a-z]+(?:\(.+?\))?))?$/i);
                if (null === n)
                  return e.push(`The provided timing value "${t}" is invalid.`), { duration: 0, delay: 0, easing: '' };
                i = r_(parseFloat(n[1]), n[2]);
                const o = n[3];
                null != o && (s = r_(parseFloat(o), n[4]));
                const a = n[5];
                a && (r = a);
              } else i = t;
              if (!n) {
                let n = !1,
                  r = e.length;
                i < 0 && (e.push('Duration values below 0 are not allowed for this animation step.'), (n = !0)),
                  s < 0 && (e.push('Delay values below 0 are not allowed for this animation step.'), (n = !0)),
                  n && e.splice(r, 0, `The provided timing value "${t}" is invalid.`);
              }
              return { duration: i, delay: s, easing: r };
            })(t, e, n);
      }
      function a_(t, e = {}) {
        return (
          Object.keys(t).forEach((n) => {
            e[n] = t[n];
          }),
          e
        );
      }
      function l_(t, e, n = {}) {
        if (e) for (let i in t) n[i] = t[i];
        else a_(t, n);
        return n;
      }
      function c_(t, e, n) {
        return n ? e + ':' + n + ';' : '';
      }
      function h_(t) {
        let e = '';
        for (let n = 0; n < t.style.length; n++) {
          const i = t.style.item(n);
          e += c_(0, i, t.style.getPropertyValue(i));
        }
        for (const n in t.style)
          t.style.hasOwnProperty(n) &&
            !n.startsWith('_') &&
            (e += c_(0, n.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase(), t.style[n]));
        t.setAttribute('style', e);
      }
      function u_(t, e, n) {
        t.style &&
          (Object.keys(e).forEach((i) => {
            const s = y_(i);
            n && !n.hasOwnProperty(i) && (n[i] = t.style[s]), (t.style[s] = e[i]);
          }),
          Dg() && h_(t));
      }
      function d_(t, e) {
        t.style &&
          (Object.keys(e).forEach((e) => {
            const n = y_(e);
            t.style[n] = '';
          }),
          Dg() && h_(t));
      }
      function p_(t) {
        return Array.isArray(t) ? (1 == t.length ? t[0] : wg(t)) : t;
      }
      const m_ = new RegExp('{{\\s*(.+?)\\s*}}', 'g');
      function f_(t) {
        let e = [];
        if ('string' == typeof t) {
          let n;
          for (; (n = m_.exec(t)); ) e.push(n[1]);
          m_.lastIndex = 0;
        }
        return e;
      }
      function g_(t, e, n) {
        const i = t.toString(),
          s = i.replace(m_, (t, i) => {
            let s = e[i];
            return (
              e.hasOwnProperty(i) || (n.push(`Please provide a value for the animation param ${i}`), (s = '')),
              s.toString()
            );
          });
        return s == i ? t : s;
      }
      function __(t) {
        const e = [];
        let n = t.next();
        for (; !n.done; ) e.push(n.value), (n = t.next());
        return e;
      }
      const b_ = /-+([a-z0-9])/g;
      function y_(t) {
        return t.replace(b_, (...t) => t[1].toUpperCase());
      }
      function v_(t, e) {
        return 0 === t || 0 === e;
      }
      function w_(t, e, n) {
        const i = Object.keys(n);
        if (i.length && e.length) {
          let r = e[0],
            o = [];
          if (
            (i.forEach((t) => {
              r.hasOwnProperty(t) || o.push(t), (r[t] = n[t]);
            }),
            o.length)
          )
            for (var s = 1; s < e.length; s++) {
              let n = e[s];
              o.forEach(function (e) {
                n[e] = C_(t, e);
              });
            }
        }
        return e;
      }
      function x_(t, e, n) {
        switch (e.type) {
          case 7:
            return t.visitTrigger(e, n);
          case 0:
            return t.visitState(e, n);
          case 1:
            return t.visitTransition(e, n);
          case 2:
            return t.visitSequence(e, n);
          case 3:
            return t.visitGroup(e, n);
          case 4:
            return t.visitAnimate(e, n);
          case 5:
            return t.visitKeyframes(e, n);
          case 6:
            return t.visitStyle(e, n);
          case 8:
            return t.visitReference(e, n);
          case 9:
            return t.visitAnimateChild(e, n);
          case 10:
            return t.visitAnimateRef(e, n);
          case 11:
            return t.visitQuery(e, n);
          case 12:
            return t.visitStagger(e, n);
          default:
            throw new Error(`Unable to resolve animation metadata node #${e.type}`);
        }
      }
      function C_(t, e) {
        return window.getComputedStyle(t)[e];
      }
      const k_ = '*';
      function S_(t, e) {
        const n = [];
        return (
          'string' == typeof t
            ? t.split(/\s*,\s*/).forEach((t) =>
                (function (t, e, n) {
                  if (':' == t[0]) {
                    const i = (function (t, e) {
                      switch (t) {
                        case ':enter':
                          return 'void => *';
                        case ':leave':
                          return '* => void';
                        case ':increment':
                          return (t, e) => parseFloat(e) > parseFloat(t);
                        case ':decrement':
                          return (t, e) => parseFloat(e) < parseFloat(t);
                        default:
                          return e.push(`The transition alias value "${t}" is not supported`), '* => *';
                      }
                    })(t, n);
                    if ('function' == typeof i) return void e.push(i);
                    t = i;
                  }
                  const i = t.match(/^(\*|[-\w]+)\s*(<?[=-]>)\s*(\*|[-\w]+)$/);
                  if (null == i || i.length < 4)
                    return n.push(`The provided transition expression "${t}" is not supported`), e;
                  const s = i[1],
                    r = i[2],
                    o = i[3];
                  e.push(P_(s, o)), '<' != r[0] || (s == k_ && o == k_) || e.push(P_(o, s));
                })(t, n, e)
              )
            : n.push(t),
          n
        );
      }
      const E_ = new Set(['true', '1']),
        O_ = new Set(['false', '0']);
      function P_(t, e) {
        const n = E_.has(t) || O_.has(t),
          i = E_.has(e) || O_.has(e);
        return (s, r) => {
          let o = t == k_ || t == s,
            a = e == k_ || e == r;
          return (
            !o && n && 'boolean' == typeof s && (o = s ? E_.has(t) : O_.has(t)),
            !a && i && 'boolean' == typeof r && (a = r ? E_.has(e) : O_.has(e)),
            o && a
          );
        };
      }
      const A_ = new RegExp('s*:selfs*,?', 'g');
      function T_(t, e, n) {
        return new D_(t).build(e, n);
      }
      class D_ {
        constructor(t) {
          this._driver = t;
        }
        build(t, e) {
          const n = new M_(e);
          return this._resetContextStyleTimingState(n), x_(this, p_(t), n);
        }
        _resetContextStyleTimingState(t) {
          (t.currentQuerySelector = ''), (t.collectedStyles = {}), (t.collectedStyles[''] = {}), (t.currentTime = 0);
        }
        visitTrigger(t, e) {
          let n = (e.queryCount = 0),
            i = (e.depCount = 0);
          const s = [],
            r = [];
          return (
            '@' == t.name.charAt(0) &&
              e.errors.push("animation triggers cannot be prefixed with an `@` sign (e.g. trigger('@foo', [...]))"),
            t.definitions.forEach((t) => {
              if ((this._resetContextStyleTimingState(e), 0 == t.type)) {
                const n = t,
                  i = n.name;
                i
                  .toString()
                  .split(/\s*,\s*/)
                  .forEach((t) => {
                    (n.name = t), s.push(this.visitState(n, e));
                  }),
                  (n.name = i);
              } else if (1 == t.type) {
                const s = this.visitTransition(t, e);
                (n += s.queryCount), (i += s.depCount), r.push(s);
              } else e.errors.push('only state() and transition() definitions can sit inside of a trigger()');
            }),
            { type: 7, name: t.name, states: s, transitions: r, queryCount: n, depCount: i, options: null }
          );
        }
        visitState(t, e) {
          const n = this.visitStyle(t.styles, e),
            i = (t.options && t.options.params) || null;
          if (n.containsDynamicStyles) {
            const s = new Set(),
              r = i || {};
            if (
              (n.styles.forEach((t) => {
                if (R_(t)) {
                  const e = t;
                  Object.keys(e).forEach((t) => {
                    f_(e[t]).forEach((t) => {
                      r.hasOwnProperty(t) || s.add(t);
                    });
                  });
                }
              }),
              s.size)
            ) {
              const n = __(s.values());
              e.errors.push(
                `state("${t.name}", ...) must define default values for all the following style substitutions: ${n.join(
                  ', '
                )}`
              );
            }
          }
          return { type: 0, name: t.name, style: n, options: i ? { params: i } : null };
        }
        visitTransition(t, e) {
          (e.queryCount = 0), (e.depCount = 0);
          const n = x_(this, p_(t.animation), e);
          return {
            type: 1,
            matchers: S_(t.expr, e.errors),
            animation: n,
            queryCount: e.queryCount,
            depCount: e.depCount,
            options: I_(t.options),
          };
        }
        visitSequence(t, e) {
          return { type: 2, steps: t.steps.map((t) => x_(this, t, e)), options: I_(t.options) };
        }
        visitGroup(t, e) {
          const n = e.currentTime;
          let i = 0;
          const s = t.steps.map((t) => {
            e.currentTime = n;
            const s = x_(this, t, e);
            return (i = Math.max(i, e.currentTime)), s;
          });
          return (e.currentTime = i), { type: 3, steps: s, options: I_(t.options) };
        }
        visitAnimate(t, e) {
          const n = (function (t, e) {
            let n = null;
            if (t.hasOwnProperty('duration')) n = t;
            else if ('number' == typeof t) return L_(o_(t, e).duration, 0, '');
            const i = t;
            if (i.split(/\s+/).some((t) => '{' == t.charAt(0) && '{' == t.charAt(1))) {
              const t = L_(0, 0, '');
              return (t.dynamic = !0), (t.strValue = i), t;
            }
            return (n = n || o_(i, e)), L_(n.duration, n.delay, n.easing);
          })(t.timings, e.errors);
          let i;
          e.currentAnimateTimings = n;
          let s = t.styles ? t.styles : xg({});
          if (5 == s.type) i = this.visitKeyframes(s, e);
          else {
            let s = t.styles,
              r = !1;
            if (!s) {
              r = !0;
              const t = {};
              n.easing && (t.easing = n.easing), (s = xg(t));
            }
            e.currentTime += n.duration + n.delay;
            const o = this.visitStyle(s, e);
            (o.isEmptyStep = r), (i = o);
          }
          return (e.currentAnimateTimings = null), { type: 4, timings: n, style: i, options: null };
        }
        visitStyle(t, e) {
          const n = this._makeStyleAst(t, e);
          return this._validateStyleAst(n, e), n;
        }
        _makeStyleAst(t, e) {
          const n = [];
          Array.isArray(t.styles)
            ? t.styles.forEach((t) => {
                'string' == typeof t
                  ? t == bg
                    ? n.push(t)
                    : e.errors.push(`The provided style string value ${t} is not allowed.`)
                  : n.push(t);
              })
            : n.push(t.styles);
          let i = !1,
            s = null;
          return (
            n.forEach((t) => {
              if (R_(t)) {
                const e = t,
                  n = e.easing;
                if ((n && ((s = n), delete e.easing), !i))
                  for (let t in e)
                    if (e[t].toString().indexOf('{{') >= 0) {
                      i = !0;
                      break;
                    }
              }
            }),
            { type: 6, styles: n, easing: s, offset: t.offset, containsDynamicStyles: i, options: null }
          );
        }
        _validateStyleAst(t, e) {
          const n = e.currentAnimateTimings;
          let i = e.currentTime,
            s = e.currentTime;
          n && s > 0 && (s -= n.duration + n.delay),
            t.styles.forEach((t) => {
              'string' != typeof t &&
                Object.keys(t).forEach((n) => {
                  if (!this._driver.validateStyleProperty(n))
                    return void e.errors.push(
                      `The provided animation property "${n}" is not a supported CSS property for animations`
                    );
                  const r = e.collectedStyles[e.currentQuerySelector],
                    o = r[n];
                  let a = !0;
                  o &&
                    (s != i &&
                      s >= o.startTime &&
                      i <= o.endTime &&
                      (e.errors.push(
                        `The CSS property "${n}" that exists between the times of "${o.startTime}ms" and "${o.endTime}ms" is also being animated in a parallel animation between the times of "${s}ms" and "${i}ms"`
                      ),
                      (a = !1)),
                    (s = o.startTime)),
                    a && (r[n] = { startTime: s, endTime: i }),
                    e.options &&
                      (function (t, e, n) {
                        const i = e.params || {},
                          s = f_(t);
                        s.length &&
                          s.forEach((t) => {
                            i.hasOwnProperty(t) ||
                              n.push(`Unable to resolve the local animation param ${t} in the given list of values`);
                          });
                      })(t[n], e.options, e.errors);
                });
            });
        }
        visitKeyframes(t, e) {
          const n = { type: 5, styles: [], options: null };
          if (!e.currentAnimateTimings)
            return e.errors.push('keyframes() must be placed inside of a call to animate()'), n;
          let i = 0;
          const s = [];
          let r = !1,
            o = !1,
            a = 0;
          const l = t.steps.map((t) => {
            const n = this._makeStyleAst(t, e);
            let l =
                null != n.offset
                  ? n.offset
                  : (function (t) {
                      if ('string' == typeof t) return null;
                      let e = null;
                      if (Array.isArray(t))
                        t.forEach((t) => {
                          if (R_(t) && t.hasOwnProperty('offset')) {
                            const n = t;
                            (e = parseFloat(n.offset)), delete n.offset;
                          }
                        });
                      else if (R_(t) && t.hasOwnProperty('offset')) {
                        const n = t;
                        (e = parseFloat(n.offset)), delete n.offset;
                      }
                      return e;
                    })(n.styles),
              c = 0;
            return (
              null != l && (i++, (c = n.offset = l)), (o = o || c < 0 || c > 1), (r = r || c < a), (a = c), s.push(c), n
            );
          });
          o && e.errors.push('Please ensure that all keyframe offsets are between 0 and 1'),
            r && e.errors.push('Please ensure that all keyframe offsets are in order');
          const c = t.steps.length;
          let h = 0;
          i > 0 && i < c
            ? e.errors.push('Not all style() steps within the declared keyframes() contain offsets')
            : 0 == i && (h = 1 / (c - 1));
          const u = c - 1,
            d = e.currentTime,
            p = e.currentAnimateTimings,
            m = p.duration;
          return (
            l.forEach((t, i) => {
              const r = h > 0 ? (i == u ? 1 : h * i) : s[i],
                o = r * m;
              (e.currentTime = d + p.delay + o),
                (p.duration = o),
                this._validateStyleAst(t, e),
                (t.offset = r),
                n.styles.push(t);
            }),
            n
          );
        }
        visitReference(t, e) {
          return { type: 8, animation: x_(this, p_(t.animation), e), options: I_(t.options) };
        }
        visitAnimateChild(t, e) {
          return e.depCount++, { type: 9, options: I_(t.options) };
        }
        visitAnimateRef(t, e) {
          return { type: 10, animation: this.visitReference(t.animation, e), options: I_(t.options) };
        }
        visitQuery(t, e) {
          const n = e.currentQuerySelector,
            i = t.options || {};
          e.queryCount++, (e.currentQuery = t);
          const [s, r] = (function (t) {
            const e = !!t.split(/\s*,\s*/).find((t) => ':self' == t);
            return (
              e && (t = t.replace(A_, '')),
              [
                (t = t
                  .replace(/@\*/g, e_)
                  .replace(/@\w+/g, (t) => '.ng-trigger-' + t.substr(1))
                  .replace(/:animating/g, i_)),
                e,
              ]
            );
          })(t.selector);
          (e.currentQuerySelector = n.length ? n + ' ' + s : s), Ng(e.collectedStyles, e.currentQuerySelector, {});
          const o = x_(this, p_(t.animation), e);
          return (
            (e.currentQuery = null),
            (e.currentQuerySelector = n),
            {
              type: 11,
              selector: s,
              limit: i.limit || 0,
              optional: !!i.optional,
              includeSelf: r,
              animation: o,
              originalSelector: t.selector,
              options: I_(t.options),
            }
          );
        }
        visitStagger(t, e) {
          e.currentQuery || e.errors.push('stagger() can only be used inside of query()');
          const n = 'full' === t.timings ? { duration: 0, delay: 0, easing: 'full' } : o_(t.timings, e.errors, !0);
          return { type: 12, animation: x_(this, p_(t.animation), e), timings: n, options: null };
        }
      }
      class M_ {
        constructor(t) {
          (this.errors = t),
            (this.queryCount = 0),
            (this.depCount = 0),
            (this.currentTransition = null),
            (this.currentQuery = null),
            (this.currentQuerySelector = null),
            (this.currentAnimateTimings = null),
            (this.currentTime = 0),
            (this.collectedStyles = {}),
            (this.options = null);
        }
      }
      function R_(t) {
        return !Array.isArray(t) && 'object' == typeof t;
      }
      function I_(t) {
        var e;
        return t ? (t = a_(t)).params && (t.params = (e = t.params) ? a_(e) : null) : (t = {}), t;
      }
      function L_(t, e, n) {
        return { duration: t, delay: e, easing: n };
      }
      function F_(t, e, n, i, s, r, o = null, a = !1) {
        return {
          type: 1,
          element: t,
          keyframes: e,
          preStyleProps: n,
          postStyleProps: i,
          duration: s,
          delay: r,
          totalTime: s + r,
          easing: o,
          subTimeline: a,
        };
      }
      class N_ {
        constructor() {
          this._map = new Map();
        }
        consume(t) {
          let e = this._map.get(t);
          return e ? this._map.delete(t) : (e = []), e;
        }
        append(t, e) {
          let n = this._map.get(t);
          n || this._map.set(t, (n = [])), n.push(...e);
        }
        has(t) {
          return this._map.has(t);
        }
        clear() {
          this._map.clear();
        }
      }
      const V_ = new RegExp(':enter', 'g'),
        B_ = new RegExp(':leave', 'g');
      function z_(t, e, n, i, s, r = {}, o = {}, a, l, c = []) {
        return new j_().buildKeyframes(t, e, n, i, s, r, o, a, l, c);
      }
      class j_ {
        buildKeyframes(t, e, n, i, s, r, o, a, l, c = []) {
          l = l || new N_();
          const h = new $_(t, e, l, i, s, c, []);
          (h.options = a), h.currentTimeline.setStyles([r], null, h.errors, a), x_(this, n, h);
          const u = h.timelines.filter((t) => t.containsAnimation());
          if (u.length && Object.keys(o).length) {
            const t = u[u.length - 1];
            t.allowOnlyTimelineStyles() || t.setStyles([o], null, h.errors, a);
          }
          return u.length ? u.map((t) => t.buildKeyframes()) : [F_(e, [], [], [], 0, 0, '', !1)];
        }
        visitTrigger(t, e) {}
        visitState(t, e) {}
        visitTransition(t, e) {}
        visitAnimateChild(t, e) {
          const n = e.subInstructions.consume(e.element);
          if (n) {
            const i = e.createSubContext(t.options),
              s = e.currentTimeline.currentTime,
              r = this._visitSubInstructions(n, i, i.options);
            s != r && e.transformIntoNewTimeline(r);
          }
          e.previousNode = t;
        }
        visitAnimateRef(t, e) {
          const n = e.createSubContext(t.options);
          n.transformIntoNewTimeline(),
            this.visitReference(t.animation, n),
            e.transformIntoNewTimeline(n.currentTimeline.currentTime),
            (e.previousNode = t);
        }
        _visitSubInstructions(t, e, n) {
          let i = e.currentTimeline.currentTime;
          const s = null != n.duration ? s_(n.duration) : null,
            r = null != n.delay ? s_(n.delay) : null;
          return (
            0 !== s &&
              t.forEach((t) => {
                const n = e.appendInstructionToTimeline(t, s, r);
                i = Math.max(i, n.duration + n.delay);
              }),
            i
          );
        }
        visitReference(t, e) {
          e.updateOptions(t.options, !0), x_(this, t.animation, e), (e.previousNode = t);
        }
        visitSequence(t, e) {
          const n = e.subContextCount;
          let i = e;
          const s = t.options;
          if (
            s &&
            (s.params || s.delay) &&
            ((i = e.createSubContext(s)), i.transformIntoNewTimeline(), null != s.delay)
          ) {
            6 == i.previousNode.type && (i.currentTimeline.snapshotCurrentStyles(), (i.previousNode = H_));
            const t = s_(s.delay);
            i.delayNextStep(t);
          }
          t.steps.length &&
            (t.steps.forEach((t) => x_(this, t, i)),
            i.currentTimeline.applyStylesToKeyframe(),
            i.subContextCount > n && i.transformIntoNewTimeline()),
            (e.previousNode = t);
        }
        visitGroup(t, e) {
          const n = [];
          let i = e.currentTimeline.currentTime;
          const s = t.options && t.options.delay ? s_(t.options.delay) : 0;
          t.steps.forEach((r) => {
            const o = e.createSubContext(t.options);
            s && o.delayNextStep(s),
              x_(this, r, o),
              (i = Math.max(i, o.currentTimeline.currentTime)),
              n.push(o.currentTimeline);
          }),
            n.forEach((t) => e.currentTimeline.mergeTimelineCollectedStyles(t)),
            e.transformIntoNewTimeline(i),
            (e.previousNode = t);
        }
        _visitTiming(t, e) {
          if (t.dynamic) {
            const n = t.strValue;
            return o_(e.params ? g_(n, e.params, e.errors) : n, e.errors);
          }
          return { duration: t.duration, delay: t.delay, easing: t.easing };
        }
        visitAnimate(t, e) {
          const n = (e.currentAnimateTimings = this._visitTiming(t.timings, e)),
            i = e.currentTimeline;
          n.delay && (e.incrementTime(n.delay), i.snapshotCurrentStyles());
          const s = t.style;
          5 == s.type
            ? this.visitKeyframes(s, e)
            : (e.incrementTime(n.duration), this.visitStyle(s, e), i.applyStylesToKeyframe()),
            (e.currentAnimateTimings = null),
            (e.previousNode = t);
        }
        visitStyle(t, e) {
          const n = e.currentTimeline,
            i = e.currentAnimateTimings;
          !i && n.getCurrentStyleProperties().length && n.forwardFrame();
          const s = (i && i.easing) || t.easing;
          t.isEmptyStep ? n.applyEmptyStep(s) : n.setStyles(t.styles, s, e.errors, e.options), (e.previousNode = t);
        }
        visitKeyframes(t, e) {
          const n = e.currentAnimateTimings,
            i = e.currentTimeline.duration,
            s = n.duration,
            r = e.createSubContext().currentTimeline;
          (r.easing = n.easing),
            t.styles.forEach((t) => {
              r.forwardTime((t.offset || 0) * s),
                r.setStyles(t.styles, t.easing, e.errors, e.options),
                r.applyStylesToKeyframe();
            }),
            e.currentTimeline.mergeTimelineCollectedStyles(r),
            e.transformIntoNewTimeline(i + s),
            (e.previousNode = t);
        }
        visitQuery(t, e) {
          const n = e.currentTimeline.currentTime,
            i = t.options || {},
            s = i.delay ? s_(i.delay) : 0;
          s &&
            (6 === e.previousNode.type || (0 == n && e.currentTimeline.getCurrentStyleProperties().length)) &&
            (e.currentTimeline.snapshotCurrentStyles(), (e.previousNode = H_));
          let r = n;
          const o = e.invokeQuery(t.selector, t.originalSelector, t.limit, t.includeSelf, !!i.optional, e.errors);
          e.currentQueryTotal = o.length;
          let a = null;
          o.forEach((n, i) => {
            e.currentQueryIndex = i;
            const o = e.createSubContext(t.options, n);
            s && o.delayNextStep(s),
              n === e.element && (a = o.currentTimeline),
              x_(this, t.animation, o),
              o.currentTimeline.applyStylesToKeyframe(),
              (r = Math.max(r, o.currentTimeline.currentTime));
          }),
            (e.currentQueryIndex = 0),
            (e.currentQueryTotal = 0),
            e.transformIntoNewTimeline(r),
            a && (e.currentTimeline.mergeTimelineCollectedStyles(a), e.currentTimeline.snapshotCurrentStyles()),
            (e.previousNode = t);
        }
        visitStagger(t, e) {
          const n = e.parentContext,
            i = e.currentTimeline,
            s = t.timings,
            r = Math.abs(s.duration),
            o = r * (e.currentQueryTotal - 1);
          let a = r * e.currentQueryIndex;
          switch (s.duration < 0 ? 'reverse' : s.easing) {
            case 'reverse':
              a = o - a;
              break;
            case 'full':
              a = n.currentStaggerTime;
          }
          const l = e.currentTimeline;
          a && l.delayNextStep(a);
          const c = l.currentTime;
          x_(this, t.animation, e),
            (e.previousNode = t),
            (n.currentStaggerTime = i.currentTime - c + (i.startTime - n.currentTimeline.startTime));
        }
      }
      const H_ = {};
      class $_ {
        constructor(t, e, n, i, s, r, o, a) {
          (this._driver = t),
            (this.element = e),
            (this.subInstructions = n),
            (this._enterClassName = i),
            (this._leaveClassName = s),
            (this.errors = r),
            (this.timelines = o),
            (this.parentContext = null),
            (this.currentAnimateTimings = null),
            (this.previousNode = H_),
            (this.subContextCount = 0),
            (this.options = {}),
            (this.currentQueryIndex = 0),
            (this.currentQueryTotal = 0),
            (this.currentStaggerTime = 0),
            (this.currentTimeline = a || new q_(this._driver, e, 0)),
            o.push(this.currentTimeline);
        }
        get params() {
          return this.options.params;
        }
        updateOptions(t, e) {
          if (!t) return;
          const n = t;
          let i = this.options;
          null != n.duration && (i.duration = s_(n.duration)), null != n.delay && (i.delay = s_(n.delay));
          const s = n.params;
          if (s) {
            let t = i.params;
            t || (t = this.options.params = {}),
              Object.keys(s).forEach((n) => {
                (e && t.hasOwnProperty(n)) || (t[n] = g_(s[n], t, this.errors));
              });
          }
        }
        _copyOptions() {
          const t = {};
          if (this.options) {
            const e = this.options.params;
            if (e) {
              const n = (t.params = {});
              Object.keys(e).forEach((t) => {
                n[t] = e[t];
              });
            }
          }
          return t;
        }
        createSubContext(t = null, e, n) {
          const i = e || this.element,
            s = new $_(
              this._driver,
              i,
              this.subInstructions,
              this._enterClassName,
              this._leaveClassName,
              this.errors,
              this.timelines,
              this.currentTimeline.fork(i, n || 0)
            );
          return (
            (s.previousNode = this.previousNode),
            (s.currentAnimateTimings = this.currentAnimateTimings),
            (s.options = this._copyOptions()),
            s.updateOptions(t),
            (s.currentQueryIndex = this.currentQueryIndex),
            (s.currentQueryTotal = this.currentQueryTotal),
            (s.parentContext = this),
            this.subContextCount++,
            s
          );
        }
        transformIntoNewTimeline(t) {
          return (
            (this.previousNode = H_),
            (this.currentTimeline = this.currentTimeline.fork(this.element, t)),
            this.timelines.push(this.currentTimeline),
            this.currentTimeline
          );
        }
        appendInstructionToTimeline(t, e, n) {
          const i = {
              duration: null != e ? e : t.duration,
              delay: this.currentTimeline.currentTime + (null != n ? n : 0) + t.delay,
              easing: '',
            },
            s = new W_(
              this._driver,
              t.element,
              t.keyframes,
              t.preStyleProps,
              t.postStyleProps,
              i,
              t.stretchStartingKeyframe
            );
          return this.timelines.push(s), i;
        }
        incrementTime(t) {
          this.currentTimeline.forwardTime(this.currentTimeline.duration + t);
        }
        delayNextStep(t) {
          t > 0 && this.currentTimeline.delayNextStep(t);
        }
        invokeQuery(t, e, n, i, s, r) {
          let o = [];
          if ((i && o.push(this.element), t.length > 0)) {
            t = (t = t.replace(V_, '.' + this._enterClassName)).replace(B_, '.' + this._leaveClassName);
            let e = this._driver.query(this.element, t, 1 != n);
            0 !== n && (e = n < 0 ? e.slice(e.length + n, e.length) : e.slice(0, n)), o.push(...e);
          }
          return (
            s ||
              0 != o.length ||
              r.push(
                `\`query("${e}")\` returned zero elements. (Use \`query("${e}", { optional: true })\` if you wish to allow this.)`
              ),
            o
          );
        }
      }
      class q_ {
        constructor(t, e, n, i) {
          (this._driver = t),
            (this.element = e),
            (this.startTime = n),
            (this._elementTimelineStylesLookup = i),
            (this.duration = 0),
            (this._previousKeyframe = {}),
            (this._currentKeyframe = {}),
            (this._keyframes = new Map()),
            (this._styleSummary = {}),
            (this._pendingStyles = {}),
            (this._backFill = {}),
            (this._currentEmptyStepKeyframe = null),
            this._elementTimelineStylesLookup || (this._elementTimelineStylesLookup = new Map()),
            (this._localTimelineStyles = Object.create(this._backFill, {})),
            (this._globalTimelineStyles = this._elementTimelineStylesLookup.get(e)),
            this._globalTimelineStyles ||
              ((this._globalTimelineStyles = this._localTimelineStyles),
              this._elementTimelineStylesLookup.set(e, this._localTimelineStyles)),
            this._loadKeyframe();
        }
        containsAnimation() {
          switch (this._keyframes.size) {
            case 0:
              return !1;
            case 1:
              return this.getCurrentStyleProperties().length > 0;
            default:
              return !0;
          }
        }
        getCurrentStyleProperties() {
          return Object.keys(this._currentKeyframe);
        }
        get currentTime() {
          return this.startTime + this.duration;
        }
        delayNextStep(t) {
          const e = 1 == this._keyframes.size && Object.keys(this._pendingStyles).length;
          this.duration || e
            ? (this.forwardTime(this.currentTime + t), e && this.snapshotCurrentStyles())
            : (this.startTime += t);
        }
        fork(t, e) {
          return (
            this.applyStylesToKeyframe(),
            new q_(this._driver, t, e || this.currentTime, this._elementTimelineStylesLookup)
          );
        }
        _loadKeyframe() {
          this._currentKeyframe && (this._previousKeyframe = this._currentKeyframe),
            (this._currentKeyframe = this._keyframes.get(this.duration)),
            this._currentKeyframe ||
              ((this._currentKeyframe = Object.create(this._backFill, {})),
              this._keyframes.set(this.duration, this._currentKeyframe));
        }
        forwardFrame() {
          (this.duration += 1), this._loadKeyframe();
        }
        forwardTime(t) {
          this.applyStylesToKeyframe(), (this.duration = t), this._loadKeyframe();
        }
        _updateStyle(t, e) {
          (this._localTimelineStyles[t] = e),
            (this._globalTimelineStyles[t] = e),
            (this._styleSummary[t] = { time: this.currentTime, value: e });
        }
        allowOnlyTimelineStyles() {
          return this._currentEmptyStepKeyframe !== this._currentKeyframe;
        }
        applyEmptyStep(t) {
          t && (this._previousKeyframe.easing = t),
            Object.keys(this._globalTimelineStyles).forEach((t) => {
              (this._backFill[t] = this._globalTimelineStyles[t] || bg), (this._currentKeyframe[t] = bg);
            }),
            (this._currentEmptyStepKeyframe = this._currentKeyframe);
        }
        setStyles(t, e, n, i) {
          e && (this._previousKeyframe.easing = e);
          const s = (i && i.params) || {},
            r = (function (t, e) {
              const n = {};
              let i;
              return (
                t.forEach((t) => {
                  '*' === t
                    ? ((i = i || Object.keys(e)),
                      i.forEach((t) => {
                        n[t] = bg;
                      }))
                    : l_(t, !1, n);
                }),
                n
              );
            })(t, this._globalTimelineStyles);
          Object.keys(r).forEach((t) => {
            const e = g_(r[t], s, n);
            (this._pendingStyles[t] = e),
              this._localTimelineStyles.hasOwnProperty(t) ||
                (this._backFill[t] = this._globalTimelineStyles.hasOwnProperty(t) ? this._globalTimelineStyles[t] : bg),
              this._updateStyle(t, e);
          });
        }
        applyStylesToKeyframe() {
          const t = this._pendingStyles,
            e = Object.keys(t);
          0 != e.length &&
            ((this._pendingStyles = {}),
            e.forEach((e) => {
              this._currentKeyframe[e] = t[e];
            }),
            Object.keys(this._localTimelineStyles).forEach((t) => {
              this._currentKeyframe.hasOwnProperty(t) || (this._currentKeyframe[t] = this._localTimelineStyles[t]);
            }));
        }
        snapshotCurrentStyles() {
          Object.keys(this._localTimelineStyles).forEach((t) => {
            const e = this._localTimelineStyles[t];
            (this._pendingStyles[t] = e), this._updateStyle(t, e);
          });
        }
        getFinalKeyframe() {
          return this._keyframes.get(this.duration);
        }
        get properties() {
          const t = [];
          for (let e in this._currentKeyframe) t.push(e);
          return t;
        }
        mergeTimelineCollectedStyles(t) {
          Object.keys(t._styleSummary).forEach((e) => {
            const n = this._styleSummary[e],
              i = t._styleSummary[e];
            (!n || i.time > n.time) && this._updateStyle(e, i.value);
          });
        }
        buildKeyframes() {
          this.applyStylesToKeyframe();
          const t = new Set(),
            e = new Set(),
            n = 1 === this._keyframes.size && 0 === this.duration;
          let i = [];
          this._keyframes.forEach((s, r) => {
            const o = l_(s, !0);
            Object.keys(o).forEach((n) => {
              const i = o[n];
              '!' == i ? t.add(n) : i == bg && e.add(n);
            }),
              n || (o.offset = r / this.duration),
              i.push(o);
          });
          const s = t.size ? __(t.values()) : [],
            r = e.size ? __(e.values()) : [];
          if (n) {
            const t = i[0],
              e = a_(t);
            (t.offset = 0), (e.offset = 1), (i = [t, e]);
          }
          return F_(this.element, i, s, r, this.duration, this.startTime, this.easing, !1);
        }
      }
      class W_ extends q_ {
        constructor(t, e, n, i, s, r, o = !1) {
          super(t, e, r.delay),
            (this.element = e),
            (this.keyframes = n),
            (this.preStyleProps = i),
            (this.postStyleProps = s),
            (this._stretchStartingKeyframe = o),
            (this.timings = { duration: r.duration, delay: r.delay, easing: r.easing });
        }
        containsAnimation() {
          return this.keyframes.length > 1;
        }
        buildKeyframes() {
          let t = this.keyframes,
            { delay: e, duration: n, easing: i } = this.timings;
          if (this._stretchStartingKeyframe && e) {
            const s = [],
              r = n + e,
              o = e / r,
              a = l_(t[0], !1);
            (a.offset = 0), s.push(a);
            const l = l_(t[0], !1);
            (l.offset = U_(o)), s.push(l);
            const c = t.length - 1;
            for (let i = 1; i <= c; i++) {
              let o = l_(t[i], !1);
              (o.offset = U_((e + o.offset * n) / r)), s.push(o);
            }
            (n = r), (e = 0), (i = ''), (t = s);
          }
          return F_(this.element, t, this.preStyleProps, this.postStyleProps, n, e, i, !0);
        }
      }
      function U_(t, e = 3) {
        const n = Math.pow(10, e - 1);
        return Math.round(t * n) / n;
      }
      class Y_ {}
      class G_ extends Y_ {
        normalizePropertyName(t, e) {
          return y_(t);
        }
        normalizeStyleValue(t, e, n, i) {
          let s = '';
          const r = n.toString().trim();
          if (Q_[e] && 0 !== n && '0' !== n)
            if ('number' == typeof n) s = 'px';
            else {
              const e = n.match(/^[+-]?[\d\.]+([a-z]*)$/);
              e && 0 == e[1].length && i.push(`Please provide a CSS unit value for ${t}:${n}`);
            }
          return r + s;
        }
      }
      const Q_ = (() =>
        (function (t) {
          const e = {};
          return t.forEach((t) => (e[t] = !0)), e;
        })(
          'width,height,minWidth,minHeight,maxWidth,maxHeight,left,top,bottom,right,fontSize,outlineWidth,outlineOffset,paddingTop,paddingLeft,paddingBottom,paddingRight,marginTop,marginLeft,marginBottom,marginRight,borderRadius,borderWidth,borderTopWidth,borderLeftWidth,borderRightWidth,borderBottomWidth,textIndent,perspective'.split(
            ','
          )
        ))();
      function K_(t, e, n, i, s, r, o, a, l, c, h, u, d) {
        return {
          type: 0,
          element: t,
          triggerName: e,
          isRemovalTransition: s,
          fromState: n,
          fromStyles: r,
          toState: i,
          toStyles: o,
          timelines: a,
          queriedElements: l,
          preStyleProps: c,
          postStyleProps: h,
          totalTime: u,
          errors: d,
        };
      }
      const X_ = {};
      class Z_ {
        constructor(t, e, n) {
          (this._triggerName = t), (this.ast = e), (this._stateStyles = n);
        }
        match(t, e, n, i) {
          return (function (t, e, n, i, s) {
            return t.some((t) => t(e, n, i, s));
          })(this.ast.matchers, t, e, n, i);
        }
        buildStyles(t, e, n) {
          const i = this._stateStyles['*'],
            s = this._stateStyles[t],
            r = i ? i.buildStyles(e, n) : {};
          return s ? s.buildStyles(e, n) : r;
        }
        build(t, e, n, i, s, r, o, a, l, c) {
          const h = [],
            u = (this.ast.options && this.ast.options.params) || X_,
            d = this.buildStyles(n, (o && o.params) || X_, h),
            p = (a && a.params) || X_,
            m = this.buildStyles(i, p, h),
            f = new Set(),
            g = new Map(),
            _ = new Map(),
            b = 'void' === i,
            y = { params: Object.assign(Object.assign({}, u), p) },
            v = c ? [] : z_(t, e, this.ast.animation, s, r, d, m, y, l, h);
          let w = 0;
          if (
            (v.forEach((t) => {
              w = Math.max(t.duration + t.delay, w);
            }),
            h.length)
          )
            return K_(e, this._triggerName, n, i, b, d, m, [], [], g, _, w, h);
          v.forEach((t) => {
            const n = t.element,
              i = Ng(g, n, {});
            t.preStyleProps.forEach((t) => (i[t] = !0));
            const s = Ng(_, n, {});
            t.postStyleProps.forEach((t) => (s[t] = !0)), n !== e && f.add(n);
          });
          const x = __(f.values());
          return K_(e, this._triggerName, n, i, b, d, m, v, x, g, _, w);
        }
      }
      class J_ {
        constructor(t, e) {
          (this.styles = t), (this.defaultParams = e);
        }
        buildStyles(t, e) {
          const n = {},
            i = a_(this.defaultParams);
          return (
            Object.keys(t).forEach((e) => {
              const n = t[e];
              null != n && (i[e] = n);
            }),
            this.styles.styles.forEach((t) => {
              if ('string' != typeof t) {
                const s = t;
                Object.keys(s).forEach((t) => {
                  let r = s[t];
                  r.length > 1 && (r = g_(r, i, e)), (n[t] = r);
                });
              }
            }),
            n
          );
        }
      }
      class tb {
        constructor(t, e) {
          (this.name = t),
            (this.ast = e),
            (this.transitionFactories = []),
            (this.states = {}),
            e.states.forEach((t) => {
              this.states[t.name] = new J_(t.style, (t.options && t.options.params) || {});
            }),
            eb(this.states, 'true', '1'),
            eb(this.states, 'false', '0'),
            e.transitions.forEach((e) => {
              this.transitionFactories.push(new Z_(t, e, this.states));
            }),
            (this.fallbackTransition = new Z_(
              t,
              {
                type: 1,
                animation: { type: 2, steps: [], options: null },
                matchers: [(t, e) => !0],
                options: null,
                queryCount: 0,
                depCount: 0,
              },
              this.states
            ));
        }
        get containsQueries() {
          return this.ast.queryCount > 0;
        }
        matchTransition(t, e, n, i) {
          return this.transitionFactories.find((s) => s.match(t, e, n, i)) || null;
        }
        matchStyles(t, e, n) {
          return this.fallbackTransition.buildStyles(t, e, n);
        }
      }
      function eb(t, e, n) {
        t.hasOwnProperty(e) ? t.hasOwnProperty(n) || (t[n] = t[e]) : t.hasOwnProperty(n) && (t[e] = t[n]);
      }
      const nb = new N_();
      class ib {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._normalizer = n),
            (this._animations = {}),
            (this._playersById = {}),
            (this.players = []);
        }
        register(t, e) {
          const n = [],
            i = T_(this._driver, e, n);
          if (n.length) throw new Error(`Unable to build the animation due to the following errors: ${n.join('\n')}`);
          this._animations[t] = i;
        }
        _buildPlayer(t, e, n) {
          const i = t.element,
            s = Rg(0, this._normalizer, 0, t.keyframes, e, n);
          return this._driver.animate(i, s, t.duration, t.delay, t.easing, [], !0);
        }
        create(t, e, n = {}) {
          const i = [],
            s = this._animations[t];
          let r;
          const o = new Map();
          if (
            (s
              ? ((r = z_(this._driver, e, s, Zg, Jg, {}, {}, n, nb, i)),
                r.forEach((t) => {
                  const e = Ng(o, t.element, {});
                  t.postStyleProps.forEach((t) => (e[t] = null));
                }))
              : (i.push("The requested animation doesn't exist or has already been destroyed"), (r = [])),
            i.length)
          )
            throw new Error(`Unable to create the animation due to the following errors: ${i.join('\n')}`);
          o.forEach((t, e) => {
            Object.keys(t).forEach((n) => {
              t[n] = this._driver.computeStyle(e, n, bg);
            });
          });
          const a = Mg(
            r.map((t) => {
              const e = o.get(t.element);
              return this._buildPlayer(t, {}, e);
            })
          );
          return (this._playersById[t] = a), a.onDestroy(() => this.destroy(t)), this.players.push(a), a;
        }
        destroy(t) {
          const e = this._getPlayer(t);
          e.destroy(), delete this._playersById[t];
          const n = this.players.indexOf(e);
          n >= 0 && this.players.splice(n, 1);
        }
        _getPlayer(t) {
          const e = this._playersById[t];
          if (!e) throw new Error(`Unable to find the timeline player referenced by ${t}`);
          return e;
        }
        listen(t, e, n, i) {
          const s = Fg(e, '', '', '');
          return Ig(this._getPlayer(t), n, s, i), () => {};
        }
        command(t, e, n, i) {
          if ('register' == n) return void this.register(t, i[0]);
          if ('create' == n) return void this.create(t, e, i[0] || {});
          const s = this._getPlayer(t);
          switch (n) {
            case 'play':
              s.play();
              break;
            case 'pause':
              s.pause();
              break;
            case 'reset':
              s.reset();
              break;
            case 'restart':
              s.restart();
              break;
            case 'finish':
              s.finish();
              break;
            case 'init':
              s.init();
              break;
            case 'setPosition':
              s.setPosition(parseFloat(i[0]));
              break;
            case 'destroy':
              this.destroy(t);
          }
        }
      }
      const sb = 'ng-animate-queued',
        rb = 'ng-animate-disabled',
        ob = '.ng-animate-disabled',
        ab = [],
        lb = { namespaceId: '', setForRemoval: !1, setForMove: !1, hasAnimation: !1, removedBeforeQueried: !1 },
        cb = { namespaceId: '', setForMove: !1, setForRemoval: !1, hasAnimation: !1, removedBeforeQueried: !0 };
      class hb {
        constructor(t, e = '') {
          this.namespaceId = e;
          const n = t && t.hasOwnProperty('value');
          if (((this.value = null != (i = n ? t.value : t) ? i : null), n)) {
            const e = a_(t);
            delete e.value, (this.options = e);
          } else this.options = {};
          var i;
          this.options.params || (this.options.params = {});
        }
        get params() {
          return this.options.params;
        }
        absorbOptions(t) {
          const e = t.params;
          if (e) {
            const t = this.options.params;
            Object.keys(e).forEach((n) => {
              null == t[n] && (t[n] = e[n]);
            });
          }
        }
      }
      const ub = 'void',
        db = new hb(ub);
      class pb {
        constructor(t, e, n) {
          (this.id = t),
            (this.hostElement = e),
            (this._engine = n),
            (this.players = []),
            (this._triggers = {}),
            (this._queue = []),
            (this._elementListeners = new Map()),
            (this._hostClassName = 'ng-tns-' + t),
            vb(e, this._hostClassName);
        }
        listen(t, e, n, i) {
          if (!this._triggers.hasOwnProperty(e))
            throw new Error(
              `Unable to listen on the animation trigger event "${n}" because the animation trigger "${e}" doesn't exist!`
            );
          if (null == n || 0 == n.length)
            throw new Error(
              `Unable to listen on the animation trigger "${e}" because the provided event is undefined!`
            );
          if ('start' != (s = n) && 'done' != s)
            throw new Error(
              `The provided animation trigger event "${n}" for the animation trigger "${e}" is not supported!`
            );
          var s;
          const r = Ng(this._elementListeners, t, []),
            o = { name: e, phase: n, callback: i };
          r.push(o);
          const a = Ng(this._engine.statesByElement, t, {});
          return (
            a.hasOwnProperty(e) || (vb(t, t_), vb(t, 'ng-trigger-' + e), (a[e] = db)),
            () => {
              this._engine.afterFlush(() => {
                const t = r.indexOf(o);
                t >= 0 && r.splice(t, 1), this._triggers[e] || delete a[e];
              });
            }
          );
        }
        register(t, e) {
          return !this._triggers[t] && ((this._triggers[t] = e), !0);
        }
        _getTrigger(t) {
          const e = this._triggers[t];
          if (!e) throw new Error(`The provided animation trigger "${t}" has not been registered!`);
          return e;
        }
        trigger(t, e, n, i = !0) {
          const s = this._getTrigger(e),
            r = new fb(this.id, e, t);
          let o = this._engine.statesByElement.get(t);
          o || (vb(t, t_), vb(t, 'ng-trigger-' + e), this._engine.statesByElement.set(t, (o = {})));
          let a = o[e];
          const l = new hb(n, this.id);
          if (
            (!(n && n.hasOwnProperty('value')) && a && l.absorbOptions(a.options),
            (o[e] = l),
            a || (a = db),
            l.value !== ub && a.value === l.value)
          ) {
            if (
              !(function (t, e) {
                const n = Object.keys(t),
                  i = Object.keys(e);
                if (n.length != i.length) return !1;
                for (let s = 0; s < n.length; s++) {
                  const i = n[s];
                  if (!e.hasOwnProperty(i) || t[i] !== e[i]) return !1;
                }
                return !0;
              })(a.params, l.params)
            ) {
              const e = [],
                n = s.matchStyles(a.value, a.params, e),
                i = s.matchStyles(l.value, l.params, e);
              e.length
                ? this._engine.reportError(e)
                : this._engine.afterFlush(() => {
                    d_(t, n), u_(t, i);
                  });
            }
            return;
          }
          const c = Ng(this._engine.playersByElement, t, []);
          c.forEach((t) => {
            t.namespaceId == this.id && t.triggerName == e && t.queued && t.destroy();
          });
          let h = s.matchTransition(a.value, l.value, t, l.params),
            u = !1;
          if (!h) {
            if (!i) return;
            (h = s.fallbackTransition), (u = !0);
          }
          return (
            this._engine.totalQueuedPlayers++,
            this._queue.push({
              element: t,
              triggerName: e,
              transition: h,
              fromState: a,
              toState: l,
              player: r,
              isFallbackTransition: u,
            }),
            u ||
              (vb(t, sb),
              r.onStart(() => {
                wb(t, sb);
              })),
            r.onDone(() => {
              let e = this.players.indexOf(r);
              e >= 0 && this.players.splice(e, 1);
              const n = this._engine.playersByElement.get(t);
              if (n) {
                let t = n.indexOf(r);
                t >= 0 && n.splice(t, 1);
              }
            }),
            this.players.push(r),
            c.push(r),
            r
          );
        }
        deregister(t) {
          delete this._triggers[t],
            this._engine.statesByElement.forEach((e, n) => {
              delete e[t];
            }),
            this._elementListeners.forEach((e, n) => {
              this._elementListeners.set(
                n,
                e.filter((e) => e.name != t)
              );
            });
        }
        clearElementCache(t) {
          this._engine.statesByElement.delete(t), this._elementListeners.delete(t);
          const e = this._engine.playersByElement.get(t);
          e && (e.forEach((t) => t.destroy()), this._engine.playersByElement.delete(t));
        }
        _signalRemovalForInnerTriggers(t, e) {
          const n = this._engine.driver.query(t, e_, !0);
          n.forEach((t) => {
            if (t.__ng_removed) return;
            const n = this._engine.fetchNamespacesByElement(t);
            n.size ? n.forEach((n) => n.triggerLeaveAnimation(t, e, !1, !0)) : this.clearElementCache(t);
          }),
            this._engine.afterFlushAnimationsDone(() => n.forEach((t) => this.clearElementCache(t)));
        }
        triggerLeaveAnimation(t, e, n, i) {
          const s = this._engine.statesByElement.get(t);
          if (s) {
            const r = [];
            if (
              (Object.keys(s).forEach((e) => {
                if (this._triggers[e]) {
                  const n = this.trigger(t, e, ub, i);
                  n && r.push(n);
                }
              }),
              r.length)
            )
              return (
                this._engine.markElementAsRemoved(this.id, t, !0, e),
                n && Mg(r).onDone(() => this._engine.processLeaveNode(t)),
                !0
              );
          }
          return !1;
        }
        prepareLeaveAnimationListeners(t) {
          const e = this._elementListeners.get(t),
            n = this._engine.statesByElement.get(t);
          if (e && n) {
            const i = new Set();
            e.forEach((e) => {
              const s = e.name;
              if (i.has(s)) return;
              i.add(s);
              const r = this._triggers[s].fallbackTransition,
                o = n[s] || db,
                a = new hb(ub),
                l = new fb(this.id, s, t);
              this._engine.totalQueuedPlayers++,
                this._queue.push({
                  element: t,
                  triggerName: s,
                  transition: r,
                  fromState: o,
                  toState: a,
                  player: l,
                  isFallbackTransition: !0,
                });
            });
          }
        }
        removeNode(t, e) {
          const n = this._engine;
          if ((t.childElementCount && this._signalRemovalForInnerTriggers(t, e), this.triggerLeaveAnimation(t, e, !0)))
            return;
          let i = !1;
          if (n.totalAnimations) {
            const e = n.players.length ? n.playersByQueriedElement.get(t) : [];
            if (e && e.length) i = !0;
            else {
              let e = t;
              for (; (e = e.parentNode); )
                if (n.statesByElement.get(e)) {
                  i = !0;
                  break;
                }
            }
          }
          if ((this.prepareLeaveAnimationListeners(t), i)) n.markElementAsRemoved(this.id, t, !1, e);
          else {
            const i = t.__ng_removed;
            (i && i !== lb) ||
              (n.afterFlush(() => this.clearElementCache(t)), n.destroyInnerAnimations(t), n._onRemovalComplete(t, e));
          }
        }
        insertNode(t, e) {
          vb(t, this._hostClassName);
        }
        drainQueuedTransitions(t) {
          const e = [];
          return (
            this._queue.forEach((n) => {
              const i = n.player;
              if (i.destroyed) return;
              const s = n.element,
                r = this._elementListeners.get(s);
              r &&
                r.forEach((e) => {
                  if (e.name == n.triggerName) {
                    const i = Fg(s, n.triggerName, n.fromState.value, n.toState.value);
                    (i._data = t), Ig(n.player, e.phase, i, e.callback);
                  }
                }),
                i.markedForDestroy
                  ? this._engine.afterFlush(() => {
                      i.destroy();
                    })
                  : e.push(n);
            }),
            (this._queue = []),
            e.sort((t, e) => {
              const n = t.transition.ast.depCount,
                i = e.transition.ast.depCount;
              return 0 == n || 0 == i ? n - i : this._engine.driver.containsElement(t.element, e.element) ? 1 : -1;
            })
          );
        }
        destroy(t) {
          this.players.forEach((t) => t.destroy()), this._signalRemovalForInnerTriggers(this.hostElement, t);
        }
        elementContainsData(t) {
          let e = !1;
          return this._elementListeners.has(t) && (e = !0), (e = !!this._queue.find((e) => e.element === t) || e), e;
        }
      }
      class mb {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this.driver = e),
            (this._normalizer = n),
            (this.players = []),
            (this.newHostElements = new Map()),
            (this.playersByElement = new Map()),
            (this.playersByQueriedElement = new Map()),
            (this.statesByElement = new Map()),
            (this.disabledNodes = new Set()),
            (this.totalAnimations = 0),
            (this.totalQueuedPlayers = 0),
            (this._namespaceLookup = {}),
            (this._namespaceList = []),
            (this._flushFns = []),
            (this._whenQuietFns = []),
            (this.namespacesByHostElement = new Map()),
            (this.collectedEnterElements = []),
            (this.collectedLeaveElements = []),
            (this.onRemovalComplete = (t, e) => {});
        }
        _onRemovalComplete(t, e) {
          this.onRemovalComplete(t, e);
        }
        get queuedPlayers() {
          const t = [];
          return (
            this._namespaceList.forEach((e) => {
              e.players.forEach((e) => {
                e.queued && t.push(e);
              });
            }),
            t
          );
        }
        createNamespace(t, e) {
          const n = new pb(t, e, this);
          return (
            this.bodyNode && this.driver.containsElement(this.bodyNode, e)
              ? this._balanceNamespaceList(n, e)
              : (this.newHostElements.set(e, n), this.collectEnterElement(e)),
            (this._namespaceLookup[t] = n)
          );
        }
        _balanceNamespaceList(t, e) {
          const n = this._namespaceList.length - 1;
          if (n >= 0) {
            let i = !1;
            for (let s = n; s >= 0; s--)
              if (this.driver.containsElement(this._namespaceList[s].hostElement, e)) {
                this._namespaceList.splice(s + 1, 0, t), (i = !0);
                break;
              }
            i || this._namespaceList.splice(0, 0, t);
          } else this._namespaceList.push(t);
          return this.namespacesByHostElement.set(e, t), t;
        }
        register(t, e) {
          let n = this._namespaceLookup[t];
          return n || (n = this.createNamespace(t, e)), n;
        }
        registerTrigger(t, e, n) {
          let i = this._namespaceLookup[t];
          i && i.register(e, n) && this.totalAnimations++;
        }
        destroy(t, e) {
          if (!t) return;
          const n = this._fetchNamespace(t);
          this.afterFlush(() => {
            this.namespacesByHostElement.delete(n.hostElement), delete this._namespaceLookup[t];
            const e = this._namespaceList.indexOf(n);
            e >= 0 && this._namespaceList.splice(e, 1);
          }),
            this.afterFlushAnimationsDone(() => n.destroy(e));
        }
        _fetchNamespace(t) {
          return this._namespaceLookup[t];
        }
        fetchNamespacesByElement(t) {
          const e = new Set(),
            n = this.statesByElement.get(t);
          if (n) {
            const t = Object.keys(n);
            for (let i = 0; i < t.length; i++) {
              const s = n[t[i]].namespaceId;
              if (s) {
                const t = this._fetchNamespace(s);
                t && e.add(t);
              }
            }
          }
          return e;
        }
        trigger(t, e, n, i) {
          if (gb(e)) {
            const s = this._fetchNamespace(t);
            if (s) return s.trigger(e, n, i), !0;
          }
          return !1;
        }
        insertNode(t, e, n, i) {
          if (!gb(e)) return;
          const s = e.__ng_removed;
          if (s && s.setForRemoval) {
            (s.setForRemoval = !1), (s.setForMove = !0);
            const t = this.collectedLeaveElements.indexOf(e);
            t >= 0 && this.collectedLeaveElements.splice(t, 1);
          }
          if (t) {
            const i = this._fetchNamespace(t);
            i && i.insertNode(e, n);
          }
          i && this.collectEnterElement(e);
        }
        collectEnterElement(t) {
          this.collectedEnterElements.push(t);
        }
        markElementAsDisabled(t, e) {
          e
            ? this.disabledNodes.has(t) || (this.disabledNodes.add(t), vb(t, rb))
            : this.disabledNodes.has(t) && (this.disabledNodes.delete(t), wb(t, rb));
        }
        removeNode(t, e, n, i) {
          if (gb(e)) {
            const s = t ? this._fetchNamespace(t) : null;
            if ((s ? s.removeNode(e, i) : this.markElementAsRemoved(t, e, !1, i), n)) {
              const n = this.namespacesByHostElement.get(e);
              n && n.id !== t && n.removeNode(e, i);
            }
          } else this._onRemovalComplete(e, i);
        }
        markElementAsRemoved(t, e, n, i) {
          this.collectedLeaveElements.push(e),
            (e.__ng_removed = { namespaceId: t, setForRemoval: i, hasAnimation: n, removedBeforeQueried: !1 });
        }
        listen(t, e, n, i, s) {
          return gb(e) ? this._fetchNamespace(t).listen(e, n, i, s) : () => {};
        }
        _buildInstruction(t, e, n, i, s) {
          return t.transition.build(
            this.driver,
            t.element,
            t.fromState.value,
            t.toState.value,
            n,
            i,
            t.fromState.options,
            t.toState.options,
            e,
            s
          );
        }
        destroyInnerAnimations(t) {
          let e = this.driver.query(t, e_, !0);
          e.forEach((t) => this.destroyActiveAnimationsForElement(t)),
            0 != this.playersByQueriedElement.size &&
              ((e = this.driver.query(t, i_, !0)), e.forEach((t) => this.finishActiveQueriedAnimationOnElement(t)));
        }
        destroyActiveAnimationsForElement(t) {
          const e = this.playersByElement.get(t);
          e &&
            e.forEach((t) => {
              t.queued ? (t.markedForDestroy = !0) : t.destroy();
            });
        }
        finishActiveQueriedAnimationOnElement(t) {
          const e = this.playersByQueriedElement.get(t);
          e && e.forEach((t) => t.finish());
        }
        whenRenderingDone() {
          return new Promise((t) => {
            if (this.players.length) return Mg(this.players).onDone(() => t());
            t();
          });
        }
        processLeaveNode(t) {
          const e = t.__ng_removed;
          if (e && e.setForRemoval) {
            if (((t.__ng_removed = lb), e.namespaceId)) {
              this.destroyInnerAnimations(t);
              const n = this._fetchNamespace(e.namespaceId);
              n && n.clearElementCache(t);
            }
            this._onRemovalComplete(t, e.setForRemoval);
          }
          this.driver.matchesElement(t, ob) && this.markElementAsDisabled(t, !1),
            this.driver.query(t, ob, !0).forEach((t) => {
              this.markElementAsDisabled(t, !1);
            });
        }
        flush(t = -1) {
          let e = [];
          if (
            (this.newHostElements.size &&
              (this.newHostElements.forEach((t, e) => this._balanceNamespaceList(t, e)), this.newHostElements.clear()),
            this.totalAnimations && this.collectedEnterElements.length)
          )
            for (let n = 0; n < this.collectedEnterElements.length; n++)
              vb(this.collectedEnterElements[n], 'ng-star-inserted');
          if (this._namespaceList.length && (this.totalQueuedPlayers || this.collectedLeaveElements.length)) {
            const n = [];
            try {
              e = this._flushAnimations(n, t);
            } finally {
              for (let t = 0; t < n.length; t++) n[t]();
            }
          } else
            for (let n = 0; n < this.collectedLeaveElements.length; n++)
              this.processLeaveNode(this.collectedLeaveElements[n]);
          if (
            ((this.totalQueuedPlayers = 0),
            (this.collectedEnterElements.length = 0),
            (this.collectedLeaveElements.length = 0),
            this._flushFns.forEach((t) => t()),
            (this._flushFns = []),
            this._whenQuietFns.length)
          ) {
            const t = this._whenQuietFns;
            (this._whenQuietFns = []),
              e.length
                ? Mg(e).onDone(() => {
                    t.forEach((t) => t());
                  })
                : t.forEach((t) => t());
          }
        }
        reportError(t) {
          throw new Error(
            `Unable to process animations due to the following failed trigger transitions\n ${t.join('\n')}`
          );
        }
        _flushAnimations(t, e) {
          const n = new N_(),
            i = [],
            s = new Map(),
            r = [],
            o = new Map(),
            a = new Map(),
            l = new Map(),
            c = new Set();
          this.disabledNodes.forEach((t) => {
            c.add(t);
            const e = this.driver.query(t, '.ng-animate-queued', !0);
            for (let n = 0; n < e.length; n++) c.add(e[n]);
          });
          const h = this.bodyNode,
            u = Array.from(this.statesByElement.keys()),
            d = yb(u, this.collectedEnterElements),
            p = new Map();
          let m = 0;
          d.forEach((t, e) => {
            const n = Zg + m++;
            p.set(e, n), t.forEach((t) => vb(t, n));
          });
          const f = [],
            g = new Set(),
            _ = new Set();
          for (let T = 0; T < this.collectedLeaveElements.length; T++) {
            const t = this.collectedLeaveElements[T],
              e = t.__ng_removed;
            e &&
              e.setForRemoval &&
              (f.push(t),
              g.add(t),
              e.hasAnimation ? this.driver.query(t, '.ng-star-inserted', !0).forEach((t) => g.add(t)) : _.add(t));
          }
          const b = new Map(),
            y = yb(u, Array.from(g));
          y.forEach((t, e) => {
            const n = Jg + m++;
            b.set(e, n), t.forEach((t) => vb(t, n));
          }),
            t.push(() => {
              d.forEach((t, e) => {
                const n = p.get(e);
                t.forEach((t) => wb(t, n));
              }),
                y.forEach((t, e) => {
                  const n = b.get(e);
                  t.forEach((t) => wb(t, n));
                }),
                f.forEach((t) => {
                  this.processLeaveNode(t);
                });
            });
          const v = [],
            w = [];
          for (let T = this._namespaceList.length - 1; T >= 0; T--)
            this._namespaceList[T].drainQueuedTransitions(e).forEach((t) => {
              const e = t.player,
                s = t.element;
              if ((v.push(e), this.collectedEnterElements.length)) {
                const t = s.__ng_removed;
                if (t && t.setForMove) return void e.destroy();
              }
              const c = !h || !this.driver.containsElement(h, s),
                u = b.get(s),
                d = p.get(s),
                m = this._buildInstruction(t, n, d, u, c);
              if (m.errors && m.errors.length) w.push(m);
              else {
                if (c)
                  return e.onStart(() => d_(s, m.fromStyles)), e.onDestroy(() => u_(s, m.toStyles)), void i.push(e);
                if (t.isFallbackTransition)
                  return e.onStart(() => d_(s, m.fromStyles)), e.onDestroy(() => u_(s, m.toStyles)), void i.push(e);
                m.timelines.forEach((t) => (t.stretchStartingKeyframe = !0)),
                  n.append(s, m.timelines),
                  r.push({ instruction: m, player: e, element: s }),
                  m.queriedElements.forEach((t) => Ng(o, t, []).push(e)),
                  m.preStyleProps.forEach((t, e) => {
                    const n = Object.keys(t);
                    if (n.length) {
                      let t = a.get(e);
                      t || a.set(e, (t = new Set())), n.forEach((e) => t.add(e));
                    }
                  }),
                  m.postStyleProps.forEach((t, e) => {
                    const n = Object.keys(t);
                    let i = l.get(e);
                    i || l.set(e, (i = new Set())), n.forEach((t) => i.add(t));
                  });
              }
            });
          if (w.length) {
            const t = [];
            w.forEach((e) => {
              t.push(`@${e.triggerName} has failed due to:\n`), e.errors.forEach((e) => t.push(`- ${e}\n`));
            }),
              v.forEach((t) => t.destroy()),
              this.reportError(t);
          }
          const x = new Map(),
            C = new Map();
          r.forEach((t) => {
            const e = t.element;
            n.has(e) && (C.set(e, e), this._beforeAnimationBuild(t.player.namespaceId, t.instruction, x));
          }),
            i.forEach((t) => {
              const e = t.element;
              this._getPreviousPlayers(e, !1, t.namespaceId, t.triggerName, null).forEach((t) => {
                Ng(x, e, []).push(t), t.destroy();
              });
            });
          const k = f.filter((t) => kb(t, a, l)),
            S = new Map();
          bb(S, this.driver, _, l, bg).forEach((t) => {
            kb(t, a, l) && k.push(t);
          });
          const E = new Map();
          d.forEach((t, e) => {
            bb(E, this.driver, new Set(t), a, '!');
          }),
            k.forEach((t) => {
              const e = S.get(t),
                n = E.get(t);
              S.set(t, Object.assign(Object.assign({}, e), n));
            });
          const O = [],
            P = [],
            A = {};
          r.forEach((t) => {
            const { element: e, player: r, instruction: o } = t;
            if (n.has(e)) {
              if (c.has(e))
                return (
                  r.onDestroy(() => u_(e, o.toStyles)),
                  (r.disabled = !0),
                  r.overrideTotalTime(o.totalTime),
                  void i.push(r)
                );
              let t = A;
              if (C.size > 1) {
                let n = e;
                const i = [];
                for (; (n = n.parentNode); ) {
                  const e = C.get(n);
                  if (e) {
                    t = e;
                    break;
                  }
                  i.push(n);
                }
                i.forEach((e) => C.set(e, t));
              }
              const n = this._buildAnimation(r.namespaceId, o, x, s, E, S);
              if ((r.setRealPlayer(n), t === A)) O.push(r);
              else {
                const e = this.playersByElement.get(t);
                e && e.length && (r.parentPlayer = Mg(e)), i.push(r);
              }
            } else d_(e, o.fromStyles), r.onDestroy(() => u_(e, o.toStyles)), P.push(r), c.has(e) && i.push(r);
          }),
            P.forEach((t) => {
              const e = s.get(t.element);
              if (e && e.length) {
                const n = Mg(e);
                t.setRealPlayer(n);
              }
            }),
            i.forEach((t) => {
              t.parentPlayer ? t.syncPlayerEvents(t.parentPlayer) : t.destroy();
            });
          for (let T = 0; T < f.length; T++) {
            const t = f[T],
              e = t.__ng_removed;
            if ((wb(t, Jg), e && e.hasAnimation)) continue;
            let n = [];
            if (o.size) {
              let e = o.get(t);
              e && e.length && n.push(...e);
              let i = this.driver.query(t, i_, !0);
              for (let t = 0; t < i.length; t++) {
                let e = o.get(i[t]);
                e && e.length && n.push(...e);
              }
            }
            const i = n.filter((t) => !t.destroyed);
            i.length ? xb(this, t, i) : this.processLeaveNode(t);
          }
          return (
            (f.length = 0),
            O.forEach((t) => {
              this.players.push(t),
                t.onDone(() => {
                  t.destroy();
                  const e = this.players.indexOf(t);
                  this.players.splice(e, 1);
                }),
                t.play();
            }),
            O
          );
        }
        elementContainsData(t, e) {
          let n = !1;
          const i = e.__ng_removed;
          return (
            i && i.setForRemoval && (n = !0),
            this.playersByElement.has(e) && (n = !0),
            this.playersByQueriedElement.has(e) && (n = !0),
            this.statesByElement.has(e) && (n = !0),
            this._fetchNamespace(t).elementContainsData(e) || n
          );
        }
        afterFlush(t) {
          this._flushFns.push(t);
        }
        afterFlushAnimationsDone(t) {
          this._whenQuietFns.push(t);
        }
        _getPreviousPlayers(t, e, n, i, s) {
          let r = [];
          if (e) {
            const e = this.playersByQueriedElement.get(t);
            e && (r = e);
          } else {
            const e = this.playersByElement.get(t);
            if (e) {
              const t = !s || s == ub;
              e.forEach((e) => {
                e.queued || ((t || e.triggerName == i) && r.push(e));
              });
            }
          }
          return (n || i) && (r = r.filter((t) => !((n && n != t.namespaceId) || (i && i != t.triggerName)))), r;
        }
        _beforeAnimationBuild(t, e, n) {
          const i = e.element,
            s = e.isRemovalTransition ? void 0 : t,
            r = e.isRemovalTransition ? void 0 : e.triggerName;
          for (const o of e.timelines) {
            const t = o.element,
              a = t !== i,
              l = Ng(n, t, []);
            this._getPreviousPlayers(t, a, s, r, e.toState).forEach((t) => {
              const e = t.getRealPlayer();
              e.beforeDestroy && e.beforeDestroy(), t.destroy(), l.push(t);
            });
          }
          d_(i, e.fromStyles);
        }
        _buildAnimation(t, e, n, i, s, r) {
          const o = e.triggerName,
            a = e.element,
            l = [],
            c = new Set(),
            h = new Set(),
            u = e.timelines.map((e) => {
              const u = e.element;
              c.add(u);
              const d = u.__ng_removed;
              if (d && d.removedBeforeQueried) return new Ag(e.duration, e.delay);
              const p = u !== a,
                m = (function (t) {
                  const e = [];
                  return Cb(t, e), e;
                })((n.get(u) || ab).map((t) => t.getRealPlayer())).filter((t) => !!t.element && t.element === u),
                f = s.get(u),
                g = r.get(u),
                _ = Rg(0, this._normalizer, 0, e.keyframes, f, g),
                b = this._buildPlayer(e, _, m);
              if ((e.subTimeline && i && h.add(u), p)) {
                const e = new fb(t, o, u);
                e.setRealPlayer(b), l.push(e);
              }
              return b;
            });
          l.forEach((t) => {
            Ng(this.playersByQueriedElement, t.element, []).push(t),
              t.onDone(() =>
                (function (t, e, n) {
                  let i;
                  if (t instanceof Map) {
                    if (((i = t.get(e)), i)) {
                      if (i.length) {
                        const t = i.indexOf(n);
                        i.splice(t, 1);
                      }
                      0 == i.length && t.delete(e);
                    }
                  } else if (((i = t[e]), i)) {
                    if (i.length) {
                      const t = i.indexOf(n);
                      i.splice(t, 1);
                    }
                    0 == i.length && delete t[e];
                  }
                  return i;
                })(this.playersByQueriedElement, t.element, t)
              );
          }),
            c.forEach((t) => vb(t, n_));
          const d = Mg(u);
          return (
            d.onDestroy(() => {
              c.forEach((t) => wb(t, n_)), u_(a, e.toStyles);
            }),
            h.forEach((t) => {
              Ng(i, t, []).push(d);
            }),
            d
          );
        }
        _buildPlayer(t, e, n) {
          return e.length > 0
            ? this.driver.animate(t.element, e, t.duration, t.delay, t.easing, n)
            : new Ag(t.duration, t.delay);
        }
      }
      class fb {
        constructor(t, e, n) {
          (this.namespaceId = t),
            (this.triggerName = e),
            (this.element = n),
            (this._player = new Ag()),
            (this._containsRealPlayer = !1),
            (this._queuedCallbacks = {}),
            (this.destroyed = !1),
            (this.markedForDestroy = !1),
            (this.disabled = !1),
            (this.queued = !0),
            (this.totalTime = 0);
        }
        setRealPlayer(t) {
          this._containsRealPlayer ||
            ((this._player = t),
            Object.keys(this._queuedCallbacks).forEach((e) => {
              this._queuedCallbacks[e].forEach((n) => Ig(t, e, void 0, n));
            }),
            (this._queuedCallbacks = {}),
            (this._containsRealPlayer = !0),
            this.overrideTotalTime(t.totalTime),
            (this.queued = !1));
        }
        getRealPlayer() {
          return this._player;
        }
        overrideTotalTime(t) {
          this.totalTime = t;
        }
        syncPlayerEvents(t) {
          const e = this._player;
          e.triggerCallback && t.onStart(() => e.triggerCallback('start')),
            t.onDone(() => this.finish()),
            t.onDestroy(() => this.destroy());
        }
        _queueEvent(t, e) {
          Ng(this._queuedCallbacks, t, []).push(e);
        }
        onDone(t) {
          this.queued && this._queueEvent('done', t), this._player.onDone(t);
        }
        onStart(t) {
          this.queued && this._queueEvent('start', t), this._player.onStart(t);
        }
        onDestroy(t) {
          this.queued && this._queueEvent('destroy', t), this._player.onDestroy(t);
        }
        init() {
          this._player.init();
        }
        hasStarted() {
          return !this.queued && this._player.hasStarted();
        }
        play() {
          !this.queued && this._player.play();
        }
        pause() {
          !this.queued && this._player.pause();
        }
        restart() {
          !this.queued && this._player.restart();
        }
        finish() {
          this._player.finish();
        }
        destroy() {
          (this.destroyed = !0), this._player.destroy();
        }
        reset() {
          !this.queued && this._player.reset();
        }
        setPosition(t) {
          this.queued || this._player.setPosition(t);
        }
        getPosition() {
          return this.queued ? 0 : this._player.getPosition();
        }
        triggerCallback(t) {
          const e = this._player;
          e.triggerCallback && e.triggerCallback(t);
        }
      }
      function gb(t) {
        return t && 1 === t.nodeType;
      }
      function _b(t, e) {
        const n = t.style.display;
        return (t.style.display = null != e ? e : 'none'), n;
      }
      function bb(t, e, n, i, s) {
        const r = [];
        n.forEach((t) => r.push(_b(t)));
        const o = [];
        i.forEach((n, i) => {
          const r = {};
          n.forEach((t) => {
            const n = (r[t] = e.computeStyle(i, t, s));
            (n && 0 != n.length) || ((i.__ng_removed = cb), o.push(i));
          }),
            t.set(i, r);
        });
        let a = 0;
        return n.forEach((t) => _b(t, r[a++])), o;
      }
      function yb(t, e) {
        const n = new Map();
        if ((t.forEach((t) => n.set(t, [])), 0 == e.length)) return n;
        const i = new Set(e),
          s = new Map();
        function r(t) {
          if (!t) return 1;
          let e = s.get(t);
          if (e) return e;
          const o = t.parentNode;
          return (e = n.has(o) ? o : i.has(o) ? 1 : r(o)), s.set(t, e), e;
        }
        return (
          e.forEach((t) => {
            const e = r(t);
            1 !== e && n.get(e).push(t);
          }),
          n
        );
      }
      function vb(t, e) {
        if (t.classList) t.classList.add(e);
        else {
          let n = t.$$classes;
          n || (n = t.$$classes = {}), (n[e] = !0);
        }
      }
      function wb(t, e) {
        if (t.classList) t.classList.remove(e);
        else {
          let n = t.$$classes;
          n && delete n[e];
        }
      }
      function xb(t, e, n) {
        Mg(n).onDone(() => t.processLeaveNode(e));
      }
      function Cb(t, e) {
        for (let n = 0; n < t.length; n++) {
          const i = t[n];
          i instanceof Tg ? Cb(i.players, e) : e.push(i);
        }
      }
      function kb(t, e, n) {
        const i = n.get(t);
        if (!i) return !1;
        let s = e.get(t);
        return s ? i.forEach((t) => s.add(t)) : e.set(t, i), n.delete(t), !0;
      }
      class Sb {
        constructor(t, e, n) {
          (this.bodyNode = t),
            (this._driver = e),
            (this._triggerCache = {}),
            (this.onRemovalComplete = (t, e) => {}),
            (this._transitionEngine = new mb(t, e, n)),
            (this._timelineEngine = new ib(t, e, n)),
            (this._transitionEngine.onRemovalComplete = (t, e) => this.onRemovalComplete(t, e));
        }
        registerTrigger(t, e, n, i, s) {
          const r = t + '-' + i;
          let o = this._triggerCache[r];
          if (!o) {
            const t = [],
              e = T_(this._driver, s, t);
            if (t.length)
              throw new Error(
                `The animation trigger "${i}" has failed to build due to the following errors:\n - ${t.join('\n - ')}`
              );
            (o = (function (t, e) {
              return new tb(t, e);
            })(i, e)),
              (this._triggerCache[r] = o);
          }
          this._transitionEngine.registerTrigger(e, i, o);
        }
        register(t, e) {
          this._transitionEngine.register(t, e);
        }
        destroy(t, e) {
          this._transitionEngine.destroy(t, e);
        }
        onInsert(t, e, n, i) {
          this._transitionEngine.insertNode(t, e, n, i);
        }
        onRemove(t, e, n, i) {
          this._transitionEngine.removeNode(t, e, i || !1, n);
        }
        disableAnimations(t, e) {
          this._transitionEngine.markElementAsDisabled(t, e);
        }
        process(t, e, n, i) {
          if ('@' == n.charAt(0)) {
            const [t, s] = Vg(n);
            this._timelineEngine.command(t, e, s, i);
          } else this._transitionEngine.trigger(t, e, n, i);
        }
        listen(t, e, n, i, s) {
          if ('@' == n.charAt(0)) {
            const [t, i] = Vg(n);
            return this._timelineEngine.listen(t, e, i, s);
          }
          return this._transitionEngine.listen(t, e, n, i, s);
        }
        flush(t = -1) {
          this._transitionEngine.flush(t);
        }
        get players() {
          return this._transitionEngine.players.concat(this._timelineEngine.players);
        }
        whenRenderingDone() {
          return this._transitionEngine.whenRenderingDone();
        }
      }
      function Eb(t, e) {
        let n = null,
          i = null;
        return (
          Array.isArray(e) && e.length ? ((n = Pb(e[0])), e.length > 1 && (i = Pb(e[e.length - 1]))) : e && (n = Pb(e)),
          n || i ? new Ob(t, n, i) : null
        );
      }
      class Ob {
        constructor(t, e, n) {
          (this._element = t), (this._startStyles = e), (this._endStyles = n), (this._state = 0);
          let i = Ob.initialStylesByElement.get(t);
          i || Ob.initialStylesByElement.set(t, (i = {})), (this._initialStyles = i);
        }
        start() {
          this._state < 1 &&
            (this._startStyles && u_(this._element, this._startStyles, this._initialStyles), (this._state = 1));
        }
        finish() {
          this.start(),
            this._state < 2 &&
              (u_(this._element, this._initialStyles),
              this._endStyles && (u_(this._element, this._endStyles), (this._endStyles = null)),
              (this._state = 1));
        }
        destroy() {
          this.finish(),
            this._state < 3 &&
              (Ob.initialStylesByElement.delete(this._element),
              this._startStyles && (d_(this._element, this._startStyles), (this._endStyles = null)),
              this._endStyles && (d_(this._element, this._endStyles), (this._endStyles = null)),
              u_(this._element, this._initialStyles),
              (this._state = 3));
        }
      }
      function Pb(t) {
        let e = null;
        const n = Object.keys(t);
        for (let i = 0; i < n.length; i++) {
          const s = n[i];
          Ab(s) && ((e = e || {}), (e[s] = t[s]));
        }
        return e;
      }
      function Ab(t) {
        return 'display' === t || 'position' === t;
      }
      Ob.initialStylesByElement = new WeakMap();
      const Tb = 'animation',
        Db = 'animationend';
      class Mb {
        constructor(t, e, n, i, s, r, o) {
          (this._element = t),
            (this._name = e),
            (this._duration = n),
            (this._delay = i),
            (this._easing = s),
            (this._fillMode = r),
            (this._onDoneFn = o),
            (this._finished = !1),
            (this._destroyed = !1),
            (this._startTime = 0),
            (this._position = 0),
            (this._eventFn = (t) => this._handleCallback(t));
        }
        apply() {
          !(function (t, e) {
            const n = Vb(t, '').trim();
            n.length &&
              ((function (t, e) {
                let n = 0;
                for (let i = 0; i < t.length; i++) ',' === t.charAt(i) && n++;
              })(n),
              (e = `${n}, ${e}`)),
              Nb(t, '', e);
          })(
            this._element,
            `${this._duration}ms ${this._easing} ${this._delay}ms 1 normal ${this._fillMode} ${this._name}`
          ),
            Fb(this._element, this._eventFn, !1),
            (this._startTime = Date.now());
        }
        pause() {
          Rb(this._element, this._name, 'paused');
        }
        resume() {
          Rb(this._element, this._name, 'running');
        }
        setPosition(t) {
          const e = Ib(this._element, this._name);
          (this._position = t * this._duration), Nb(this._element, 'Delay', `-${this._position}ms`, e);
        }
        getPosition() {
          return this._position;
        }
        _handleCallback(t) {
          const e = t._ngTestManualTimestamp || Date.now(),
            n = 1e3 * parseFloat(t.elapsedTime.toFixed(3));
          t.animationName == this._name &&
            Math.max(e - this._startTime, 0) >= this._delay &&
            n >= this._duration &&
            this.finish();
        }
        finish() {
          this._finished || ((this._finished = !0), this._onDoneFn(), Fb(this._element, this._eventFn, !0));
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this.finish(),
            (function (t, e) {
              const n = Vb(t, '').split(','),
                i = Lb(n, e);
              i >= 0 && (n.splice(i, 1), Nb(t, '', n.join(',')));
            })(this._element, this._name));
        }
      }
      function Rb(t, e, n) {
        Nb(t, 'PlayState', n, Ib(t, e));
      }
      function Ib(t, e) {
        const n = Vb(t, '');
        return n.indexOf(',') > 0 ? Lb(n.split(','), e) : Lb([n], e);
      }
      function Lb(t, e) {
        for (let n = 0; n < t.length; n++) if (t[n].indexOf(e) >= 0) return n;
        return -1;
      }
      function Fb(t, e, n) {
        n ? t.removeEventListener(Db, e) : t.addEventListener(Db, e);
      }
      function Nb(t, e, n, i) {
        const s = Tb + e;
        if (null != i) {
          const e = t.style[s];
          if (e.length) {
            const t = e.split(',');
            (t[i] = n), (n = t.join(','));
          }
        }
        t.style[s] = n;
      }
      function Vb(t, e) {
        return t.style[Tb + e] || '';
      }
      class Bb {
        constructor(t, e, n, i, s, r, o, a) {
          (this.element = t),
            (this.keyframes = e),
            (this.animationName = n),
            (this._duration = i),
            (this._delay = s),
            (this._finalStyles = o),
            (this._specialStyles = a),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._started = !1),
            (this.currentSnapshot = {}),
            (this._state = 0),
            (this.easing = r || 'linear'),
            (this.totalTime = i + s),
            this._buildStyler();
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        destroy() {
          this.init(),
            this._state >= 4 ||
              ((this._state = 4),
              this._styler.destroy(),
              this._flushStartFns(),
              this._flushDoneFns(),
              this._specialStyles && this._specialStyles.destroy(),
              this._onDestroyFns.forEach((t) => t()),
              (this._onDestroyFns = []));
        }
        _flushDoneFns() {
          this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []);
        }
        _flushStartFns() {
          this._onStartFns.forEach((t) => t()), (this._onStartFns = []);
        }
        finish() {
          this.init(),
            this._state >= 3 ||
              ((this._state = 3),
              this._styler.finish(),
              this._flushStartFns(),
              this._specialStyles && this._specialStyles.finish(),
              this._flushDoneFns());
        }
        setPosition(t) {
          this._styler.setPosition(t);
        }
        getPosition() {
          return this._styler.getPosition();
        }
        hasStarted() {
          return this._state >= 2;
        }
        init() {
          this._state >= 1 || ((this._state = 1), this._styler.apply(), this._delay && this._styler.pause());
        }
        play() {
          this.init(),
            this.hasStarted() ||
              (this._flushStartFns(), (this._state = 2), this._specialStyles && this._specialStyles.start()),
            this._styler.resume();
        }
        pause() {
          this.init(), this._styler.pause();
        }
        restart() {
          this.reset(), this.play();
        }
        reset() {
          this._styler.destroy(), this._buildStyler(), this._styler.apply();
        }
        _buildStyler() {
          this._styler = new Mb(
            this.element,
            this.animationName,
            this._duration,
            this._delay,
            this.easing,
            'forwards',
            () => this.finish()
          );
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
        beforeDestroy() {
          this.init();
          const t = {};
          if (this.hasStarted()) {
            const e = this._state >= 3;
            Object.keys(this._finalStyles).forEach((n) => {
              'offset' != n && (t[n] = e ? this._finalStyles[n] : C_(this.element, n));
            });
          }
          this.currentSnapshot = t;
        }
      }
      class zb extends Ag {
        constructor(t, e) {
          super(), (this.element = t), (this._startingStyles = {}), (this.__initialized = !1), (this._styles = Qg(e));
        }
        init() {
          !this.__initialized &&
            this._startingStyles &&
            ((this.__initialized = !0),
            Object.keys(this._styles).forEach((t) => {
              this._startingStyles[t] = this.element.style[t];
            }),
            super.init());
        }
        play() {
          this._startingStyles &&
            (this.init(),
            Object.keys(this._styles).forEach((t) => this.element.style.setProperty(t, this._styles[t])),
            super.play());
        }
        destroy() {
          this._startingStyles &&
            (Object.keys(this._startingStyles).forEach((t) => {
              const e = this._startingStyles[t];
              e ? this.element.style.setProperty(t, e) : this.element.style.removeProperty(t);
            }),
            (this._startingStyles = null),
            super.destroy());
        }
      }
      class jb {
        constructor() {
          (this._count = 0), (this._head = document.querySelector('head'));
        }
        validateStyleProperty(t) {
          return Wg(t);
        }
        matchesElement(t, e) {
          return Ug(t, e);
        }
        containsElement(t, e) {
          return Yg(t, e);
        }
        query(t, e, n) {
          return Gg(t, e, n);
        }
        computeStyle(t, e, n) {
          return window.getComputedStyle(t)[e];
        }
        buildKeyframeElement(t, e, n) {
          n = n.map((t) => Qg(t));
          let i = `@keyframes ${e} {\n`,
            s = '';
          n.forEach((t) => {
            s = ' ';
            const e = parseFloat(t.offset);
            (i += `${s}${100 * e}% {\n`),
              (s += ' '),
              Object.keys(t).forEach((e) => {
                const n = t[e];
                switch (e) {
                  case 'offset':
                    return;
                  case 'easing':
                    return void (n && (i += `${s}animation-timing-function: ${n};\n`));
                  default:
                    return void (i += `${s}${e}: ${n};\n`);
                }
              }),
              (i += `${s}}\n`);
          }),
            (i += '}\n');
          const r = document.createElement('style');
          return (r.textContent = i), r;
        }
        animate(t, e, n, i, s, r = [], o) {
          const a = r.filter((t) => t instanceof Bb),
            l = {};
          v_(n, i) &&
            a.forEach((t) => {
              let e = t.currentSnapshot;
              Object.keys(e).forEach((t) => (l[t] = e[t]));
            });
          const c = (function (t) {
            let e = {};
            return (
              t &&
                (Array.isArray(t) ? t : [t]).forEach((t) => {
                  Object.keys(t).forEach((n) => {
                    'offset' != n && 'easing' != n && (e[n] = t[n]);
                  });
                }),
              e
            );
          })((e = w_(t, e, l)));
          if (0 == n) return new zb(t, c);
          const h = 'gen_css_kf_' + this._count++,
            u = this.buildKeyframeElement(t, h, e);
          document.querySelector('head').appendChild(u);
          const d = Eb(t, e),
            p = new Bb(t, e, h, n, i, s, c, d);
          return (
            p.onDestroy(() => {
              var t;
              (t = u).parentNode.removeChild(t);
            }),
            p
          );
        }
      }
      class Hb {
        constructor(t, e, n, i) {
          (this.element = t),
            (this.keyframes = e),
            (this.options = n),
            (this._specialStyles = i),
            (this._onDoneFns = []),
            (this._onStartFns = []),
            (this._onDestroyFns = []),
            (this._initialized = !1),
            (this._finished = !1),
            (this._started = !1),
            (this._destroyed = !1),
            (this.time = 0),
            (this.parentPlayer = null),
            (this.currentSnapshot = {}),
            (this._duration = n.duration),
            (this._delay = n.delay || 0),
            (this.time = this._duration + this._delay);
        }
        _onFinish() {
          this._finished || ((this._finished = !0), this._onDoneFns.forEach((t) => t()), (this._onDoneFns = []));
        }
        init() {
          this._buildPlayer(), this._preparePlayerBeforeStart();
        }
        _buildPlayer() {
          if (this._initialized) return;
          this._initialized = !0;
          const t = this.keyframes;
          (this.domPlayer = this._triggerWebAnimation(this.element, t, this.options)),
            (this._finalKeyframe = t.length ? t[t.length - 1] : {}),
            this.domPlayer.addEventListener('finish', () => this._onFinish());
        }
        _preparePlayerBeforeStart() {
          this._delay ? this._resetDomPlayerState() : this.domPlayer.pause();
        }
        _triggerWebAnimation(t, e, n) {
          return t.animate(e, n);
        }
        onStart(t) {
          this._onStartFns.push(t);
        }
        onDone(t) {
          this._onDoneFns.push(t);
        }
        onDestroy(t) {
          this._onDestroyFns.push(t);
        }
        play() {
          this._buildPlayer(),
            this.hasStarted() ||
              (this._onStartFns.forEach((t) => t()),
              (this._onStartFns = []),
              (this._started = !0),
              this._specialStyles && this._specialStyles.start()),
            this.domPlayer.play();
        }
        pause() {
          this.init(), this.domPlayer.pause();
        }
        finish() {
          this.init(), this._specialStyles && this._specialStyles.finish(), this._onFinish(), this.domPlayer.finish();
        }
        reset() {
          this._resetDomPlayerState(), (this._destroyed = !1), (this._finished = !1), (this._started = !1);
        }
        _resetDomPlayerState() {
          this.domPlayer && this.domPlayer.cancel();
        }
        restart() {
          this.reset(), this.play();
        }
        hasStarted() {
          return this._started;
        }
        destroy() {
          this._destroyed ||
            ((this._destroyed = !0),
            this._resetDomPlayerState(),
            this._onFinish(),
            this._specialStyles && this._specialStyles.destroy(),
            this._onDestroyFns.forEach((t) => t()),
            (this._onDestroyFns = []));
        }
        setPosition(t) {
          void 0 === this.domPlayer && this.init(), (this.domPlayer.currentTime = t * this.time);
        }
        getPosition() {
          return this.domPlayer.currentTime / this.time;
        }
        get totalTime() {
          return this._delay + this._duration;
        }
        beforeDestroy() {
          const t = {};
          this.hasStarted() &&
            Object.keys(this._finalKeyframe).forEach((e) => {
              'offset' != e && (t[e] = this._finished ? this._finalKeyframe[e] : C_(this.element, e));
            }),
            (this.currentSnapshot = t);
        }
        triggerCallback(t) {
          const e = 'start' == t ? this._onStartFns : this._onDoneFns;
          e.forEach((t) => t()), (e.length = 0);
        }
      }
      class $b {
        constructor() {
          (this._isNativeImpl = /\{\s*\[native\s+code\]\s*\}/.test(qb().toString())),
            (this._cssKeyframesDriver = new jb());
        }
        validateStyleProperty(t) {
          return Wg(t);
        }
        matchesElement(t, e) {
          return Ug(t, e);
        }
        containsElement(t, e) {
          return Yg(t, e);
        }
        query(t, e, n) {
          return Gg(t, e, n);
        }
        computeStyle(t, e, n) {
          return window.getComputedStyle(t)[e];
        }
        overrideWebAnimationsSupport(t) {
          this._isNativeImpl = t;
        }
        animate(t, e, n, i, s, r = [], o) {
          if (!o && !this._isNativeImpl) return this._cssKeyframesDriver.animate(t, e, n, i, s, r);
          const a = { duration: n, delay: i, fill: 0 == i ? 'both' : 'forwards' };
          s && (a.easing = s);
          const l = {},
            c = r.filter((t) => t instanceof Hb);
          v_(n, i) &&
            c.forEach((t) => {
              let e = t.currentSnapshot;
              Object.keys(e).forEach((t) => (l[t] = e[t]));
            });
          const h = Eb(t, (e = w_(t, (e = e.map((t) => l_(t, !1))), l)));
          return new Hb(t, e, a, h);
        }
      }
      function qb() {
        return ('undefined' != typeof window && void 0 !== window.document && Element.prototype.animate) || {};
      }
      let Wb = (() => {
        class t extends _g {
          constructor(t, e) {
            super(),
              (this._nextAnimationId = 0),
              (this._renderer = t.createRenderer(e.body, {
                id: '0',
                encapsulation: Pt.None,
                styles: [],
                data: { animation: [] },
              }));
          }
          build(t) {
            const e = this._nextAnimationId.toString();
            this._nextAnimationId++;
            const n = Array.isArray(t) ? wg(t) : t;
            return Gb(this._renderer, null, e, 'register', [n]), new Ub(e, this._renderer);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(tl), _i(Th));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Ub extends class {} {
        constructor(t, e) {
          super(), (this._id = t), (this._renderer = e);
        }
        create(t, e) {
          return new Yb(this._id, t, e || {}, this._renderer);
        }
      }
      class Yb {
        constructor(t, e, n, i) {
          (this.id = t),
            (this.element = e),
            (this._renderer = i),
            (this.parentPlayer = null),
            (this._started = !1),
            (this.totalTime = 0),
            this._command('create', n);
        }
        _listen(t, e) {
          return this._renderer.listen(this.element, `@@${this.id}:${t}`, e);
        }
        _command(t, ...e) {
          return Gb(this._renderer, this.element, this.id, t, e);
        }
        onDone(t) {
          this._listen('done', t);
        }
        onStart(t) {
          this._listen('start', t);
        }
        onDestroy(t) {
          this._listen('destroy', t);
        }
        init() {
          this._command('init');
        }
        hasStarted() {
          return this._started;
        }
        play() {
          this._command('play'), (this._started = !0);
        }
        pause() {
          this._command('pause');
        }
        restart() {
          this._command('restart');
        }
        finish() {
          this._command('finish');
        }
        destroy() {
          this._command('destroy');
        }
        reset() {
          this._command('reset');
        }
        setPosition(t) {
          this._command('setPosition', t);
        }
        getPosition() {
          var t, e;
          return null !==
            (e = null === (t = this._renderer.engine.players[+this.id]) || void 0 === t ? void 0 : t.getPosition()) &&
            void 0 !== e
            ? e
            : 0;
        }
      }
      function Gb(t, e, n, i, s) {
        return t.setProperty(e, `@@${n}:${i}`, s);
      }
      const Qb = '@',
        Kb = '@.disabled';
      let Xb = (() => {
        class t {
          constructor(t, e, n) {
            (this.delegate = t),
              (this.engine = e),
              (this._zone = n),
              (this._currentId = 0),
              (this._microtaskId = 1),
              (this._animationCallbacksBuffer = []),
              (this._rendererCache = new Map()),
              (this._cdRecurDepth = 0),
              (this.promise = Promise.resolve(0)),
              (e.onRemovalComplete = (t, e) => {
                e && e.parentNode(t) && e.removeChild(t.parentNode, t);
              });
          }
          createRenderer(t, e) {
            const n = this.delegate.createRenderer(t, e);
            if (!(t && e && e.data && e.data.animation)) {
              let t = this._rendererCache.get(n);
              return t || ((t = new Zb('', n, this.engine)), this._rendererCache.set(n, t)), t;
            }
            const i = e.id,
              s = e.id + '-' + this._currentId;
            this._currentId++, this.engine.register(s, t);
            const r = (e) => {
              Array.isArray(e) ? e.forEach(r) : this.engine.registerTrigger(i, s, t, e.name, e);
            };
            return e.data.animation.forEach(r), new Jb(this, s, n, this.engine);
          }
          begin() {
            this._cdRecurDepth++, this.delegate.begin && this.delegate.begin();
          }
          _scheduleCountTask() {
            this.promise.then(() => {
              this._microtaskId++;
            });
          }
          scheduleListenerCallback(t, e, n) {
            t >= 0 && t < this._microtaskId
              ? this._zone.run(() => e(n))
              : (0 == this._animationCallbacksBuffer.length &&
                  Promise.resolve(null).then(() => {
                    this._zone.run(() => {
                      this._animationCallbacksBuffer.forEach((t) => {
                        const [e, n] = t;
                        e(n);
                      }),
                        (this._animationCallbacksBuffer = []);
                    });
                  }),
                this._animationCallbacksBuffer.push([e, n]));
          }
          end() {
            this._cdRecurDepth--,
              0 == this._cdRecurDepth &&
                this._zone.runOutsideAngular(() => {
                  this._scheduleCountTask(), this.engine.flush(this._microtaskId);
                }),
              this.delegate.end && this.delegate.end();
          }
          whenRenderingDone() {
            return this.engine.whenRenderingDone();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(tl), _i(Sb), _i(Xc));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      class Zb {
        constructor(t, e, n) {
          (this.namespaceId = t),
            (this.delegate = e),
            (this.engine = n),
            (this.destroyNode = this.delegate.destroyNode ? (t) => e.destroyNode(t) : null);
        }
        get data() {
          return this.delegate.data;
        }
        destroy() {
          this.engine.destroy(this.namespaceId, this.delegate), this.delegate.destroy();
        }
        createElement(t, e) {
          return this.delegate.createElement(t, e);
        }
        createComment(t) {
          return this.delegate.createComment(t);
        }
        createText(t) {
          return this.delegate.createText(t);
        }
        appendChild(t, e) {
          this.delegate.appendChild(t, e), this.engine.onInsert(this.namespaceId, e, t, !1);
        }
        insertBefore(t, e, n, i = !0) {
          this.delegate.insertBefore(t, e, n), this.engine.onInsert(this.namespaceId, e, t, i);
        }
        removeChild(t, e, n) {
          this.engine.onRemove(this.namespaceId, e, this.delegate, n);
        }
        selectRootElement(t, e) {
          return this.delegate.selectRootElement(t, e);
        }
        parentNode(t) {
          return this.delegate.parentNode(t);
        }
        nextSibling(t) {
          return this.delegate.nextSibling(t);
        }
        setAttribute(t, e, n, i) {
          this.delegate.setAttribute(t, e, n, i);
        }
        removeAttribute(t, e, n) {
          this.delegate.removeAttribute(t, e, n);
        }
        addClass(t, e) {
          this.delegate.addClass(t, e);
        }
        removeClass(t, e) {
          this.delegate.removeClass(t, e);
        }
        setStyle(t, e, n, i) {
          this.delegate.setStyle(t, e, n, i);
        }
        removeStyle(t, e, n) {
          this.delegate.removeStyle(t, e, n);
        }
        setProperty(t, e, n) {
          e.charAt(0) == Qb && e == Kb ? this.disableAnimations(t, !!n) : this.delegate.setProperty(t, e, n);
        }
        setValue(t, e) {
          this.delegate.setValue(t, e);
        }
        listen(t, e, n) {
          return this.delegate.listen(t, e, n);
        }
        disableAnimations(t, e) {
          this.engine.disableAnimations(t, e);
        }
      }
      class Jb extends Zb {
        constructor(t, e, n, i) {
          super(e, n, i), (this.factory = t), (this.namespaceId = e);
        }
        setProperty(t, e, n) {
          e.charAt(0) == Qb
            ? '.' == e.charAt(1) && e == Kb
              ? this.disableAnimations(t, (n = void 0 === n || !!n))
              : this.engine.process(this.namespaceId, t, e.substr(1), n)
            : this.delegate.setProperty(t, e, n);
        }
        listen(t, e, n) {
          if (e.charAt(0) == Qb) {
            const i = (function (t) {
              switch (t) {
                case 'body':
                  return document.body;
                case 'document':
                  return document;
                case 'window':
                  return window;
                default:
                  return t;
              }
            })(t);
            let s = e.substr(1),
              r = '';
            return (
              s.charAt(0) != Qb &&
                ([s, r] = (function (t) {
                  const e = t.indexOf('.');
                  return [t.substring(0, e), t.substr(e + 1)];
                })(s)),
              this.engine.listen(this.namespaceId, i, s, r, (t) => {
                this.factory.scheduleListenerCallback(t._data || -1, n, t);
              })
            );
          }
          return this.delegate.listen(t, e, n);
        }
      }
      let ty = (() => {
        class t extends Sb {
          constructor(t, e, n) {
            super(t.body, e, n);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Th), _i(Xg), _i(Y_));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const ey = new Jn('AnimationModuleType'),
        ny = [
          {
            provide: Xg,
            useFactory: function () {
              return 'function' == typeof qb() ? new $b() : new jb();
            },
          },
          { provide: ey, useValue: 'BrowserAnimations' },
          { provide: _g, useClass: Wb },
          {
            provide: Y_,
            useFactory: function () {
              return new G_();
            },
          },
          { provide: Sb, useClass: ty },
          {
            provide: tl,
            useFactory: function (t, e, n) {
              return new Xb(t, e, n);
            },
            deps: [gd, Sb, Xc],
          },
        ];
      let iy = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ providers: ny, imports: [Dd] })),
          t
        );
      })();
      const sy = 13,
        ry = 27,
        oy = 32,
        ay = 38;
      function ly(t, ...e) {
        return e.length ? e.some((e) => t[e]) : t.altKey || t.shiftKey || t.ctrlKey || t.metaKey;
      }
      function cy(t, e = Cf) {
        return (n) => n.lift(new hy(t, e));
      }
      class hy {
        constructor(t, e) {
          (this.dueTime = t), (this.scheduler = e);
        }
        call(t, e) {
          return e.subscribe(new uy(t, this.dueTime, this.scheduler));
        }
      }
      class uy extends m {
        constructor(t, e, n) {
          super(t),
            (this.dueTime = e),
            (this.scheduler = n),
            (this.debouncedSubscription = null),
            (this.lastValue = null),
            (this.hasValue = !1);
        }
        _next(t) {
          this.clearDebounce(),
            (this.lastValue = t),
            (this.hasValue = !0),
            this.add((this.debouncedSubscription = this.scheduler.schedule(dy, this.dueTime, this)));
        }
        _complete() {
          this.debouncedNext(), this.destination.complete();
        }
        debouncedNext() {
          if ((this.clearDebounce(), this.hasValue)) {
            const { lastValue: t } = this;
            (this.lastValue = null), (this.hasValue = !1), this.destination.next(t);
          }
        }
        clearDebounce() {
          const t = this.debouncedSubscription;
          null !== t && (this.remove(t), t.unsubscribe(), (this.debouncedSubscription = null));
        }
      }
      function dy(t) {
        t.debouncedNext();
      }
      function py(t) {
        return null != t && 'false' != `${t}`;
      }
      function my(t, e = 0) {
        return fy(t) ? Number(t) : e;
      }
      function fy(t) {
        return !isNaN(parseFloat(t)) && !isNaN(Number(t));
      }
      function gy(t) {
        return Array.isArray(t) ? t : [t];
      }
      function _y(t) {
        return null == t ? '' : 'string' == typeof t ? t : `${t}px`;
      }
      function by(t) {
        return t instanceof Za ? t.nativeElement : t;
      }
      let yy;
      try {
        yy = 'undefined' != typeof Intl && Intl.v8BreakIterator;
      } catch (DX) {
        yy = !1;
      }
      let vy,
        wy = (() => {
          class t {
            constructor(t) {
              (this._platformId = t),
                (this.isBrowser = this._platformId ? Qu(this._platformId) : 'object' == typeof document && !!document),
                (this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent)),
                (this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent)),
                (this.BLINK =
                  this.isBrowser &&
                  !(!window.chrome && !yy) &&
                  'undefined' != typeof CSS &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.WEBKIT =
                  this.isBrowser &&
                  /AppleWebKit/i.test(navigator.userAgent) &&
                  !this.BLINK &&
                  !this.EDGE &&
                  !this.TRIDENT),
                (this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window)),
                (this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent)),
                (this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT),
                (this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Fc));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Fc));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        xy = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })();
      const Cy = [
        'color',
        'button',
        'checkbox',
        'date',
        'datetime-local',
        'email',
        'file',
        'hidden',
        'image',
        'month',
        'number',
        'password',
        'radio',
        'range',
        'reset',
        'search',
        'submit',
        'tel',
        'text',
        'time',
        'url',
        'week',
      ];
      function ky() {
        if (vy) return vy;
        if ('object' != typeof document || !document) return (vy = new Set(Cy)), vy;
        let t = document.createElement('input');
        return (vy = new Set(Cy.filter((e) => (t.setAttribute('type', e), t.type === e)))), vy;
      }
      let Sy, Ey, Oy, Py;
      function Ay(t) {
        return (function () {
          if (null == Sy && 'undefined' != typeof window)
            try {
              window.addEventListener('test', null, Object.defineProperty({}, 'passive', { get: () => (Sy = !0) }));
            } finally {
              Sy = Sy || !1;
            }
          return Sy;
        })()
          ? t
          : !!t.capture;
      }
      function Ty() {
        if (null == Oy) {
          if ('object' != typeof document || !document || 'function' != typeof Element || !Element)
            return (Oy = !1), Oy;
          if ('scrollBehavior' in document.documentElement.style) Oy = !0;
          else {
            const t = Element.prototype.scrollTo;
            Oy = !!t && !/\{\s*\[native code\]\s*\}/.test(t.toString());
          }
        }
        return Oy;
      }
      function Dy() {
        if ('object' != typeof document || !document) return 0;
        if (null == Ey) {
          const t = document.createElement('div'),
            e = t.style;
          (t.dir = 'rtl'),
            (e.width = '1px'),
            (e.overflow = 'auto'),
            (e.visibility = 'hidden'),
            (e.pointerEvents = 'none'),
            (e.position = 'absolute');
          const n = document.createElement('div'),
            i = n.style;
          (i.width = '2px'),
            (i.height = '1px'),
            t.appendChild(n),
            document.body.appendChild(t),
            (Ey = 0),
            0 === t.scrollLeft && ((t.scrollLeft = 1), (Ey = 0 === t.scrollLeft ? 1 : 2)),
            t.parentNode.removeChild(t);
        }
        return Ey;
      }
      function My(t) {
        if (
          (function () {
            if (null == Py) {
              const t = 'undefined' != typeof document ? document.head : null;
              Py = !(!t || (!t.createShadowRoot && !t.attachShadow));
            }
            return Py;
          })()
        ) {
          const e = t.getRootNode ? t.getRootNode() : null;
          if ('undefined' != typeof ShadowRoot && ShadowRoot && e instanceof ShadowRoot) return e;
        }
        return null;
      }
      let Ry = (() => {
          class t {
            create(t) {
              return 'undefined' == typeof MutationObserver ? null : new MutationObserver(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Iy = (() => {
          class t {
            constructor(t) {
              (this._mutationObserverFactory = t), (this._observedElements = new Map());
            }
            ngOnDestroy() {
              this._observedElements.forEach((t, e) => this._cleanupObserver(e));
            }
            observe(t) {
              const e = by(t);
              return new b((t) => {
                const n = this._observeElement(e).subscribe(t);
                return () => {
                  n.unsubscribe(), this._unobserveElement(e);
                };
              });
            }
            _observeElement(t) {
              if (this._observedElements.has(t)) this._observedElements.get(t).count++;
              else {
                const e = new C(),
                  n = this._mutationObserverFactory.create((t) => e.next(t));
                n && n.observe(t, { characterData: !0, childList: !0, subtree: !0 }),
                  this._observedElements.set(t, { observer: n, stream: e, count: 1 });
              }
              return this._observedElements.get(t).stream;
            }
            _unobserveElement(t) {
              this._observedElements.has(t) &&
                (this._observedElements.get(t).count--,
                this._observedElements.get(t).count || this._cleanupObserver(t));
            }
            _cleanupObserver(t) {
              if (this._observedElements.has(t)) {
                const { observer: e, stream: n } = this._observedElements.get(t);
                e && e.disconnect(), n.complete(), this._observedElements.delete(t);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Ry));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Ry));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Ly = (() => {
          class t {
            constructor(t, e, n) {
              (this._contentObserver = t),
                (this._elementRef = e),
                (this._ngZone = n),
                (this.event = new cc()),
                (this._disabled = !1),
                (this._currentSubscription = null);
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              (this._disabled = py(t)), this._disabled ? this._unsubscribe() : this._subscribe();
            }
            get debounce() {
              return this._debounce;
            }
            set debounce(t) {
              (this._debounce = my(t)), this._subscribe();
            }
            ngAfterContentInit() {
              this._currentSubscription || this.disabled || this._subscribe();
            }
            ngOnDestroy() {
              this._unsubscribe();
            }
            _subscribe() {
              this._unsubscribe();
              const t = this._contentObserver.observe(this._elementRef);
              this._ngZone.runOutsideAngular(() => {
                this._currentSubscription = (this.debounce ? t.pipe(cy(this.debounce)) : t).subscribe(this.event);
              });
            }
            _unsubscribe() {
              var t;
              null === (t = this._currentSubscription) || void 0 === t || t.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Iy), Ro(Za), Ro(Xc));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'cdkObserveContent', '']],
              inputs: { disabled: ['cdkObserveContentDisabled', 'disabled'], debounce: 'debounce' },
              outputs: { event: 'cdkObserveContent' },
              exportAs: ['cdkObserveContent'],
            })),
            t
          );
        })(),
        Fy = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [Ry] })),
            t
          );
        })();
      function Ny(t, e) {
        return (t.getAttribute(e) || '').match(/\S+/g) || [];
      }
      const Vy = 'cdk-describedby-message-container',
        By = 'cdk-describedby-host';
      let zy = 0;
      const jy = new Map();
      let Hy = null,
        $y = (() => {
          class t {
            constructor(t) {
              this._document = t;
            }
            describe(t, e, n) {
              if (!this._canBeDescribed(t, e)) return;
              const i = qy(e, n);
              'string' != typeof e
                ? (Wy(e), jy.set(i, { messageElement: e, referenceCount: 0 }))
                : jy.has(i) || this._createMessageElement(e, n),
                this._isElementDescribedByMessage(t, i) || this._addMessageReference(t, i);
            }
            removeDescription(t, e, n) {
              if (!e || !this._isElementNode(t)) return;
              const i = qy(e, n);
              if (
                (this._isElementDescribedByMessage(t, i) && this._removeMessageReference(t, i), 'string' == typeof e)
              ) {
                const t = jy.get(i);
                t && 0 === t.referenceCount && this._deleteMessageElement(i);
              }
              Hy && 0 === Hy.childNodes.length && this._deleteMessagesContainer();
            }
            ngOnDestroy() {
              const t = this._document.querySelectorAll('[cdk-describedby-host]');
              for (let e = 0; e < t.length; e++) this._removeCdkDescribedByReferenceIds(t[e]), t[e].removeAttribute(By);
              Hy && this._deleteMessagesContainer(), jy.clear();
            }
            _createMessageElement(t, e) {
              const n = this._document.createElement('div');
              Wy(n),
                (n.textContent = t),
                e && n.setAttribute('role', e),
                this._createMessagesContainer(),
                Hy.appendChild(n),
                jy.set(qy(t, e), { messageElement: n, referenceCount: 0 });
            }
            _deleteMessageElement(t) {
              const e = jy.get(t),
                n = e && e.messageElement;
              Hy && n && Hy.removeChild(n), jy.delete(t);
            }
            _createMessagesContainer() {
              if (!Hy) {
                const t = this._document.getElementById(Vy);
                t && t.parentNode && t.parentNode.removeChild(t),
                  (Hy = this._document.createElement('div')),
                  (Hy.id = Vy),
                  (Hy.style.visibility = 'hidden'),
                  Hy.classList.add('cdk-visually-hidden'),
                  this._document.body.appendChild(Hy);
              }
            }
            _deleteMessagesContainer() {
              Hy && Hy.parentNode && (Hy.parentNode.removeChild(Hy), (Hy = null));
            }
            _removeCdkDescribedByReferenceIds(t) {
              const e = Ny(t, 'aria-describedby').filter((t) => 0 != t.indexOf('cdk-describedby-message'));
              t.setAttribute('aria-describedby', e.join(' '));
            }
            _addMessageReference(t, e) {
              const n = jy.get(e);
              !(function (t, e, n) {
                const i = Ny(t, e);
                i.some((t) => t.trim() == n.trim()) || (i.push(n.trim()), t.setAttribute(e, i.join(' ')));
              })(t, 'aria-describedby', n.messageElement.id),
                t.setAttribute(By, ''),
                n.referenceCount++;
            }
            _removeMessageReference(t, e) {
              const n = jy.get(e);
              n.referenceCount--,
                (function (t, e, n) {
                  const i = Ny(t, e).filter((t) => t != n.trim());
                  i.length ? t.setAttribute(e, i.join(' ')) : t.removeAttribute(e);
                })(t, 'aria-describedby', n.messageElement.id),
                t.removeAttribute(By);
            }
            _isElementDescribedByMessage(t, e) {
              const n = Ny(t, 'aria-describedby'),
                i = jy.get(e),
                s = i && i.messageElement.id;
              return !!s && -1 != n.indexOf(s);
            }
            _canBeDescribed(t, e) {
              if (!this._isElementNode(t)) return !1;
              if (e && 'object' == typeof e) return !0;
              const n = null == e ? '' : `${e}`.trim(),
                i = t.getAttribute('aria-label');
              return !(!n || (i && i.trim() === n));
            }
            _isElementNode(t) {
              return t.nodeType === this._document.ELEMENT_NODE;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Th));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Th));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      function qy(t, e) {
        return 'string' == typeof t ? `${e || ''}/${t}` : t;
      }
      function Wy(t) {
        t.id || (t.id = 'cdk-describedby-message-' + zy++);
      }
      class Uy {
        constructor(t) {
          (this._items = t),
            (this._activeItemIndex = -1),
            (this._activeItem = null),
            (this._wrap = !1),
            (this._letterKeyStream = new C()),
            (this._typeaheadSubscription = u.EMPTY),
            (this._vertical = !0),
            (this._allowedModifierKeys = []),
            (this._homeAndEnd = !1),
            (this._skipPredicateFn = (t) => t.disabled),
            (this._pressedLetters = []),
            (this.tabOut = new C()),
            (this.change = new C()),
            t instanceof uc &&
              t.changes.subscribe((t) => {
                if (this._activeItem) {
                  const e = t.toArray().indexOf(this._activeItem);
                  e > -1 && e !== this._activeItemIndex && (this._activeItemIndex = e);
                }
              });
        }
        skipPredicate(t) {
          return (this._skipPredicateFn = t), this;
        }
        withWrap(t = !0) {
          return (this._wrap = t), this;
        }
        withVerticalOrientation(t = !0) {
          return (this._vertical = t), this;
        }
        withHorizontalOrientation(t) {
          return (this._horizontal = t), this;
        }
        withAllowedModifierKeys(t) {
          return (this._allowedModifierKeys = t), this;
        }
        withTypeAhead(t = 200) {
          return (
            this._typeaheadSubscription.unsubscribe(),
            (this._typeaheadSubscription = this._letterKeyStream
              .pipe(
                gf((t) => this._pressedLetters.push(t)),
                cy(t),
                _m(() => this._pressedLetters.length > 0),
                E(() => this._pressedLetters.join(''))
              )
              .subscribe((t) => {
                const e = this._getItemsArray();
                for (let n = 1; n < e.length + 1; n++) {
                  const i = (this._activeItemIndex + n) % e.length,
                    s = e[i];
                  if (!this._skipPredicateFn(s) && 0 === s.getLabel().toUpperCase().trim().indexOf(t)) {
                    this.setActiveItem(i);
                    break;
                  }
                }
                this._pressedLetters = [];
              })),
            this
          );
        }
        withHomeAndEnd(t = !0) {
          return (this._homeAndEnd = t), this;
        }
        setActiveItem(t) {
          const e = this._activeItem;
          this.updateActiveItem(t), this._activeItem !== e && this.change.next(this._activeItemIndex);
        }
        onKeydown(t) {
          const e = t.keyCode,
            n = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].every(
              (e) => !t[e] || this._allowedModifierKeys.indexOf(e) > -1
            );
          switch (e) {
            case 9:
              return void this.tabOut.next();
            case 40:
              if (this._vertical && n) {
                this.setNextItemActive();
                break;
              }
              return;
            case ay:
              if (this._vertical && n) {
                this.setPreviousItemActive();
                break;
              }
              return;
            case 39:
              if (this._horizontal && n) {
                'rtl' === this._horizontal ? this.setPreviousItemActive() : this.setNextItemActive();
                break;
              }
              return;
            case 37:
              if (this._horizontal && n) {
                'rtl' === this._horizontal ? this.setNextItemActive() : this.setPreviousItemActive();
                break;
              }
              return;
            case 36:
              if (this._homeAndEnd && n) {
                this.setFirstItemActive();
                break;
              }
              return;
            case 35:
              if (this._homeAndEnd && n) {
                this.setLastItemActive();
                break;
              }
              return;
            default:
              return void (
                (n || ly(t, 'shiftKey')) &&
                (t.key && 1 === t.key.length
                  ? this._letterKeyStream.next(t.key.toLocaleUpperCase())
                  : ((e >= 65 && e <= 90) || (e >= 48 && e <= 57)) &&
                    this._letterKeyStream.next(String.fromCharCode(e)))
              );
          }
          (this._pressedLetters = []), t.preventDefault();
        }
        get activeItemIndex() {
          return this._activeItemIndex;
        }
        get activeItem() {
          return this._activeItem;
        }
        isTyping() {
          return this._pressedLetters.length > 0;
        }
        setFirstItemActive() {
          this._setActiveItemByIndex(0, 1);
        }
        setLastItemActive() {
          this._setActiveItemByIndex(this._items.length - 1, -1);
        }
        setNextItemActive() {
          this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);
        }
        setPreviousItemActive() {
          this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);
        }
        updateActiveItem(t) {
          const e = this._getItemsArray(),
            n = 'number' == typeof t ? t : e.indexOf(t),
            i = e[n];
          (this._activeItem = null == i ? null : i), (this._activeItemIndex = n);
        }
        _setActiveItemByDelta(t) {
          this._wrap ? this._setActiveInWrapMode(t) : this._setActiveInDefaultMode(t);
        }
        _setActiveInWrapMode(t) {
          const e = this._getItemsArray();
          for (let n = 1; n <= e.length; n++) {
            const i = (this._activeItemIndex + t * n + e.length) % e.length;
            if (!this._skipPredicateFn(e[i])) return void this.setActiveItem(i);
          }
        }
        _setActiveInDefaultMode(t) {
          this._setActiveItemByIndex(this._activeItemIndex + t, t);
        }
        _setActiveItemByIndex(t, e) {
          const n = this._getItemsArray();
          if (n[t]) {
            for (; this._skipPredicateFn(n[t]); ) if (!n[(t += e)]) return;
            this.setActiveItem(t);
          }
        }
        _getItemsArray() {
          return this._items instanceof uc ? this._items.toArray() : this._items;
        }
      }
      class Yy extends Uy {
        setActiveItem(t) {
          this.activeItem && this.activeItem.setInactiveStyles(),
            super.setActiveItem(t),
            this.activeItem && this.activeItem.setActiveStyles();
        }
      }
      class Gy extends Uy {
        constructor() {
          super(...arguments), (this._origin = 'program');
        }
        setFocusOrigin(t) {
          return (this._origin = t), this;
        }
        setActiveItem(t) {
          super.setActiveItem(t), this.activeItem && this.activeItem.focus(this._origin);
        }
      }
      let Qy = (() => {
        class t {
          constructor(t) {
            this._platform = t;
          }
          isDisabled(t) {
            return t.hasAttribute('disabled');
          }
          isVisible(t) {
            return (
              (function (t) {
                return !!(
                  t.offsetWidth ||
                  t.offsetHeight ||
                  ('function' == typeof t.getClientRects && t.getClientRects().length)
                );
              })(t) && 'visible' === getComputedStyle(t).visibility
            );
          }
          isTabbable(t) {
            if (!this._platform.isBrowser) return !1;
            const e = (function (t) {
              try {
                return t.frameElement;
              } catch (DX) {
                return null;
              }
            })(((n = t).ownerDocument && n.ownerDocument.defaultView) || window);
            var n;
            if (e) {
              if (-1 === Xy(e)) return !1;
              if (!this.isVisible(e)) return !1;
            }
            let i = t.nodeName.toLowerCase(),
              s = Xy(t);
            return t.hasAttribute('contenteditable')
              ? -1 !== s
              : 'iframe' !== i &&
                  'object' !== i &&
                  !(
                    this._platform.WEBKIT &&
                    this._platform.IOS &&
                    !(function (t) {
                      let e = t.nodeName.toLowerCase(),
                        n = 'input' === e && t.type;
                      return 'text' === n || 'password' === n || 'select' === e || 'textarea' === e;
                    })(t)
                  ) &&
                  ('audio' === i
                    ? !!t.hasAttribute('controls') && -1 !== s
                    : 'video' === i
                    ? -1 !== s && (null !== s || this._platform.FIREFOX || t.hasAttribute('controls'))
                    : t.tabIndex >= 0);
          }
          isFocusable(t, e) {
            return (
              (function (t) {
                return (
                  !(function (t) {
                    return (
                      (function (t) {
                        return 'input' == t.nodeName.toLowerCase();
                      })(t) && 'hidden' == t.type
                    );
                  })(t) &&
                  ((function (t) {
                    let e = t.nodeName.toLowerCase();
                    return 'input' === e || 'select' === e || 'button' === e || 'textarea' === e;
                  })(t) ||
                    (function (t) {
                      return (
                        (function (t) {
                          return 'a' == t.nodeName.toLowerCase();
                        })(t) && t.hasAttribute('href')
                      );
                    })(t) ||
                    t.hasAttribute('contenteditable') ||
                    Ky(t))
                );
              })(t) &&
              !this.isDisabled(t) &&
              ((null == e ? void 0 : e.ignoreVisibility) || this.isVisible(t))
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(wy));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(wy));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function Ky(t) {
        if (!t.hasAttribute('tabindex') || void 0 === t.tabIndex) return !1;
        let e = t.getAttribute('tabindex');
        return '-32768' != e && !(!e || isNaN(parseInt(e, 10)));
      }
      function Xy(t) {
        if (!Ky(t)) return null;
        const e = parseInt(t.getAttribute('tabindex') || '', 10);
        return isNaN(e) ? -1 : e;
      }
      class Zy {
        constructor(t, e, n, i, s = !1) {
          (this._element = t),
            (this._checker = e),
            (this._ngZone = n),
            (this._document = i),
            (this._hasAttached = !1),
            (this.startAnchorListener = () => this.focusLastTabbableElement()),
            (this.endAnchorListener = () => this.focusFirstTabbableElement()),
            (this._enabled = !0),
            s || this.attachAnchors();
        }
        get enabled() {
          return this._enabled;
        }
        set enabled(t) {
          (this._enabled = t),
            this._startAnchor &&
              this._endAnchor &&
              (this._toggleAnchorTabIndex(t, this._startAnchor), this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        destroy() {
          const t = this._startAnchor,
            e = this._endAnchor;
          t && (t.removeEventListener('focus', this.startAnchorListener), t.parentNode && t.parentNode.removeChild(t)),
            e && (e.removeEventListener('focus', this.endAnchorListener), e.parentNode && e.parentNode.removeChild(e)),
            (this._startAnchor = this._endAnchor = null),
            (this._hasAttached = !1);
        }
        attachAnchors() {
          return (
            !!this._hasAttached ||
            (this._ngZone.runOutsideAngular(() => {
              this._startAnchor ||
                ((this._startAnchor = this._createAnchor()),
                this._startAnchor.addEventListener('focus', this.startAnchorListener)),
                this._endAnchor ||
                  ((this._endAnchor = this._createAnchor()),
                  this._endAnchor.addEventListener('focus', this.endAnchorListener));
            }),
            this._element.parentNode &&
              (this._element.parentNode.insertBefore(this._startAnchor, this._element),
              this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling),
              (this._hasAttached = !0)),
            this._hasAttached)
          );
        }
        focusInitialElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusInitialElement()));
          });
        }
        focusFirstTabbableElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusFirstTabbableElement()));
          });
        }
        focusLastTabbableElementWhenReady() {
          return new Promise((t) => {
            this._executeOnStable(() => t(this.focusLastTabbableElement()));
          });
        }
        _getRegionBoundary(t) {
          let e = this._element.querySelectorAll(`[cdk-focus-region-${t}], [cdkFocusRegion${t}], [cdk-focus-${t}]`);
          for (let n = 0; n < e.length; n++)
            e[n].hasAttribute(`cdk-focus-${t}`)
              ? console.warn(
                  `Found use of deprecated attribute 'cdk-focus-${t}', use 'cdkFocusRegion${t}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  e[n]
                )
              : e[n].hasAttribute(`cdk-focus-region-${t}`) &&
                console.warn(
                  `Found use of deprecated attribute 'cdk-focus-region-${t}', use 'cdkFocusRegion${t}' instead. The deprecated attribute will be removed in 8.0.0.`,
                  e[n]
                );
          return 'start' == t
            ? e.length
              ? e[0]
              : this._getFirstTabbableElement(this._element)
            : e.length
            ? e[e.length - 1]
            : this._getLastTabbableElement(this._element);
        }
        focusInitialElement() {
          const t = this._element.querySelector('[cdk-focus-initial], [cdkFocusInitial]');
          if (t) {
            if (
              (t.hasAttribute('cdk-focus-initial') &&
                console.warn(
                  "Found use of deprecated attribute 'cdk-focus-initial', use 'cdkFocusInitial' instead. The deprecated attribute will be removed in 8.0.0",
                  t
                ),
              !this._checker.isFocusable(t))
            ) {
              const e = this._getFirstTabbableElement(t);
              return null == e || e.focus(), !!e;
            }
            return t.focus(), !0;
          }
          return this.focusFirstTabbableElement();
        }
        focusFirstTabbableElement() {
          const t = this._getRegionBoundary('start');
          return t && t.focus(), !!t;
        }
        focusLastTabbableElement() {
          const t = this._getRegionBoundary('end');
          return t && t.focus(), !!t;
        }
        hasAttached() {
          return this._hasAttached;
        }
        _getFirstTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
          let e = t.children || t.childNodes;
          for (let n = 0; n < e.length; n++) {
            let t = e[n].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(e[n]) : null;
            if (t) return t;
          }
          return null;
        }
        _getLastTabbableElement(t) {
          if (this._checker.isFocusable(t) && this._checker.isTabbable(t)) return t;
          let e = t.children || t.childNodes;
          for (let n = e.length - 1; n >= 0; n--) {
            let t = e[n].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(e[n]) : null;
            if (t) return t;
          }
          return null;
        }
        _createAnchor() {
          const t = this._document.createElement('div');
          return (
            this._toggleAnchorTabIndex(this._enabled, t),
            t.classList.add('cdk-visually-hidden'),
            t.classList.add('cdk-focus-trap-anchor'),
            t.setAttribute('aria-hidden', 'true'),
            t
          );
        }
        _toggleAnchorTabIndex(t, e) {
          t ? e.setAttribute('tabindex', '0') : e.removeAttribute('tabindex');
        }
        toggleAnchors(t) {
          this._startAnchor &&
            this._endAnchor &&
            (this._toggleAnchorTabIndex(t, this._startAnchor), this._toggleAnchorTabIndex(t, this._endAnchor));
        }
        _executeOnStable(t) {
          this._ngZone.isStable ? t() : this._ngZone.onStable.pipe(pf(1)).subscribe(t);
        }
      }
      let Jy = (() => {
        class t {
          constructor(t, e, n) {
            (this._checker = t), (this._ngZone = e), (this._document = n);
          }
          create(t, e = !1) {
            return new Zy(t, this._checker, this._ngZone, this._document, e);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Qy), _i(Xc), _i(Th));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(Qy), _i(Xc), _i(Th));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      'undefined' != typeof Element && Element;
      const tv = new Jn('liveAnnouncerElement', {
          providedIn: 'root',
          factory: function () {
            return null;
          },
        }),
        ev = new Jn('LIVE_ANNOUNCER_DEFAULT_OPTIONS');
      let nv = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._ngZone = e),
              (this._defaultOptions = i),
              (this._document = n),
              (this._liveElement = t || this._createLiveElement());
          }
          announce(t, ...e) {
            const n = this._defaultOptions;
            let i, s;
            return (
              1 === e.length && 'number' == typeof e[0] ? (s = e[0]) : ([i, s] = e),
              this.clear(),
              clearTimeout(this._previousTimeout),
              i || (i = n && n.politeness ? n.politeness : 'polite'),
              null == s && n && (s = n.duration),
              this._liveElement.setAttribute('aria-live', i),
              this._ngZone.runOutsideAngular(
                () =>
                  new Promise((e) => {
                    clearTimeout(this._previousTimeout),
                      (this._previousTimeout = setTimeout(() => {
                        (this._liveElement.textContent = t),
                          e(),
                          'number' == typeof s && (this._previousTimeout = setTimeout(() => this.clear(), s));
                      }, 100));
                  })
              )
            );
          }
          clear() {
            this._liveElement && (this._liveElement.textContent = '');
          }
          ngOnDestroy() {
            clearTimeout(this._previousTimeout),
              this._liveElement &&
                this._liveElement.parentNode &&
                (this._liveElement.parentNode.removeChild(this._liveElement), (this._liveElement = null));
          }
          _createLiveElement() {
            const t = 'cdk-live-announcer-element',
              e = this._document.getElementsByClassName(t),
              n = this._document.createElement('div');
            for (let i = 0; i < e.length; i++) e[i].parentNode.removeChild(e[i]);
            return (
              n.classList.add(t),
              n.classList.add('cdk-visually-hidden'),
              n.setAttribute('aria-atomic', 'true'),
              n.setAttribute('aria-live', 'polite'),
              this._document.body.appendChild(n),
              n
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(tv, 8), _i(Xc), _i(Th), _i(ev, 8));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(tv, 8), _i(Xc), _i(Th), _i(ev, 8));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function iv(t) {
        return 0 === t.buttons;
      }
      function sv(t) {
        const e = (t.touches && t.touches[0]) || (t.changedTouches && t.changedTouches[0]);
        return !(
          !e ||
          -1 !== e.identifier ||
          (null != e.radiusX && 1 !== e.radiusX) ||
          (null != e.radiusY && 1 !== e.radiusY)
        );
      }
      const rv = new Jn('cdk-focus-monitor-default-options'),
        ov = Ay({ passive: !0, capture: !0 });
      let av = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._ngZone = t),
              (this._platform = e),
              (this._origin = null),
              (this._windowFocused = !1),
              (this._elementInfo = new Map()),
              (this._monitoredElementCount = 0),
              (this._rootNodeFocusListenerCount = new Map()),
              (this._documentKeydownListener = () => {
                (this._lastTouchTarget = null), this._setOriginForCurrentEventQueue('keyboard');
              }),
              (this._documentMousedownListener = (t) => {
                if (!this._lastTouchTarget) {
                  const e = iv(t) ? 'keyboard' : 'mouse';
                  this._setOriginForCurrentEventQueue(e);
                }
              }),
              (this._documentTouchstartListener = (t) => {
                sv(t)
                  ? this._lastTouchTarget || this._setOriginForCurrentEventQueue('keyboard')
                  : (null != this._touchTimeoutId && clearTimeout(this._touchTimeoutId),
                    (this._lastTouchTarget = lv(t)),
                    (this._touchTimeoutId = setTimeout(() => (this._lastTouchTarget = null), 650)));
              }),
              (this._windowFocusListener = () => {
                (this._windowFocused = !0), (this._windowFocusTimeoutId = setTimeout(() => (this._windowFocused = !1)));
              }),
              (this._rootNodeFocusAndBlurListener = (t) => {
                const e = lv(t),
                  n = 'focus' === t.type ? this._onFocus : this._onBlur;
                for (let i = e; i; i = i.parentElement) n.call(this, t, i);
              }),
              (this._document = n),
              (this._detectionMode = (null == i ? void 0 : i.detectionMode) || 0);
          }
          monitor(t, e = !1) {
            const n = by(t);
            if (!this._platform.isBrowser || 1 !== n.nodeType) return fm(null);
            const i = My(n) || this._getDocument(),
              s = this._elementInfo.get(n);
            if (s) return e && (s.checkChildren = !0), s.subject;
            const r = { checkChildren: e, subject: new C(), rootNode: i };
            return this._elementInfo.set(n, r), this._registerGlobalListeners(r), r.subject;
          }
          stopMonitoring(t) {
            const e = by(t),
              n = this._elementInfo.get(e);
            n &&
              (n.subject.complete(), this._setClasses(e), this._elementInfo.delete(e), this._removeGlobalListeners(n));
          }
          focusVia(t, e, n) {
            const i = by(t);
            i === this._getDocument().activeElement
              ? this._getClosestElementsInfo(i).forEach(([t, n]) => this._originChanged(t, e, n))
              : (this._setOriginForCurrentEventQueue(e), 'function' == typeof i.focus && i.focus(n));
          }
          ngOnDestroy() {
            this._elementInfo.forEach((t, e) => this.stopMonitoring(e));
          }
          _getDocument() {
            return this._document || document;
          }
          _getWindow() {
            return this._getDocument().defaultView || window;
          }
          _toggleClass(t, e, n) {
            n ? t.classList.add(e) : t.classList.remove(e);
          }
          _getFocusOrigin(t) {
            return this._origin
              ? this._origin
              : this._windowFocused && this._lastFocusOrigin
              ? this._lastFocusOrigin
              : this._wasCausedByTouch(t)
              ? 'touch'
              : 'program';
          }
          _setClasses(t, e) {
            this._toggleClass(t, 'cdk-focused', !!e),
              this._toggleClass(t, 'cdk-touch-focused', 'touch' === e),
              this._toggleClass(t, 'cdk-keyboard-focused', 'keyboard' === e),
              this._toggleClass(t, 'cdk-mouse-focused', 'mouse' === e),
              this._toggleClass(t, 'cdk-program-focused', 'program' === e);
          }
          _setOriginForCurrentEventQueue(t) {
            this._ngZone.runOutsideAngular(() => {
              (this._origin = t),
                0 === this._detectionMode && (this._originTimeoutId = setTimeout(() => (this._origin = null), 1));
            });
          }
          _wasCausedByTouch(t) {
            const e = lv(t);
            return (
              this._lastTouchTarget instanceof Node &&
              e instanceof Node &&
              (e === this._lastTouchTarget || e.contains(this._lastTouchTarget))
            );
          }
          _onFocus(t, e) {
            const n = this._elementInfo.get(e);
            n && (n.checkChildren || e === lv(t)) && this._originChanged(e, this._getFocusOrigin(t), n);
          }
          _onBlur(t, e) {
            const n = this._elementInfo.get(e);
            !n ||
              (n.checkChildren && t.relatedTarget instanceof Node && e.contains(t.relatedTarget)) ||
              (this._setClasses(e), this._emitOrigin(n.subject, null));
          }
          _emitOrigin(t, e) {
            this._ngZone.run(() => t.next(e));
          }
          _registerGlobalListeners(t) {
            if (!this._platform.isBrowser) return;
            const e = t.rootNode,
              n = this._rootNodeFocusListenerCount.get(e) || 0;
            n ||
              this._ngZone.runOutsideAngular(() => {
                e.addEventListener('focus', this._rootNodeFocusAndBlurListener, ov),
                  e.addEventListener('blur', this._rootNodeFocusAndBlurListener, ov);
              }),
              this._rootNodeFocusListenerCount.set(e, n + 1),
              1 == ++this._monitoredElementCount &&
                this._ngZone.runOutsideAngular(() => {
                  const t = this._getDocument(),
                    e = this._getWindow();
                  t.addEventListener('keydown', this._documentKeydownListener, ov),
                    t.addEventListener('mousedown', this._documentMousedownListener, ov),
                    t.addEventListener('touchstart', this._documentTouchstartListener, ov),
                    e.addEventListener('focus', this._windowFocusListener);
                });
          }
          _removeGlobalListeners(t) {
            const e = t.rootNode;
            if (this._rootNodeFocusListenerCount.has(e)) {
              const t = this._rootNodeFocusListenerCount.get(e);
              t > 1
                ? this._rootNodeFocusListenerCount.set(e, t - 1)
                : (e.removeEventListener('focus', this._rootNodeFocusAndBlurListener, ov),
                  e.removeEventListener('blur', this._rootNodeFocusAndBlurListener, ov),
                  this._rootNodeFocusListenerCount.delete(e));
            }
            if (!--this._monitoredElementCount) {
              const t = this._getDocument(),
                e = this._getWindow();
              t.removeEventListener('keydown', this._documentKeydownListener, ov),
                t.removeEventListener('mousedown', this._documentMousedownListener, ov),
                t.removeEventListener('touchstart', this._documentTouchstartListener, ov),
                e.removeEventListener('focus', this._windowFocusListener),
                clearTimeout(this._windowFocusTimeoutId),
                clearTimeout(this._touchTimeoutId),
                clearTimeout(this._originTimeoutId);
            }
          }
          _originChanged(t, e, n) {
            this._setClasses(t, e), this._emitOrigin(n.subject, e), (this._lastFocusOrigin = e);
          }
          _getClosestElementsInfo(t) {
            const e = [];
            return (
              this._elementInfo.forEach((n, i) => {
                (i === t || (n.checkChildren && i.contains(t))) && e.push([i, n]);
              }),
              e
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Xc), _i(wy), _i(Th, 8), _i(rv, 8));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(Xc), _i(wy), _i(Th, 8), _i(rv, 8));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function lv(t) {
        return t.composedPath ? t.composedPath()[0] : t.target;
      }
      const cv = 'cdk-high-contrast-black-on-white',
        hv = 'cdk-high-contrast-white-on-black',
        uv = 'cdk-high-contrast-active';
      let dv = (() => {
          class t {
            constructor(t, e) {
              (this._platform = t), (this._document = e);
            }
            getHighContrastMode() {
              if (!this._platform.isBrowser) return 0;
              const t = this._document.createElement('div');
              (t.style.backgroundColor = 'rgb(1,2,3)'),
                (t.style.position = 'absolute'),
                this._document.body.appendChild(t);
              const e = this._document.defaultView || window,
                n = e && e.getComputedStyle ? e.getComputedStyle(t) : null,
                i = ((n && n.backgroundColor) || '').replace(/ /g, '');
              switch ((this._document.body.removeChild(t), i)) {
                case 'rgb(0,0,0)':
                  return 2;
                case 'rgb(255,255,255)':
                  return 1;
              }
              return 0;
            }
            _applyBodyHighContrastModeCssClasses() {
              if (this._platform.isBrowser && this._document.body) {
                const t = this._document.body.classList;
                t.remove(uv), t.remove(cv), t.remove(hv);
                const e = this.getHighContrastMode();
                1 === e ? (t.add(uv), t.add(cv)) : 2 === e && (t.add(uv), t.add(hv));
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(wy), _i(Th));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(wy), _i(Th));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        pv = (() => {
          class t {
            constructor(t) {
              t._applyBodyHighContrastModeCssClasses();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(dv));
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[xy, Fy]] })),
            t
          );
        })();
      const mv = new Jn('cdk-dir-doc', {
        providedIn: 'root',
        factory: function () {
          return bi(Th);
        },
      });
      let fv = (() => {
          class t {
            constructor(t) {
              if (((this.value = 'ltr'), (this.change = new cc()), t)) {
                const e = t.documentElement ? t.documentElement.dir : null,
                  n = (t.body ? t.body.dir : null) || e;
                this.value = 'ltr' === n || 'rtl' === n ? n : 'ltr';
              }
            }
            ngOnDestroy() {
              this.change.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(mv, 8));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(mv, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        gv = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })();
      const _v = new sl('11.2.13');
      function bv(...t) {
        const e = t[t.length - 1];
        return S(e) ? (t.pop(), (n) => of(t, n, e)) : (e) => of(t, e);
      }
      function yv(t, e) {
        if ((1 & t && Vo(0, 'mat-pseudo-checkbox', 4), 2 & t)) {
          const t = Xo();
          Io('state', t.selected ? 'checked' : 'unchecked')('disabled', t.disabled);
        }
      }
      function vv(t, e) {
        if ((1 & t && (Fo(0, 'span', 5), Ca(1), No()), 2 & t)) {
          const t = Xo();
          tr(1), Sa('(', t.group.label, ')');
        }
      }
      const wv = ['*'];
      let xv = (() => {
          class t {}
          return (
            (t.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)'),
            (t.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)'),
            (t.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)'),
            (t.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)'),
            t
          );
        })(),
        Cv = (() => {
          class t {}
          return (t.COMPLEX = '375ms'), (t.ENTERING = '225ms'), (t.EXITING = '195ms'), t;
        })();
      const kv = new sl('11.2.13'),
        Sv = new Jn('mat-sanity-checks', {
          providedIn: 'root',
          factory: function () {
            return !0;
          },
        });
      let Ev = (() => {
        class t {
          constructor(t, e, n) {
            (this._hasDoneGlobalChecks = !1),
              (this._document = n),
              t._applyBodyHighContrastModeCssClasses(),
              (this._sanityChecks = e),
              this._hasDoneGlobalChecks ||
                (this._checkDoctypeIsDefined(),
                this._checkThemeIsPresent(),
                this._checkCdkVersionMatch(),
                (this._hasDoneGlobalChecks = !0));
          }
          _getWindow() {
            const t = this._document.defaultView || window;
            return 'object' == typeof t && t ? t : null;
          }
          _checksAreEnabled() {
            return uh() && !this._isTestEnv();
          }
          _isTestEnv() {
            const t = this._getWindow();
            return t && (t.__karma__ || t.jasmine);
          }
          _checkDoctypeIsDefined() {
            this._checksAreEnabled() &&
              (!0 === this._sanityChecks || this._sanityChecks.doctype) &&
              !this._document.doctype &&
              console.warn(
                'Current document does not have a doctype. This may cause some Angular Material components not to behave as expected.'
              );
          }
          _checkThemeIsPresent() {
            if (
              !this._checksAreEnabled() ||
              !1 === this._sanityChecks ||
              !this._sanityChecks.theme ||
              !this._document.body ||
              'function' != typeof getComputedStyle
            )
              return;
            const t = this._document.createElement('div');
            t.classList.add('mat-theme-loaded-marker'), this._document.body.appendChild(t);
            const e = getComputedStyle(t);
            e &&
              'none' !== e.display &&
              console.warn(
                'Could not find Angular Material core theme. Most Material components may not work as expected. For more info refer to the theming guide: https://material.angular.io/guide/theming'
              ),
              this._document.body.removeChild(t);
          }
          _checkCdkVersionMatch() {
            this._checksAreEnabled() &&
              (!0 === this._sanityChecks || this._sanityChecks.version) &&
              kv.full !== _v.full &&
              console.warn(
                'The Angular Material version (' +
                  kv.full +
                  ') does not match the Angular CDK version (' +
                  _v.full +
                  ').\nPlease ensure the versions of these two packages exactly match.'
              );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(dv), _i(Sv, 8), _i(Th));
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[gv], gv] })),
          t
        );
      })();
      function Ov(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._disabled = !1);
          }
          get disabled() {
            return this._disabled;
          }
          set disabled(t) {
            this._disabled = py(t);
          }
        };
      }
      function Pv(t, e) {
        return class extends t {
          constructor(...t) {
            super(...t), (this.defaultColor = e), (this.color = e);
          }
          get color() {
            return this._color;
          }
          set color(t) {
            const e = t || this.defaultColor;
            e !== this._color &&
              (this._color && this._elementRef.nativeElement.classList.remove(`mat-${this._color}`),
              e && this._elementRef.nativeElement.classList.add(`mat-${e}`),
              (this._color = e));
          }
        };
      }
      function Av(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._disableRipple = !1);
          }
          get disableRipple() {
            return this._disableRipple;
          }
          set disableRipple(t) {
            this._disableRipple = py(t);
          }
        };
      }
      function Tv(t, e = 0) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._tabIndex = e), (this.defaultTabIndex = e);
          }
          get tabIndex() {
            return this.disabled ? -1 : this._tabIndex;
          }
          set tabIndex(t) {
            this._tabIndex = null != t ? my(t) : this.defaultTabIndex;
          }
        };
      }
      function Dv(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this.errorState = !1), (this.stateChanges = new C());
          }
          updateErrorState() {
            const t = this.errorState,
              e = (this.errorStateMatcher || this._defaultErrorStateMatcher).isErrorState(
                this.ngControl ? this.ngControl.control : null,
                this._parentFormGroup || this._parentForm
              );
            e !== t && ((this.errorState = e), this.stateChanges.next());
          }
        };
      }
      function Mv(t) {
        return class extends t {
          constructor(...t) {
            super(...t),
              (this._isInitialized = !1),
              (this._pendingSubscribers = []),
              (this.initialized = new b((t) => {
                this._isInitialized ? this._notifySubscriber(t) : this._pendingSubscribers.push(t);
              }));
          }
          _markInitialized() {
            (this._isInitialized = !0),
              this._pendingSubscribers.forEach(this._notifySubscriber),
              (this._pendingSubscribers = null);
          }
          _notifySubscriber(t) {
            t.next(), t.complete();
          }
        };
      }
      const Rv = new Jn('MAT_DATE_LOCALE', {
        providedIn: 'root',
        factory: function () {
          return bi(Bc);
        },
      });
      class Iv {
        constructor() {
          (this._localeChanges = new C()), (this.localeChanges = this._localeChanges);
        }
        getValidDateOrNull(t) {
          return this.isDateInstance(t) && this.isValid(t) ? t : null;
        }
        deserialize(t) {
          return null == t || (this.isDateInstance(t) && this.isValid(t)) ? t : this.invalid();
        }
        setLocale(t) {
          (this.locale = t), this._localeChanges.next();
        }
        compareDate(t, e) {
          return (
            this.getYear(t) - this.getYear(e) ||
            this.getMonth(t) - this.getMonth(e) ||
            this.getDate(t) - this.getDate(e)
          );
        }
        sameDate(t, e) {
          if (t && e) {
            let n = this.isValid(t),
              i = this.isValid(e);
            return n && i ? !this.compareDate(t, e) : n == i;
          }
          return t == e;
        }
        clampDate(t, e, n) {
          return e && this.compareDate(t, e) < 0 ? e : n && this.compareDate(t, n) > 0 ? n : t;
        }
      }
      const Lv = new Jn('mat-date-formats');
      let Fv;
      try {
        Fv = 'undefined' != typeof Intl;
      } catch (DX) {
        Fv = !1;
      }
      const Nv = {
          long: [
            'January',
            'February',
            'March',
            'April',
            'May',
            'June',
            'July',
            'August',
            'September',
            'October',
            'November',
            'December',
          ],
          short: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
          narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
        },
        Vv = jv(31, (t) => String(t + 1)),
        Bv = {
          long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
          short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
          narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
        },
        zv = /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
      function jv(t, e) {
        const n = Array(t);
        for (let i = 0; i < t; i++) n[i] = e(i);
        return n;
      }
      let Hv = (() => {
          class t extends Iv {
            constructor(t, e) {
              super(),
                (this.useUtcForDisplay = !0),
                super.setLocale(t),
                (this.useUtcForDisplay = !e.TRIDENT),
                (this._clampDate = e.TRIDENT || e.EDGE);
            }
            getYear(t) {
              return t.getFullYear();
            }
            getMonth(t) {
              return t.getMonth();
            }
            getDate(t) {
              return t.getDate();
            }
            getDayOfWeek(t) {
              return t.getDay();
            }
            getMonthNames(t) {
              if (Fv) {
                const e = new Intl.DateTimeFormat(this.locale, { month: t, timeZone: 'utc' });
                return jv(12, (t) => this._stripDirectionalityCharacters(this._format(e, new Date(2017, t, 1))));
              }
              return Nv[t];
            }
            getDateNames() {
              if (Fv) {
                const t = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });
                return jv(31, (e) => this._stripDirectionalityCharacters(this._format(t, new Date(2017, 0, e + 1))));
              }
              return Vv;
            }
            getDayOfWeekNames(t) {
              if (Fv) {
                const e = new Intl.DateTimeFormat(this.locale, { weekday: t, timeZone: 'utc' });
                return jv(7, (t) => this._stripDirectionalityCharacters(this._format(e, new Date(2017, 0, t + 1))));
              }
              return Bv[t];
            }
            getYearName(t) {
              if (Fv) {
                const e = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });
                return this._stripDirectionalityCharacters(this._format(e, t));
              }
              return String(this.getYear(t));
            }
            getFirstDayOfWeek() {
              return 0;
            }
            getNumDaysInMonth(t) {
              return this.getDate(this._createDateWithOverflow(this.getYear(t), this.getMonth(t) + 1, 0));
            }
            clone(t) {
              return new Date(t.getTime());
            }
            createDate(t, e, n) {
              let i = this._createDateWithOverflow(t, e, n);
              return i.getMonth(), i;
            }
            today() {
              return new Date();
            }
            parse(t) {
              return 'number' == typeof t ? new Date(t) : t ? new Date(Date.parse(t)) : null;
            }
            format(t, e) {
              if (!this.isValid(t)) throw Error('NativeDateAdapter: Cannot format invalid date.');
              if (Fv) {
                this._clampDate &&
                  (t.getFullYear() < 1 || t.getFullYear() > 9999) &&
                  (t = this.clone(t)).setFullYear(Math.max(1, Math.min(9999, t.getFullYear()))),
                  (e = Object.assign(Object.assign({}, e), { timeZone: 'utc' }));
                const n = new Intl.DateTimeFormat(this.locale, e);
                return this._stripDirectionalityCharacters(this._format(n, t));
              }
              return this._stripDirectionalityCharacters(t.toDateString());
            }
            addCalendarYears(t, e) {
              return this.addCalendarMonths(t, 12 * e);
            }
            addCalendarMonths(t, e) {
              let n = this._createDateWithOverflow(this.getYear(t), this.getMonth(t) + e, this.getDate(t));
              return (
                this.getMonth(n) != (((this.getMonth(t) + e) % 12) + 12) % 12 &&
                  (n = this._createDateWithOverflow(this.getYear(n), this.getMonth(n), 0)),
                n
              );
            }
            addCalendarDays(t, e) {
              return this._createDateWithOverflow(this.getYear(t), this.getMonth(t), this.getDate(t) + e);
            }
            toIso8601(t) {
              return [t.getUTCFullYear(), this._2digit(t.getUTCMonth() + 1), this._2digit(t.getUTCDate())].join('-');
            }
            deserialize(t) {
              if ('string' == typeof t) {
                if (!t) return null;
                if (zv.test(t)) {
                  let e = new Date(t);
                  if (this.isValid(e)) return e;
                }
              }
              return super.deserialize(t);
            }
            isDateInstance(t) {
              return t instanceof Date;
            }
            isValid(t) {
              return !isNaN(t.getTime());
            }
            invalid() {
              return new Date(NaN);
            }
            _createDateWithOverflow(t, e, n) {
              const i = new Date();
              return i.setFullYear(t, e, n), i.setHours(0, 0, 0, 0), i;
            }
            _2digit(t) {
              return ('00' + t).slice(-2);
            }
            _stripDirectionalityCharacters(t) {
              return t.replace(/[\u200e\u200f]/g, '');
            }
            _format(t, e) {
              const n = new Date();
              return (
                n.setUTCFullYear(e.getFullYear(), e.getMonth(), e.getDate()),
                n.setUTCHours(e.getHours(), e.getMinutes(), e.getSeconds(), e.getMilliseconds()),
                t.format(n)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Rv, 8), _i(wy));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        $v = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [{ provide: Iv, useClass: Hv }], imports: [[xy]] })),
            t
          );
        })();
      const qv = {
        parse: { dateInput: null },
        display: {
          dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },
          monthYearLabel: { year: 'numeric', month: 'short' },
          dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },
          monthYearA11yLabel: { year: 'numeric', month: 'long' },
        },
      };
      let Wv = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [{ provide: Lv, useValue: qv }], imports: [[$v]] })),
            t
          );
        })(),
        Uv = (() => {
          class t {
            isErrorState(t, e) {
              return !!(t && t.invalid && (t.touched || (e && e.submitted)));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Yv = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'mat-line', ''],
                ['', 'matLine', ''],
              ],
              hostAttrs: [1, 'mat-line'],
            })),
            t
          );
        })();
      function Gv(t, e, n) {
        const i = t.nativeElement.classList;
        n ? i.add(e) : i.remove(e);
      }
      let Qv = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[Ev], Ev] })),
          t
        );
      })();
      class Kv {
        constructor(t, e, n) {
          (this._renderer = t), (this.element = e), (this.config = n), (this.state = 3);
        }
        fadeOut() {
          this._renderer.fadeOutRipple(this);
        }
      }
      const Xv = { enterDuration: 450, exitDuration: 400 },
        Zv = Ay({ passive: !0 }),
        Jv = ['mousedown', 'touchstart'],
        tw = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
      class ew {
        constructor(t, e, n, i) {
          (this._target = t),
            (this._ngZone = e),
            (this._isPointerDown = !1),
            (this._activeRipples = new Set()),
            (this._pointerUpEventsRegistered = !1),
            i.isBrowser && (this._containerElement = by(n));
        }
        fadeInRipple(t, e, n = {}) {
          const i = (this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect()),
            s = Object.assign(Object.assign({}, Xv), n.animation);
          n.centered && ((t = i.left + i.width / 2), (e = i.top + i.height / 2));
          const r =
              n.radius ||
              (function (t, e, n) {
                const i = Math.max(Math.abs(t - n.left), Math.abs(t - n.right)),
                  s = Math.max(Math.abs(e - n.top), Math.abs(e - n.bottom));
                return Math.sqrt(i * i + s * s);
              })(t, e, i),
            o = t - i.left,
            a = e - i.top,
            l = s.enterDuration,
            c = document.createElement('div');
          c.classList.add('mat-ripple-element'),
            (c.style.left = o - r + 'px'),
            (c.style.top = a - r + 'px'),
            (c.style.height = 2 * r + 'px'),
            (c.style.width = 2 * r + 'px'),
            null != n.color && (c.style.backgroundColor = n.color),
            (c.style.transitionDuration = `${l}ms`),
            this._containerElement.appendChild(c),
            window.getComputedStyle(c).getPropertyValue('opacity'),
            (c.style.transform = 'scale(1)');
          const h = new Kv(this, c, n);
          return (
            (h.state = 0),
            this._activeRipples.add(h),
            n.persistent || (this._mostRecentTransientRipple = h),
            this._runTimeoutOutsideZone(() => {
              const t = h === this._mostRecentTransientRipple;
              (h.state = 1), n.persistent || (t && this._isPointerDown) || h.fadeOut();
            }, l),
            h
          );
        }
        fadeOutRipple(t) {
          const e = this._activeRipples.delete(t);
          if (
            (t === this._mostRecentTransientRipple && (this._mostRecentTransientRipple = null),
            this._activeRipples.size || (this._containerRect = null),
            !e)
          )
            return;
          const n = t.element,
            i = Object.assign(Object.assign({}, Xv), t.config.animation);
          (n.style.transitionDuration = `${i.exitDuration}ms`),
            (n.style.opacity = '0'),
            (t.state = 2),
            this._runTimeoutOutsideZone(() => {
              (t.state = 3), n.parentNode.removeChild(n);
            }, i.exitDuration);
        }
        fadeOutAll() {
          this._activeRipples.forEach((t) => t.fadeOut());
        }
        fadeOutAllNonPersistent() {
          this._activeRipples.forEach((t) => {
            t.config.persistent || t.fadeOut();
          });
        }
        setupTriggerEvents(t) {
          const e = by(t);
          e &&
            e !== this._triggerElement &&
            (this._removeTriggerEvents(), (this._triggerElement = e), this._registerEvents(Jv));
        }
        handleEvent(t) {
          'mousedown' === t.type
            ? this._onMousedown(t)
            : 'touchstart' === t.type
            ? this._onTouchStart(t)
            : this._onPointerUp(),
            this._pointerUpEventsRegistered || (this._registerEvents(tw), (this._pointerUpEventsRegistered = !0));
        }
        _onMousedown(t) {
          const e = iv(t),
            n = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + 800;
          this._target.rippleDisabled ||
            e ||
            n ||
            ((this._isPointerDown = !0), this.fadeInRipple(t.clientX, t.clientY, this._target.rippleConfig));
        }
        _onTouchStart(t) {
          if (!this._target.rippleDisabled && !sv(t)) {
            (this._lastTouchStartEvent = Date.now()), (this._isPointerDown = !0);
            const e = t.changedTouches;
            for (let t = 0; t < e.length; t++) this.fadeInRipple(e[t].clientX, e[t].clientY, this._target.rippleConfig);
          }
        }
        _onPointerUp() {
          this._isPointerDown &&
            ((this._isPointerDown = !1),
            this._activeRipples.forEach((t) => {
              !t.config.persistent &&
                (1 === t.state || (t.config.terminateOnPointerUp && 0 === t.state)) &&
                t.fadeOut();
            }));
        }
        _runTimeoutOutsideZone(t, e = 0) {
          this._ngZone.runOutsideAngular(() => setTimeout(t, e));
        }
        _registerEvents(t) {
          this._ngZone.runOutsideAngular(() => {
            t.forEach((t) => {
              this._triggerElement.addEventListener(t, this, Zv);
            });
          });
        }
        _removeTriggerEvents() {
          this._triggerElement &&
            (Jv.forEach((t) => {
              this._triggerElement.removeEventListener(t, this, Zv);
            }),
            this._pointerUpEventsRegistered &&
              tw.forEach((t) => {
                this._triggerElement.removeEventListener(t, this, Zv);
              }));
        }
      }
      const nw = new Jn('mat-ripple-global-options');
      let iw = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this._elementRef = t),
                (this._animationMode = s),
                (this.radius = 0),
                (this._disabled = !1),
                (this._isInitialized = !1),
                (this._globalOptions = i || {}),
                (this._rippleRenderer = new ew(this, e, t, n));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              t && this.fadeOutAllNonPersistent(), (this._disabled = t), this._setupTriggerEventsIfEnabled();
            }
            get trigger() {
              return this._trigger || this._elementRef.nativeElement;
            }
            set trigger(t) {
              (this._trigger = t), this._setupTriggerEventsIfEnabled();
            }
            ngOnInit() {
              (this._isInitialized = !0), this._setupTriggerEventsIfEnabled();
            }
            ngOnDestroy() {
              this._rippleRenderer._removeTriggerEvents();
            }
            fadeOutAll() {
              this._rippleRenderer.fadeOutAll();
            }
            fadeOutAllNonPersistent() {
              this._rippleRenderer.fadeOutAllNonPersistent();
            }
            get rippleConfig() {
              return {
                centered: this.centered,
                radius: this.radius,
                color: this.color,
                animation: Object.assign(
                  Object.assign(
                    Object.assign({}, this._globalOptions.animation),
                    'NoopAnimations' === this._animationMode ? { enterDuration: 0, exitDuration: 0 } : {}
                  ),
                  this.animation
                ),
                terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,
              };
            }
            get rippleDisabled() {
              return this.disabled || !!this._globalOptions.disabled;
            }
            _setupTriggerEventsIfEnabled() {
              !this.disabled && this._isInitialized && this._rippleRenderer.setupTriggerEvents(this.trigger);
            }
            launch(t, e = 0, n) {
              return 'number' == typeof t
                ? this._rippleRenderer.fadeInRipple(t, e, Object.assign(Object.assign({}, this.rippleConfig), n))
                : this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Xc), Ro(wy), Ro(nw, 8), Ro(ey, 8));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'mat-ripple', ''],
                ['', 'matRipple', ''],
              ],
              hostAttrs: [1, 'mat-ripple'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && ha('mat-ripple-unbounded', e.unbounded);
              },
              inputs: {
                radius: ['matRippleRadius', 'radius'],
                disabled: ['matRippleDisabled', 'disabled'],
                trigger: ['matRippleTrigger', 'trigger'],
                color: ['matRippleColor', 'color'],
                unbounded: ['matRippleUnbounded', 'unbounded'],
                centered: ['matRippleCentered', 'centered'],
                animation: ['matRippleAnimation', 'animation'],
              },
              exportAs: ['matRipple'],
            })),
            t
          );
        })(),
        sw = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Ev, xy], Ev] })),
            t
          );
        })(),
        rw = (() => {
          class t {
            constructor(t) {
              (this._animationMode = t), (this.state = 'unchecked'), (this.disabled = !1);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(ey, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-pseudo-checkbox']],
              hostAttrs: [1, 'mat-pseudo-checkbox'],
              hostVars: 8,
              hostBindings: function (t, e) {
                2 & t &&
                  ha('mat-pseudo-checkbox-indeterminate', 'indeterminate' === e.state)(
                    'mat-pseudo-checkbox-checked',
                    'checked' === e.state
                  )('mat-pseudo-checkbox-disabled', e.disabled)(
                    '_mat-animation-noopable',
                    'NoopAnimations' === e._animationMode
                  );
              },
              inputs: { state: 'state', disabled: 'disabled' },
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              styles: [
                '.mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:"";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        ow = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Ev]] })),
            t
          );
        })();
      const aw = new Jn('MAT_OPTION_PARENT_COMPONENT');
      class lw {}
      const cw = Ov(lw);
      let hw = 0,
        uw = (() => {
          class t extends cw {
            constructor(t) {
              var e;
              super(),
                (this._labelId = 'mat-optgroup-label-' + hw++),
                (this._inert = null !== (e = null == t ? void 0 : t.inertGroups) && void 0 !== e && e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(aw, 8));
            }),
            (t.ɵdir = Xt({ type: t, inputs: { label: 'label' }, features: [go] })),
            t
          );
        })();
      const dw = new Jn('MatOptgroup');
      let pw = 0;
      class mw {
        constructor(t, e = !1) {
          (this.source = t), (this.isUserInput = e);
        }
      }
      let fw = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._element = t),
                (this._changeDetectorRef = e),
                (this._parent = n),
                (this.group = i),
                (this._selected = !1),
                (this._active = !1),
                (this._disabled = !1),
                (this._mostRecentViewValue = ''),
                (this.id = 'mat-option-' + pw++),
                (this.onSelectionChange = new cc()),
                (this._stateChanges = new C());
            }
            get multiple() {
              return this._parent && this._parent.multiple;
            }
            get selected() {
              return this._selected;
            }
            get disabled() {
              return (this.group && this.group.disabled) || this._disabled;
            }
            set disabled(t) {
              this._disabled = py(t);
            }
            get disableRipple() {
              return this._parent && this._parent.disableRipple;
            }
            get active() {
              return this._active;
            }
            get viewValue() {
              return (this._getHostElement().textContent || '').trim();
            }
            select() {
              this._selected ||
                ((this._selected = !0), this._changeDetectorRef.markForCheck(), this._emitSelectionChangeEvent());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1), this._changeDetectorRef.markForCheck(), this._emitSelectionChangeEvent());
            }
            focus(t, e) {
              const n = this._getHostElement();
              'function' == typeof n.focus && n.focus(e);
            }
            setActiveStyles() {
              this._active || ((this._active = !0), this._changeDetectorRef.markForCheck());
            }
            setInactiveStyles() {
              this._active && ((this._active = !1), this._changeDetectorRef.markForCheck());
            }
            getLabel() {
              return this.viewValue;
            }
            _handleKeydown(t) {
              (t.keyCode !== sy && t.keyCode !== oy) || ly(t) || (this._selectViaInteraction(), t.preventDefault());
            }
            _selectViaInteraction() {
              this.disabled ||
                ((this._selected = !this.multiple || !this._selected),
                this._changeDetectorRef.markForCheck(),
                this._emitSelectionChangeEvent(!0));
            }
            _getAriaSelected() {
              return this.selected || (!this.multiple && null);
            }
            _getTabIndex() {
              return this.disabled ? '-1' : '0';
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
            ngAfterViewChecked() {
              if (this._selected) {
                const t = this.viewValue;
                t !== this._mostRecentViewValue && ((this._mostRecentViewValue = t), this._stateChanges.next());
              }
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
            _emitSelectionChangeEvent(t = !1) {
              this.onSelectionChange.emit(new mw(this, t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(kl), Ro(void 0), Ro(uw));
            }),
            (t.ɵdir = Xt({
              type: t,
              inputs: { id: 'id', disabled: 'disabled', value: 'value' },
              outputs: { onSelectionChange: 'onSelectionChange' },
            })),
            t
          );
        })(),
        gw = (() => {
          class t extends fw {
            constructor(t, e, n, i) {
              super(t, e, n, i);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(kl), Ro(aw, 8), Ro(dw, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-option']],
              hostAttrs: ['role', 'option', 1, 'mat-option', 'mat-focus-indicator'],
              hostVars: 12,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('click', function () {
                    return e._selectViaInteraction();
                  })('keydown', function (t) {
                    return e._handleKeydown(t);
                  }),
                  2 & t &&
                    (Oa('id', e.id),
                    Ao('tabindex', e._getTabIndex())('aria-selected', e._getAriaSelected())(
                      'aria-disabled',
                      e.disabled.toString()
                    ),
                    ha('mat-selected', e.selected)('mat-option-multiple', e.multiple)('mat-active', e.active)(
                      'mat-option-disabled',
                      e.disabled
                    ));
              },
              exportAs: ['matOption'],
              features: [go],
              ngContentSelectors: wv,
              decls: 11,
              vars: 4,
              consts: [
                ['class', 'mat-option-pseudo-checkbox', 3, 'state', 'disabled', 4, 'ngIf'],
                [1, 'mat-option-text'],
                ['class', 'cdk-visually-hidden', 4, 'ngIf'],
                ['mat-ripple', '', 1, 'mat-option-ripple', 3, 'matRippleTrigger', 'matRippleDisabled'],
                [1, 'mat-option-pseudo-checkbox', 3, 'state', 'disabled'],
                [1, 'cdk-visually-hidden'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Jo(),
                  Do(0, yv, 1, 2, 'mat-pseudo-checkbox', 0),
                  Ca(1, '\n\n'),
                  Fo(2, 'span', 1),
                  ta(3),
                  No(),
                  Ca(4, '\n\n'),
                  Ca(5, '\n'),
                  Do(6, vv, 2, 1, 'span', 2),
                  Ca(7, '\n\n'),
                  Fo(8, 'div', 3),
                  Ca(9, '\n'),
                  No(),
                  Ca(10, '\n')),
                  2 & t &&
                    (Io('ngIf', e.multiple),
                    tr(6),
                    Io('ngIf', e.group && e.group._inert),
                    tr(2),
                    Io('matRippleTrigger', e._getHostElement())('matRippleDisabled', e.disabled || e.disableRipple));
              },
              directives: [Ru, iw, rw],
              styles: [
                '.mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      function _w(t, e, n) {
        if (n.length) {
          let i = e.toArray(),
            s = n.toArray(),
            r = 0;
          for (let e = 0; e < t + 1; e++) i[e].group && i[e].group === s[r] && r++;
          return r;
        }
        return 0;
      }
      function bw(t, e, n, i) {
        return t < n ? t : t + e > n + i ? Math.max(0, t - i + e) : n;
      }
      let yw = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[sw, Gu, Ev, ow]] })),
          t
        );
      })();
      new (class extends xf {
        flush(t) {
          (this.active = !0), (this.scheduled = void 0);
          const { actions: e } = this;
          let n,
            i = -1,
            s = e.length;
          t = t || e.shift();
          do {
            if ((n = t.execute(t.state, t.delay))) break;
          } while (++i < s && (t = e.shift()));
          if (((this.active = !1), n)) {
            for (; ++i < s && (t = e.shift()); ) t.unsubscribe();
            throw n;
          }
        }
      })(
        class extends vf {
          constructor(t, e) {
            super(t, e), (this.scheduler = t), (this.work = e);
          }
          requestAsyncId(t, e, n = 0) {
            return null !== n && n > 0
              ? super.requestAsyncId(t, e, n)
              : (t.actions.push(this), t.scheduled || (t.scheduled = requestAnimationFrame(() => t.flush(null))));
          }
          recycleAsyncId(t, e, n = 0) {
            if ((null !== n && n > 0) || (null === n && this.delay > 0)) return super.recycleAsyncId(t, e, n);
            0 === t.actions.length && (cancelAnimationFrame(e), (t.scheduled = void 0));
          }
        }
      );
      let vw = 1;
      const ww = Promise.resolve(),
        xw = {};
      function Cw(t) {
        return t in xw && (delete xw[t], !0);
      }
      const kw = {
          setImmediate(t) {
            const e = vw++;
            return (xw[e] = !0), ww.then(() => Cw(e) && t()), e;
          },
          clearImmediate(t) {
            Cw(t);
          },
        },
        Sw = new (class extends xf {
          flush(t) {
            (this.active = !0), (this.scheduled = void 0);
            const { actions: e } = this;
            let n,
              i = -1,
              s = e.length;
            t = t || e.shift();
            do {
              if ((n = t.execute(t.state, t.delay))) break;
            } while (++i < s && (t = e.shift()));
            if (((this.active = !1), n)) {
              for (; ++i < s && (t = e.shift()); ) t.unsubscribe();
              throw n;
            }
          }
        })(
          class extends vf {
            constructor(t, e) {
              super(t, e), (this.scheduler = t), (this.work = e);
            }
            requestAsyncId(t, e, n = 0) {
              return null !== n && n > 0
                ? super.requestAsyncId(t, e, n)
                : (t.actions.push(this), t.scheduled || (t.scheduled = kw.setImmediate(t.flush.bind(t, null))));
            }
            recycleAsyncId(t, e, n = 0) {
              if ((null !== n && n > 0) || (null === n && this.delay > 0)) return super.recycleAsyncId(t, e, n);
              0 === t.actions.length && (kw.clearImmediate(e), (t.scheduled = void 0));
            }
          }
        );
      function Ew(t, e) {
        return (n) => n.lift(new Ow(t, e));
      }
      class Ow {
        constructor(t, e) {
          (this.compare = t), (this.keySelector = e);
        }
        call(t, e) {
          return e.subscribe(new Pw(t, this.compare, this.keySelector));
        }
      }
      class Pw extends m {
        constructor(t, e, n) {
          super(t), (this.keySelector = n), (this.hasKey = !1), 'function' == typeof e && (this.compare = e);
        }
        compare(t, e) {
          return t === e;
        }
        _next(t) {
          let e;
          try {
            const { keySelector: n } = this;
            e = n ? n(t) : t;
          } catch (i) {
            return this.destination.error(i);
          }
          let n = !1;
          if (this.hasKey)
            try {
              const { compare: t } = this;
              n = t(this.key, e);
            } catch (i) {
              return this.destination.error(i);
            }
          else this.hasKey = !0;
          n || ((this.key = e), this.destination.next(t));
        }
      }
      class Aw {
        constructor(t) {
          this.durationSelector = t;
        }
        call(t, e) {
          return e.subscribe(new Tw(t, this.durationSelector));
        }
      }
      class Tw extends N {
        constructor(t, e) {
          super(t), (this.durationSelector = e), (this.hasValue = !1);
        }
        _next(t) {
          if (((this.value = t), (this.hasValue = !0), !this.throttled)) {
            let n;
            try {
              const { durationSelector: e } = this;
              n = e(t);
            } catch (e) {
              return this.destination.error(e);
            }
            const i = V(n, new F(this));
            !i || i.closed ? this.clearThrottle() : this.add((this.throttled = i));
          }
        }
        clearThrottle() {
          const { value: t, hasValue: e, throttled: n } = this;
          n && (this.remove(n), (this.throttled = void 0), n.unsubscribe()),
            e && ((this.value = void 0), (this.hasValue = !1), this.destination.next(t));
        }
        notifyNext() {
          this.clearThrottle();
        }
        notifyComplete() {
          this.clearThrottle();
        }
      }
      function Dw(t) {
        return !l(t) && t - parseFloat(t) + 1 >= 0;
      }
      function Mw(t = 0, e, n) {
        let i = -1;
        return (
          Dw(e) ? (i = Number(e) < 1 ? 1 : Number(e)) : S(e) && (n = e),
          S(n) || (n = Cf),
          new b((e) => {
            const s = Dw(t) ? t : +t - n.now();
            return n.schedule(Rw, s, { index: 0, period: i, subscriber: e });
          })
        );
      }
      function Rw(t) {
        const { index: e, period: n, subscriber: i } = t;
        if ((i.next(e), !i.closed)) {
          if (-1 === n) return i.complete();
          (t.index = e + 1), this.schedule(t, n);
        }
      }
      function Iw(t, e = Cf) {
        return (
          (n = () => Mw(t, e)),
          function (t) {
            return t.lift(new Aw(n));
          }
        );
        var n;
      }
      function Lw(t) {
        return (e) => e.lift(new Fw(t));
      }
      class Fw {
        constructor(t) {
          this.notifier = t;
        }
        call(t, e) {
          const n = new Nw(t),
            i = V(this.notifier, new F(n));
          return i && !n.seenValue ? (n.add(i), e.subscribe(n)) : n;
        }
      }
      class Nw extends N {
        constructor(t) {
          super(t), (this.seenValue = !1);
        }
        notifyNext() {
          (this.seenValue = !0), this.complete();
        }
        notifyComplete() {}
      }
      function Vw(t) {
        return t && 'function' == typeof t.connect;
      }
      class Bw {
        applyChanges(t, e, n, i, s) {
          t.forEachOperation((t, i, r) => {
            let o, a;
            if (null == t.previousIndex) {
              const s = n(t, i, r);
              (o = e.createEmbeddedView(s.templateRef, s.context, s.index)), (a = 1);
            } else null == r ? (e.remove(i), (a = 3)) : ((o = e.get(i)), e.move(o, r), (a = 2));
            s && s({ context: null == o ? void 0 : o.context, operation: a, record: t });
          });
        }
        detach() {}
      }
      class zw {
        constructor(t = !1, e, n = !0) {
          (this._multiple = t),
            (this._emitChanges = n),
            (this._selection = new Set()),
            (this._deselectedToEmit = []),
            (this._selectedToEmit = []),
            (this.changed = new C()),
            e &&
              e.length &&
              (t ? e.forEach((t) => this._markSelected(t)) : this._markSelected(e[0]),
              (this._selectedToEmit.length = 0));
        }
        get selected() {
          return this._selected || (this._selected = Array.from(this._selection.values())), this._selected;
        }
        select(...t) {
          this._verifyValueAssignment(t), t.forEach((t) => this._markSelected(t)), this._emitChangeEvent();
        }
        deselect(...t) {
          this._verifyValueAssignment(t), t.forEach((t) => this._unmarkSelected(t)), this._emitChangeEvent();
        }
        toggle(t) {
          this.isSelected(t) ? this.deselect(t) : this.select(t);
        }
        clear() {
          this._unmarkAll(), this._emitChangeEvent();
        }
        isSelected(t) {
          return this._selection.has(t);
        }
        isEmpty() {
          return 0 === this._selection.size;
        }
        hasValue() {
          return !this.isEmpty();
        }
        sort(t) {
          this._multiple && this.selected && this._selected.sort(t);
        }
        isMultipleSelection() {
          return this._multiple;
        }
        _emitChangeEvent() {
          (this._selected = null),
            (this._selectedToEmit.length || this._deselectedToEmit.length) &&
              (this.changed.next({ source: this, added: this._selectedToEmit, removed: this._deselectedToEmit }),
              (this._deselectedToEmit = []),
              (this._selectedToEmit = []));
        }
        _markSelected(t) {
          this.isSelected(t) ||
            (this._multiple || this._unmarkAll(),
            this._selection.add(t),
            this._emitChanges && this._selectedToEmit.push(t));
        }
        _unmarkSelected(t) {
          this.isSelected(t) && (this._selection.delete(t), this._emitChanges && this._deselectedToEmit.push(t));
        }
        _unmarkAll() {
          this.isEmpty() || this._selection.forEach((t) => this._unmarkSelected(t));
        }
        _verifyValueAssignment(t) {}
      }
      const jw = new Jn('_ViewRepeater');
      let Hw = (() => {
          class t {
            constructor(t, e, n) {
              (this._ngZone = t),
                (this._platform = e),
                (this._scrolled = new C()),
                (this._globalSubscription = null),
                (this._scrolledCount = 0),
                (this.scrollContainers = new Map()),
                (this._document = n);
            }
            register(t) {
              this.scrollContainers.has(t) ||
                this.scrollContainers.set(
                  t,
                  t.elementScrolled().subscribe(() => this._scrolled.next(t))
                );
            }
            deregister(t) {
              const e = this.scrollContainers.get(t);
              e && (e.unsubscribe(), this.scrollContainers.delete(t));
            }
            scrolled(t = 20) {
              return this._platform.isBrowser
                ? new b((e) => {
                    this._globalSubscription || this._addGlobalListener();
                    const n = t > 0 ? this._scrolled.pipe(Iw(t)).subscribe(e) : this._scrolled.subscribe(e);
                    return (
                      this._scrolledCount++,
                      () => {
                        n.unsubscribe(), this._scrolledCount--, this._scrolledCount || this._removeGlobalListener();
                      }
                    );
                  })
                : fm();
            }
            ngOnDestroy() {
              this._removeGlobalListener(),
                this.scrollContainers.forEach((t, e) => this.deregister(e)),
                this._scrolled.complete();
            }
            ancestorScrolled(t, e) {
              const n = this.getAncestorScrollContainers(t);
              return this.scrolled(e).pipe(_m((t) => !t || n.indexOf(t) > -1));
            }
            getAncestorScrollContainers(t) {
              const e = [];
              return (
                this.scrollContainers.forEach((n, i) => {
                  this._scrollableContainsElement(i, t) && e.push(i);
                }),
                e
              );
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _scrollableContainsElement(t, e) {
              let n = by(e),
                i = t.getElementRef().nativeElement;
              do {
                if (n == i) return !0;
              } while ((n = n.parentElement));
              return !1;
            }
            _addGlobalListener() {
              this._globalSubscription = this._ngZone.runOutsideAngular(() =>
                sf(this._getWindow().document, 'scroll').subscribe(() => this._scrolled.next())
              );
            }
            _removeGlobalListener() {
              this._globalSubscription && (this._globalSubscription.unsubscribe(), (this._globalSubscription = null));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Xc), _i(wy), _i(Th, 8));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Xc), _i(wy), _i(Th, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        $w = (() => {
          class t {
            constructor(t, e, n, i) {
              (this.elementRef = t),
                (this.scrollDispatcher = e),
                (this.ngZone = n),
                (this.dir = i),
                (this._destroyed = new C()),
                (this._elementScrolled = new b((t) =>
                  this.ngZone.runOutsideAngular(() =>
                    sf(this.elementRef.nativeElement, 'scroll').pipe(Lw(this._destroyed)).subscribe(t)
                  )
                ));
            }
            ngOnInit() {
              this.scrollDispatcher.register(this);
            }
            ngOnDestroy() {
              this.scrollDispatcher.deregister(this), this._destroyed.next(), this._destroyed.complete();
            }
            elementScrolled() {
              return this._elementScrolled;
            }
            getElementRef() {
              return this.elementRef;
            }
            scrollTo(t) {
              const e = this.elementRef.nativeElement,
                n = this.dir && 'rtl' == this.dir.value;
              null == t.left && (t.left = n ? t.end : t.start),
                null == t.right && (t.right = n ? t.start : t.end),
                null != t.bottom && (t.top = e.scrollHeight - e.clientHeight - t.bottom),
                n && 0 != Dy()
                  ? (null != t.left && (t.right = e.scrollWidth - e.clientWidth - t.left),
                    2 == Dy() ? (t.left = t.right) : 1 == Dy() && (t.left = t.right ? -t.right : t.right))
                  : null != t.right && (t.left = e.scrollWidth - e.clientWidth - t.right),
                this._applyScrollToOptions(t);
            }
            _applyScrollToOptions(t) {
              const e = this.elementRef.nativeElement;
              Ty()
                ? e.scrollTo(t)
                : (null != t.top && (e.scrollTop = t.top), null != t.left && (e.scrollLeft = t.left));
            }
            measureScrollOffset(t) {
              const e = 'left',
                n = 'right',
                i = this.elementRef.nativeElement;
              if ('top' == t) return i.scrollTop;
              if ('bottom' == t) return i.scrollHeight - i.clientHeight - i.scrollTop;
              const s = this.dir && 'rtl' == this.dir.value;
              return (
                'start' == t ? (t = s ? n : e) : 'end' == t && (t = s ? e : n),
                s && 2 == Dy()
                  ? t == e
                    ? i.scrollWidth - i.clientWidth - i.scrollLeft
                    : i.scrollLeft
                  : s && 1 == Dy()
                  ? t == e
                    ? i.scrollLeft + i.scrollWidth - i.clientWidth
                    : -i.scrollLeft
                  : t == e
                  ? i.scrollLeft
                  : i.scrollWidth - i.clientWidth - i.scrollLeft
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Hw), Ro(Xc), Ro(fv, 8));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'cdk-scrollable', ''],
                ['', 'cdkScrollable', ''],
              ],
            })),
            t
          );
        })(),
        qw = (() => {
          class t {
            constructor(t, e, n) {
              (this._platform = t),
                (this._change = new C()),
                (this._changeListener = (t) => {
                  this._change.next(t);
                }),
                (this._document = n),
                e.runOutsideAngular(() => {
                  if (t.isBrowser) {
                    const t = this._getWindow();
                    t.addEventListener('resize', this._changeListener),
                      t.addEventListener('orientationchange', this._changeListener);
                  }
                  this.change().subscribe(() => this._updateViewportSize());
                });
            }
            ngOnDestroy() {
              if (this._platform.isBrowser) {
                const t = this._getWindow();
                t.removeEventListener('resize', this._changeListener),
                  t.removeEventListener('orientationchange', this._changeListener);
              }
              this._change.complete();
            }
            getViewportSize() {
              this._viewportSize || this._updateViewportSize();
              const t = { width: this._viewportSize.width, height: this._viewportSize.height };
              return this._platform.isBrowser || (this._viewportSize = null), t;
            }
            getViewportRect() {
              const t = this.getViewportScrollPosition(),
                { width: e, height: n } = this.getViewportSize();
              return { top: t.top, left: t.left, bottom: t.top + n, right: t.left + e, height: n, width: e };
            }
            getViewportScrollPosition() {
              if (!this._platform.isBrowser) return { top: 0, left: 0 };
              const t = this._document,
                e = this._getWindow(),
                n = t.documentElement,
                i = n.getBoundingClientRect();
              return {
                top: -i.top || t.body.scrollTop || e.scrollY || n.scrollTop || 0,
                left: -i.left || t.body.scrollLeft || e.scrollX || n.scrollLeft || 0,
              };
            }
            change(t = 20) {
              return t > 0 ? this._change.pipe(Iw(t)) : this._change;
            }
            _getWindow() {
              return this._document.defaultView || window;
            }
            _updateViewportSize() {
              const t = this._getWindow();
              this._viewportSize = this._platform.isBrowser
                ? { width: t.innerWidth, height: t.innerHeight }
                : { width: 0, height: 0 };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(wy), _i(Xc), _i(Th, 8));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(wy), _i(Xc), _i(Th, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Ww = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })(),
        Uw = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[gv, xy, Ww], gv, Ww] })),
            t
          );
        })();
      class Yw {
        attach(t) {
          return (this._attachedHost = t), t.attach(this);
        }
        detach() {
          let t = this._attachedHost;
          null != t && ((this._attachedHost = null), t.detach());
        }
        get isAttached() {
          return null != this._attachedHost;
        }
        setAttachedHost(t) {
          this._attachedHost = t;
        }
      }
      class Gw extends Yw {
        constructor(t, e, n, i) {
          super(),
            (this.component = t),
            (this.viewContainerRef = e),
            (this.injector = n),
            (this.componentFactoryResolver = i);
        }
      }
      class Qw extends Yw {
        constructor(t, e, n) {
          super(), (this.templateRef = t), (this.viewContainerRef = e), (this.context = n);
        }
        get origin() {
          return this.templateRef.elementRef;
        }
        attach(t, e = this.context) {
          return (this.context = e), super.attach(t);
        }
        detach() {
          return (this.context = void 0), super.detach();
        }
      }
      class Kw extends Yw {
        constructor(t) {
          super(), (this.element = t instanceof Za ? t.nativeElement : t);
        }
      }
      class Xw {
        constructor() {
          (this._isDisposed = !1), (this.attachDomPortal = null);
        }
        hasAttached() {
          return !!this._attachedPortal;
        }
        attach(t) {
          return t instanceof Gw
            ? ((this._attachedPortal = t), this.attachComponentPortal(t))
            : t instanceof Qw
            ? ((this._attachedPortal = t), this.attachTemplatePortal(t))
            : this.attachDomPortal && t instanceof Kw
            ? ((this._attachedPortal = t), this.attachDomPortal(t))
            : void 0;
        }
        detach() {
          this._attachedPortal && (this._attachedPortal.setAttachedHost(null), (this._attachedPortal = null)),
            this._invokeDisposeFn();
        }
        dispose() {
          this.hasAttached() && this.detach(), this._invokeDisposeFn(), (this._isDisposed = !0);
        }
        setDisposeFn(t) {
          this._disposeFn = t;
        }
        _invokeDisposeFn() {
          this._disposeFn && (this._disposeFn(), (this._disposeFn = null));
        }
      }
      class Zw extends Xw {
        constructor(t, e, n, i, s) {
          super(),
            (this.outletElement = t),
            (this._componentFactoryResolver = e),
            (this._appRef = n),
            (this._defaultInjector = i),
            (this.attachDomPortal = (t) => {
              const e = t.element,
                n = this._document.createComment('dom-portal');
              e.parentNode.insertBefore(n, e),
                this.outletElement.appendChild(e),
                (this._attachedPortal = t),
                super.setDisposeFn(() => {
                  n.parentNode && n.parentNode.replaceChild(e, n);
                });
            }),
            (this._document = s);
        }
        attachComponentPortal(t) {
          const e = (t.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(t.component);
          let n;
          return (
            t.viewContainerRef
              ? ((n = t.viewContainerRef.createComponent(
                  e,
                  t.viewContainerRef.length,
                  t.injector || t.viewContainerRef.injector
                )),
                this.setDisposeFn(() => n.destroy()))
              : ((n = e.create(t.injector || this._defaultInjector)),
                this._appRef.attachView(n.hostView),
                this.setDisposeFn(() => {
                  this._appRef.detachView(n.hostView), n.destroy();
                })),
            this.outletElement.appendChild(this._getComponentRootNode(n)),
            (this._attachedPortal = t),
            n
          );
        }
        attachTemplatePortal(t) {
          let e = t.viewContainerRef,
            n = e.createEmbeddedView(t.templateRef, t.context);
          return (
            n.rootNodes.forEach((t) => this.outletElement.appendChild(t)),
            n.detectChanges(),
            this.setDisposeFn(() => {
              let t = e.indexOf(n);
              -1 !== t && e.remove(t);
            }),
            (this._attachedPortal = t),
            n
          );
        }
        dispose() {
          super.dispose(),
            null != this.outletElement.parentNode && this.outletElement.parentNode.removeChild(this.outletElement);
        }
        _getComponentRootNode(t) {
          return t.hostView.rootNodes[0];
        }
      }
      let Jw = (() => {
          class t extends Xw {
            constructor(t, e, n) {
              super(),
                (this._componentFactoryResolver = t),
                (this._viewContainerRef = e),
                (this._isInitialized = !1),
                (this.attached = new cc()),
                (this.attachDomPortal = (t) => {
                  const e = t.element,
                    n = this._document.createComment('dom-portal');
                  t.setAttachedHost(this),
                    e.parentNode.insertBefore(n, e),
                    this._getRootNode().appendChild(e),
                    (this._attachedPortal = t),
                    super.setDisposeFn(() => {
                      n.parentNode && n.parentNode.replaceChild(e, n);
                    });
                }),
                (this._document = n);
            }
            get portal() {
              return this._attachedPortal;
            }
            set portal(t) {
              (!this.hasAttached() || t || this._isInitialized) &&
                (this.hasAttached() && super.detach(), t && super.attach(t), (this._attachedPortal = t));
            }
            get attachedRef() {
              return this._attachedRef;
            }
            ngOnInit() {
              this._isInitialized = !0;
            }
            ngOnDestroy() {
              super.dispose(), (this._attachedPortal = null), (this._attachedRef = null);
            }
            attachComponentPortal(t) {
              t.setAttachedHost(this);
              const e = null != t.viewContainerRef ? t.viewContainerRef : this._viewContainerRef,
                n = (t.componentFactoryResolver || this._componentFactoryResolver).resolveComponentFactory(t.component),
                i = e.createComponent(n, e.length, t.injector || e.injector);
              return (
                e !== this._viewContainerRef && this._getRootNode().appendChild(i.hostView.rootNodes[0]),
                super.setDisposeFn(() => i.destroy()),
                (this._attachedPortal = t),
                (this._attachedRef = i),
                this.attached.emit(i),
                i
              );
            }
            attachTemplatePortal(t) {
              t.setAttachedHost(this);
              const e = this._viewContainerRef.createEmbeddedView(t.templateRef, t.context);
              return (
                super.setDisposeFn(() => this._viewContainerRef.clear()),
                (this._attachedPortal = t),
                (this._attachedRef = e),
                this.attached.emit(e),
                e
              );
            }
            _getRootNode() {
              const t = this._viewContainerRef.element.nativeElement;
              return t.nodeType === t.ELEMENT_NODE ? t : t.parentNode;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Ga), Ro(Nl), Ro(Th));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'cdkPortalOutlet', '']],
              inputs: { portal: ['cdkPortalOutlet', 'portal'] },
              outputs: { attached: 'attached' },
              exportAs: ['cdkPortalOutlet'],
              features: [go],
            })),
            t
          );
        })(),
        tx = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })();
      class ex {
        constructor(t, e) {
          (this.predicate = t), (this.inclusive = e);
        }
        call(t, e) {
          return e.subscribe(new nx(t, this.predicate, this.inclusive));
        }
      }
      class nx extends m {
        constructor(t, e, n) {
          super(t), (this.predicate = e), (this.inclusive = n), (this.index = 0);
        }
        _next(t) {
          const e = this.destination;
          let n;
          try {
            n = this.predicate(t, this.index++);
          } catch (i) {
            return void e.error(i);
          }
          this.nextOrComplete(t, n);
        }
        nextOrComplete(t, e) {
          const n = this.destination;
          Boolean(e) ? n.next(t) : (this.inclusive && n.next(t), n.complete());
        }
      }
      const ix = Ty();
      class sx {
        constructor(t, e) {
          (this._viewportRuler = t),
            (this._previousHTMLStyles = { top: '', left: '' }),
            (this._isEnabled = !1),
            (this._document = e);
        }
        attach() {}
        enable() {
          if (this._canBeEnabled()) {
            const t = this._document.documentElement;
            (this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition()),
              (this._previousHTMLStyles.left = t.style.left || ''),
              (this._previousHTMLStyles.top = t.style.top || ''),
              (t.style.left = _y(-this._previousScrollPosition.left)),
              (t.style.top = _y(-this._previousScrollPosition.top)),
              t.classList.add('cdk-global-scrollblock'),
              (this._isEnabled = !0);
          }
        }
        disable() {
          if (this._isEnabled) {
            const t = this._document.documentElement,
              e = t.style,
              n = this._document.body.style,
              i = e.scrollBehavior || '',
              s = n.scrollBehavior || '';
            (this._isEnabled = !1),
              (e.left = this._previousHTMLStyles.left),
              (e.top = this._previousHTMLStyles.top),
              t.classList.remove('cdk-global-scrollblock'),
              ix && (e.scrollBehavior = n.scrollBehavior = 'auto'),
              window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top),
              ix && ((e.scrollBehavior = i), (n.scrollBehavior = s));
          }
        }
        _canBeEnabled() {
          if (this._document.documentElement.classList.contains('cdk-global-scrollblock') || this._isEnabled) return !1;
          const t = this._document.body,
            e = this._viewportRuler.getViewportSize();
          return t.scrollHeight > e.height || t.scrollWidth > e.width;
        }
      }
      class rx {
        constructor(t, e, n, i) {
          (this._scrollDispatcher = t),
            (this._ngZone = e),
            (this._viewportRuler = n),
            (this._config = i),
            (this._scrollSubscription = null),
            (this._detach = () => {
              this.disable(), this._overlayRef.hasAttached() && this._ngZone.run(() => this._overlayRef.detach());
            });
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          if (this._scrollSubscription) return;
          const t = this._scrollDispatcher.scrolled(0);
          this._config && this._config.threshold && this._config.threshold > 1
            ? ((this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top),
              (this._scrollSubscription = t.subscribe(() => {
                const t = this._viewportRuler.getViewportScrollPosition().top;
                Math.abs(t - this._initialScrollPosition) > this._config.threshold
                  ? this._detach()
                  : this._overlayRef.updatePosition();
              })))
            : (this._scrollSubscription = t.subscribe(this._detach));
        }
        disable() {
          this._scrollSubscription && (this._scrollSubscription.unsubscribe(), (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      class ox {
        enable() {}
        disable() {}
        attach() {}
      }
      function ax(t, e) {
        return e.some((e) => t.bottom < e.top || t.top > e.bottom || t.right < e.left || t.left > e.right);
      }
      function lx(t, e) {
        return e.some((e) => t.top < e.top || t.bottom > e.bottom || t.left < e.left || t.right > e.right);
      }
      class cx {
        constructor(t, e, n, i) {
          (this._scrollDispatcher = t),
            (this._viewportRuler = e),
            (this._ngZone = n),
            (this._config = i),
            (this._scrollSubscription = null);
        }
        attach(t) {
          this._overlayRef = t;
        }
        enable() {
          this._scrollSubscription ||
            (this._scrollSubscription = this._scrollDispatcher
              .scrolled(this._config ? this._config.scrollThrottle : 0)
              .subscribe(() => {
                if ((this._overlayRef.updatePosition(), this._config && this._config.autoClose)) {
                  const t = this._overlayRef.overlayElement.getBoundingClientRect(),
                    { width: e, height: n } = this._viewportRuler.getViewportSize();
                  ax(t, [{ width: e, height: n, bottom: n, right: e, top: 0, left: 0 }]) &&
                    (this.disable(), this._ngZone.run(() => this._overlayRef.detach()));
                }
              }));
        }
        disable() {
          this._scrollSubscription && (this._scrollSubscription.unsubscribe(), (this._scrollSubscription = null));
        }
        detach() {
          this.disable(), (this._overlayRef = null);
        }
      }
      let hx = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._scrollDispatcher = t),
              (this._viewportRuler = e),
              (this._ngZone = n),
              (this.noop = () => new ox()),
              (this.close = (t) => new rx(this._scrollDispatcher, this._ngZone, this._viewportRuler, t)),
              (this.block = () => new sx(this._viewportRuler, this._document)),
              (this.reposition = (t) => new cx(this._scrollDispatcher, this._viewportRuler, this._ngZone, t)),
              (this._document = i);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Hw), _i(qw), _i(Xc), _i(Th));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(Hw), _i(qw), _i(Xc), _i(Th));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class ux {
        constructor(t) {
          if (
            ((this.scrollStrategy = new ox()),
            (this.panelClass = ''),
            (this.hasBackdrop = !1),
            (this.backdropClass = 'cdk-overlay-dark-backdrop'),
            (this.disposeOnNavigation = !1),
            t)
          ) {
            const e = Object.keys(t);
            for (const n of e) void 0 !== t[n] && (this[n] = t[n]);
          }
        }
      }
      class dx {
        constructor(t, e, n, i, s) {
          (this.offsetX = n),
            (this.offsetY = i),
            (this.panelClass = s),
            (this.originX = t.originX),
            (this.originY = t.originY),
            (this.overlayX = e.overlayX),
            (this.overlayY = e.overlayY);
        }
      }
      class px {
        constructor(t, e) {
          (this.connectionPair = t), (this.scrollableViewProperties = e);
        }
      }
      let mx = (() => {
          class t {
            constructor(t) {
              (this._attachedOverlays = []), (this._document = t);
            }
            ngOnDestroy() {
              this.detach();
            }
            add(t) {
              this.remove(t), this._attachedOverlays.push(t);
            }
            remove(t) {
              const e = this._attachedOverlays.indexOf(t);
              e > -1 && this._attachedOverlays.splice(e, 1), 0 === this._attachedOverlays.length && this.detach();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Th));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Th));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        fx = (() => {
          class t extends mx {
            constructor(t) {
              super(t),
                (this._keydownListener = (t) => {
                  const e = this._attachedOverlays;
                  for (let n = e.length - 1; n > -1; n--)
                    if (e[n]._keydownEvents.observers.length > 0) {
                      e[n]._keydownEvents.next(t);
                      break;
                    }
                });
            }
            add(t) {
              super.add(t),
                this._isAttached ||
                  (this._document.body.addEventListener('keydown', this._keydownListener), (this._isAttached = !0));
            }
            detach() {
              this._isAttached &&
                (this._document.body.removeEventListener('keydown', this._keydownListener), (this._isAttached = !1));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Th));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Th));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        gx = (() => {
          class t extends mx {
            constructor(t, e) {
              super(t),
                (this._platform = e),
                (this._cursorStyleIsSet = !1),
                (this._clickListener = (t) => {
                  const e = t.composedPath ? t.composedPath()[0] : t.target,
                    n = this._attachedOverlays.slice();
                  for (let i = n.length - 1; i > -1; i--) {
                    const s = n[i];
                    if (!(s._outsidePointerEvents.observers.length < 1) && s.hasAttached()) {
                      if (s.overlayElement.contains(e)) break;
                      s._outsidePointerEvents.next(t);
                    }
                  }
                });
            }
            add(t) {
              if ((super.add(t), !this._isAttached)) {
                const t = this._document.body;
                t.addEventListener('click', this._clickListener, !0),
                  t.addEventListener('auxclick', this._clickListener, !0),
                  t.addEventListener('contextmenu', this._clickListener, !0),
                  this._platform.IOS &&
                    !this._cursorStyleIsSet &&
                    ((this._cursorOriginalValue = t.style.cursor),
                    (t.style.cursor = 'pointer'),
                    (this._cursorStyleIsSet = !0)),
                  (this._isAttached = !0);
              }
            }
            detach() {
              if (this._isAttached) {
                const t = this._document.body;
                t.removeEventListener('click', this._clickListener, !0),
                  t.removeEventListener('auxclick', this._clickListener, !0),
                  t.removeEventListener('contextmenu', this._clickListener, !0),
                  this._platform.IOS &&
                    this._cursorStyleIsSet &&
                    ((t.style.cursor = this._cursorOriginalValue), (this._cursorStyleIsSet = !1)),
                  (this._isAttached = !1);
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Th), _i(wy));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Th), _i(wy));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const _x = !('undefined' == typeof window || !window || (!window.__karma__ && !window.jasmine));
      let bx = (() => {
        class t {
          constructor(t, e) {
            (this._platform = e), (this._document = t);
          }
          ngOnDestroy() {
            const t = this._containerElement;
            t && t.parentNode && t.parentNode.removeChild(t);
          }
          getContainerElement() {
            return this._containerElement || this._createContainer(), this._containerElement;
          }
          _createContainer() {
            const t = 'cdk-overlay-container';
            if (this._platform.isBrowser || _x) {
              const e = this._document.querySelectorAll(`.${t}[platform="server"], .${t}[platform="test"]`);
              for (let t = 0; t < e.length; t++) e[t].parentNode.removeChild(e[t]);
            }
            const e = this._document.createElement('div');
            e.classList.add(t),
              _x
                ? e.setAttribute('platform', 'test')
                : this._platform.isBrowser || e.setAttribute('platform', 'server'),
              this._document.body.appendChild(e),
              (this._containerElement = e);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Th), _i(wy));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(Th), _i(wy));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class yx {
        constructor(t, e, n, i, s, r, o, a, l) {
          (this._portalOutlet = t),
            (this._host = e),
            (this._pane = n),
            (this._config = i),
            (this._ngZone = s),
            (this._keyboardDispatcher = r),
            (this._document = o),
            (this._location = a),
            (this._outsideClickDispatcher = l),
            (this._backdropElement = null),
            (this._backdropClick = new C()),
            (this._attachments = new C()),
            (this._detachments = new C()),
            (this._locationChanges = u.EMPTY),
            (this._backdropClickHandler = (t) => this._backdropClick.next(t)),
            (this._keydownEvents = new C()),
            (this._outsidePointerEvents = new C()),
            i.scrollStrategy && ((this._scrollStrategy = i.scrollStrategy), this._scrollStrategy.attach(this)),
            (this._positionStrategy = i.positionStrategy);
        }
        get overlayElement() {
          return this._pane;
        }
        get backdropElement() {
          return this._backdropElement;
        }
        get hostElement() {
          return this._host;
        }
        attach(t) {
          let e = this._portalOutlet.attach(t);
          return (
            !this._host.parentElement && this._previousHostParent && this._previousHostParent.appendChild(this._host),
            this._positionStrategy && this._positionStrategy.attach(this),
            this._updateStackingOrder(),
            this._updateElementSize(),
            this._updateElementDirection(),
            this._scrollStrategy && this._scrollStrategy.enable(),
            this._ngZone.onStable.pipe(pf(1)).subscribe(() => {
              this.hasAttached() && this.updatePosition();
            }),
            this._togglePointerEvents(!0),
            this._config.hasBackdrop && this._attachBackdrop(),
            this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !0),
            this._attachments.next(),
            this._keyboardDispatcher.add(this),
            this._config.disposeOnNavigation &&
              (this._locationChanges = this._location.subscribe(() => this.dispose())),
            this._outsideClickDispatcher.add(this),
            e
          );
        }
        detach() {
          if (!this.hasAttached()) return;
          this.detachBackdrop(),
            this._togglePointerEvents(!1),
            this._positionStrategy && this._positionStrategy.detach && this._positionStrategy.detach(),
            this._scrollStrategy && this._scrollStrategy.disable();
          const t = this._portalOutlet.detach();
          return (
            this._detachments.next(),
            this._keyboardDispatcher.remove(this),
            this._detachContentWhenStable(),
            this._locationChanges.unsubscribe(),
            this._outsideClickDispatcher.remove(this),
            t
          );
        }
        dispose() {
          const t = this.hasAttached();
          this._positionStrategy && this._positionStrategy.dispose(),
            this._disposeScrollStrategy(),
            this.detachBackdrop(),
            this._locationChanges.unsubscribe(),
            this._keyboardDispatcher.remove(this),
            this._portalOutlet.dispose(),
            this._attachments.complete(),
            this._backdropClick.complete(),
            this._keydownEvents.complete(),
            this._outsidePointerEvents.complete(),
            this._outsideClickDispatcher.remove(this),
            this._host && this._host.parentNode && (this._host.parentNode.removeChild(this._host), (this._host = null)),
            (this._previousHostParent = this._pane = null),
            t && this._detachments.next(),
            this._detachments.complete();
        }
        hasAttached() {
          return this._portalOutlet.hasAttached();
        }
        backdropClick() {
          return this._backdropClick;
        }
        attachments() {
          return this._attachments;
        }
        detachments() {
          return this._detachments;
        }
        keydownEvents() {
          return this._keydownEvents;
        }
        outsidePointerEvents() {
          return this._outsidePointerEvents;
        }
        getConfig() {
          return this._config;
        }
        updatePosition() {
          this._positionStrategy && this._positionStrategy.apply();
        }
        updatePositionStrategy(t) {
          t !== this._positionStrategy &&
            (this._positionStrategy && this._positionStrategy.dispose(),
            (this._positionStrategy = t),
            this.hasAttached() && (t.attach(this), this.updatePosition()));
        }
        updateSize(t) {
          (this._config = Object.assign(Object.assign({}, this._config), t)), this._updateElementSize();
        }
        setDirection(t) {
          (this._config = Object.assign(Object.assign({}, this._config), { direction: t })),
            this._updateElementDirection();
        }
        addPanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !0);
        }
        removePanelClass(t) {
          this._pane && this._toggleClasses(this._pane, t, !1);
        }
        getDirection() {
          const t = this._config.direction;
          return t ? ('string' == typeof t ? t : t.value) : 'ltr';
        }
        updateScrollStrategy(t) {
          t !== this._scrollStrategy &&
            (this._disposeScrollStrategy(),
            (this._scrollStrategy = t),
            this.hasAttached() && (t.attach(this), t.enable()));
        }
        _updateElementDirection() {
          this._host.setAttribute('dir', this.getDirection());
        }
        _updateElementSize() {
          if (!this._pane) return;
          const t = this._pane.style;
          (t.width = _y(this._config.width)),
            (t.height = _y(this._config.height)),
            (t.minWidth = _y(this._config.minWidth)),
            (t.minHeight = _y(this._config.minHeight)),
            (t.maxWidth = _y(this._config.maxWidth)),
            (t.maxHeight = _y(this._config.maxHeight));
        }
        _togglePointerEvents(t) {
          this._pane.style.pointerEvents = t ? '' : 'none';
        }
        _attachBackdrop() {
          const t = 'cdk-overlay-backdrop-showing';
          (this._backdropElement = this._document.createElement('div')),
            this._backdropElement.classList.add('cdk-overlay-backdrop'),
            this._config.backdropClass && this._toggleClasses(this._backdropElement, this._config.backdropClass, !0),
            this._host.parentElement.insertBefore(this._backdropElement, this._host),
            this._backdropElement.addEventListener('click', this._backdropClickHandler),
            'undefined' != typeof requestAnimationFrame
              ? this._ngZone.runOutsideAngular(() => {
                  requestAnimationFrame(() => {
                    this._backdropElement && this._backdropElement.classList.add(t);
                  });
                })
              : this._backdropElement.classList.add(t);
        }
        _updateStackingOrder() {
          this._host.nextSibling && this._host.parentNode.appendChild(this._host);
        }
        detachBackdrop() {
          let t,
            e = this._backdropElement;
          if (!e) return;
          let n = () => {
            e &&
              (e.removeEventListener('click', this._backdropClickHandler),
              e.removeEventListener('transitionend', n),
              e.parentNode && e.parentNode.removeChild(e)),
              this._backdropElement == e && (this._backdropElement = null),
              this._config.backdropClass && this._toggleClasses(e, this._config.backdropClass, !1),
              clearTimeout(t);
          };
          e.classList.remove('cdk-overlay-backdrop-showing'),
            this._ngZone.runOutsideAngular(() => {
              e.addEventListener('transitionend', n);
            }),
            (e.style.pointerEvents = 'none'),
            (t = this._ngZone.runOutsideAngular(() => setTimeout(n, 500)));
        }
        _toggleClasses(t, e, n) {
          const i = t.classList;
          gy(e).forEach((t) => {
            t && (n ? i.add(t) : i.remove(t));
          });
        }
        _detachContentWhenStable() {
          this._ngZone.runOutsideAngular(() => {
            const t = this._ngZone.onStable.pipe(Lw(q(this._attachments, this._detachments))).subscribe(() => {
              (this._pane && this._host && 0 !== this._pane.children.length) ||
                (this._pane && this._config.panelClass && this._toggleClasses(this._pane, this._config.panelClass, !1),
                this._host &&
                  this._host.parentElement &&
                  ((this._previousHostParent = this._host.parentElement),
                  this._previousHostParent.removeChild(this._host)),
                t.unsubscribe());
            });
          });
        }
        _disposeScrollStrategy() {
          const t = this._scrollStrategy;
          t && (t.disable(), t.detach && t.detach());
        }
      }
      const vx = 'cdk-overlay-connected-position-bounding-box',
        wx = /([A-Za-z%]+)$/;
      class xx {
        constructor(t, e, n, i, s) {
          (this._viewportRuler = e),
            (this._document = n),
            (this._platform = i),
            (this._overlayContainer = s),
            (this._lastBoundingBoxSize = { width: 0, height: 0 }),
            (this._isPushed = !1),
            (this._canPush = !0),
            (this._growAfterOpen = !1),
            (this._hasFlexibleDimensions = !0),
            (this._positionLocked = !1),
            (this._viewportMargin = 0),
            (this._scrollables = []),
            (this._preferredPositions = []),
            (this._positionChanges = new C()),
            (this._resizeSubscription = u.EMPTY),
            (this._offsetX = 0),
            (this._offsetY = 0),
            (this._appliedPanelClasses = []),
            (this.positionChanges = this._positionChanges),
            this.setOrigin(t);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          this._validatePositions(),
            t.hostElement.classList.add(vx),
            (this._overlayRef = t),
            (this._boundingBox = t.hostElement),
            (this._pane = t.overlayElement),
            (this._isDisposed = !1),
            (this._isInitialRender = !0),
            (this._lastPosition = null),
            this._resizeSubscription.unsubscribe(),
            (this._resizeSubscription = this._viewportRuler.change().subscribe(() => {
              (this._isInitialRender = !0), this.apply();
            }));
        }
        apply() {
          if (this._isDisposed || !this._platform.isBrowser) return;
          if (!this._isInitialRender && this._positionLocked && this._lastPosition)
            return void this.reapplyLastPosition();
          this._clearPanelClasses(),
            this._resetOverlayElementStyles(),
            this._resetBoundingBoxStyles(),
            (this._viewportRect = this._getNarrowedViewportRect()),
            (this._originRect = this._getOriginRect()),
            (this._overlayRect = this._pane.getBoundingClientRect());
          const t = this._originRect,
            e = this._overlayRect,
            n = this._viewportRect,
            i = [];
          let s;
          for (let r of this._preferredPositions) {
            let o = this._getOriginPoint(t, r),
              a = this._getOverlayPoint(o, e, r),
              l = this._getOverlayFit(a, e, n, r);
            if (l.isCompletelyWithinViewport) return (this._isPushed = !1), void this._applyPosition(r, o);
            this._canFitWithFlexibleDimensions(l, a, n)
              ? i.push({
                  position: r,
                  origin: o,
                  overlayRect: e,
                  boundingBoxRect: this._calculateBoundingBoxRect(o, r),
                })
              : (!s || s.overlayFit.visibleArea < l.visibleArea) &&
                (s = { overlayFit: l, overlayPoint: a, originPoint: o, position: r, overlayRect: e });
          }
          if (i.length) {
            let t = null,
              e = -1;
            for (const n of i) {
              const i = n.boundingBoxRect.width * n.boundingBoxRect.height * (n.position.weight || 1);
              i > e && ((e = i), (t = n));
            }
            return (this._isPushed = !1), void this._applyPosition(t.position, t.origin);
          }
          if (this._canPush) return (this._isPushed = !0), void this._applyPosition(s.position, s.originPoint);
          this._applyPosition(s.position, s.originPoint);
        }
        detach() {
          this._clearPanelClasses(),
            (this._lastPosition = null),
            (this._previousPushAmount = null),
            this._resizeSubscription.unsubscribe();
        }
        dispose() {
          this._isDisposed ||
            (this._boundingBox &&
              Cx(this._boundingBox.style, {
                top: '',
                left: '',
                right: '',
                bottom: '',
                height: '',
                width: '',
                alignItems: '',
                justifyContent: '',
              }),
            this._pane && this._resetOverlayElementStyles(),
            this._overlayRef && this._overlayRef.hostElement.classList.remove(vx),
            this.detach(),
            this._positionChanges.complete(),
            (this._overlayRef = this._boundingBox = null),
            (this._isDisposed = !0));
        }
        reapplyLastPosition() {
          if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {
            (this._originRect = this._getOriginRect()),
              (this._overlayRect = this._pane.getBoundingClientRect()),
              (this._viewportRect = this._getNarrowedViewportRect());
            const t = this._lastPosition || this._preferredPositions[0],
              e = this._getOriginPoint(this._originRect, t);
            this._applyPosition(t, e);
          }
        }
        withScrollableContainers(t) {
          return (this._scrollables = t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t),
            -1 === t.indexOf(this._lastPosition) && (this._lastPosition = null),
            this._validatePositions(),
            this
          );
        }
        withViewportMargin(t) {
          return (this._viewportMargin = t), this;
        }
        withFlexibleDimensions(t = !0) {
          return (this._hasFlexibleDimensions = t), this;
        }
        withGrowAfterOpen(t = !0) {
          return (this._growAfterOpen = t), this;
        }
        withPush(t = !0) {
          return (this._canPush = t), this;
        }
        withLockedPosition(t = !0) {
          return (this._positionLocked = t), this;
        }
        setOrigin(t) {
          return (this._origin = t), this;
        }
        withDefaultOffsetX(t) {
          return (this._offsetX = t), this;
        }
        withDefaultOffsetY(t) {
          return (this._offsetY = t), this;
        }
        withTransformOriginOn(t) {
          return (this._transformOriginSelector = t), this;
        }
        _getOriginPoint(t, e) {
          let n, i;
          if ('center' == e.originX) n = t.left + t.width / 2;
          else {
            const i = this._isRtl() ? t.right : t.left,
              s = this._isRtl() ? t.left : t.right;
            n = 'start' == e.originX ? i : s;
          }
          return (
            (i = 'center' == e.originY ? t.top + t.height / 2 : 'top' == e.originY ? t.top : t.bottom), { x: n, y: i }
          );
        }
        _getOverlayPoint(t, e, n) {
          let i, s;
          return (
            (i =
              'center' == n.overlayX
                ? -e.width / 2
                : 'start' === n.overlayX
                ? this._isRtl()
                  ? -e.width
                  : 0
                : this._isRtl()
                ? 0
                : -e.width),
            (s = 'center' == n.overlayY ? -e.height / 2 : 'top' == n.overlayY ? 0 : -e.height),
            { x: t.x + i, y: t.y + s }
          );
        }
        _getOverlayFit(t, e, n, i) {
          const s = Sx(e);
          let { x: r, y: o } = t,
            a = this._getOffset(i, 'x'),
            l = this._getOffset(i, 'y');
          a && (r += a), l && (o += l);
          let c = 0 - o,
            h = o + s.height - n.height,
            u = this._subtractOverflows(s.width, 0 - r, r + s.width - n.width),
            d = this._subtractOverflows(s.height, c, h),
            p = u * d;
          return {
            visibleArea: p,
            isCompletelyWithinViewport: s.width * s.height === p,
            fitsInViewportVertically: d === s.height,
            fitsInViewportHorizontally: u == s.width,
          };
        }
        _canFitWithFlexibleDimensions(t, e, n) {
          if (this._hasFlexibleDimensions) {
            const i = n.bottom - e.y,
              s = n.right - e.x,
              r = kx(this._overlayRef.getConfig().minHeight),
              o = kx(this._overlayRef.getConfig().minWidth),
              a = t.fitsInViewportHorizontally || (null != o && o <= s);
            return (t.fitsInViewportVertically || (null != r && r <= i)) && a;
          }
          return !1;
        }
        _pushOverlayOnScreen(t, e, n) {
          if (this._previousPushAmount && this._positionLocked)
            return { x: t.x + this._previousPushAmount.x, y: t.y + this._previousPushAmount.y };
          const i = Sx(e),
            s = this._viewportRect,
            r = Math.max(t.x + i.width - s.width, 0),
            o = Math.max(t.y + i.height - s.height, 0),
            a = Math.max(s.top - n.top - t.y, 0),
            l = Math.max(s.left - n.left - t.x, 0);
          let c = 0,
            h = 0;
          return (
            (c = i.width <= s.width ? l || -r : t.x < this._viewportMargin ? s.left - n.left - t.x : 0),
            (h = i.height <= s.height ? a || -o : t.y < this._viewportMargin ? s.top - n.top - t.y : 0),
            (this._previousPushAmount = { x: c, y: h }),
            { x: t.x + c, y: t.y + h }
          );
        }
        _applyPosition(t, e) {
          if (
            (this._setTransformOrigin(t),
            this._setOverlayElementStyles(e, t),
            this._setBoundingBoxStyles(e, t),
            t.panelClass && this._addPanelClasses(t.panelClass),
            (this._lastPosition = t),
            this._positionChanges.observers.length)
          ) {
            const e = this._getScrollVisibility(),
              n = new px(t, e);
            this._positionChanges.next(n);
          }
          this._isInitialRender = !1;
        }
        _setTransformOrigin(t) {
          if (!this._transformOriginSelector) return;
          const e = this._boundingBox.querySelectorAll(this._transformOriginSelector);
          let n,
            i = t.overlayY;
          n =
            'center' === t.overlayX
              ? 'center'
              : this._isRtl()
              ? 'start' === t.overlayX
                ? 'right'
                : 'left'
              : 'start' === t.overlayX
              ? 'left'
              : 'right';
          for (let s = 0; s < e.length; s++) e[s].style.transformOrigin = `${n} ${i}`;
        }
        _calculateBoundingBoxRect(t, e) {
          const n = this._viewportRect,
            i = this._isRtl();
          let s, r, o, a, l, c;
          if ('top' === e.overlayY) (r = t.y), (s = n.height - r + this._viewportMargin);
          else if ('bottom' === e.overlayY)
            (o = n.height - t.y + 2 * this._viewportMargin), (s = n.height - o + this._viewportMargin);
          else {
            const e = Math.min(n.bottom - t.y + n.top, t.y),
              i = this._lastBoundingBoxSize.height;
            (s = 2 * e), (r = t.y - e), s > i && !this._isInitialRender && !this._growAfterOpen && (r = t.y - i / 2);
          }
          if (('end' === e.overlayX && !i) || ('start' === e.overlayX && i))
            (c = n.width - t.x + this._viewportMargin), (a = t.x - this._viewportMargin);
          else if (('start' === e.overlayX && !i) || ('end' === e.overlayX && i)) (l = t.x), (a = n.right - t.x);
          else {
            const e = Math.min(n.right - t.x + n.left, t.x),
              i = this._lastBoundingBoxSize.width;
            (a = 2 * e), (l = t.x - e), a > i && !this._isInitialRender && !this._growAfterOpen && (l = t.x - i / 2);
          }
          return { top: r, left: l, bottom: o, right: c, width: a, height: s };
        }
        _setBoundingBoxStyles(t, e) {
          const n = this._calculateBoundingBoxRect(t, e);
          this._isInitialRender ||
            this._growAfterOpen ||
            ((n.height = Math.min(n.height, this._lastBoundingBoxSize.height)),
            (n.width = Math.min(n.width, this._lastBoundingBoxSize.width)));
          const i = {};
          if (this._hasExactPosition())
            (i.top = i.left = '0'), (i.bottom = i.right = i.maxHeight = i.maxWidth = ''), (i.width = i.height = '100%');
          else {
            const t = this._overlayRef.getConfig().maxHeight,
              s = this._overlayRef.getConfig().maxWidth;
            (i.height = _y(n.height)),
              (i.top = _y(n.top)),
              (i.bottom = _y(n.bottom)),
              (i.width = _y(n.width)),
              (i.left = _y(n.left)),
              (i.right = _y(n.right)),
              (i.alignItems = 'center' === e.overlayX ? 'center' : 'end' === e.overlayX ? 'flex-end' : 'flex-start'),
              (i.justifyContent =
                'center' === e.overlayY ? 'center' : 'bottom' === e.overlayY ? 'flex-end' : 'flex-start'),
              t && (i.maxHeight = _y(t)),
              s && (i.maxWidth = _y(s));
          }
          (this._lastBoundingBoxSize = n), Cx(this._boundingBox.style, i);
        }
        _resetBoundingBoxStyles() {
          Cx(this._boundingBox.style, {
            top: '0',
            left: '0',
            right: '0',
            bottom: '0',
            height: '',
            width: '',
            alignItems: '',
            justifyContent: '',
          });
        }
        _resetOverlayElementStyles() {
          Cx(this._pane.style, { top: '', left: '', bottom: '', right: '', position: '', transform: '' });
        }
        _setOverlayElementStyles(t, e) {
          const n = {},
            i = this._hasExactPosition(),
            s = this._hasFlexibleDimensions,
            r = this._overlayRef.getConfig();
          if (i) {
            const i = this._viewportRuler.getViewportScrollPosition();
            Cx(n, this._getExactOverlayY(e, t, i)), Cx(n, this._getExactOverlayX(e, t, i));
          } else n.position = 'static';
          let o = '',
            a = this._getOffset(e, 'x'),
            l = this._getOffset(e, 'y');
          a && (o += `translateX(${a}px) `),
            l && (o += `translateY(${l}px)`),
            (n.transform = o.trim()),
            r.maxHeight && (i ? (n.maxHeight = _y(r.maxHeight)) : s && (n.maxHeight = '')),
            r.maxWidth && (i ? (n.maxWidth = _y(r.maxWidth)) : s && (n.maxWidth = '')),
            Cx(this._pane.style, n);
        }
        _getExactOverlayY(t, e, n) {
          let i = { top: '', bottom: '' },
            s = this._getOverlayPoint(e, this._overlayRect, t);
          this._isPushed && (s = this._pushOverlayOnScreen(s, this._overlayRect, n));
          let r = this._overlayContainer.getContainerElement().getBoundingClientRect().top;
          return (
            (s.y -= r),
            'bottom' === t.overlayY
              ? (i.bottom = this._document.documentElement.clientHeight - (s.y + this._overlayRect.height) + 'px')
              : (i.top = _y(s.y)),
            i
          );
        }
        _getExactOverlayX(t, e, n) {
          let i,
            s = { left: '', right: '' },
            r = this._getOverlayPoint(e, this._overlayRect, t);
          return (
            this._isPushed && (r = this._pushOverlayOnScreen(r, this._overlayRect, n)),
            (i = this._isRtl() ? ('end' === t.overlayX ? 'left' : 'right') : 'end' === t.overlayX ? 'right' : 'left'),
            'right' === i
              ? (s.right = this._document.documentElement.clientWidth - (r.x + this._overlayRect.width) + 'px')
              : (s.left = _y(r.x)),
            s
          );
        }
        _getScrollVisibility() {
          const t = this._getOriginRect(),
            e = this._pane.getBoundingClientRect(),
            n = this._scrollables.map((t) => t.getElementRef().nativeElement.getBoundingClientRect());
          return {
            isOriginClipped: lx(t, n),
            isOriginOutsideView: ax(t, n),
            isOverlayClipped: lx(e, n),
            isOverlayOutsideView: ax(e, n),
          };
        }
        _subtractOverflows(t, ...e) {
          return e.reduce((t, e) => t - Math.max(e, 0), t);
        }
        _getNarrowedViewportRect() {
          const t = this._document.documentElement.clientWidth,
            e = this._document.documentElement.clientHeight,
            n = this._viewportRuler.getViewportScrollPosition();
          return {
            top: n.top + this._viewportMargin,
            left: n.left + this._viewportMargin,
            right: n.left + t - this._viewportMargin,
            bottom: n.top + e - this._viewportMargin,
            width: t - 2 * this._viewportMargin,
            height: e - 2 * this._viewportMargin,
          };
        }
        _isRtl() {
          return 'rtl' === this._overlayRef.getDirection();
        }
        _hasExactPosition() {
          return !this._hasFlexibleDimensions || this._isPushed;
        }
        _getOffset(t, e) {
          return 'x' === e
            ? null == t.offsetX
              ? this._offsetX
              : t.offsetX
            : null == t.offsetY
            ? this._offsetY
            : t.offsetY;
        }
        _validatePositions() {}
        _addPanelClasses(t) {
          this._pane &&
            gy(t).forEach((t) => {
              '' !== t &&
                -1 === this._appliedPanelClasses.indexOf(t) &&
                (this._appliedPanelClasses.push(t), this._pane.classList.add(t));
            });
        }
        _clearPanelClasses() {
          this._pane &&
            (this._appliedPanelClasses.forEach((t) => {
              this._pane.classList.remove(t);
            }),
            (this._appliedPanelClasses = []));
        }
        _getOriginRect() {
          const t = this._origin;
          if (t instanceof Za) return t.nativeElement.getBoundingClientRect();
          if (t instanceof Element) return t.getBoundingClientRect();
          const e = t.width || 0,
            n = t.height || 0;
          return { top: t.y, bottom: t.y + n, left: t.x, right: t.x + e, height: n, width: e };
        }
      }
      function Cx(t, e) {
        for (let n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
        return t;
      }
      function kx(t) {
        if ('number' != typeof t && null != t) {
          const [e, n] = t.split(wx);
          return n && 'px' !== n ? null : parseFloat(e);
        }
        return t || null;
      }
      function Sx(t) {
        return {
          top: Math.floor(t.top),
          right: Math.floor(t.right),
          bottom: Math.floor(t.bottom),
          left: Math.floor(t.left),
          width: Math.floor(t.width),
          height: Math.floor(t.height),
        };
      }
      class Ex {
        constructor(t, e, n, i, s, r, o) {
          (this._preferredPositions = []),
            (this._positionStrategy = new xx(n, i, s, r, o)
              .withFlexibleDimensions(!1)
              .withPush(!1)
              .withViewportMargin(0)),
            this.withFallbackPosition(t, e),
            (this.onPositionChange = this._positionStrategy.positionChanges);
        }
        get positions() {
          return this._preferredPositions;
        }
        attach(t) {
          (this._overlayRef = t),
            this._positionStrategy.attach(t),
            this._direction && (t.setDirection(this._direction), (this._direction = null));
        }
        dispose() {
          this._positionStrategy.dispose();
        }
        detach() {
          this._positionStrategy.detach();
        }
        apply() {
          this._positionStrategy.apply();
        }
        recalculateLastPosition() {
          this._positionStrategy.reapplyLastPosition();
        }
        withScrollableContainers(t) {
          this._positionStrategy.withScrollableContainers(t);
        }
        withFallbackPosition(t, e, n, i) {
          const s = new dx(t, e, n, i);
          return this._preferredPositions.push(s), this._positionStrategy.withPositions(this._preferredPositions), this;
        }
        withDirection(t) {
          return this._overlayRef ? this._overlayRef.setDirection(t) : (this._direction = t), this;
        }
        withOffsetX(t) {
          return this._positionStrategy.withDefaultOffsetX(t), this;
        }
        withOffsetY(t) {
          return this._positionStrategy.withDefaultOffsetY(t), this;
        }
        withLockedPosition(t) {
          return this._positionStrategy.withLockedPosition(t), this;
        }
        withPositions(t) {
          return (
            (this._preferredPositions = t.slice()), this._positionStrategy.withPositions(this._preferredPositions), this
          );
        }
        setOrigin(t) {
          return this._positionStrategy.setOrigin(t), this;
        }
      }
      const Ox = 'cdk-global-overlay-wrapper';
      class Px {
        constructor() {
          (this._cssPosition = 'static'),
            (this._topOffset = ''),
            (this._bottomOffset = ''),
            (this._leftOffset = ''),
            (this._rightOffset = ''),
            (this._alignItems = ''),
            (this._justifyContent = ''),
            (this._width = ''),
            (this._height = '');
        }
        attach(t) {
          const e = t.getConfig();
          (this._overlayRef = t),
            this._width && !e.width && t.updateSize({ width: this._width }),
            this._height && !e.height && t.updateSize({ height: this._height }),
            t.hostElement.classList.add(Ox),
            (this._isDisposed = !1);
        }
        top(t = '') {
          return (this._bottomOffset = ''), (this._topOffset = t), (this._alignItems = 'flex-start'), this;
        }
        left(t = '') {
          return (this._rightOffset = ''), (this._leftOffset = t), (this._justifyContent = 'flex-start'), this;
        }
        bottom(t = '') {
          return (this._topOffset = ''), (this._bottomOffset = t), (this._alignItems = 'flex-end'), this;
        }
        right(t = '') {
          return (this._leftOffset = ''), (this._rightOffset = t), (this._justifyContent = 'flex-end'), this;
        }
        width(t = '') {
          return this._overlayRef ? this._overlayRef.updateSize({ width: t }) : (this._width = t), this;
        }
        height(t = '') {
          return this._overlayRef ? this._overlayRef.updateSize({ height: t }) : (this._height = t), this;
        }
        centerHorizontally(t = '') {
          return this.left(t), (this._justifyContent = 'center'), this;
        }
        centerVertically(t = '') {
          return this.top(t), (this._alignItems = 'center'), this;
        }
        apply() {
          if (!this._overlayRef || !this._overlayRef.hasAttached()) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement.style,
            n = this._overlayRef.getConfig(),
            { width: i, height: s, maxWidth: r, maxHeight: o } = n,
            a = !(('100%' !== i && '100vw' !== i) || (r && '100%' !== r && '100vw' !== r)),
            l = !(('100%' !== s && '100vh' !== s) || (o && '100%' !== o && '100vh' !== o));
          (t.position = this._cssPosition),
            (t.marginLeft = a ? '0' : this._leftOffset),
            (t.marginTop = l ? '0' : this._topOffset),
            (t.marginBottom = this._bottomOffset),
            (t.marginRight = this._rightOffset),
            a
              ? (e.justifyContent = 'flex-start')
              : 'center' === this._justifyContent
              ? (e.justifyContent = 'center')
              : 'rtl' === this._overlayRef.getConfig().direction
              ? 'flex-start' === this._justifyContent
                ? (e.justifyContent = 'flex-end')
                : 'flex-end' === this._justifyContent && (e.justifyContent = 'flex-start')
              : (e.justifyContent = this._justifyContent),
            (e.alignItems = l ? 'flex-start' : this._alignItems);
        }
        dispose() {
          if (this._isDisposed || !this._overlayRef) return;
          const t = this._overlayRef.overlayElement.style,
            e = this._overlayRef.hostElement,
            n = e.style;
          e.classList.remove(Ox),
            (n.justifyContent =
              n.alignItems =
              t.marginTop =
              t.marginBottom =
              t.marginLeft =
              t.marginRight =
              t.position =
                ''),
            (this._overlayRef = null),
            (this._isDisposed = !0);
        }
      }
      let Ax = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._viewportRuler = t), (this._document = e), (this._platform = n), (this._overlayContainer = i);
            }
            global() {
              return new Px();
            }
            connectedTo(t, e, n) {
              return new Ex(e, n, t, this._viewportRuler, this._document, this._platform, this._overlayContainer);
            }
            flexibleConnectedTo(t) {
              return new xx(t, this._viewportRuler, this._document, this._platform, this._overlayContainer);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(qw), _i(Th), _i(wy), _i(bx));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(qw), _i(Th), _i(wy), _i(bx));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Tx = 0,
        Dx = (() => {
          class t {
            constructor(t, e, n, i, s, r, o, a, l, c, h) {
              (this.scrollStrategies = t),
                (this._overlayContainer = e),
                (this._componentFactoryResolver = n),
                (this._positionBuilder = i),
                (this._keyboardDispatcher = s),
                (this._injector = r),
                (this._ngZone = o),
                (this._document = a),
                (this._directionality = l),
                (this._location = c),
                (this._outsideClickDispatcher = h);
            }
            create(t) {
              const e = this._createHostElement(),
                n = this._createPaneElement(e),
                i = this._createPortalOutlet(n),
                s = new ux(t);
              return (
                (s.direction = s.direction || this._directionality.value),
                new yx(
                  i,
                  e,
                  n,
                  s,
                  this._ngZone,
                  this._keyboardDispatcher,
                  this._document,
                  this._location,
                  this._outsideClickDispatcher
                )
              );
            }
            position() {
              return this._positionBuilder;
            }
            _createPaneElement(t) {
              const e = this._document.createElement('div');
              return (e.id = 'cdk-overlay-' + Tx++), e.classList.add('cdk-overlay-pane'), t.appendChild(e), e;
            }
            _createHostElement() {
              const t = this._document.createElement('div');
              return this._overlayContainer.getContainerElement().appendChild(t), t;
            }
            _createPortalOutlet(t) {
              return (
                this._appRef || (this._appRef = this._injector.get(bh)),
                new Zw(t, this._componentFactoryResolver, this._appRef, this._injector, this._document)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                _i(hx),
                _i(bx),
                _i(Ga),
                _i(Ax),
                _i(fx),
                _i(mo),
                _i(Xc),
                _i(Th),
                _i(fv),
                _i(Wh),
                _i(gx)
              );
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const Mx = [
          { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },
          { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },
          { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },
          { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },
        ],
        Rx = new Jn('cdk-connected-overlay-scroll-strategy');
      let Ix = (() => {
          class t {
            constructor(t) {
              this.elementRef = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'cdk-overlay-origin', ''],
                ['', 'overlay-origin', ''],
                ['', 'cdkOverlayOrigin', ''],
              ],
              exportAs: ['cdkOverlayOrigin'],
            })),
            t
          );
        })(),
        Lx = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this._overlay = t),
                (this._dir = s),
                (this._hasBackdrop = !1),
                (this._lockPosition = !1),
                (this._growAfterOpen = !1),
                (this._flexibleDimensions = !1),
                (this._push = !1),
                (this._backdropSubscription = u.EMPTY),
                (this._attachSubscription = u.EMPTY),
                (this._detachSubscription = u.EMPTY),
                (this._positionSubscription = u.EMPTY),
                (this.viewportMargin = 0),
                (this.open = !1),
                (this.disableClose = !1),
                (this.backdropClick = new cc()),
                (this.positionChange = new cc()),
                (this.attach = new cc()),
                (this.detach = new cc()),
                (this.overlayKeydown = new cc()),
                (this.overlayOutsideClick = new cc()),
                (this._templatePortal = new Qw(e, n)),
                (this._scrollStrategyFactory = i),
                (this.scrollStrategy = this._scrollStrategyFactory());
            }
            get offsetX() {
              return this._offsetX;
            }
            set offsetX(t) {
              (this._offsetX = t), this._position && this._updatePositionStrategy(this._position);
            }
            get offsetY() {
              return this._offsetY;
            }
            set offsetY(t) {
              (this._offsetY = t), this._position && this._updatePositionStrategy(this._position);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(t) {
              this._hasBackdrop = py(t);
            }
            get lockPosition() {
              return this._lockPosition;
            }
            set lockPosition(t) {
              this._lockPosition = py(t);
            }
            get flexibleDimensions() {
              return this._flexibleDimensions;
            }
            set flexibleDimensions(t) {
              this._flexibleDimensions = py(t);
            }
            get growAfterOpen() {
              return this._growAfterOpen;
            }
            set growAfterOpen(t) {
              this._growAfterOpen = py(t);
            }
            get push() {
              return this._push;
            }
            set push(t) {
              this._push = py(t);
            }
            get overlayRef() {
              return this._overlayRef;
            }
            get dir() {
              return this._dir ? this._dir.value : 'ltr';
            }
            ngOnDestroy() {
              this._attachSubscription.unsubscribe(),
                this._detachSubscription.unsubscribe(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this._overlayRef && this._overlayRef.dispose();
            }
            ngOnChanges(t) {
              this._position &&
                (this._updatePositionStrategy(this._position),
                this._overlayRef.updateSize({
                  width: this.width,
                  minWidth: this.minWidth,
                  height: this.height,
                  minHeight: this.minHeight,
                }),
                t.origin && this.open && this._position.apply()),
                t.open && (this.open ? this._attachOverlay() : this._detachOverlay());
            }
            _createOverlay() {
              (this.positions && this.positions.length) || (this.positions = Mx);
              const t = (this._overlayRef = this._overlay.create(this._buildConfig()));
              (this._attachSubscription = t.attachments().subscribe(() => this.attach.emit())),
                (this._detachSubscription = t.detachments().subscribe(() => this.detach.emit())),
                t.keydownEvents().subscribe((t) => {
                  this.overlayKeydown.next(t),
                    t.keyCode !== ry || this.disableClose || ly(t) || (t.preventDefault(), this._detachOverlay());
                }),
                this._overlayRef.outsidePointerEvents().subscribe((t) => {
                  this.overlayOutsideClick.next(t);
                });
            }
            _buildConfig() {
              const t = (this._position = this.positionStrategy || this._createPositionStrategy()),
                e = new ux({
                  direction: this._dir,
                  positionStrategy: t,
                  scrollStrategy: this.scrollStrategy,
                  hasBackdrop: this.hasBackdrop,
                });
              return (
                (this.width || 0 === this.width) && (e.width = this.width),
                (this.height || 0 === this.height) && (e.height = this.height),
                (this.minWidth || 0 === this.minWidth) && (e.minWidth = this.minWidth),
                (this.minHeight || 0 === this.minHeight) && (e.minHeight = this.minHeight),
                this.backdropClass && (e.backdropClass = this.backdropClass),
                this.panelClass && (e.panelClass = this.panelClass),
                e
              );
            }
            _updatePositionStrategy(t) {
              const e = this.positions.map((t) => ({
                originX: t.originX,
                originY: t.originY,
                overlayX: t.overlayX,
                overlayY: t.overlayY,
                offsetX: t.offsetX || this.offsetX,
                offsetY: t.offsetY || this.offsetY,
                panelClass: t.panelClass || void 0,
              }));
              return t
                .setOrigin(this.origin.elementRef)
                .withPositions(e)
                .withFlexibleDimensions(this.flexibleDimensions)
                .withPush(this.push)
                .withGrowAfterOpen(this.growAfterOpen)
                .withViewportMargin(this.viewportMargin)
                .withLockedPosition(this.lockPosition)
                .withTransformOriginOn(this.transformOriginSelector);
            }
            _createPositionStrategy() {
              const t = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);
              return this._updatePositionStrategy(t), t;
            }
            _attachOverlay() {
              this._overlayRef ? (this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop) : this._createOverlay(),
                this._overlayRef.hasAttached() || this._overlayRef.attach(this._templatePortal),
                this.hasBackdrop
                  ? (this._backdropSubscription = this._overlayRef.backdropClick().subscribe((t) => {
                      this.backdropClick.emit(t);
                    }))
                  : this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe(),
                this.positionChange.observers.length > 0 &&
                  (this._positionSubscription = this._position.positionChanges
                    .pipe(
                      (function (t, e = !1) {
                        return (n) => n.lift(new ex(t, e));
                      })(() => this.positionChange.observers.length > 0)
                    )
                    .subscribe((t) => {
                      this.positionChange.emit(t),
                        0 === this.positionChange.observers.length && this._positionSubscription.unsubscribe();
                    }));
            }
            _detachOverlay() {
              this._overlayRef && this._overlayRef.detach(),
                this._backdropSubscription.unsubscribe(),
                this._positionSubscription.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Dx), Ro(Tl), Ro(Nl), Ro(Rx), Ro(fv, 8));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'cdk-connected-overlay', ''],
                ['', 'connected-overlay', ''],
                ['', 'cdkConnectedOverlay', ''],
              ],
              inputs: {
                viewportMargin: ['cdkConnectedOverlayViewportMargin', 'viewportMargin'],
                open: ['cdkConnectedOverlayOpen', 'open'],
                disableClose: ['cdkConnectedOverlayDisableClose', 'disableClose'],
                scrollStrategy: ['cdkConnectedOverlayScrollStrategy', 'scrollStrategy'],
                offsetX: ['cdkConnectedOverlayOffsetX', 'offsetX'],
                offsetY: ['cdkConnectedOverlayOffsetY', 'offsetY'],
                hasBackdrop: ['cdkConnectedOverlayHasBackdrop', 'hasBackdrop'],
                lockPosition: ['cdkConnectedOverlayLockPosition', 'lockPosition'],
                flexibleDimensions: ['cdkConnectedOverlayFlexibleDimensions', 'flexibleDimensions'],
                growAfterOpen: ['cdkConnectedOverlayGrowAfterOpen', 'growAfterOpen'],
                push: ['cdkConnectedOverlayPush', 'push'],
                positions: ['cdkConnectedOverlayPositions', 'positions'],
                origin: ['cdkConnectedOverlayOrigin', 'origin'],
                positionStrategy: ['cdkConnectedOverlayPositionStrategy', 'positionStrategy'],
                width: ['cdkConnectedOverlayWidth', 'width'],
                height: ['cdkConnectedOverlayHeight', 'height'],
                minWidth: ['cdkConnectedOverlayMinWidth', 'minWidth'],
                minHeight: ['cdkConnectedOverlayMinHeight', 'minHeight'],
                backdropClass: ['cdkConnectedOverlayBackdropClass', 'backdropClass'],
                panelClass: ['cdkConnectedOverlayPanelClass', 'panelClass'],
                transformOriginSelector: ['cdkConnectedOverlayTransformOriginOn', 'transformOriginSelector'],
              },
              outputs: {
                backdropClick: 'backdropClick',
                positionChange: 'positionChange',
                attach: 'attach',
                detach: 'detach',
                overlayKeydown: 'overlayKeydown',
                overlayOutsideClick: 'overlayOutsideClick',
              },
              exportAs: ['cdkConnectedOverlay'],
              features: [ue],
            })),
            t
          );
        })();
      const Fx = {
        provide: Rx,
        deps: [Dx],
        useFactory: function (t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let Nx = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ providers: [Dx, Fx], imports: [[gv, tx, Uw], Uw] })),
          t
        );
      })();
      const Vx = ['underline'],
        Bx = ['connectionContainer'],
        zx = ['inputContainer'],
        jx = ['label'];
      function Hx(t, e) {
        1 & t &&
          (Bo(0),
          Ca(1, '\n      '),
          Fo(2, 'div', 14),
          Ca(3, '\n        '),
          Vo(4, 'div', 15),
          Ca(5, '\n        '),
          Vo(6, 'div', 16),
          Ca(7, '\n        '),
          Vo(8, 'div', 17),
          Ca(9, '\n      '),
          No(),
          Ca(10, '\n      '),
          Fo(11, 'div', 18),
          Ca(12, '\n        '),
          Vo(13, 'div', 15),
          Ca(14, '\n        '),
          Vo(15, 'div', 16),
          Ca(16, '\n        '),
          Vo(17, 'div', 17),
          Ca(18, '\n      '),
          No(),
          Ca(19, '\n    '),
          zo());
      }
      function $x(t, e) {
        1 & t && (Fo(0, 'div', 19), Ca(1, '\n      '), ta(2, 1), Ca(3, '\n    '), No());
      }
      function qx(t, e) {
        if (
          (1 & t &&
            (Bo(0),
            Ca(1, '\n            '),
            ta(2, 2),
            Ca(3, '\n            '),
            Fo(4, 'span'),
            Ca(5),
            No(),
            Ca(6, '\n          '),
            zo()),
          2 & t)
        ) {
          const t = Xo(2);
          tr(5), ka(t._control.placeholder);
        }
      }
      function Wx(t, e) {
        1 & t && ta(0, 3, ['*ngSwitchCase', 'true']);
      }
      function Ux(t, e) {
        1 & t && (Fo(0, 'span', 23), Ca(1, ' *'), No());
      }
      function Yx(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'label', 20, 21),
            Uo('cdkObserveContent', function () {
              return Fe(t), Xo().updateOutlineGap();
            }),
            Ca(2, '\n\n          '),
            Ca(3, '\n          '),
            Do(4, qx, 7, 1, 'ng-container', 12),
            Ca(5, '\n\n          '),
            Do(6, Wx, 1, 0, 'ng-content', 12),
            Ca(7, '\n\n          '),
            Ca(8, '\n          '),
            Do(9, Ux, 2, 0, 'span', 22),
            Ca(10, '\n        '),
            No();
        }
        if (2 & t) {
          const t = Xo();
          ha('mat-empty', t._control.empty && !t._shouldAlwaysFloat())(
            'mat-form-field-empty',
            t._control.empty && !t._shouldAlwaysFloat()
          )('mat-accent', 'accent' == t.color)('mat-warn', 'warn' == t.color),
            Io('cdkObserveContentDisabled', 'outline' != t.appearance)('id', t._labelId)('ngSwitch', t._hasLabel()),
            Ao('for', t._control.id)('aria-owns', t._control.id),
            tr(4),
            Io('ngSwitchCase', !1),
            tr(2),
            Io('ngSwitchCase', !0),
            tr(3),
            Io('ngIf', !t.hideRequiredMarker && t._control.required && !t._control.disabled);
        }
      }
      function Gx(t, e) {
        1 & t && (Fo(0, 'div', 24), Ca(1, '\n      '), ta(2, 4), Ca(3, '\n    '), No());
      }
      function Qx(t, e) {
        if ((1 & t && (Fo(0, 'div', 25, 26), Ca(2, '\n    '), Vo(3, 'span', 27), Ca(4, '\n  '), No()), 2 & t)) {
          const t = Xo();
          tr(3), ha('mat-accent', 'accent' == t.color)('mat-warn', 'warn' == t.color);
        }
      }
      function Kx(t, e) {
        1 & t && (Fo(0, 'div'), Ca(1, '\n      '), ta(2, 5), Ca(3, '\n    '), No()),
          2 & t && Io('@transitionMessages', Xo()._subscriptAnimationState);
      }
      function Xx(t, e) {
        if ((1 & t && (Fo(0, 'div', 31), Ca(1), No()), 2 & t)) {
          const t = Xo(2);
          Io('id', t._hintLabelId), tr(1), ka(t.hintLabel);
        }
      }
      function Zx(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'div', 28),
            Ca(1, '\n      '),
            Ca(2, '\n      '),
            Do(3, Xx, 2, 2, 'div', 29),
            Ca(4, '\n      '),
            ta(5, 6),
            Ca(6, '\n      '),
            Vo(7, 'div', 30),
            Ca(8, '\n      '),
            ta(9, 7),
            Ca(10, '\n    '),
            No()),
          2 & t)
        ) {
          const t = Xo();
          Io('@transitionMessages', t._subscriptAnimationState), tr(3), Io('ngIf', t.hintLabel);
        }
      }
      const Jx = [
          '*',
          [['', 'matPrefix', '']],
          [['mat-placeholder']],
          [['mat-label']],
          [['', 'matSuffix', '']],
          [['mat-error']],
          [['mat-hint', 3, 'align', 'end']],
          [['mat-hint', 'align', 'end']],
        ],
        tC = [
          '*',
          '[matPrefix]',
          'mat-placeholder',
          'mat-label',
          '[matSuffix]',
          'mat-error',
          "mat-hint:not([align='end'])",
          "mat-hint[align='end']",
        ];
      let eC = 0;
      const nC = new Jn('MatError');
      let iC = (() => {
        class t {
          constructor() {
            this.id = 'mat-error-' + eC++;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['mat-error']],
            hostAttrs: ['role', 'alert', 1, 'mat-error'],
            hostVars: 1,
            hostBindings: function (t, e) {
              2 & t && Ao('id', e.id);
            },
            inputs: { id: 'id' },
            features: [Wa([{ provide: nC, useExisting: t }])],
          })),
          t
        );
      })();
      const sC = {
        transitionMessages: yg('transitionMessages', [
          Cg('enter', xg({ opacity: 1, transform: 'translateY(0%)' })),
          Sg('void => enter', [
            xg({ opacity: 0, transform: 'translateY(-5px)' }),
            vg('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),
          ]),
        ]),
      };
      let rC = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵdir = Xt({ type: t })),
          t
        );
      })();
      const oC = new Jn('MatHint');
      let aC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['mat-label']] })),
            t
          );
        })(),
        lC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['mat-placeholder']] })),
            t
          );
        })();
      const cC = new Jn('MatPrefix'),
        hC = new Jn('MatSuffix');
      let uC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'matSuffix', '']],
              features: [Wa([{ provide: hC, useExisting: t }])],
            })),
            t
          );
        })(),
        dC = 0;
      class pC {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const mC = Pv(pC, 'primary'),
        fC = new Jn('MAT_FORM_FIELD_DEFAULT_OPTIONS'),
        gC = new Jn('MatFormField');
      let _C = (() => {
          class t extends mC {
            constructor(t, e, n, i, s, r, o, a) {
              super(t),
                (this._elementRef = t),
                (this._changeDetectorRef = e),
                (this._dir = i),
                (this._defaults = s),
                (this._platform = r),
                (this._ngZone = o),
                (this._outlineGapCalculationNeededImmediately = !1),
                (this._outlineGapCalculationNeededOnStable = !1),
                (this._destroyed = new C()),
                (this._showAlwaysAnimate = !1),
                (this._subscriptAnimationState = ''),
                (this._hintLabel = ''),
                (this._hintLabelId = 'mat-hint-' + dC++),
                (this._labelId = 'mat-form-field-label-' + dC++),
                (this.floatLabel = this._getDefaultFloatLabelState()),
                (this._animationsEnabled = 'NoopAnimations' !== a),
                (this.appearance = s && s.appearance ? s.appearance : 'legacy'),
                (this._hideRequiredMarker = !(!s || null == s.hideRequiredMarker) && s.hideRequiredMarker);
            }
            get appearance() {
              return this._appearance;
            }
            set appearance(t) {
              const e = this._appearance;
              (this._appearance = t || (this._defaults && this._defaults.appearance) || 'legacy'),
                'outline' === this._appearance && e !== t && (this._outlineGapCalculationNeededOnStable = !0);
            }
            get hideRequiredMarker() {
              return this._hideRequiredMarker;
            }
            set hideRequiredMarker(t) {
              this._hideRequiredMarker = py(t);
            }
            _shouldAlwaysFloat() {
              return 'always' === this.floatLabel && !this._showAlwaysAnimate;
            }
            _canLabelFloat() {
              return 'never' !== this.floatLabel;
            }
            get hintLabel() {
              return this._hintLabel;
            }
            set hintLabel(t) {
              (this._hintLabel = t), this._processHints();
            }
            get floatLabel() {
              return 'legacy' !== this.appearance && 'never' === this._floatLabel ? 'auto' : this._floatLabel;
            }
            set floatLabel(t) {
              t !== this._floatLabel &&
                ((this._floatLabel = t || this._getDefaultFloatLabelState()), this._changeDetectorRef.markForCheck());
            }
            get _control() {
              return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;
            }
            set _control(t) {
              this._explicitFormFieldControl = t;
            }
            getLabelId() {
              return this._hasFloatingLabel() ? this._labelId : null;
            }
            getConnectedOverlayOrigin() {
              return this._connectionContainerRef || this._elementRef;
            }
            ngAfterContentInit() {
              this._validateControlChild();
              const t = this._control;
              t.controlType && this._elementRef.nativeElement.classList.add(`mat-form-field-type-${t.controlType}`),
                t.stateChanges.pipe(bv(null)).subscribe(() => {
                  this._validatePlaceholders(), this._syncDescribedByIds(), this._changeDetectorRef.markForCheck();
                }),
                t.ngControl &&
                  t.ngControl.valueChanges &&
                  t.ngControl.valueChanges
                    .pipe(Lw(this._destroyed))
                    .subscribe(() => this._changeDetectorRef.markForCheck()),
                this._ngZone.runOutsideAngular(() => {
                  this._ngZone.onStable.pipe(Lw(this._destroyed)).subscribe(() => {
                    this._outlineGapCalculationNeededOnStable && this.updateOutlineGap();
                  });
                }),
                q(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {
                  (this._outlineGapCalculationNeededOnStable = !0), this._changeDetectorRef.markForCheck();
                }),
                this._hintChildren.changes.pipe(bv(null)).subscribe(() => {
                  this._processHints(), this._changeDetectorRef.markForCheck();
                }),
                this._errorChildren.changes.pipe(bv(null)).subscribe(() => {
                  this._syncDescribedByIds(), this._changeDetectorRef.markForCheck();
                }),
                this._dir &&
                  this._dir.change.pipe(Lw(this._destroyed)).subscribe(() => {
                    'function' == typeof requestAnimationFrame
                      ? this._ngZone.runOutsideAngular(() => {
                          requestAnimationFrame(() => this.updateOutlineGap());
                        })
                      : this.updateOutlineGap();
                  });
            }
            ngAfterContentChecked() {
              this._validateControlChild(), this._outlineGapCalculationNeededImmediately && this.updateOutlineGap();
            }
            ngAfterViewInit() {
              (this._subscriptAnimationState = 'enter'), this._changeDetectorRef.detectChanges();
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _shouldForward(t) {
              const e = this._control ? this._control.ngControl : null;
              return e && e[t];
            }
            _hasPlaceholder() {
              return !!((this._control && this._control.placeholder) || this._placeholderChild);
            }
            _hasLabel() {
              return !(!this._labelChildNonStatic && !this._labelChildStatic);
            }
            _shouldLabelFloat() {
              return (
                this._canLabelFloat() &&
                ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat())
              );
            }
            _hideControlPlaceholder() {
              return (
                ('legacy' === this.appearance && !this._hasLabel()) || (this._hasLabel() && !this._shouldLabelFloat())
              );
            }
            _hasFloatingLabel() {
              return this._hasLabel() || ('legacy' === this.appearance && this._hasPlaceholder());
            }
            _getDisplayedMessages() {
              return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState
                ? 'error'
                : 'hint';
            }
            _animateAndLockLabel() {
              this._hasFloatingLabel() &&
                this._canLabelFloat() &&
                (this._animationsEnabled &&
                  this._label &&
                  ((this._showAlwaysAnimate = !0),
                  sf(this._label.nativeElement, 'transitionend')
                    .pipe(pf(1))
                    .subscribe(() => {
                      this._showAlwaysAnimate = !1;
                    })),
                (this.floatLabel = 'always'),
                this._changeDetectorRef.markForCheck());
            }
            _validatePlaceholders() {}
            _processHints() {
              this._validateHints(), this._syncDescribedByIds();
            }
            _validateHints() {}
            _getDefaultFloatLabelState() {
              return (this._defaults && this._defaults.floatLabel) || 'auto';
            }
            _syncDescribedByIds() {
              if (this._control) {
                let t = [];
                if (
                  (this._control.userAriaDescribedBy &&
                    'string' == typeof this._control.userAriaDescribedBy &&
                    t.push(...this._control.userAriaDescribedBy.split(' ')),
                  'hint' === this._getDisplayedMessages())
                ) {
                  const e = this._hintChildren ? this._hintChildren.find((t) => 'start' === t.align) : null,
                    n = this._hintChildren ? this._hintChildren.find((t) => 'end' === t.align) : null;
                  e ? t.push(e.id) : this._hintLabel && t.push(this._hintLabelId), n && t.push(n.id);
                } else this._errorChildren && t.push(...this._errorChildren.map((t) => t.id));
                this._control.setDescribedByIds(t);
              }
            }
            _validateControlChild() {}
            updateOutlineGap() {
              const t = this._label ? this._label.nativeElement : null;
              if ('outline' !== this.appearance || !t || !t.children.length || !t.textContent.trim()) return;
              if (!this._platform.isBrowser) return;
              if (!this._isAttachedToDOM()) return void (this._outlineGapCalculationNeededImmediately = !0);
              let e = 0,
                n = 0;
              const i = this._connectionContainerRef.nativeElement,
                s = i.querySelectorAll('.mat-form-field-outline-start'),
                r = i.querySelectorAll('.mat-form-field-outline-gap');
              if (this._label && this._label.nativeElement.children.length) {
                const s = i.getBoundingClientRect();
                if (0 === s.width && 0 === s.height)
                  return (
                    (this._outlineGapCalculationNeededOnStable = !0),
                    void (this._outlineGapCalculationNeededImmediately = !1)
                  );
                const r = this._getStartEnd(s),
                  o = t.children,
                  a = this._getStartEnd(o[0].getBoundingClientRect());
                let l = 0;
                for (let t = 0; t < o.length; t++) l += o[t].offsetWidth;
                (e = Math.abs(a - r) - 5), (n = l > 0 ? 0.75 * l + 10 : 0);
              }
              for (let o = 0; o < s.length; o++) s[o].style.width = `${e}px`;
              for (let o = 0; o < r.length; o++) r[o].style.width = `${n}px`;
              this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = !1;
            }
            _getStartEnd(t) {
              return this._dir && 'rtl' === this._dir.value ? t.right : t.left;
            }
            _isAttachedToDOM() {
              const t = this._elementRef.nativeElement;
              if (t.getRootNode) {
                const e = t.getRootNode();
                return e && e !== t;
              }
              return document.documentElement.contains(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(kl), Ro(Za), Ro(fv, 8), Ro(fC, 8), Ro(wy), Ro(Xc), Ro(ey, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-form-field']],
              contentQueries: function (t, e, n) {
                if (
                  (1 & t &&
                    (Cc(n, rC, 1),
                    Cc(n, rC, 3),
                    Cc(n, aC, 1),
                    Cc(n, aC, 3),
                    Cc(n, lC, 1),
                    Cc(n, nC, 1),
                    Cc(n, oC, 1),
                    Cc(n, cC, 1),
                    Cc(n, hC, 1)),
                  2 & t)
                ) {
                  let t;
                  wc((t = kc())) && (e._controlNonStatic = t.first),
                    wc((t = kc())) && (e._controlStatic = t.first),
                    wc((t = kc())) && (e._labelChildNonStatic = t.first),
                    wc((t = kc())) && (e._labelChildStatic = t.first),
                    wc((t = kc())) && (e._placeholderChild = t.first),
                    wc((t = kc())) && (e._errorChildren = t),
                    wc((t = kc())) && (e._hintChildren = t),
                    wc((t = kc())) && (e._prefixChildren = t),
                    wc((t = kc())) && (e._suffixChildren = t);
                }
              },
              viewQuery: function (t, e) {
                if ((1 & t && (xc(Vx, 1), xc(Bx, 3), xc(zx, 1), xc(jx, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.underlineRef = t.first),
                    wc((t = kc())) && (e._connectionContainerRef = t.first),
                    wc((t = kc())) && (e._inputContainerRef = t.first),
                    wc((t = kc())) && (e._label = t.first);
                }
              },
              hostAttrs: [1, 'mat-form-field'],
              hostVars: 40,
              hostBindings: function (t, e) {
                2 & t &&
                  ha('mat-form-field-appearance-standard', 'standard' == e.appearance)(
                    'mat-form-field-appearance-fill',
                    'fill' == e.appearance
                  )('mat-form-field-appearance-outline', 'outline' == e.appearance)(
                    'mat-form-field-appearance-legacy',
                    'legacy' == e.appearance
                  )('mat-form-field-invalid', e._control.errorState)('mat-form-field-can-float', e._canLabelFloat())(
                    'mat-form-field-should-float',
                    e._shouldLabelFloat()
                  )('mat-form-field-has-label', e._hasFloatingLabel())(
                    'mat-form-field-hide-placeholder',
                    e._hideControlPlaceholder()
                  )('mat-form-field-disabled', e._control.disabled)('mat-form-field-autofilled', e._control.autofilled)(
                    'mat-focused',
                    e._control.focused
                  )('ng-untouched', e._shouldForward('untouched'))('ng-touched', e._shouldForward('touched'))(
                    'ng-pristine',
                    e._shouldForward('pristine')
                  )('ng-dirty', e._shouldForward('dirty'))('ng-valid', e._shouldForward('valid'))(
                    'ng-invalid',
                    e._shouldForward('invalid')
                  )('ng-pending', e._shouldForward('pending'))('_mat-animation-noopable', !e._animationsEnabled);
              },
              inputs: {
                color: 'color',
                floatLabel: 'floatLabel',
                appearance: 'appearance',
                hideRequiredMarker: 'hideRequiredMarker',
                hintLabel: 'hintLabel',
              },
              exportAs: ['matFormField'],
              features: [Wa([{ provide: gC, useExisting: t }]), go],
              ngContentSelectors: tC,
              decls: 36,
              vars: 8,
              consts: [
                [1, 'mat-form-field-wrapper'],
                [1, 'mat-form-field-flex', 3, 'click'],
                ['connectionContainer', ''],
                [4, 'ngIf'],
                ['class', 'mat-form-field-prefix', 4, 'ngIf'],
                [1, 'mat-form-field-infix'],
                ['inputContainer', ''],
                [1, 'mat-form-field-label-wrapper'],
                [
                  'class',
                  'mat-form-field-label',
                  3,
                  'cdkObserveContentDisabled',
                  'id',
                  'mat-empty',
                  'mat-form-field-empty',
                  'mat-accent',
                  'mat-warn',
                  'ngSwitch',
                  'cdkObserveContent',
                  4,
                  'ngIf',
                ],
                ['class', 'mat-form-field-suffix', 4, 'ngIf'],
                ['class', 'mat-form-field-underline', 4, 'ngIf'],
                [1, 'mat-form-field-subscript-wrapper', 3, 'ngSwitch'],
                [4, 'ngSwitchCase'],
                ['class', 'mat-form-field-hint-wrapper', 4, 'ngSwitchCase'],
                [1, 'mat-form-field-outline'],
                [1, 'mat-form-field-outline-start'],
                [1, 'mat-form-field-outline-gap'],
                [1, 'mat-form-field-outline-end'],
                [1, 'mat-form-field-outline', 'mat-form-field-outline-thick'],
                [1, 'mat-form-field-prefix'],
                [1, 'mat-form-field-label', 3, 'cdkObserveContentDisabled', 'id', 'ngSwitch', 'cdkObserveContent'],
                ['label', ''],
                ['class', 'mat-placeholder-required mat-form-field-required-marker', 'aria-hidden', 'true', 4, 'ngIf'],
                ['aria-hidden', 'true', 1, 'mat-placeholder-required', 'mat-form-field-required-marker'],
                [1, 'mat-form-field-suffix'],
                [1, 'mat-form-field-underline'],
                ['underline', ''],
                [1, 'mat-form-field-ripple'],
                [1, 'mat-form-field-hint-wrapper'],
                ['class', 'mat-hint', 3, 'id', 4, 'ngIf'],
                [1, 'mat-form-field-hint-spacer'],
                [1, 'mat-hint', 3, 'id'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Jo(Jx),
                  Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'div', 1, 2),
                  Uo('click', function (t) {
                    return e._control.onContainerClick && e._control.onContainerClick(t);
                  }),
                  Ca(4, '\n\n    '),
                  Ca(5, '\n    '),
                  Do(6, Hx, 20, 0, 'ng-container', 3),
                  Ca(7, '\n\n    '),
                  Do(8, $x, 4, 0, 'div', 4),
                  Ca(9, '\n\n    '),
                  Fo(10, 'div', 5, 6),
                  Ca(12, '\n      '),
                  ta(13),
                  Ca(14, '\n\n      '),
                  Fo(15, 'span', 7),
                  Ca(16, '\n        '),
                  Ca(17, '\n        '),
                  Do(18, Yx, 11, 16, 'label', 8),
                  Ca(19, '\n      '),
                  No(),
                  Ca(20, '\n    '),
                  No(),
                  Ca(21, '\n\n    '),
                  Do(22, Gx, 4, 0, 'div', 9),
                  Ca(23, '\n  '),
                  No(),
                  Ca(24, '\n\n  '),
                  Ca(25, '\n  '),
                  Do(26, Qx, 5, 4, 'div', 10),
                  Ca(27, '\n\n  '),
                  Fo(28, 'div', 11),
                  Ca(29, '\n    '),
                  Do(30, Kx, 4, 1, 'div', 12),
                  Ca(31, '\n\n    '),
                  Do(32, Zx, 11, 2, 'div', 13),
                  Ca(33, '\n  '),
                  No(),
                  Ca(34, '\n'),
                  No(),
                  Ca(35, '\n')),
                  2 & t &&
                    (tr(6),
                    Io('ngIf', 'outline' == e.appearance),
                    tr(2),
                    Io('ngIf', e._prefixChildren.length),
                    tr(10),
                    Io('ngIf', e._hasFloatingLabel()),
                    tr(4),
                    Io('ngIf', e._suffixChildren.length),
                    tr(4),
                    Io('ngIf', 'outline' != e.appearance),
                    tr(2),
                    Io('ngSwitch', e._getDisplayedMessages()),
                    tr(2),
                    Io('ngSwitchCase', 'error'),
                    tr(2),
                    Io('ngSwitchCase', 'hint'));
              },
              directives: [Ru, Nu, Vu, Ly],
              styles: [
                '.mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n',
                '.mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:"";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n',
                '.mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:" ";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:"";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n',
                '.mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n',
                '.mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n',
                '.mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n',
              ],
              encapsulation: 2,
              data: { animation: [sC.transitionMessages] },
              changeDetection: 0,
            })),
            t
          );
        })(),
        bC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu, Ev, Fy], Ev] })),
            t
          );
        })();
      const yC = ['panel'];
      function vC(t, e) {
        if (
          (1 & t && (Ca(0, '\n  '), Fo(1, 'div', 0, 1), Ca(3, '\n    '), ta(4), Ca(5, '\n  '), No(), Ca(6, '\n')),
          2 & t)
        ) {
          const t = e.id,
            n = Xo();
          tr(1),
            Io('id', n.id)('ngClass', n._classList),
            Ao('aria-label', n.ariaLabel || null)('aria-labelledby', n._getPanelAriaLabelledby(t));
        }
      }
      const wC = ['*'];
      let xC = 0;
      class CC {
        constructor(t, e) {
          (this.source = t), (this.option = e);
        }
      }
      class kC {}
      const SC = Av(kC),
        EC = new Jn('mat-autocomplete-default-options', {
          providedIn: 'root',
          factory: function () {
            return { autoActiveFirstOption: !1 };
          },
        });
      let OC = (() => {
          class t extends SC {
            constructor(t, e, n, i) {
              super(),
                (this._changeDetectorRef = t),
                (this._elementRef = e),
                (this._activeOptionChanges = u.EMPTY),
                (this.showPanel = !1),
                (this._isOpen = !1),
                (this.displayWith = null),
                (this.optionSelected = new cc()),
                (this.opened = new cc()),
                (this.closed = new cc()),
                (this.optionActivated = new cc()),
                (this._classList = {}),
                (this.id = 'mat-autocomplete-' + xC++),
                (this.inertGroups = (null == i ? void 0 : i.SAFARI) || !1),
                (this._autoActiveFirstOption = !!n.autoActiveFirstOption);
            }
            get isOpen() {
              return this._isOpen && this.showPanel;
            }
            get autoActiveFirstOption() {
              return this._autoActiveFirstOption;
            }
            set autoActiveFirstOption(t) {
              this._autoActiveFirstOption = py(t);
            }
            set classList(t) {
              (this._classList =
                t && t.length
                  ? (function (t, e = /\s+/) {
                      const n = [];
                      if (null != t) {
                        const i = Array.isArray(t) ? t : `${t}`.split(e);
                        for (const t of i) {
                          const e = `${t}`.trim();
                          e && n.push(e);
                        }
                      }
                      return n;
                    })(t).reduce((t, e) => ((t[e] = !0), t), {})
                  : {}),
                this._setVisibilityClasses(this._classList),
                (this._elementRef.nativeElement.className = '');
            }
            ngAfterContentInit() {
              (this._keyManager = new Yy(this.options).withWrap()),
                (this._activeOptionChanges = this._keyManager.change.subscribe((t) => {
                  this.optionActivated.emit({ source: this, option: this.options.toArray()[t] || null });
                })),
                this._setVisibility();
            }
            ngOnDestroy() {
              this._activeOptionChanges.unsubscribe();
            }
            _setScrollTop(t) {
              this.panel && (this.panel.nativeElement.scrollTop = t);
            }
            _getScrollTop() {
              return this.panel ? this.panel.nativeElement.scrollTop : 0;
            }
            _setVisibility() {
              (this.showPanel = !!this.options.length),
                this._setVisibilityClasses(this._classList),
                this._changeDetectorRef.markForCheck();
            }
            _emitSelectEvent(t) {
              const e = new CC(this, t);
              this.optionSelected.emit(e);
            }
            _getPanelAriaLabelledby(t) {
              return this.ariaLabel ? null : this.ariaLabelledby ? (t ? t + ' ' : '') + this.ariaLabelledby : t;
            }
            _setVisibilityClasses(t) {
              (t[this._visibleClass] = this.showPanel), (t[this._hiddenClass] = !this.showPanel);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(kl), Ro(Za), Ro(EC), Ro(wy));
            }),
            (t.ɵdir = Xt({
              type: t,
              viewQuery: function (t, e) {
                if ((1 & t && (xc(Tl, 3), xc(yC, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.template = t.first), wc((t = kc())) && (e.panel = t.first);
                }
              },
              inputs: {
                displayWith: 'displayWith',
                autoActiveFirstOption: 'autoActiveFirstOption',
                classList: ['class', 'classList'],
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                panelWidth: 'panelWidth',
              },
              outputs: {
                optionSelected: 'optionSelected',
                opened: 'opened',
                closed: 'closed',
                optionActivated: 'optionActivated',
              },
              features: [go],
            })),
            t
          );
        })(),
        PC = (() => {
          class t extends OC {
            constructor() {
              super(...arguments),
                (this._visibleClass = 'mat-autocomplete-visible'),
                (this._hiddenClass = 'mat-autocomplete-hidden');
            }
          }
          return (
            (t.ɵfac = function (e) {
              return AC(e || t);
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-autocomplete']],
              contentQueries: function (t, e, n) {
                if ((1 & t && (Cc(n, dw, 1), Cc(n, gw, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.optionGroups = t), wc((t = kc())) && (e.options = t);
                }
              },
              hostAttrs: [1, 'mat-autocomplete'],
              inputs: { disableRipple: 'disableRipple' },
              exportAs: ['matAutocomplete'],
              features: [Wa([{ provide: aw, useExisting: t }]), go],
              ngContentSelectors: wC,
              decls: 2,
              vars: 0,
              consts: [
                ['role', 'listbox', 1, 'mat-autocomplete-panel', 3, 'id', 'ngClass'],
                ['panel', ''],
              ],
              template: function (t, e) {
                1 & t && (Jo(), Do(0, vC, 7, 4, 'ng-template'), Ca(1, '\n'));
              },
              directives: [Au],
              styles: [
                '.mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })();
      const AC = Gn(PC),
        TC = new Jn('mat-autocomplete-scroll-strategy'),
        DC = {
          provide: TC,
          deps: [Dx],
          useFactory: function (t) {
            return () => t.scrollStrategies.reposition();
          },
        },
        MC = { provide: Nd, useExisting: ot(() => IC), multi: !0 };
      let RC = (() => {
          class t {
            constructor(t, e, n, i, s, r, o, a, l, c, h) {
              (this._element = t),
                (this._overlay = e),
                (this._viewContainerRef = n),
                (this._zone = i),
                (this._changeDetectorRef = s),
                (this._dir = o),
                (this._formField = a),
                (this._document = l),
                (this._viewportRuler = c),
                (this._defaults = h),
                (this._componentDestroyed = !1),
                (this._autocompleteDisabled = !1),
                (this._manuallyFloatingLabel = !1),
                (this._viewportSubscription = u.EMPTY),
                (this._canOpenOnNextFocus = !0),
                (this._closeKeyEventStream = new C()),
                (this._windowBlurHandler = () => {
                  this._canOpenOnNextFocus =
                    this._document.activeElement !== this._element.nativeElement || this.panelOpen;
                }),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this.position = 'auto'),
                (this.autocompleteAttribute = 'off'),
                (this._overlayAttached = !1),
                (this.optionSelections = tf(() =>
                  this.autocomplete && this.autocomplete.options
                    ? q(...this.autocomplete.options.map((t) => t.onSelectionChange))
                    : this._zone.onStable.pipe(
                        pf(1),
                        cf(() => this.optionSelections)
                      )
                )),
                (this._scrollStrategy = r);
            }
            get autocompleteDisabled() {
              return this._autocompleteDisabled;
            }
            set autocompleteDisabled(t) {
              this._autocompleteDisabled = py(t);
            }
            ngAfterViewInit() {
              const t = this._getWindow();
              void 0 !== t && this._zone.runOutsideAngular(() => t.addEventListener('blur', this._windowBlurHandler));
            }
            ngOnChanges(t) {
              t.position &&
                this._positionStrategy &&
                (this._setStrategyPositions(this._positionStrategy),
                this.panelOpen && this._overlayRef.updatePosition());
            }
            ngOnDestroy() {
              const t = this._getWindow();
              void 0 !== t && t.removeEventListener('blur', this._windowBlurHandler),
                this._viewportSubscription.unsubscribe(),
                (this._componentDestroyed = !0),
                this._destroyPanel(),
                this._closeKeyEventStream.complete();
            }
            get panelOpen() {
              return this._overlayAttached && this.autocomplete.showPanel;
            }
            openPanel() {
              this._attachOverlay(), this._floatLabel();
            }
            closePanel() {
              this._resetLabel(),
                this._overlayAttached &&
                  (this.panelOpen && this.autocomplete.closed.emit(),
                  (this.autocomplete._isOpen = this._overlayAttached = !1),
                  this._overlayRef &&
                    this._overlayRef.hasAttached() &&
                    (this._overlayRef.detach(), this._closingActionsSubscription.unsubscribe()),
                  this._componentDestroyed || this._changeDetectorRef.detectChanges());
            }
            updatePosition() {
              this._overlayAttached && this._overlayRef.updatePosition();
            }
            get panelClosingActions() {
              return q(
                this.optionSelections,
                this.autocomplete._keyManager.tabOut.pipe(_m(() => this._overlayAttached)),
                this._closeKeyEventStream,
                this._getOutsideClickStream(),
                this._overlayRef ? this._overlayRef.detachments().pipe(_m(() => this._overlayAttached)) : fm()
              ).pipe(E((t) => (t instanceof mw ? t : null)));
            }
            get activeOption() {
              return this.autocomplete && this.autocomplete._keyManager
                ? this.autocomplete._keyManager.activeItem
                : null;
            }
            _getOutsideClickStream() {
              return q(
                sf(this._document, 'click'),
                sf(this._document, 'auxclick'),
                sf(this._document, 'touchend')
              ).pipe(
                _m((t) => {
                  const e = this._isInsideShadowRoot && t.composedPath ? t.composedPath()[0] : t.target,
                    n = this._formField ? this._formField._elementRef.nativeElement : null,
                    i = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;
                  return (
                    this._overlayAttached &&
                    e !== this._element.nativeElement &&
                    (!n || !n.contains(e)) &&
                    (!i || !i.contains(e)) &&
                    !!this._overlayRef &&
                    !this._overlayRef.overlayElement.contains(e)
                  );
                })
              );
            }
            writeValue(t) {
              Promise.resolve(null).then(() => this._setTriggerValue(t));
            }
            registerOnChange(t) {
              this._onChange = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            setDisabledState(t) {
              this._element.nativeElement.disabled = t;
            }
            _handleKeydown(t) {
              const e = t.keyCode;
              if ((e !== ry || ly(t) || t.preventDefault(), this.activeOption && e === sy && this.panelOpen))
                this.activeOption._selectViaInteraction(), this._resetActiveItem(), t.preventDefault();
              else if (this.autocomplete) {
                const n = this.autocomplete._keyManager.activeItem,
                  i = e === ay || 40 === e;
                this.panelOpen || 9 === e
                  ? this.autocomplete._keyManager.onKeydown(t)
                  : i && this._canOpen() && this.openPanel(),
                  (i || this.autocomplete._keyManager.activeItem !== n) &&
                    this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);
              }
            }
            _handleInput(t) {
              let e = t.target,
                n = e.value;
              'number' === e.type && (n = '' == n ? null : parseFloat(n)),
                this._previousValue !== n &&
                  ((this._previousValue = n),
                  this._onChange(n),
                  this._canOpen() && this._document.activeElement === t.target && this.openPanel());
            }
            _handleFocus() {
              this._canOpenOnNextFocus
                ? this._canOpen() &&
                  ((this._previousValue = this._element.nativeElement.value),
                  this._attachOverlay(),
                  this._floatLabel(!0))
                : (this._canOpenOnNextFocus = !0);
            }
            _floatLabel(t = !1) {
              this._formField &&
                'auto' === this._formField.floatLabel &&
                (t ? this._formField._animateAndLockLabel() : (this._formField.floatLabel = 'always'),
                (this._manuallyFloatingLabel = !0));
            }
            _resetLabel() {
              this._manuallyFloatingLabel &&
                ((this._formField.floatLabel = 'auto'), (this._manuallyFloatingLabel = !1));
            }
            _subscribeToClosingActions() {
              return q(
                this._zone.onStable.pipe(pf(1)),
                this.autocomplete.options.changes.pipe(
                  gf(() => this._positionStrategy.reapplyLastPosition()),
                  Sf(0)
                )
              )
                .pipe(
                  cf(() => {
                    const t = this.panelOpen;
                    return (
                      this._resetActiveItem(),
                      this.autocomplete._setVisibility(),
                      this.panelOpen &&
                        (this._overlayRef.updatePosition(), t !== this.panelOpen && this.autocomplete.opened.emit()),
                      this.panelClosingActions
                    );
                  }),
                  pf(1)
                )
                .subscribe((t) => this._setValueAndClose(t));
            }
            _destroyPanel() {
              this._overlayRef && (this.closePanel(), this._overlayRef.dispose(), (this._overlayRef = null));
            }
            _setTriggerValue(t) {
              const e = this.autocomplete && this.autocomplete.displayWith ? this.autocomplete.displayWith(t) : t,
                n = null != e ? e : '';
              this._formField ? (this._formField._control.value = n) : (this._element.nativeElement.value = n),
                (this._previousValue = n);
            }
            _setValueAndClose(t) {
              t &&
                t.source &&
                (this._clearPreviousSelectedOption(t.source),
                this._setTriggerValue(t.source.value),
                this._onChange(t.source.value),
                this._element.nativeElement.focus(),
                this.autocomplete._emitSelectEvent(t.source)),
                this.closePanel();
            }
            _clearPreviousSelectedOption(t) {
              this.autocomplete.options.forEach((e) => {
                e !== t && e.selected && e.deselect();
              });
            }
            _attachOverlay() {
              var t;
              null == this._isInsideShadowRoot && (this._isInsideShadowRoot = !!My(this._element.nativeElement));
              let e = this._overlayRef;
              e
                ? (this._positionStrategy.setOrigin(this._getConnectedElement()),
                  e.updateSize({ width: this._getPanelWidth() }))
                : ((this._portal = new Qw(this.autocomplete.template, this._viewContainerRef, {
                    id: null === (t = this._formField) || void 0 === t ? void 0 : t.getLabelId(),
                  })),
                  (e = this._overlay.create(this._getOverlayConfig())),
                  (this._overlayRef = e),
                  e.keydownEvents().subscribe((t) => {
                    ((t.keyCode === ry && !ly(t)) || (t.keyCode === ay && ly(t, 'altKey'))) &&
                      (this._resetActiveItem(),
                      this._closeKeyEventStream.next(),
                      t.stopPropagation(),
                      t.preventDefault());
                  }),
                  (this._viewportSubscription = this._viewportRuler.change().subscribe(() => {
                    this.panelOpen && e && e.updateSize({ width: this._getPanelWidth() });
                  }))),
                e &&
                  !e.hasAttached() &&
                  (e.attach(this._portal), (this._closingActionsSubscription = this._subscribeToClosingActions()));
              const n = this.panelOpen;
              this.autocomplete._setVisibility(),
                (this.autocomplete._isOpen = this._overlayAttached = !0),
                this.panelOpen && n !== this.panelOpen && this.autocomplete.opened.emit();
            }
            _getOverlayConfig() {
              var t;
              return new ux({
                positionStrategy: this._getOverlayPosition(),
                scrollStrategy: this._scrollStrategy(),
                width: this._getPanelWidth(),
                direction: this._dir,
                panelClass: null === (t = this._defaults) || void 0 === t ? void 0 : t.overlayPanelClass,
              });
            }
            _getOverlayPosition() {
              const t = this._overlay
                .position()
                .flexibleConnectedTo(this._getConnectedElement())
                .withFlexibleDimensions(!1)
                .withPush(!1);
              return this._setStrategyPositions(t), (this._positionStrategy = t), t;
            }
            _setStrategyPositions(t) {
              const e = [
                  { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },
                  { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },
                ],
                n = this._aboveClass,
                i = [
                  { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass: n },
                  { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass: n },
                ];
              let s;
              (s = 'above' === this.position ? i : 'below' === this.position ? e : [...e, ...i]), t.withPositions(s);
            }
            _getConnectedElement() {
              return this.connectedTo
                ? this.connectedTo.elementRef
                : this._formField
                ? this._formField.getConnectedOverlayOrigin()
                : this._element;
            }
            _getPanelWidth() {
              return this.autocomplete.panelWidth || this._getHostWidth();
            }
            _getHostWidth() {
              return this._getConnectedElement().nativeElement.getBoundingClientRect().width;
            }
            _resetActiveItem() {
              const t = this.autocomplete;
              t.autoActiveFirstOption ? t._keyManager.setFirstItemActive() : t._keyManager.setActiveItem(-1);
            }
            _canOpen() {
              const t = this._element.nativeElement;
              return !t.readOnly && !t.disabled && !this._autocompleteDisabled;
            }
            _getWindow() {
              var t;
              return (null === (t = this._document) || void 0 === t ? void 0 : t.defaultView) || window;
            }
            _scrollToOption(t) {
              const e = this.autocomplete,
                n = _w(t, e.options, e.optionGroups);
              if (0 === t && 1 === n) e._setScrollTop(0);
              else if (e.panel) {
                const n = e.options.toArray()[t];
                if (n) {
                  const t = n._getHostElement(),
                    i = bw(t.offsetTop, t.offsetHeight, e._getScrollTop(), e.panel.nativeElement.offsetHeight);
                  e._setScrollTop(i);
                }
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                Ro(Za),
                Ro(Dx),
                Ro(Nl),
                Ro(Xc),
                Ro(kl),
                Ro(TC),
                Ro(fv, 8),
                Ro(gC, 9),
                Ro(Th, 8),
                Ro(qw),
                Ro(EC, 8)
              );
            }),
            (t.ɵdir = Xt({
              type: t,
              inputs: {
                position: ['matAutocompletePosition', 'position'],
                autocompleteAttribute: ['autocomplete', 'autocompleteAttribute'],
                autocompleteDisabled: ['matAutocompleteDisabled', 'autocompleteDisabled'],
                autocomplete: ['matAutocomplete', 'autocomplete'],
                connectedTo: ['matAutocompleteConnectedTo', 'connectedTo'],
              },
              features: [ue],
            })),
            t
          );
        })(),
        IC = (() => {
          class t extends RC {
            constructor() {
              super(...arguments), (this._aboveClass = 'mat-autocomplete-panel-above');
            }
          }
          return (
            (t.ɵfac = function (e) {
              return LC(e || t);
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['input', 'matAutocomplete', ''],
                ['textarea', 'matAutocomplete', ''],
              ],
              hostAttrs: [1, 'mat-autocomplete-trigger'],
              hostVars: 7,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('focusin', function () {
                    return e._handleFocus();
                  })('blur', function () {
                    return e._onTouched();
                  })('input', function (t) {
                    return e._handleInput(t);
                  })('keydown', function (t) {
                    return e._handleKeydown(t);
                  }),
                  2 & t &&
                    Ao('autocomplete', e.autocompleteAttribute)('role', e.autocompleteDisabled ? null : 'combobox')(
                      'aria-autocomplete',
                      e.autocompleteDisabled ? null : 'list'
                    )('aria-activedescendant', e.panelOpen && e.activeOption ? e.activeOption.id : null)(
                      'aria-expanded',
                      e.autocompleteDisabled ? null : e.panelOpen.toString()
                    )(
                      'aria-owns',
                      e.autocompleteDisabled || !e.panelOpen || null == e.autocomplete ? null : e.autocomplete.id
                    )('aria-haspopup', !e.autocompleteDisabled);
              },
              exportAs: ['matAutocompleteTrigger'],
              features: [Wa([MC]), go],
            })),
            t
          );
        })();
      const LC = Gn(IC);
      let FC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [DC], imports: [[Nx, yw, Ev, Gu], Ww, yw, Ev] })),
            t
          );
        })(),
        NC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[pv, Ev], Ev] })),
            t
          );
        })();
      const VC = ['mat-button', ''],
        BC = ['*'],
        zC = [
          'mat-button',
          'mat-flat-button',
          'mat-icon-button',
          'mat-raised-button',
          'mat-stroked-button',
          'mat-mini-fab',
          'mat-fab',
        ];
      class jC {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const HC = Pv(Ov(Av(jC)));
      let $C = (() => {
          class t extends HC {
            constructor(t, e, n) {
              super(t),
                (this._focusMonitor = e),
                (this._animationMode = n),
                (this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab')),
                (this.isIconButton = this._hasHostAttributes('mat-icon-button'));
              for (const i of zC) this._hasHostAttributes(i) && this._getHostElement().classList.add(i);
              t.nativeElement.classList.add('mat-button-base'), this.isRoundButton && (this.color = 'accent');
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0);
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            focus(t, e) {
              t ? this._focusMonitor.focusVia(this._getHostElement(), t, e) : this._getHostElement().focus(e);
            }
            _getHostElement() {
              return this._elementRef.nativeElement;
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _hasHostAttributes(...t) {
              return t.some((t) => this._getHostElement().hasAttribute(t));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(av), Ro(ey, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [
                ['button', 'mat-button', ''],
                ['button', 'mat-raised-button', ''],
                ['button', 'mat-icon-button', ''],
                ['button', 'mat-fab', ''],
                ['button', 'mat-mini-fab', ''],
                ['button', 'mat-stroked-button', ''],
                ['button', 'mat-flat-button', ''],
              ],
              viewQuery: function (t, e) {
                if ((1 & t && xc(iw, 1), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.ripple = t.first);
                }
              },
              hostAttrs: [1, 'mat-focus-indicator'],
              hostVars: 5,
              hostBindings: function (t, e) {
                2 & t &&
                  (Ao('disabled', e.disabled || null),
                  ha('_mat-animation-noopable', 'NoopAnimations' === e._animationMode)(
                    'mat-button-disabled',
                    e.disabled
                  ));
              },
              inputs: { disabled: 'disabled', disableRipple: 'disableRipple', color: 'color' },
              exportAs: ['matButton'],
              features: [go],
              attrs: VC,
              ngContentSelectors: BC,
              decls: 7,
              vars: 5,
              consts: [
                [1, 'mat-button-wrapper'],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-button-ripple',
                  3,
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleTrigger',
                ],
                [1, 'mat-button-focus-overlay'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Jo(),
                  Fo(0, 'span', 0),
                  ta(1),
                  No(),
                  Ca(2, '\n'),
                  Vo(3, 'span', 1),
                  Ca(4, '\n'),
                  Vo(5, 'span', 2),
                  Ca(6, '\n')),
                  2 & t &&
                    (tr(3),
                    ha('mat-button-ripple-round', e.isRoundButton || e.isIconButton),
                    Io('matRippleDisabled', e._isRippleDisabled())('matRippleCentered', e.isIconButton)(
                      'matRippleTrigger',
                      e._getHostElement()
                    ));
              },
              directives: [iw],
              styles: [
                '.mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        qC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[sw, Ev], Ev] })),
            t
          );
        })(),
        WC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Ev, sw], Ev] })),
            t
          );
        })();
      const UC = ['*', [['mat-card-footer']]],
        YC = ['*', 'mat-card-footer'];
      let GC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['mat-card-content'], ['', 'mat-card-content', ''], ['', 'matCardContent', '']],
              hostAttrs: [1, 'mat-card-content'],
            })),
            t
          );
        })(),
        QC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['mat-card-title'], ['', 'mat-card-title', ''], ['', 'matCardTitle', '']],
              hostAttrs: [1, 'mat-card-title'],
            })),
            t
          );
        })(),
        KC = (() => {
          class t {
            constructor(t) {
              this._animationMode = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(ey, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-card']],
              hostAttrs: [1, 'mat-card', 'mat-focus-indicator'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && ha('_mat-animation-noopable', 'NoopAnimations' === e._animationMode);
              },
              exportAs: ['matCard'],
              ngContentSelectors: YC,
              decls: 4,
              vars: 0,
              template: function (t, e) {
                1 & t && (Jo(UC), ta(0), Ca(1, '\n'), ta(2, 1), Ca(3, '\n'));
              },
              styles: [
                '.mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions:not(.mat-card-actions-align-end) .mat-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-raised-button:first-child,.mat-card-actions:not(.mat-card-actions-align-end) .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-actions-align-end .mat-button:last-child,.mat-card-actions-align-end .mat-raised-button:last-child,.mat-card-actions-align-end .mat-stroked-button:last-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        XC = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Ev], Ev] })),
            t
          );
        })();
      const ZC = ['input'],
        JC = function () {
          return { enterDuration: 150 };
        },
        tk = ['*'],
        ek = new Jn('mat-checkbox-default-options', { providedIn: 'root', factory: nk });
      function nk() {
        return { color: 'accent', clickAction: 'check-indeterminate' };
      }
      let ik = 0;
      const sk = nk(),
        rk = { provide: Nd, useExisting: ot(() => ck), multi: !0 };
      class ok {}
      class ak {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const lk = Tv(Pv(Av(Ov(ak))));
      let ck = (() => {
          class t extends lk {
            constructor(t, e, n, i, s, r, o) {
              super(t),
                (this._changeDetectorRef = e),
                (this._focusMonitor = n),
                (this._ngZone = i),
                (this._animationMode = r),
                (this._options = o),
                (this.ariaLabel = ''),
                (this.ariaLabelledby = null),
                (this._uniqueId = 'mat-checkbox-' + ++ik),
                (this.id = this._uniqueId),
                (this.labelPosition = 'after'),
                (this.name = null),
                (this.change = new cc()),
                (this.indeterminateChange = new cc()),
                (this._onTouched = () => {}),
                (this._currentAnimationClass = ''),
                (this._currentCheckState = 0),
                (this._controlValueAccessorChangeFn = () => {}),
                (this._checked = !1),
                (this._disabled = !1),
                (this._indeterminate = !1),
                (this._options = this._options || sk),
                (this.color = this.defaultColor = this._options.color || sk.color),
                (this.tabIndex = parseInt(s) || 0);
            }
            get inputId() {
              return `${this.id || this._uniqueId}-input`;
            }
            get required() {
              return this._required;
            }
            set required(t) {
              this._required = py(t);
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0).subscribe((t) => {
                t ||
                  Promise.resolve().then(() => {
                    this._onTouched(), this._changeDetectorRef.markForCheck();
                  });
              }),
                this._syncIndeterminate(this._indeterminate);
            }
            ngAfterViewChecked() {}
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            get checked() {
              return this._checked;
            }
            set checked(t) {
              t != this.checked && ((this._checked = t), this._changeDetectorRef.markForCheck());
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              const e = py(t);
              e !== this.disabled && ((this._disabled = e), this._changeDetectorRef.markForCheck());
            }
            get indeterminate() {
              return this._indeterminate;
            }
            set indeterminate(t) {
              const e = t != this._indeterminate;
              (this._indeterminate = py(t)),
                e &&
                  (this._transitionCheckState(this._indeterminate ? 3 : this.checked ? 1 : 2),
                  this.indeterminateChange.emit(this._indeterminate)),
                this._syncIndeterminate(this._indeterminate);
            }
            _isRippleDisabled() {
              return this.disableRipple || this.disabled;
            }
            _onLabelTextChange() {
              this._changeDetectorRef.detectChanges();
            }
            writeValue(t) {
              this.checked = !!t;
            }
            registerOnChange(t) {
              this._controlValueAccessorChangeFn = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            setDisabledState(t) {
              this.disabled = t;
            }
            _getAriaChecked() {
              return this.checked ? 'true' : this.indeterminate ? 'mixed' : 'false';
            }
            _transitionCheckState(t) {
              let e = this._currentCheckState,
                n = this._elementRef.nativeElement;
              if (
                e !== t &&
                (this._currentAnimationClass.length > 0 && n.classList.remove(this._currentAnimationClass),
                (this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(e, t)),
                (this._currentCheckState = t),
                this._currentAnimationClass.length > 0)
              ) {
                n.classList.add(this._currentAnimationClass);
                const t = this._currentAnimationClass;
                this._ngZone.runOutsideAngular(() => {
                  setTimeout(() => {
                    n.classList.remove(t);
                  }, 1e3);
                });
              }
            }
            _emitChangeEvent() {
              const t = new ok();
              (t.source = this),
                (t.checked = this.checked),
                this._controlValueAccessorChangeFn(this.checked),
                this.change.emit(t),
                this._inputElement && (this._inputElement.nativeElement.checked = this.checked);
            }
            toggle() {
              this.checked = !this.checked;
            }
            _onInputClick(t) {
              var e;
              const n = null === (e = this._options) || void 0 === e ? void 0 : e.clickAction;
              t.stopPropagation(),
                this.disabled || 'noop' === n
                  ? this.disabled ||
                    'noop' !== n ||
                    ((this._inputElement.nativeElement.checked = this.checked),
                    (this._inputElement.nativeElement.indeterminate = this.indeterminate))
                  : (this.indeterminate &&
                      'check' !== n &&
                      Promise.resolve().then(() => {
                        (this._indeterminate = !1), this.indeterminateChange.emit(this._indeterminate);
                      }),
                    this.toggle(),
                    this._transitionCheckState(this._checked ? 1 : 2),
                    this._emitChangeEvent());
            }
            focus(t, e) {
              t ? this._focusMonitor.focusVia(this._inputElement, t, e) : this._inputElement.nativeElement.focus(e);
            }
            _onInteractionEvent(t) {
              t.stopPropagation();
            }
            _getAnimationClassForCheckStateTransition(t, e) {
              if ('NoopAnimations' === this._animationMode) return '';
              let n = '';
              switch (t) {
                case 0:
                  if (1 === e) n = 'unchecked-checked';
                  else {
                    if (3 != e) return '';
                    n = 'unchecked-indeterminate';
                  }
                  break;
                case 2:
                  n = 1 === e ? 'unchecked-checked' : 'unchecked-indeterminate';
                  break;
                case 1:
                  n = 2 === e ? 'checked-unchecked' : 'checked-indeterminate';
                  break;
                case 3:
                  n = 1 === e ? 'indeterminate-checked' : 'indeterminate-unchecked';
              }
              return `mat-checkbox-anim-${n}`;
            }
            _syncIndeterminate(t) {
              const e = this._inputElement;
              e && (e.nativeElement.indeterminate = t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(kl), Ro(av), Ro(Xc), Kn('tabindex'), Ro(ey, 8), Ro(ek, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-checkbox']],
              viewQuery: function (t, e) {
                if ((1 & t && (xc(ZC, 1), xc(iw, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._inputElement = t.first), wc((t = kc())) && (e.ripple = t.first);
                }
              },
              hostAttrs: [1, 'mat-checkbox'],
              hostVars: 12,
              hostBindings: function (t, e) {
                2 & t &&
                  (Oa('id', e.id),
                  Ao('tabindex', null),
                  ha('mat-checkbox-indeterminate', e.indeterminate)('mat-checkbox-checked', e.checked)(
                    'mat-checkbox-disabled',
                    e.disabled
                  )('mat-checkbox-label-before', 'before' == e.labelPosition)(
                    '_mat-animation-noopable',
                    'NoopAnimations' === e._animationMode
                  ));
              },
              inputs: {
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                id: 'id',
                labelPosition: 'labelPosition',
                name: 'name',
                required: 'required',
                checked: 'checked',
                disabled: 'disabled',
                indeterminate: 'indeterminate',
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
                value: 'value',
              },
              outputs: { change: 'change', indeterminateChange: 'indeterminateChange' },
              exportAs: ['matCheckbox'],
              features: [Wa([rk]), go],
              ngContentSelectors: tk,
              decls: 38,
              vars: 20,
              consts: [
                [1, 'mat-checkbox-layout'],
                ['label', ''],
                [1, 'mat-checkbox-inner-container'],
                [
                  'type',
                  'checkbox',
                  1,
                  'mat-checkbox-input',
                  'cdk-visually-hidden',
                  3,
                  'id',
                  'required',
                  'checked',
                  'disabled',
                  'tabIndex',
                  'change',
                  'click',
                ],
                ['input', ''],
                [
                  'matRipple',
                  '',
                  1,
                  'mat-checkbox-ripple',
                  'mat-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                  'matRippleRadius',
                  'matRippleCentered',
                  'matRippleAnimation',
                ],
                [1, 'mat-ripple-element', 'mat-checkbox-persistent-ripple'],
                [1, 'mat-checkbox-frame'],
                [1, 'mat-checkbox-background'],
                [
                  'version',
                  '1.1',
                  'focusable',
                  'false',
                  'viewBox',
                  '0 0 24 24',
                  0,
                  'xml',
                  'space',
                  'preserve',
                  1,
                  'mat-checkbox-checkmark',
                ],
                ['fill', 'none', 'stroke', 'white', 'd', 'M4.1,12.7 9,17.6 20.3,6.3', 1, 'mat-checkbox-checkmark-path'],
                [1, 'mat-checkbox-mixedmark'],
                [1, 'mat-checkbox-label', 3, 'cdkObserveContent'],
                ['checkboxLabel', ''],
                [2, 'display', 'none'],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (Jo(),
                    Fo(0, 'label', 0, 1),
                    Ca(2, '\n  '),
                    Fo(3, 'span', 2),
                    Ca(4, '\n    '),
                    Fo(5, 'input', 3, 4),
                    Uo('change', function (t) {
                      return e._onInteractionEvent(t);
                    })('click', function (t) {
                      return e._onInputClick(t);
                    }),
                    No(),
                    Ca(7, '\n    '),
                    Fo(8, 'span', 5),
                    Ca(9, '\n      '),
                    Vo(10, 'span', 6),
                    Ca(11, '\n    '),
                    No(),
                    Ca(12, '\n    '),
                    Vo(13, 'span', 7),
                    Ca(14, '\n    '),
                    Fo(15, 'span', 8),
                    Ca(16, '\n      '),
                    un(),
                    Fo(17, 'svg', 9),
                    Ca(18, '\n        '),
                    Vo(19, 'path', 10),
                    Ca(20, '\n      '),
                    No(),
                    Ca(21, '\n      '),
                    Ca(22, '\n      '),
                    dn(),
                    Vo(23, 'span', 11),
                    Ca(24, '\n    '),
                    No(),
                    Ca(25, '\n  '),
                    No(),
                    Ca(26, '\n  '),
                    Fo(27, 'span', 12, 13),
                    Uo('cdkObserveContent', function () {
                      return e._onLabelTextChange();
                    }),
                    Ca(29, '\n    '),
                    Ca(30, '\n    '),
                    Fo(31, 'span', 14),
                    Ca(32, '\xa0'),
                    No(),
                    Ca(33, '\n    '),
                    ta(34),
                    Ca(35, '\n  '),
                    No(),
                    Ca(36, '\n'),
                    No(),
                    Ca(37, '\n')),
                  2 & t)
                ) {
                  const t = Mo(1),
                    n = Mo(28);
                  Ao('for', e.inputId),
                    tr(3),
                    ha('mat-checkbox-inner-container-no-side-margin', !n.textContent || !n.textContent.trim()),
                    tr(2),
                    Io('id', e.inputId)('required', e.required)('checked', e.checked)('disabled', e.disabled)(
                      'tabIndex',
                      e.tabIndex
                    ),
                    Ao('value', e.value)('name', e.name)('aria-label', e.ariaLabel || null)(
                      'aria-labelledby',
                      e.ariaLabelledby
                    )('aria-checked', e._getAriaChecked())('aria-describedby', e.ariaDescribedby),
                    tr(3),
                    Io('matRippleTrigger', t)('matRippleDisabled', e._isRippleDisabled())('matRippleRadius', 20)(
                      'matRippleCentered',
                      !0
                    )('matRippleAnimation', Zl(19, JC));
                }
              },
              directives: [iw, Ly],
              styles: [
                '@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        hk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })(),
        uk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[sw, Ev, Fy, hk], Ev, hk] })),
            t
          );
        })();
      const dk = ['*'],
        pk = new Jn('MatChipRemove'),
        mk = new Jn('MatChipAvatar'),
        fk = new Jn('MatChipTrailingIcon');
      class gk {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const _k = Tv(Pv(Av(gk), 'primary'), -1);
      let bk = (() => {
          class t extends _k {
            constructor(t, e, n, i, s, r, o, a) {
              super(t),
                (this._elementRef = t),
                (this._ngZone = e),
                (this._changeDetectorRef = s),
                (this._hasFocus = !1),
                (this.chipListSelectable = !0),
                (this._chipListMultiple = !1),
                (this._chipListDisabled = !1),
                (this._selected = !1),
                (this._selectable = !0),
                (this._disabled = !1),
                (this._removable = !0),
                (this._onFocus = new C()),
                (this._onBlur = new C()),
                (this.selectionChange = new cc()),
                (this.destroyed = new cc()),
                (this.removed = new cc()),
                this._addHostClassName(),
                (this._chipRippleTarget = r.createElement('div')),
                this._chipRippleTarget.classList.add('mat-chip-ripple'),
                this._elementRef.nativeElement.appendChild(this._chipRippleTarget),
                (this._chipRipple = new ew(this, e, this._chipRippleTarget, n)),
                this._chipRipple.setupTriggerEvents(t),
                (this.rippleConfig = i || {}),
                (this._animationsDisabled = 'NoopAnimations' === o),
                (this.tabIndex = (null != a && parseInt(a)) || -1);
            }
            get rippleDisabled() {
              return this.disabled || this.disableRipple || this._animationsDisabled || !!this.rippleConfig.disabled;
            }
            get selected() {
              return this._selected;
            }
            set selected(t) {
              const e = py(t);
              e !== this._selected && ((this._selected = e), this._dispatchSelectionChange());
            }
            get value() {
              return void 0 !== this._value ? this._value : this._elementRef.nativeElement.textContent;
            }
            set value(t) {
              this._value = t;
            }
            get selectable() {
              return this._selectable && this.chipListSelectable;
            }
            set selectable(t) {
              this._selectable = py(t);
            }
            get disabled() {
              return this._chipListDisabled || this._disabled;
            }
            set disabled(t) {
              this._disabled = py(t);
            }
            get removable() {
              return this._removable;
            }
            set removable(t) {
              this._removable = py(t);
            }
            get ariaSelected() {
              return this.selectable && (this._chipListMultiple || this.selected) ? this.selected.toString() : null;
            }
            _addHostClassName() {
              const t = 'mat-basic-chip',
                e = this._elementRef.nativeElement;
              e.hasAttribute(t) || e.tagName.toLowerCase() === t
                ? e.classList.add(t)
                : e.classList.add('mat-standard-chip');
            }
            ngOnDestroy() {
              this.destroyed.emit({ chip: this }), this._chipRipple._removeTriggerEvents();
            }
            select() {
              this._selected ||
                ((this._selected = !0), this._dispatchSelectionChange(), this._changeDetectorRef.markForCheck());
            }
            deselect() {
              this._selected &&
                ((this._selected = !1), this._dispatchSelectionChange(), this._changeDetectorRef.markForCheck());
            }
            selectViaInteraction() {
              this._selected ||
                ((this._selected = !0), this._dispatchSelectionChange(!0), this._changeDetectorRef.markForCheck());
            }
            toggleSelected(t = !1) {
              return (
                (this._selected = !this.selected),
                this._dispatchSelectionChange(t),
                this._changeDetectorRef.markForCheck(),
                this.selected
              );
            }
            focus() {
              this._hasFocus || (this._elementRef.nativeElement.focus(), this._onFocus.next({ chip: this })),
                (this._hasFocus = !0);
            }
            remove() {
              this.removable && this.removed.emit({ chip: this });
            }
            _handleClick(t) {
              this.disabled ? t.preventDefault() : t.stopPropagation();
            }
            _handleKeydown(t) {
              if (!this.disabled)
                switch (t.keyCode) {
                  case 46:
                  case 8:
                    this.remove(), t.preventDefault();
                    break;
                  case oy:
                    this.selectable && this.toggleSelected(!0), t.preventDefault();
                }
            }
            _blur() {
              this._ngZone.onStable.pipe(pf(1)).subscribe(() => {
                this._ngZone.run(() => {
                  (this._hasFocus = !1), this._onBlur.next({ chip: this });
                });
              });
            }
            _dispatchSelectionChange(t = !1) {
              this.selectionChange.emit({ source: this, isUserInput: t, selected: this._selected });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Xc), Ro(wy), Ro(nw, 8), Ro(kl), Ro(Th), Ro(ey, 8), Kn('tabindex'));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['mat-basic-chip'], ['', 'mat-basic-chip', ''], ['mat-chip'], ['', 'mat-chip', '']],
              contentQueries: function (t, e, n) {
                if ((1 & t && (Cc(n, mk, 1), Cc(n, fk, 1), Cc(n, pk, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.avatar = t.first),
                    wc((t = kc())) && (e.trailingIcon = t.first),
                    wc((t = kc())) && (e.removeIcon = t.first);
                }
              },
              hostAttrs: ['role', 'option', 1, 'mat-chip', 'mat-focus-indicator'],
              hostVars: 14,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('click', function (t) {
                    return e._handleClick(t);
                  })('keydown', function (t) {
                    return e._handleKeydown(t);
                  })('focus', function () {
                    return e.focus();
                  })('blur', function () {
                    return e._blur();
                  }),
                  2 & t &&
                    (Ao('tabindex', e.disabled ? null : e.tabIndex)('disabled', e.disabled || null)(
                      'aria-disabled',
                      e.disabled.toString()
                    )('aria-selected', e.ariaSelected),
                    ha('mat-chip-selected', e.selected)('mat-chip-with-avatar', e.avatar)(
                      'mat-chip-with-trailing-icon',
                      e.trailingIcon || e.removeIcon
                    )('mat-chip-disabled', e.disabled)('_mat-animation-noopable', e._animationsDisabled));
              },
              inputs: {
                color: 'color',
                disableRipple: 'disableRipple',
                tabIndex: 'tabIndex',
                selected: 'selected',
                value: 'value',
                selectable: 'selectable',
                disabled: 'disabled',
                removable: 'removable',
              },
              outputs: { selectionChange: 'selectionChange', destroyed: 'destroyed', removed: 'removed' },
              exportAs: ['matChip'],
              features: [go],
            })),
            t
          );
        })(),
        yk = (() => {
          class t {
            constructor(t, e) {
              (this._parentChip = t),
                'BUTTON' === e.nativeElement.nodeName && e.nativeElement.setAttribute('type', 'button');
            }
            _handleClick(t) {
              const e = this._parentChip;
              e.removable && !e.disabled && e.remove(), t.stopPropagation();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(bk), Ro(Za));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'matChipRemove', '']],
              hostAttrs: [1, 'mat-chip-remove', 'mat-chip-trailing-icon'],
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('click', function (t) {
                    return e._handleClick(t);
                  });
              },
              features: [Wa([{ provide: pk, useExisting: t }])],
            })),
            t
          );
        })();
      const vk = new Jn('mat-chips-default-options');
      class wk {
        constructor(t, e, n, i) {
          (this._defaultErrorStateMatcher = t),
            (this._parentForm = e),
            (this._parentFormGroup = n),
            (this.ngControl = i);
        }
      }
      const xk = Dv(wk);
      let Ck = 0;
      class kk {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      let Sk = (() => {
          class t extends xk {
            constructor(t, e, n, i, s, r, o) {
              super(r, i, s, o),
                (this._elementRef = t),
                (this._changeDetectorRef = e),
                (this._dir = n),
                (this.ngControl = o),
                (this.controlType = 'mat-chip-list'),
                (this._lastDestroyedChipIndex = null),
                (this._destroyed = new C()),
                (this._uid = 'mat-chip-list-' + Ck++),
                (this._tabIndex = 0),
                (this._userTabIndex = null),
                (this._onTouched = () => {}),
                (this._onChange = () => {}),
                (this._multiple = !1),
                (this._compareWith = (t, e) => t === e),
                (this._required = !1),
                (this._disabled = !1),
                (this.ariaOrientation = 'horizontal'),
                (this._selectable = !0),
                (this.change = new cc()),
                (this.valueChange = new cc()),
                this.ngControl && (this.ngControl.valueAccessor = this);
            }
            get selected() {
              return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];
            }
            get role() {
              return this.empty ? null : 'listbox';
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(t) {
              (this._multiple = py(t)), this._syncChipsState();
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(t) {
              (this._compareWith = t), this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(t) {
              this.writeValue(t), (this._value = t);
            }
            get id() {
              return this._chipInput ? this._chipInput.id : this._uid;
            }
            get required() {
              return this._required;
            }
            set required(t) {
              (this._required = py(t)), this.stateChanges.next();
            }
            get placeholder() {
              return this._chipInput ? this._chipInput.placeholder : this._placeholder;
            }
            set placeholder(t) {
              (this._placeholder = t), this.stateChanges.next();
            }
            get focused() {
              return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();
            }
            get empty() {
              return (!this._chipInput || this._chipInput.empty) && (!this.chips || 0 === this.chips.length);
            }
            get shouldLabelFloat() {
              return !this.empty || this.focused;
            }
            get disabled() {
              return this.ngControl ? !!this.ngControl.disabled : this._disabled;
            }
            set disabled(t) {
              (this._disabled = py(t)), this._syncChipsState();
            }
            get selectable() {
              return this._selectable;
            }
            set selectable(t) {
              (this._selectable = py(t)),
                this.chips && this.chips.forEach((t) => (t.chipListSelectable = this._selectable));
            }
            set tabIndex(t) {
              (this._userTabIndex = t), (this._tabIndex = t);
            }
            get chipSelectionChanges() {
              return q(...this.chips.map((t) => t.selectionChange));
            }
            get chipFocusChanges() {
              return q(...this.chips.map((t) => t._onFocus));
            }
            get chipBlurChanges() {
              return q(...this.chips.map((t) => t._onBlur));
            }
            get chipRemoveChanges() {
              return q(...this.chips.map((t) => t.destroyed));
            }
            ngAfterContentInit() {
              (this._keyManager = new Gy(this.chips)
                .withWrap()
                .withVerticalOrientation()
                .withHomeAndEnd()
                .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')),
                this._dir &&
                  this._dir.change
                    .pipe(Lw(this._destroyed))
                    .subscribe((t) => this._keyManager.withHorizontalOrientation(t)),
                this._keyManager.tabOut.pipe(Lw(this._destroyed)).subscribe(() => {
                  this._allowFocusEscape();
                }),
                this.chips.changes.pipe(bv(null), Lw(this._destroyed)).subscribe(() => {
                  this.disabled &&
                    Promise.resolve().then(() => {
                      this._syncChipsState();
                    }),
                    this._resetChips(),
                    this._initializeSelection(),
                    this._updateTabIndex(),
                    this._updateFocusForDestroyedChips(),
                    this.stateChanges.next();
                });
            }
            ngOnInit() {
              (this._selectionModel = new zw(this.multiple, void 0, !1)), this.stateChanges.next();
            }
            ngDoCheck() {
              this.ngControl &&
                (this.updateErrorState(),
                this.ngControl.disabled !== this._disabled && (this.disabled = !!this.ngControl.disabled));
            }
            ngOnDestroy() {
              this._destroyed.next(),
                this._destroyed.complete(),
                this.stateChanges.complete(),
                this._dropSubscriptions();
            }
            registerInput(t) {
              (this._chipInput = t), this._elementRef.nativeElement.setAttribute('data-mat-chip-input', t.id);
            }
            setDescribedByIds(t) {
              this._ariaDescribedby = t.join(' ');
            }
            writeValue(t) {
              this.chips && this._setSelectionByValue(t, !1);
            }
            registerOnChange(t) {
              this._onChange = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            setDisabledState(t) {
              (this.disabled = t), this.stateChanges.next();
            }
            onContainerClick(t) {
              this._originatesFromChip(t) || this.focus();
            }
            focus(t) {
              this.disabled ||
                (this._chipInput && this._chipInput.focused) ||
                (this.chips.length > 0
                  ? (this._keyManager.setFirstItemActive(), this.stateChanges.next())
                  : (this._focusInput(t), this.stateChanges.next()));
            }
            _focusInput(t) {
              this._chipInput && this._chipInput.focus(t);
            }
            _keydown(t) {
              const e = t.target;
              8 === t.keyCode && this._isInputEmpty(e)
                ? (this._keyManager.setLastItemActive(), t.preventDefault())
                : e && e.classList.contains('mat-chip') && (this._keyManager.onKeydown(t), this.stateChanges.next());
            }
            _updateTabIndex() {
              this._tabIndex = this._userTabIndex || (0 === this.chips.length ? -1 : 0);
            }
            _updateFocusForDestroyedChips() {
              if (null != this._lastDestroyedChipIndex)
                if (this.chips.length) {
                  const t = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);
                  this._keyManager.setActiveItem(t);
                } else this.focus();
              this._lastDestroyedChipIndex = null;
            }
            _isValidIndex(t) {
              return t >= 0 && t < this.chips.length;
            }
            _isInputEmpty(t) {
              return !(!t || 'input' !== t.nodeName.toLowerCase() || t.value);
            }
            _setSelectionByValue(t, e = !0) {
              if ((this._clearSelection(), this.chips.forEach((t) => t.deselect()), Array.isArray(t)))
                t.forEach((t) => this._selectValue(t, e)), this._sortValues();
              else {
                const n = this._selectValue(t, e);
                n && e && this._keyManager.setActiveItem(n);
              }
            }
            _selectValue(t, e = !0) {
              const n = this.chips.find((e) => null != e.value && this._compareWith(e.value, t));
              return n && (e ? n.selectViaInteraction() : n.select(), this._selectionModel.select(n)), n;
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                (this.ngControl || this._value) &&
                  (this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, !1),
                  this.stateChanges.next());
              });
            }
            _clearSelection(t) {
              this._selectionModel.clear(),
                this.chips.forEach((e) => {
                  e !== t && e.deselect();
                }),
                this.stateChanges.next();
            }
            _sortValues() {
              this._multiple &&
                (this._selectionModel.clear(),
                this.chips.forEach((t) => {
                  t.selected && this._selectionModel.select(t);
                }),
                this.stateChanges.next());
            }
            _propagateChanges(t) {
              let e = null;
              (e = Array.isArray(this.selected)
                ? this.selected.map((t) => t.value)
                : this.selected
                ? this.selected.value
                : t),
                (this._value = e),
                this.change.emit(new kk(this, e)),
                this.valueChange.emit(e),
                this._onChange(e),
                this._changeDetectorRef.markForCheck();
            }
            _blur() {
              this._hasFocusedChip() || this._keyManager.setActiveItem(-1),
                this.disabled ||
                  (this._chipInput
                    ? setTimeout(() => {
                        this.focused || this._markAsTouched();
                      })
                    : this._markAsTouched());
            }
            _markAsTouched() {
              this._onTouched(), this._changeDetectorRef.markForCheck(), this.stateChanges.next();
            }
            _allowFocusEscape() {
              -1 !== this._tabIndex &&
                ((this._tabIndex = -1),
                setTimeout(() => {
                  (this._tabIndex = this._userTabIndex || 0), this._changeDetectorRef.markForCheck();
                }));
            }
            _resetChips() {
              this._dropSubscriptions(),
                this._listenToChipsFocus(),
                this._listenToChipsSelection(),
                this._listenToChipsRemoved();
            }
            _dropSubscriptions() {
              this._chipFocusSubscription &&
                (this._chipFocusSubscription.unsubscribe(), (this._chipFocusSubscription = null)),
                this._chipBlurSubscription &&
                  (this._chipBlurSubscription.unsubscribe(), (this._chipBlurSubscription = null)),
                this._chipSelectionSubscription &&
                  (this._chipSelectionSubscription.unsubscribe(), (this._chipSelectionSubscription = null)),
                this._chipRemoveSubscription &&
                  (this._chipRemoveSubscription.unsubscribe(), (this._chipRemoveSubscription = null));
            }
            _listenToChipsSelection() {
              this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((t) => {
                t.source.selected ? this._selectionModel.select(t.source) : this._selectionModel.deselect(t.source),
                  this.multiple ||
                    this.chips.forEach((t) => {
                      !this._selectionModel.isSelected(t) && t.selected && t.deselect();
                    }),
                  t.isUserInput && this._propagateChanges();
              });
            }
            _listenToChipsFocus() {
              (this._chipFocusSubscription = this.chipFocusChanges.subscribe((t) => {
                let e = this.chips.toArray().indexOf(t.chip);
                this._isValidIndex(e) && this._keyManager.updateActiveItem(e), this.stateChanges.next();
              })),
                (this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {
                  this._blur(), this.stateChanges.next();
                }));
            }
            _listenToChipsRemoved() {
              this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((t) => {
                const e = t.chip,
                  n = this.chips.toArray().indexOf(t.chip);
                this._isValidIndex(n) && e._hasFocus && (this._lastDestroyedChipIndex = n);
              });
            }
            _originatesFromChip(t) {
              let e = t.target;
              for (; e && e !== this._elementRef.nativeElement; ) {
                if (e.classList.contains('mat-chip')) return !0;
                e = e.parentElement;
              }
              return !1;
            }
            _hasFocusedChip() {
              return this.chips && this.chips.some((t) => t._hasFocus);
            }
            _syncChipsState() {
              this.chips &&
                this.chips.forEach((t) => {
                  (t._chipListDisabled = this._disabled), (t._chipListMultiple = this.multiple);
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(kl), Ro(fv, 8), Ro(jp, 8), Ro(em, 8), Ro(Uv), Ro(hp, 10));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-chip-list']],
              contentQueries: function (t, e, n) {
                if ((1 & t && Cc(n, bk, 1), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.chips = t);
                }
              },
              hostAttrs: [1, 'mat-chip-list'],
              hostVars: 15,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('focus', function () {
                    return e.focus();
                  })('blur', function () {
                    return e._blur();
                  })('keydown', function (t) {
                    return e._keydown(t);
                  }),
                  2 & t &&
                    (Oa('id', e._uid),
                    Ao('tabindex', e.disabled ? null : e._tabIndex)('aria-describedby', e._ariaDescribedby || null)(
                      'aria-required',
                      e.role ? e.required : null
                    )('aria-disabled', e.disabled.toString())('aria-invalid', e.errorState)(
                      'aria-multiselectable',
                      e.multiple
                    )('role', e.role)('aria-orientation', e.ariaOrientation),
                    ha('mat-chip-list-disabled', e.disabled)('mat-chip-list-invalid', e.errorState)(
                      'mat-chip-list-required',
                      e.required
                    ));
              },
              inputs: {
                ariaOrientation: ['aria-orientation', 'ariaOrientation'],
                multiple: 'multiple',
                compareWith: 'compareWith',
                value: 'value',
                required: 'required',
                placeholder: 'placeholder',
                disabled: 'disabled',
                selectable: 'selectable',
                tabIndex: 'tabIndex',
                errorStateMatcher: 'errorStateMatcher',
              },
              outputs: { change: 'change', valueChange: 'valueChange' },
              exportAs: ['matChipList'],
              features: [Wa([{ provide: rC, useExisting: t }]), go],
              ngContentSelectors: dk,
              decls: 2,
              vars: 0,
              consts: [[1, 'mat-chip-list-wrapper']],
              template: function (t, e) {
                1 & t && (Jo(), Fo(0, 'div', 0), ta(1), No());
              },
              styles: [
                '.mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:"";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        Ek = 0,
        Ok = (() => {
          class t {
            constructor(t, e) {
              (this._elementRef = t),
                (this._defaultOptions = e),
                (this.focused = !1),
                (this._addOnBlur = !1),
                (this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes),
                (this.chipEnd = new cc()),
                (this.placeholder = ''),
                (this.id = 'mat-chip-list-input-' + Ek++),
                (this._disabled = !1),
                (this._inputElement = this._elementRef.nativeElement);
            }
            set chipList(t) {
              t && ((this._chipList = t), this._chipList.registerInput(this));
            }
            get addOnBlur() {
              return this._addOnBlur;
            }
            set addOnBlur(t) {
              this._addOnBlur = py(t);
            }
            get disabled() {
              return this._disabled || (this._chipList && this._chipList.disabled);
            }
            set disabled(t) {
              this._disabled = py(t);
            }
            get empty() {
              return !this._inputElement.value;
            }
            ngOnChanges() {
              this._chipList.stateChanges.next();
            }
            _keydown(t) {
              t && 9 === t.keyCode && !ly(t, 'shiftKey') && this._chipList._allowFocusEscape(), this._emitChipEnd(t);
            }
            _blur() {
              this.addOnBlur && this._emitChipEnd(),
                (this.focused = !1),
                this._chipList.focused || this._chipList._blur(),
                this._chipList.stateChanges.next();
            }
            _focus() {
              (this.focused = !0), this._chipList.stateChanges.next();
            }
            _emitChipEnd(t) {
              !this._inputElement.value && t && this._chipList._keydown(t),
                (t && !this._isSeparatorKey(t)) ||
                  (this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value }),
                  t && t.preventDefault());
            }
            _onInput() {
              this._chipList.stateChanges.next();
            }
            focus(t) {
              this._inputElement.focus(t);
            }
            _isSeparatorKey(t) {
              return !ly(t) && new Set(this.separatorKeyCodes).has(t.keyCode);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(vk));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['input', 'matChipInputFor', '']],
              hostAttrs: [1, 'mat-chip-input', 'mat-input-element'],
              hostVars: 5,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('keydown', function (t) {
                    return e._keydown(t);
                  })('blur', function () {
                    return e._blur();
                  })('focus', function () {
                    return e._focus();
                  })('input', function () {
                    return e._onInput();
                  }),
                  2 & t &&
                    (Oa('id', e.id),
                    Ao('disabled', e.disabled || null)('placeholder', e.placeholder || null)(
                      'aria-invalid',
                      e._chipList && e._chipList.ngControl ? e._chipList.ngControl.invalid : null
                    )('aria-required', (e._chipList && e._chipList.required) || null));
              },
              inputs: {
                separatorKeyCodes: ['matChipInputSeparatorKeyCodes', 'separatorKeyCodes'],
                placeholder: 'placeholder',
                id: 'id',
                chipList: ['matChipInputFor', 'chipList'],
                addOnBlur: ['matChipInputAddOnBlur', 'addOnBlur'],
                disabled: 'disabled',
              },
              outputs: { chipEnd: 'matChipInputTokenEnd' },
              exportAs: ['matChipInput', 'matChipInputFor'],
              features: [ue],
            })),
            t
          );
        })();
      const Pk = { separatorKeyCodes: [sy] };
      let Ak = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ providers: [Uv, { provide: vk, useValue: Pk }], imports: [[Ev]] })),
          t
        );
      })();
      function Tk(t, e) {}
      class Dk {
        constructor() {
          (this.role = 'dialog'),
            (this.panelClass = ''),
            (this.hasBackdrop = !0),
            (this.backdropClass = ''),
            (this.disableClose = !1),
            (this.width = ''),
            (this.height = ''),
            (this.maxWidth = '80vw'),
            (this.data = null),
            (this.ariaDescribedBy = null),
            (this.ariaLabelledBy = null),
            (this.ariaLabel = null),
            (this.autoFocus = !0),
            (this.restoreFocus = !0),
            (this.closeOnNavigation = !0);
        }
      }
      const Mk = {
        dialogContainer: yg('dialogContainer', [
          Cg('void, exit', xg({ opacity: 0, transform: 'scale(0.7)' })),
          Cg('enter', xg({ transform: 'none' })),
          Sg('* => enter', vg('150ms cubic-bezier(0, 0, 0.2, 1)', xg({ transform: 'none', opacity: 1 }))),
          Sg('* => void, * => exit', vg('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', xg({ opacity: 0 }))),
        ]),
      };
      let Rk = (() => {
          class t extends Xw {
            constructor(t, e, n, i, s, r) {
              super(),
                (this._elementRef = t),
                (this._focusTrapFactory = e),
                (this._changeDetectorRef = n),
                (this._config = s),
                (this._focusMonitor = r),
                (this._animationStateChanged = new cc()),
                (this._elementFocusedBeforeDialogWasOpened = null),
                (this._closeInteractionType = null),
                (this.attachDomPortal = (t) => (
                  this._portalOutlet.hasAttached(), this._portalOutlet.attachDomPortal(t)
                )),
                (this._ariaLabelledBy = s.ariaLabelledBy || null),
                (this._document = i);
            }
            _initializeWithAttachedContent() {
              this._setupFocusTrap(), this._capturePreviouslyFocusedElement(), this._focusDialogContainer();
            }
            attachComponentPortal(t) {
              return this._portalOutlet.hasAttached(), this._portalOutlet.attachComponentPortal(t);
            }
            attachTemplatePortal(t) {
              return this._portalOutlet.hasAttached(), this._portalOutlet.attachTemplatePortal(t);
            }
            _recaptureFocus() {
              this._containsFocus() ||
                ((!this._config.autoFocus || !this._focusTrap.focusInitialElement()) &&
                  this._elementRef.nativeElement.focus());
            }
            _trapFocus() {
              this._config.autoFocus
                ? this._focusTrap.focusInitialElementWhenReady()
                : this._containsFocus() || this._elementRef.nativeElement.focus();
            }
            _restoreFocus() {
              const t = this._elementFocusedBeforeDialogWasOpened;
              if (this._config.restoreFocus && t && 'function' == typeof t.focus) {
                const e = this._getActiveElement(),
                  n = this._elementRef.nativeElement;
                (e && e !== this._document.body && e !== n && !n.contains(e)) ||
                  (this._focusMonitor
                    ? (this._focusMonitor.focusVia(t, this._closeInteractionType), (this._closeInteractionType = null))
                    : t.focus());
              }
              this._focusTrap && this._focusTrap.destroy();
            }
            _setupFocusTrap() {
              this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);
            }
            _capturePreviouslyFocusedElement() {
              this._document && (this._elementFocusedBeforeDialogWasOpened = this._getActiveElement());
            }
            _focusDialogContainer() {
              this._elementRef.nativeElement.focus && this._elementRef.nativeElement.focus();
            }
            _containsFocus() {
              const t = this._elementRef.nativeElement,
                e = this._getActiveElement();
              return t === e || t.contains(e);
            }
            _getActiveElement() {
              var t;
              const e = this._document.activeElement;
              return (null === (t = null == e ? void 0 : e.shadowRoot) || void 0 === t ? void 0 : t.activeElement) || e;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Jy), Ro(kl), Ro(Th, 8), Ro(Dk), Ro(av));
            }),
            (t.ɵdir = Xt({
              type: t,
              viewQuery: function (t, e) {
                if ((1 & t && xc(Jw, 3), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._portalOutlet = t.first);
                }
              },
              features: [go],
            })),
            t
          );
        })(),
        Ik = (() => {
          class t extends Rk {
            constructor() {
              super(...arguments), (this._state = 'enter');
            }
            _onAnimationDone({ toState: t, totalTime: e }) {
              'enter' === t
                ? (this._trapFocus(), this._animationStateChanged.next({ state: 'opened', totalTime: e }))
                : 'exit' === t &&
                  (this._restoreFocus(), this._animationStateChanged.next({ state: 'closed', totalTime: e }));
            }
            _onAnimationStart({ toState: t, totalTime: e }) {
              'enter' === t
                ? this._animationStateChanged.next({ state: 'opening', totalTime: e })
                : ('exit' !== t && 'void' !== t) ||
                  this._animationStateChanged.next({ state: 'closing', totalTime: e });
            }
            _startExitAnimation() {
              (this._state = 'exit'), this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return Lk(e || t);
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-dialog-container']],
              hostAttrs: ['tabindex', '-1', 'aria-modal', 'true', 1, 'mat-dialog-container'],
              hostVars: 6,
              hostBindings: function (t, e) {
                1 & t &&
                  Yo('@dialogContainer.start', function (t) {
                    return e._onAnimationStart(t);
                  })('@dialogContainer.done', function (t) {
                    return e._onAnimationDone(t);
                  }),
                  2 & t &&
                    (Oa('id', e._id),
                    Ao('role', e._config.role)('aria-labelledby', e._config.ariaLabel ? null : e._ariaLabelledBy)(
                      'aria-label',
                      e._config.ariaLabel
                    )('aria-describedby', e._config.ariaDescribedBy || null),
                    Pa('@dialogContainer', e._state));
              },
              features: [go],
              decls: 2,
              vars: 0,
              consts: [['cdkPortalOutlet', '']],
              template: function (t, e) {
                1 & t && (Do(0, Tk, 0, 0, 'ng-template', 0), Ca(1, '\n'));
              },
              directives: [Jw],
              styles: [
                '.mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;box-sizing:content-box;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n',
              ],
              encapsulation: 2,
              data: { animation: [Mk.dialogContainer] },
            })),
            t
          );
        })();
      const Lk = Gn(Ik);
      let Fk = 0;
      class Nk {
        constructor(t, e, n = 'mat-dialog-' + Fk++) {
          (this._overlayRef = t),
            (this._containerInstance = e),
            (this.id = n),
            (this.disableClose = this._containerInstance._config.disableClose),
            (this._afterOpened = new C()),
            (this._afterClosed = new C()),
            (this._beforeClosed = new C()),
            (this._state = 0),
            (e._id = n),
            e._animationStateChanged
              .pipe(
                _m((t) => 'opened' === t.state),
                pf(1)
              )
              .subscribe(() => {
                this._afterOpened.next(), this._afterOpened.complete();
              }),
            e._animationStateChanged
              .pipe(
                _m((t) => 'closed' === t.state),
                pf(1)
              )
              .subscribe(() => {
                clearTimeout(this._closeFallbackTimeout), this._finishDialogClose();
              }),
            t.detachments().subscribe(() => {
              this._beforeClosed.next(this._result),
                this._beforeClosed.complete(),
                this._afterClosed.next(this._result),
                this._afterClosed.complete(),
                (this.componentInstance = null),
                this._overlayRef.dispose();
            }),
            t
              .keydownEvents()
              .pipe(_m((t) => t.keyCode === ry && !this.disableClose && !ly(t)))
              .subscribe((t) => {
                t.preventDefault(), Vk(this, 'keyboard');
              }),
            t.backdropClick().subscribe(() => {
              this.disableClose ? this._containerInstance._recaptureFocus() : Vk(this, 'mouse');
            });
        }
        close(t) {
          (this._result = t),
            this._containerInstance._animationStateChanged
              .pipe(
                _m((t) => 'closing' === t.state),
                pf(1)
              )
              .subscribe((e) => {
                this._beforeClosed.next(t),
                  this._beforeClosed.complete(),
                  this._overlayRef.detachBackdrop(),
                  (this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(), e.totalTime + 100));
              }),
            (this._state = 1),
            this._containerInstance._startExitAnimation();
        }
        afterOpened() {
          return this._afterOpened;
        }
        afterClosed() {
          return this._afterClosed;
        }
        beforeClosed() {
          return this._beforeClosed;
        }
        backdropClick() {
          return this._overlayRef.backdropClick();
        }
        keydownEvents() {
          return this._overlayRef.keydownEvents();
        }
        updatePosition(t) {
          let e = this._getPositionStrategy();
          return (
            t && (t.left || t.right) ? (t.left ? e.left(t.left) : e.right(t.right)) : e.centerHorizontally(),
            t && (t.top || t.bottom) ? (t.top ? e.top(t.top) : e.bottom(t.bottom)) : e.centerVertically(),
            this._overlayRef.updatePosition(),
            this
          );
        }
        updateSize(t = '', e = '') {
          return this._overlayRef.updateSize({ width: t, height: e }), this._overlayRef.updatePosition(), this;
        }
        addPanelClass(t) {
          return this._overlayRef.addPanelClass(t), this;
        }
        removePanelClass(t) {
          return this._overlayRef.removePanelClass(t), this;
        }
        getState() {
          return this._state;
        }
        _finishDialogClose() {
          (this._state = 2), this._overlayRef.dispose();
        }
        _getPositionStrategy() {
          return this._overlayRef.getConfig().positionStrategy;
        }
      }
      function Vk(t, e, n) {
        return void 0 !== t._containerInstance && (t._containerInstance._closeInteractionType = e), t.close(n);
      }
      const Bk = new Jn('MatDialogData'),
        zk = new Jn('mat-dialog-default-options'),
        jk = new Jn('mat-dialog-scroll-strategy'),
        Hk = {
          provide: jk,
          deps: [Dx],
          useFactory: function (t) {
            return () => t.scrollStrategies.block();
          },
        };
      let $k = (() => {
          class t {
            constructor(t, e, n, i, s, r, o, a, l) {
              (this._overlay = t),
                (this._injector = e),
                (this._defaultOptions = n),
                (this._parentDialog = i),
                (this._overlayContainer = s),
                (this._dialogRefConstructor = o),
                (this._dialogContainerType = a),
                (this._dialogDataToken = l),
                (this._openDialogsAtThisLevel = []),
                (this._afterAllClosedAtThisLevel = new C()),
                (this._afterOpenedAtThisLevel = new C()),
                (this._ariaHiddenElements = new Map()),
                (this.afterAllClosed = tf(() =>
                  this.openDialogs.length ? this._getAfterAllClosed() : this._getAfterAllClosed().pipe(bv(void 0))
                )),
                (this._scrollStrategy = r);
            }
            get openDialogs() {
              return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;
            }
            get afterOpened() {
              return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;
            }
            _getAfterAllClosed() {
              const t = this._parentDialog;
              return t ? t._getAfterAllClosed() : this._afterAllClosedAtThisLevel;
            }
            open(t, e) {
              (e = (function (t, e) {
                return Object.assign(Object.assign({}, e), t);
              })(e, this._defaultOptions || new Dk())).id && this.getDialogById(e.id);
              const n = this._createOverlay(e),
                i = this._attachDialogContainer(n, e),
                s = this._attachDialogContent(t, i, n, e);
              return (
                this.openDialogs.length || this._hideNonDialogContentFromAssistiveTechnology(),
                this.openDialogs.push(s),
                s.afterClosed().subscribe(() => this._removeOpenDialog(s)),
                this.afterOpened.next(s),
                i._initializeWithAttachedContent(),
                s
              );
            }
            closeAll() {
              this._closeDialogs(this.openDialogs);
            }
            getDialogById(t) {
              return this.openDialogs.find((e) => e.id === t);
            }
            ngOnDestroy() {
              this._closeDialogs(this._openDialogsAtThisLevel),
                this._afterAllClosedAtThisLevel.complete(),
                this._afterOpenedAtThisLevel.complete();
            }
            _createOverlay(t) {
              const e = this._getOverlayConfig(t);
              return this._overlay.create(e);
            }
            _getOverlayConfig(t) {
              const e = new ux({
                positionStrategy: this._overlay.position().global(),
                scrollStrategy: t.scrollStrategy || this._scrollStrategy(),
                panelClass: t.panelClass,
                hasBackdrop: t.hasBackdrop,
                direction: t.direction,
                minWidth: t.minWidth,
                minHeight: t.minHeight,
                maxWidth: t.maxWidth,
                maxHeight: t.maxHeight,
                disposeOnNavigation: t.closeOnNavigation,
              });
              return t.backdropClass && (e.backdropClass = t.backdropClass), e;
            }
            _attachDialogContainer(t, e) {
              const n = mo.create({
                  parent: (e && e.viewContainerRef && e.viewContainerRef.injector) || this._injector,
                  providers: [{ provide: Dk, useValue: e }],
                }),
                i = new Gw(this._dialogContainerType, e.viewContainerRef, n, e.componentFactoryResolver);
              return t.attach(i).instance;
            }
            _attachDialogContent(t, e, n, i) {
              const s = new this._dialogRefConstructor(n, e, i.id);
              if (t instanceof Tl) e.attachTemplatePortal(new Qw(t, null, { $implicit: i.data, dialogRef: s }));
              else {
                const n = this._createInjector(i, s, e),
                  r = e.attachComponentPortal(new Gw(t, i.viewContainerRef, n));
                s.componentInstance = r.instance;
              }
              return s.updateSize(i.width, i.height).updatePosition(i.position), s;
            }
            _createInjector(t, e, n) {
              const i = t && t.viewContainerRef && t.viewContainerRef.injector,
                s = [
                  { provide: this._dialogContainerType, useValue: n },
                  { provide: this._dialogDataToken, useValue: t.data },
                  { provide: this._dialogRefConstructor, useValue: e },
                ];
              return (
                !t.direction ||
                  (i && i.get(fv, null)) ||
                  s.push({ provide: fv, useValue: { value: t.direction, change: fm() } }),
                mo.create({ parent: i || this._injector, providers: s })
              );
            }
            _removeOpenDialog(t) {
              const e = this.openDialogs.indexOf(t);
              e > -1 &&
                (this.openDialogs.splice(e, 1),
                this.openDialogs.length ||
                  (this._ariaHiddenElements.forEach((t, e) => {
                    t ? e.setAttribute('aria-hidden', t) : e.removeAttribute('aria-hidden');
                  }),
                  this._ariaHiddenElements.clear(),
                  this._getAfterAllClosed().next()));
            }
            _hideNonDialogContentFromAssistiveTechnology() {
              const t = this._overlayContainer.getContainerElement();
              if (t.parentElement) {
                const e = t.parentElement.children;
                for (let n = e.length - 1; n > -1; n--) {
                  let i = e[n];
                  i === t ||
                    'SCRIPT' === i.nodeName ||
                    'STYLE' === i.nodeName ||
                    i.hasAttribute('aria-live') ||
                    (this._ariaHiddenElements.set(i, i.getAttribute('aria-hidden')),
                    i.setAttribute('aria-hidden', 'true'));
                }
              }
            }
            _closeDialogs(t) {
              let e = t.length;
              for (; e--; ) t[e].close();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Dx), Ro(mo), Ro(void 0), Ro(void 0), Ro(bx), Ro(void 0), Ro(ei), Ro(ei), Ro(Jn));
            }),
            (t.ɵdir = Xt({ type: t })),
            t
          );
        })(),
        qk = (() => {
          class t extends $k {
            constructor(t, e, n, i, s, r, o) {
              super(t, e, i, r, o, s, Nk, Ik, Bk);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Dx), _i(mo), _i(Wh, 8), _i(zk, 8), _i(jk), _i(t, 12), _i(bx));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        Wk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [qk, Hk], imports: [[Nx, tx, Ev], Ev] })),
            t
          );
        })();
      const Uk = Ay({ passive: !0 });
      let Yk = (() => {
          class t {
            constructor(t, e) {
              (this._platform = t), (this._ngZone = e), (this._monitoredElements = new Map());
            }
            monitor(t) {
              if (!this._platform.isBrowser) return Zm;
              const e = by(t),
                n = this._monitoredElements.get(e);
              if (n) return n.subject;
              const i = new C(),
                s = 'cdk-text-field-autofilled',
                r = (t) => {
                  'cdk-text-field-autofill-start' !== t.animationName || e.classList.contains(s)
                    ? 'cdk-text-field-autofill-end' === t.animationName &&
                      e.classList.contains(s) &&
                      (e.classList.remove(s), this._ngZone.run(() => i.next({ target: t.target, isAutofilled: !1 })))
                    : (e.classList.add(s), this._ngZone.run(() => i.next({ target: t.target, isAutofilled: !0 })));
                };
              return (
                this._ngZone.runOutsideAngular(() => {
                  e.addEventListener('animationstart', r, Uk), e.classList.add('cdk-text-field-autofill-monitored');
                }),
                this._monitoredElements.set(e, {
                  subject: i,
                  unlisten: () => {
                    e.removeEventListener('animationstart', r, Uk);
                  },
                }),
                i
              );
            }
            stopMonitoring(t) {
              const e = by(t),
                n = this._monitoredElements.get(e);
              n &&
                (n.unlisten(),
                n.subject.complete(),
                e.classList.remove('cdk-text-field-autofill-monitored'),
                e.classList.remove('cdk-text-field-autofilled'),
                this._monitoredElements.delete(e));
            }
            ngOnDestroy() {
              this._monitoredElements.forEach((t, e) => this.stopMonitoring(e));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(wy), _i(Xc));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(wy), _i(Xc));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        Gk = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[xy]] })),
            t
          );
        })();
      const Qk = new Jn('MAT_INPUT_VALUE_ACCESSOR'),
        Kk = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];
      let Xk = 0;
      class Zk {
        constructor(t, e, n, i) {
          (this._defaultErrorStateMatcher = t),
            (this._parentForm = e),
            (this._parentFormGroup = n),
            (this.ngControl = i);
        }
      }
      const Jk = Dv(Zk);
      let tS = (() => {
          class t extends Jk {
            constructor(t, e, n, i, s, r, o, a, l, c) {
              super(r, i, s, n),
                (this._elementRef = t),
                (this._platform = e),
                (this.ngControl = n),
                (this._autofillMonitor = a),
                (this._formField = c),
                (this._uid = 'mat-input-' + Xk++),
                (this.focused = !1),
                (this.stateChanges = new C()),
                (this.controlType = 'mat-input'),
                (this.autofilled = !1),
                (this._disabled = !1),
                (this._required = !1),
                (this._type = 'text'),
                (this._readonly = !1),
                (this._neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter(
                  (t) => ky().has(t)
                ));
              const h = this._elementRef.nativeElement,
                u = h.nodeName.toLowerCase();
              (this._inputValueAccessor = o || h),
                (this._previousNativeValue = this.value),
                (this.id = this.id),
                e.IOS &&
                  l.runOutsideAngular(() => {
                    t.nativeElement.addEventListener('keyup', (t) => {
                      let e = t.target;
                      e.value ||
                        e.selectionStart ||
                        e.selectionEnd ||
                        (e.setSelectionRange(1, 1), e.setSelectionRange(0, 0));
                    });
                  }),
                (this._isServer = !this._platform.isBrowser),
                (this._isNativeSelect = 'select' === u),
                (this._isTextarea = 'textarea' === u),
                this._isNativeSelect &&
                  (this.controlType = h.multiple ? 'mat-native-select-multiple' : 'mat-native-select');
            }
            get disabled() {
              return this.ngControl && null !== this.ngControl.disabled ? this.ngControl.disabled : this._disabled;
            }
            set disabled(t) {
              (this._disabled = py(t)), this.focused && ((this.focused = !1), this.stateChanges.next());
            }
            get id() {
              return this._id;
            }
            set id(t) {
              this._id = t || this._uid;
            }
            get required() {
              return this._required;
            }
            set required(t) {
              this._required = py(t);
            }
            get type() {
              return this._type;
            }
            set type(t) {
              (this._type = t || 'text'),
                this._validateType(),
                !this._isTextarea && ky().has(this._type) && (this._elementRef.nativeElement.type = this._type);
            }
            get value() {
              return this._inputValueAccessor.value;
            }
            set value(t) {
              t !== this.value && ((this._inputValueAccessor.value = t), this.stateChanges.next());
            }
            get readonly() {
              return this._readonly;
            }
            set readonly(t) {
              this._readonly = py(t);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((t) => {
                  (this.autofilled = t.isAutofilled), this.stateChanges.next();
                });
            }
            ngOnChanges() {
              this.stateChanges.next();
            }
            ngOnDestroy() {
              this.stateChanges.complete(),
                this._platform.isBrowser && this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);
            }
            ngDoCheck() {
              this.ngControl && this.updateErrorState(), this._dirtyCheckNativeValue(), this._dirtyCheckPlaceholder();
            }
            focus(t) {
              this._elementRef.nativeElement.focus(t);
            }
            _focusChanged(t) {
              t === this.focused || (this.readonly && t) || ((this.focused = t), this.stateChanges.next());
            }
            _onInput() {}
            _dirtyCheckPlaceholder() {
              var t, e;
              const n = (
                null === (e = null === (t = this._formField) || void 0 === t ? void 0 : t._hideControlPlaceholder) ||
                void 0 === e
                  ? void 0
                  : e.call(t)
              )
                ? null
                : this.placeholder;
              if (n !== this._previousPlaceholder) {
                const t = this._elementRef.nativeElement;
                (this._previousPlaceholder = n),
                  n ? t.setAttribute('placeholder', n) : t.removeAttribute('placeholder');
              }
            }
            _dirtyCheckNativeValue() {
              const t = this._elementRef.nativeElement.value;
              this._previousNativeValue !== t && ((this._previousNativeValue = t), this.stateChanges.next());
            }
            _validateType() {
              Kk.indexOf(this._type);
            }
            _isNeverEmpty() {
              return this._neverEmptyInputTypes.indexOf(this._type) > -1;
            }
            _isBadInput() {
              let t = this._elementRef.nativeElement.validity;
              return t && t.badInput;
            }
            get empty() {
              return !(
                this._isNeverEmpty() ||
                this._elementRef.nativeElement.value ||
                this._isBadInput() ||
                this.autofilled
              );
            }
            get shouldLabelFloat() {
              if (this._isNativeSelect) {
                const t = this._elementRef.nativeElement,
                  e = t.options[0];
                return this.focused || t.multiple || !this.empty || !!(t.selectedIndex > -1 && e && e.label);
              }
              return this.focused || !this.empty;
            }
            setDescribedByIds(t) {
              t.length
                ? this._elementRef.nativeElement.setAttribute('aria-describedby', t.join(' '))
                : this._elementRef.nativeElement.removeAttribute('aria-describedby');
            }
            onContainerClick() {
              this.focused || this.focus();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                Ro(Za),
                Ro(wy),
                Ro(hp, 10),
                Ro(jp, 8),
                Ro(em, 8),
                Ro(Uv),
                Ro(Qk, 10),
                Ro(Yk),
                Ro(Xc),
                Ro(gC, 8)
              );
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['input', 'matInput', ''],
                ['textarea', 'matInput', ''],
                ['select', 'matNativeControl', ''],
                ['input', 'matNativeControl', ''],
                ['textarea', 'matNativeControl', ''],
              ],
              hostAttrs: [1, 'mat-input-element', 'mat-form-field-autofill-control'],
              hostVars: 9,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('focus', function () {
                    return e._focusChanged(!0);
                  })('blur', function () {
                    return e._focusChanged(!1);
                  })('input', function () {
                    return e._onInput();
                  }),
                  2 & t &&
                    (Oa('disabled', e.disabled)('required', e.required),
                    Ao('id', e.id)('data-placeholder', e.placeholder)(
                      'readonly',
                      (e.readonly && !e._isNativeSelect) || null
                    )('aria-invalid', e.errorState && !e.empty)('aria-required', e.required),
                    ha('mat-input-server', e._isServer));
              },
              inputs: {
                id: 'id',
                disabled: 'disabled',
                required: 'required',
                type: 'type',
                value: 'value',
                readonly: 'readonly',
                placeholder: 'placeholder',
                errorStateMatcher: 'errorStateMatcher',
                userAriaDescribedBy: ['aria-describedby', 'userAriaDescribedBy'],
              },
              exportAs: ['matInput'],
              features: [Wa([{ provide: rC, useExisting: t }]), go, ue],
            })),
            t
          );
        })(),
        eS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [Uv], imports: [[Gk, bC, Ev], Gk, bC] })),
            t
          );
        })(),
        nS = (() => {
          class t {
            constructor() {
              (this.changes = new C()),
                (this.calendarLabel = 'Calendar'),
                (this.openCalendarLabel = 'Open calendar'),
                (this.closeCalendarLabel = 'Close calendar'),
                (this.prevMonthLabel = 'Previous month'),
                (this.nextMonthLabel = 'Next month'),
                (this.prevYearLabel = 'Previous year'),
                (this.nextYearLabel = 'Next year'),
                (this.prevMultiYearLabel = 'Previous 20 years'),
                (this.nextMultiYearLabel = 'Next 20 years'),
                (this.switchToMonthViewLabel = 'Choose date'),
                (this.switchToMultiYearViewLabel = 'Choose month and year');
            }
            formatYearRange(t, e) {
              return `${t} \u2013 ${e}`;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const iS = {
        provide: new Jn('mat-datepicker-scroll-strategy'),
        deps: [Dx],
        useFactory: function (t) {
          return () => t.scrollStrategies.reposition();
        },
      };
      let sS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [nS, iS], imports: [[Gu, qC, Wk, Nx, pv, tx, Ev], Ww] })),
            t
          );
        })(),
        rS = (() => {
          class t {
            constructor() {
              (this._vertical = !1), (this._inset = !1);
            }
            get vertical() {
              return this._vertical;
            }
            set vertical(t) {
              this._vertical = py(t);
            }
            get inset() {
              return this._inset;
            }
            set inset(t) {
              this._inset = py(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-divider']],
              hostAttrs: ['role', 'separator', 1, 'mat-divider'],
              hostVars: 7,
              hostBindings: function (t, e) {
                2 & t &&
                  (Ao('aria-orientation', e.vertical ? 'vertical' : 'horizontal'),
                  ha('mat-divider-vertical', e.vertical)('mat-divider-horizontal', !e.vertical)(
                    'mat-divider-inset',
                    e.inset
                  ));
              },
              inputs: { vertical: 'vertical', inset: 'inset' },
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              styles: [
                '.mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        oS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Ev], Ev] })),
            t
          );
        })(),
        aS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })(),
        lS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu, Ev, aS, tx]] })),
            t
          );
        })(),
        cS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Qv, Ev], Qv, Ev] })),
            t
          );
        })();
      function hS(t) {
        return function (e) {
          const n = new uS(t),
            i = e.lift(n);
          return (n.caught = i);
        };
      }
      class uS {
        constructor(t) {
          this.selector = t;
        }
        call(t, e) {
          return e.subscribe(new dS(t, this.selector, this.caught));
        }
      }
      class dS extends N {
        constructor(t, e, n) {
          super(t), (this.selector = e), (this.caught = n);
        }
        error(t) {
          if (!this.isStopped) {
            let n;
            try {
              n = this.selector(t, this.caught);
            } catch (e) {
              return void super.error(e);
            }
            this._unsubscribeAndRecycle();
            const i = new F(this);
            this.add(i);
            const s = V(n, i);
            s !== i && this.add(s);
          }
        }
      }
      function pS(t) {
        return (e) => e.lift(new mS(t));
      }
      class mS {
        constructor(t) {
          this.callback = t;
        }
        call(t, e) {
          return e.subscribe(new fS(t, this.callback));
        }
      }
      class fS extends m {
        constructor(t, e) {
          super(t), this.add(new u(e));
        }
      }
      const gS = ['*'];
      function _S(t) {
        return Error(`Unable to find icon with the name "${t}"`);
      }
      function bS(t) {
        return Error(
          `The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${t}".`
        );
      }
      function yS(t) {
        return Error(
          `The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${t}".`
        );
      }
      class vS {
        constructor(t, e, n) {
          (this.url = t), (this.svgText = e), (this.options = n);
        }
      }
      let wS = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._httpClient = t),
              (this._sanitizer = e),
              (this._errorHandler = i),
              (this._svgIconConfigs = new Map()),
              (this._iconSetConfigs = new Map()),
              (this._cachedIconsByUrl = new Map()),
              (this._inProgressUrlFetches = new Map()),
              (this._fontCssClassesByAlias = new Map()),
              (this._resolvers = []),
              (this._defaultFontSetClass = 'material-icons'),
              (this._document = n);
          }
          addSvgIcon(t, e, n) {
            return this.addSvgIconInNamespace('', t, e, n);
          }
          addSvgIconLiteral(t, e, n) {
            return this.addSvgIconLiteralInNamespace('', t, e, n);
          }
          addSvgIconInNamespace(t, e, n, i) {
            return this._addSvgIconConfig(t, e, new vS(n, null, i));
          }
          addSvgIconResolver(t) {
            return this._resolvers.push(t), this;
          }
          addSvgIconLiteralInNamespace(t, e, n, i) {
            const s = this._sanitizer.sanitize(is.HTML, n);
            if (!s) throw yS(n);
            return this._addSvgIconConfig(t, e, new vS('', s, i));
          }
          addSvgIconSet(t, e) {
            return this.addSvgIconSetInNamespace('', t, e);
          }
          addSvgIconSetLiteral(t, e) {
            return this.addSvgIconSetLiteralInNamespace('', t, e);
          }
          addSvgIconSetInNamespace(t, e, n) {
            return this._addSvgIconSetConfig(t, new vS(e, null, n));
          }
          addSvgIconSetLiteralInNamespace(t, e, n) {
            const i = this._sanitizer.sanitize(is.HTML, e);
            if (!i) throw yS(e);
            return this._addSvgIconSetConfig(t, new vS('', i, n));
          }
          registerFontClassAlias(t, e = t) {
            return this._fontCssClassesByAlias.set(t, e), this;
          }
          classNameForFontAlias(t) {
            return this._fontCssClassesByAlias.get(t) || t;
          }
          setDefaultFontSetClass(t) {
            return (this._defaultFontSetClass = t), this;
          }
          getDefaultFontSetClass() {
            return this._defaultFontSetClass;
          }
          getSvgIconFromUrl(t) {
            const e = this._sanitizer.sanitize(is.RESOURCE_URL, t);
            if (!e) throw bS(t);
            const n = this._cachedIconsByUrl.get(e);
            return n
              ? fm(xS(n))
              : this._loadSvgIconFromConfig(new vS(t, null)).pipe(
                  gf((t) => this._cachedIconsByUrl.set(e, t)),
                  E((t) => xS(t))
                );
          }
          getNamedSvgIcon(t, e = '') {
            const n = CS(e, t);
            let i = this._svgIconConfigs.get(n);
            if (i) return this._getSvgFromConfig(i);
            if (((i = this._getIconConfigFromResolvers(e, t)), i))
              return this._svgIconConfigs.set(n, i), this._getSvgFromConfig(i);
            const s = this._iconSetConfigs.get(e);
            return s ? this._getSvgFromIconSetConfigs(t, s) : ef(_S(n));
          }
          ngOnDestroy() {
            (this._resolvers = []),
              this._svgIconConfigs.clear(),
              this._iconSetConfigs.clear(),
              this._cachedIconsByUrl.clear();
          }
          _getSvgFromConfig(t) {
            return t.svgText
              ? fm(xS(this._svgElementFromConfig(t)))
              : this._loadSvgIconFromConfig(t).pipe(E((t) => xS(t)));
          }
          _getSvgFromIconSetConfigs(t, e) {
            const n = this._extractIconWithNameFromAnySet(t, e);
            return n
              ? fm(n)
              : Id(
                  e
                    .filter((t) => !t.svgText)
                    .map((t) =>
                      this._loadSvgIconSetFromConfig(t).pipe(
                        hS((e) => {
                          const n = this._sanitizer.sanitize(is.RESOURCE_URL, t.url);
                          return (
                            this._errorHandler.handleError(
                              new Error(`Loading icon set URL: ${n} failed: ${e.message}`)
                            ),
                            fm(null)
                          );
                        })
                      )
                    )
                ).pipe(
                  E(() => {
                    const n = this._extractIconWithNameFromAnySet(t, e);
                    if (!n) throw _S(t);
                    return n;
                  })
                );
          }
          _extractIconWithNameFromAnySet(t, e) {
            for (let n = e.length - 1; n >= 0; n--) {
              const i = e[n];
              if (i.svgText && i.svgText.indexOf(t) > -1) {
                const e = this._svgElementFromConfig(i),
                  n = this._extractSvgIconFromSet(e, t, i.options);
                if (n) return n;
              }
            }
            return null;
          }
          _loadSvgIconFromConfig(t) {
            return this._fetchIcon(t).pipe(
              gf((e) => (t.svgText = e)),
              E(() => this._svgElementFromConfig(t))
            );
          }
          _loadSvgIconSetFromConfig(t) {
            return t.svgText ? fm(null) : this._fetchIcon(t).pipe(gf((e) => (t.svgText = e)));
          }
          _extractSvgIconFromSet(t, e, n) {
            const i = t.querySelector(`[id="${e}"]`);
            if (!i) return null;
            const s = i.cloneNode(!0);
            if ((s.removeAttribute('id'), 'svg' === s.nodeName.toLowerCase())) return this._setSvgAttributes(s, n);
            if ('symbol' === s.nodeName.toLowerCase()) return this._setSvgAttributes(this._toSvgElement(s), n);
            const r = this._svgElementFromString('<svg></svg>');
            return r.appendChild(s), this._setSvgAttributes(r, n);
          }
          _svgElementFromString(t) {
            const e = this._document.createElement('DIV');
            e.innerHTML = t;
            const n = e.querySelector('svg');
            if (!n) throw Error('<svg> tag not found');
            return n;
          }
          _toSvgElement(t) {
            const e = this._svgElementFromString('<svg></svg>'),
              n = t.attributes;
            for (let i = 0; i < n.length; i++) {
              const { name: t, value: s } = n[i];
              'id' !== t && e.setAttribute(t, s);
            }
            for (let i = 0; i < t.childNodes.length; i++)
              t.childNodes[i].nodeType === this._document.ELEMENT_NODE && e.appendChild(t.childNodes[i].cloneNode(!0));
            return e;
          }
          _setSvgAttributes(t, e) {
            return (
              t.setAttribute('fit', ''),
              t.setAttribute('height', '100%'),
              t.setAttribute('width', '100%'),
              t.setAttribute('preserveAspectRatio', 'xMidYMid meet'),
              t.setAttribute('focusable', 'false'),
              e && e.viewBox && t.setAttribute('viewBox', e.viewBox),
              t
            );
          }
          _fetchIcon(t) {
            var e;
            const { url: n, options: i } = t,
              s = null !== (e = null == i ? void 0 : i.withCredentials) && void 0 !== e && e;
            if (!this._httpClient)
              throw Error(
                'Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.'
              );
            if (null == n) throw Error(`Cannot fetch icon from URL "${n}".`);
            const r = this._sanitizer.sanitize(is.RESOURCE_URL, n);
            if (!r) throw bS(n);
            const o = this._inProgressUrlFetches.get(r);
            if (o) return o;
            const a = this._httpClient.get(r, { responseType: 'text', withCredentials: s }).pipe(
              pS(() => this._inProgressUrlFetches.delete(r)),
              tt()
            );
            return this._inProgressUrlFetches.set(r, a), a;
          }
          _addSvgIconConfig(t, e, n) {
            return this._svgIconConfigs.set(CS(t, e), n), this;
          }
          _addSvgIconSetConfig(t, e) {
            const n = this._iconSetConfigs.get(t);
            return n ? n.push(e) : this._iconSetConfigs.set(t, [e]), this;
          }
          _svgElementFromConfig(t) {
            if (!t.svgElement) {
              const e = this._svgElementFromString(t.svgText);
              this._setSvgAttributes(e, t.options), (t.svgElement = e);
            }
            return t.svgElement;
          }
          _getIconConfigFromResolvers(t, e) {
            for (let i = 0; i < this._resolvers.length; i++) {
              const s = this._resolvers[i](e, t);
              if (s) return (n = s).url && n.options ? new vS(s.url, null, s.options) : new vS(s, null);
            }
            var n;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Fm, 8), _i(Ed), _i(Th, 8), _i(ls));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(Fm, 8), _i(Ed), _i(Th, 8), _i(ls));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function xS(t) {
        return t.cloneNode(!0);
      }
      function CS(t, e) {
        return t + ':' + e;
      }
      class kS {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const SS = Pv(kS),
        ES = new Jn('mat-icon-location', {
          providedIn: 'root',
          factory: function () {
            const t = bi(Th),
              e = t ? t.location : null;
            return { getPathname: () => (e ? e.pathname + e.search : '') };
          },
        }),
        OS = [
          'clip-path',
          'color-profile',
          'src',
          'cursor',
          'fill',
          'filter',
          'marker',
          'marker-start',
          'marker-mid',
          'marker-end',
          'mask',
          'stroke',
        ],
        PS = OS.map((t) => `[${t}]`).join(', '),
        AS = /^url\(['"]?#(.*?)['"]?\)$/;
      let TS = (() => {
          class t extends SS {
            constructor(t, e, n, i, s) {
              super(t),
                (this._iconRegistry = e),
                (this._location = i),
                (this._errorHandler = s),
                (this._inline = !1),
                (this._currentIconFetch = u.EMPTY),
                n || t.nativeElement.setAttribute('aria-hidden', 'true');
            }
            get inline() {
              return this._inline;
            }
            set inline(t) {
              this._inline = py(t);
            }
            get svgIcon() {
              return this._svgIcon;
            }
            set svgIcon(t) {
              t !== this._svgIcon &&
                (t ? this._updateSvgIcon(t) : this._svgIcon && this._clearSvgElement(), (this._svgIcon = t));
            }
            get fontSet() {
              return this._fontSet;
            }
            set fontSet(t) {
              const e = this._cleanupFontValue(t);
              e !== this._fontSet && ((this._fontSet = e), this._updateFontIconClasses());
            }
            get fontIcon() {
              return this._fontIcon;
            }
            set fontIcon(t) {
              const e = this._cleanupFontValue(t);
              e !== this._fontIcon && ((this._fontIcon = e), this._updateFontIconClasses());
            }
            _splitIconName(t) {
              if (!t) return ['', ''];
              const e = t.split(':');
              switch (e.length) {
                case 1:
                  return ['', e[0]];
                case 2:
                  return e;
                default:
                  throw Error(`Invalid icon name: "${t}"`);
              }
            }
            ngOnInit() {
              this._updateFontIconClasses();
            }
            ngAfterViewChecked() {
              const t = this._elementsWithExternalReferences;
              if (t && t.size) {
                const t = this._location.getPathname();
                t !== this._previousPath && ((this._previousPath = t), this._prependPathToReferences(t));
              }
            }
            ngOnDestroy() {
              this._currentIconFetch.unsubscribe(),
                this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear();
            }
            _usingFontIcon() {
              return !this.svgIcon;
            }
            _setSvgElement(t) {
              this._clearSvgElement();
              const e = t.querySelectorAll('style');
              for (let i = 0; i < e.length; i++) e[i].textContent += ' ';
              const n = this._location.getPathname();
              (this._previousPath = n),
                this._cacheChildrenWithExternalReferences(t),
                this._prependPathToReferences(n),
                this._elementRef.nativeElement.appendChild(t);
            }
            _clearSvgElement() {
              const t = this._elementRef.nativeElement;
              let e = t.childNodes.length;
              for (this._elementsWithExternalReferences && this._elementsWithExternalReferences.clear(); e--; ) {
                const n = t.childNodes[e];
                (1 === n.nodeType && 'svg' !== n.nodeName.toLowerCase()) || t.removeChild(n);
              }
            }
            _updateFontIconClasses() {
              if (!this._usingFontIcon()) return;
              const t = this._elementRef.nativeElement,
                e = this.fontSet
                  ? this._iconRegistry.classNameForFontAlias(this.fontSet)
                  : this._iconRegistry.getDefaultFontSetClass();
              e != this._previousFontSetClass &&
                (this._previousFontSetClass && t.classList.remove(this._previousFontSetClass),
                e && t.classList.add(e),
                (this._previousFontSetClass = e)),
                this.fontIcon != this._previousFontIconClass &&
                  (this._previousFontIconClass && t.classList.remove(this._previousFontIconClass),
                  this.fontIcon && t.classList.add(this.fontIcon),
                  (this._previousFontIconClass = this.fontIcon));
            }
            _cleanupFontValue(t) {
              return 'string' == typeof t ? t.trim().split(' ')[0] : t;
            }
            _prependPathToReferences(t) {
              const e = this._elementsWithExternalReferences;
              e &&
                e.forEach((e, n) => {
                  e.forEach((e) => {
                    n.setAttribute(e.name, `url('${t}#${e.value}')`);
                  });
                });
            }
            _cacheChildrenWithExternalReferences(t) {
              const e = t.querySelectorAll(PS),
                n = (this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map());
              for (let i = 0; i < e.length; i++)
                OS.forEach((t) => {
                  const s = e[i],
                    r = s.getAttribute(t),
                    o = r ? r.match(AS) : null;
                  if (o) {
                    let e = n.get(s);
                    e || ((e = []), n.set(s, e)), e.push({ name: t, value: o[1] });
                  }
                });
            }
            _updateSvgIcon(t) {
              if (((this._svgNamespace = null), (this._svgName = null), this._currentIconFetch.unsubscribe(), t)) {
                const [e, n] = this._splitIconName(t);
                e && (this._svgNamespace = e),
                  n && (this._svgName = n),
                  (this._currentIconFetch = this._iconRegistry
                    .getNamedSvgIcon(n, e)
                    .pipe(pf(1))
                    .subscribe(
                      (t) => this._setSvgElement(t),
                      (t) => {
                        this._errorHandler.handleError(new Error(`Error retrieving icon ${e}:${n}! ${t.message}`));
                      }
                    ));
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(wS), Kn('aria-hidden'), Ro(ES), Ro(ls));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-icon']],
              hostAttrs: ['role', 'img', 1, 'mat-icon', 'notranslate'],
              hostVars: 7,
              hostBindings: function (t, e) {
                2 & t &&
                  (Ao('data-mat-icon-type', e._usingFontIcon() ? 'font' : 'svg')(
                    'data-mat-icon-name',
                    e._svgName || e.fontIcon
                  )('data-mat-icon-namespace', e._svgNamespace || e.fontSet),
                  ha('mat-icon-inline', e.inline)(
                    'mat-icon-no-color',
                    'primary' !== e.color && 'accent' !== e.color && 'warn' !== e.color
                  ));
              },
              inputs: {
                color: 'color',
                inline: 'inline',
                svgIcon: 'svgIcon',
                fontSet: 'fontSet',
                fontIcon: 'fontIcon',
              },
              exportAs: ['matIcon'],
              features: [go],
              ngContentSelectors: gS,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (Jo(), ta(0));
              },
              styles: [
                '.mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        DS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Ev], Ev] })),
            t
          );
        })();
      const MS = ['*'],
        RS = [
          [
            ['', 'mat-list-avatar', ''],
            ['', 'mat-list-icon', ''],
            ['', 'matListAvatar', ''],
            ['', 'matListIcon', ''],
          ],
          [
            ['', 'mat-line', ''],
            ['', 'matLine', ''],
          ],
          '*',
        ],
        IS = ['[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]', '[mat-line], [matLine]', '*'];
      class LS {}
      const FS = Ov(Av(LS));
      class NS {}
      const VS = Av(NS),
        BS = new Jn('MatList'),
        zS = new Jn('MatNavList');
      let jS = (() => {
          class t extends FS {
            constructor(t) {
              super(),
                (this._elementRef = t),
                (this._stateChanges = new C()),
                'action-list' === this._getListType() && t.nativeElement.classList.add('mat-action-list');
            }
            _getListType() {
              const t = this._elementRef.nativeElement.nodeName.toLowerCase();
              return 'mat-list' === t ? 'list' : 'mat-action-list' === t ? 'action-list' : null;
            }
            ngOnChanges() {
              this._stateChanges.next();
            }
            ngOnDestroy() {
              this._stateChanges.complete();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-list'], ['mat-action-list']],
              hostAttrs: [1, 'mat-list', 'mat-list-base'],
              inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
              exportAs: ['matList'],
              features: [Wa([{ provide: BS, useExisting: t }]), go, ue],
              ngContentSelectors: MS,
              decls: 2,
              vars: 0,
              template: function (t, e) {
                1 & t && (Jo(), ta(0), Ca(1, '\n\n'));
              },
              styles: [
                '.mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:"";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        HS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'mat-list-avatar', ''],
                ['', 'matListAvatar', ''],
              ],
              hostAttrs: [1, 'mat-list-avatar'],
            })),
            t
          );
        })(),
        $S = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'mat-list-icon', ''],
                ['', 'matListIcon', ''],
              ],
              hostAttrs: [1, 'mat-list-icon'],
            })),
            t
          );
        })(),
        qS = (() => {
          class t extends VS {
            constructor(t, e, n, i) {
              super(),
                (this._element = t),
                (this._isInteractiveList = !1),
                (this._destroyed = new C()),
                (this._disabled = !1),
                (this._isInteractiveList = !!(n || (i && 'action-list' === i._getListType()))),
                (this._list = n || i);
              const s = this._getHostElement();
              'button' !== s.nodeName.toLowerCase() || s.hasAttribute('type') || s.setAttribute('type', 'button'),
                this._list &&
                  this._list._stateChanges.pipe(Lw(this._destroyed)).subscribe(() => {
                    e.markForCheck();
                  });
            }
            get disabled() {
              return this._disabled || !(!this._list || !this._list.disabled);
            }
            set disabled(t) {
              this._disabled = py(t);
            }
            ngAfterContentInit() {
              !(function (t, e, n = 'mat') {
                t.changes.pipe(bv(t)).subscribe(({ length: t }) => {
                  Gv(e, `${n}-2-line`, !1),
                    Gv(e, `${n}-3-line`, !1),
                    Gv(e, `${n}-multi-line`, !1),
                    2 === t || 3 === t ? Gv(e, `${n}-${t}-line`, !0) : t > 3 && Gv(e, `${n}-multi-line`, !0);
                });
              })(this._lines, this._element);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _isRippleDisabled() {
              return !this._isInteractiveList || this.disableRipple || !(!this._list || !this._list.disableRipple);
            }
            _getHostElement() {
              return this._element.nativeElement;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(kl), Ro(zS, 8), Ro(BS, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-list-item'], ['a', 'mat-list-item', ''], ['button', 'mat-list-item', '']],
              contentQueries: function (t, e, n) {
                if ((1 & t && (Cc(n, HS, 1), Cc(n, $S, 1), Cc(n, Yv, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._avatar = t.first),
                    wc((t = kc())) && (e._icon = t.first),
                    wc((t = kc())) && (e._lines = t);
                }
              },
              hostAttrs: [1, 'mat-list-item', 'mat-focus-indicator'],
              hostVars: 6,
              hostBindings: function (t, e) {
                2 & t &&
                  ha('mat-list-item-disabled', e.disabled)('mat-list-item-avatar', e._avatar || e._icon)(
                    'mat-list-item-with-avatar',
                    e._avatar || e._icon
                  );
              },
              inputs: { disableRipple: 'disableRipple', disabled: 'disabled' },
              exportAs: ['matListItem'],
              features: [go],
              ngContentSelectors: IS,
              decls: 13,
              vars: 2,
              consts: [
                [1, 'mat-list-item-content'],
                ['mat-ripple', '', 1, 'mat-list-item-ripple', 3, 'matRippleTrigger', 'matRippleDisabled'],
                [1, 'mat-list-text'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Jo(RS),
                  Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'div', 1),
                  Ca(3, '\n  '),
                  No(),
                  Ca(4, '\n\n  '),
                  ta(5),
                  Ca(6, '\n\n  '),
                  Fo(7, 'div', 2),
                  ta(8, 1),
                  No(),
                  Ca(9, '\n\n  '),
                  ta(10, 2),
                  Ca(11, '\n'),
                  No(),
                  Ca(12, '\n')),
                  2 & t &&
                    (tr(2), Io('matRippleTrigger', e._getHostElement())('matRippleDisabled', e._isRippleDisabled()));
              },
              directives: [iw],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        WS = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Qv, sw, Ev, ow, Gu], Qv, Ev, ow, oS] })),
            t
          );
        })();
      const US = ['mat-menu-item', ''],
        YS = ['*'];
      function GS(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 0),
            Uo('keydown', function (e) {
              return Fe(t), Xo()._handleKeydown(e);
            })('click', function () {
              return Fe(t), Xo().closed.emit('click');
            })('@transformMenu.start', function (e) {
              return Fe(t), Xo()._onAnimationStart(e);
            })('@transformMenu.done', function (e) {
              return Fe(t), Xo()._onAnimationDone(e);
            }),
            Ca(2, '\n    '),
            Fo(3, 'div', 1),
            Ca(4, '\n      '),
            ta(5),
            Ca(6, '\n    '),
            No(),
            Ca(7, '\n  '),
            No(),
            Ca(8, '\n');
        }
        if (2 & t) {
          const t = Xo();
          tr(1),
            Io('id', t.panelId)('ngClass', t._classList)('@transformMenu', t._panelAnimationState),
            Ao('aria-label', t.ariaLabel || null)('aria-labelledby', t.ariaLabelledby || null)(
              'aria-describedby',
              t.ariaDescribedby || null
            );
        }
      }
      const QS = {
          transformMenu: yg('transformMenu', [
            Cg('void', xg({ opacity: 0, transform: 'scale(0.8)' })),
            Sg('void => enter', vg('120ms cubic-bezier(0, 0, 0.2, 1)', xg({ opacity: 1, transform: 'scale(1)' }))),
            Sg('* => void', vg('100ms 25ms linear', xg({ opacity: 0 }))),
          ]),
          fadeInItems: yg('fadeInItems', [
            Cg('showing', xg({ opacity: 1 })),
            Sg('void => *', [xg({ opacity: 0 }), vg('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')]),
          ]),
        },
        KS = new Jn('MatMenuContent');
      let XS = (() => {
        class t {
          constructor(t, e, n, i, s, r, o) {
            (this._template = t),
              (this._componentFactoryResolver = e),
              (this._appRef = n),
              (this._injector = i),
              (this._viewContainerRef = s),
              (this._document = r),
              (this._changeDetectorRef = o),
              (this._attached = new C());
          }
          attach(t = {}) {
            this._portal || (this._portal = new Qw(this._template, this._viewContainerRef)),
              this.detach(),
              this._outlet ||
                (this._outlet = new Zw(
                  this._document.createElement('div'),
                  this._componentFactoryResolver,
                  this._appRef,
                  this._injector
                ));
            const e = this._template.elementRef.nativeElement;
            e.parentNode.insertBefore(this._outlet.outletElement, e),
              this._changeDetectorRef && this._changeDetectorRef.markForCheck(),
              this._portal.attach(this._outlet, t),
              this._attached.next();
          }
          detach() {
            this._portal.isAttached && this._portal.detach();
          }
          ngOnDestroy() {
            this._outlet && this._outlet.dispose();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(Tl), Ro(Ga), Ro(bh), Ro(mo), Ro(Nl), Ro(Th), Ro(kl));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['ng-template', 'matMenuContent', '']],
            features: [Wa([{ provide: KS, useExisting: t }])],
          })),
          t
        );
      })();
      const ZS = new Jn('MAT_MENU_PANEL');
      class JS {}
      const tE = Av(Ov(JS));
      let eE = (() => {
        class t extends tE {
          constructor(t, e, n, i) {
            super(),
              (this._elementRef = t),
              (this._focusMonitor = n),
              (this._parentMenu = i),
              (this.role = 'menuitem'),
              (this._hovered = new C()),
              (this._focused = new C()),
              (this._highlighted = !1),
              (this._triggersSubmenu = !1),
              i && i.addItem && i.addItem(this);
          }
          focus(t, e) {
            this._focusMonitor && t
              ? this._focusMonitor.focusVia(this._getHostElement(), t, e)
              : this._getHostElement().focus(e),
              this._focused.next(this);
          }
          ngAfterViewInit() {
            this._focusMonitor && this._focusMonitor.monitor(this._elementRef, !1);
          }
          ngOnDestroy() {
            this._focusMonitor && this._focusMonitor.stopMonitoring(this._elementRef),
              this._parentMenu && this._parentMenu.removeItem && this._parentMenu.removeItem(this),
              this._hovered.complete(),
              this._focused.complete();
          }
          _getTabIndex() {
            return this.disabled ? '-1' : '0';
          }
          _getHostElement() {
            return this._elementRef.nativeElement;
          }
          _checkDisabled(t) {
            this.disabled && (t.preventDefault(), t.stopPropagation());
          }
          _handleMouseEnter() {
            this._hovered.next(this);
          }
          getLabel() {
            var t, e;
            const n = this._elementRef.nativeElement.cloneNode(!0),
              i = n.querySelectorAll('mat-icon, .material-icons');
            for (let s = 0; s < i.length; s++) {
              const e = i[s];
              null === (t = e.parentNode) || void 0 === t || t.removeChild(e);
            }
            return (null === (e = n.textContent) || void 0 === e ? void 0 : e.trim()) || '';
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(Za), Ro(Th), Ro(av), Ro(ZS, 8));
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['', 'mat-menu-item', '']],
            hostAttrs: [1, 'mat-focus-indicator'],
            hostVars: 10,
            hostBindings: function (t, e) {
              1 & t &&
                Uo('click', function (t) {
                  return e._checkDisabled(t);
                })('mouseenter', function () {
                  return e._handleMouseEnter();
                }),
                2 & t &&
                  (Ao('role', e.role)('tabindex', e._getTabIndex())('aria-disabled', e.disabled.toString())(
                    'disabled',
                    e.disabled || null
                  ),
                  ha('mat-menu-item', !0)('mat-menu-item-highlighted', e._highlighted)(
                    'mat-menu-item-submenu-trigger',
                    e._triggersSubmenu
                  ));
            },
            inputs: { disabled: 'disabled', disableRipple: 'disableRipple', role: 'role' },
            exportAs: ['matMenuItem'],
            features: [go],
            attrs: US,
            ngContentSelectors: YS,
            decls: 5,
            vars: 2,
            consts: [['matRipple', '', 1, 'mat-menu-ripple', 3, 'matRippleDisabled', 'matRippleTrigger']],
            template: function (t, e) {
              1 & t && (Jo(), ta(0), Ca(1, '\n'), Fo(2, 'div', 0), Ca(3, '\n'), No(), Ca(4, '\n')),
                2 & t &&
                  (tr(2),
                  Io('matRippleDisabled', e.disableRipple || e.disabled)('matRippleTrigger', e._getHostElement()));
            },
            directives: [iw],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const nE = new Jn('mat-menu-default-options', {
        providedIn: 'root',
        factory: function () {
          return {
            overlapTrigger: !1,
            xPosition: 'after',
            yPosition: 'below',
            backdropClass: 'cdk-overlay-transparent-backdrop',
          };
        },
      });
      let iE = 0,
        sE = (() => {
          class t {
            constructor(t, e, n) {
              (this._elementRef = t),
                (this._ngZone = e),
                (this._defaultOptions = n),
                (this._xPosition = this._defaultOptions.xPosition),
                (this._yPosition = this._defaultOptions.yPosition),
                (this._directDescendantItems = new uc()),
                (this._tabSubscription = u.EMPTY),
                (this._classList = {}),
                (this._panelAnimationState = 'void'),
                (this._animationDone = new C()),
                (this.overlayPanelClass = this._defaultOptions.overlayPanelClass || ''),
                (this.backdropClass = this._defaultOptions.backdropClass),
                (this._overlapTrigger = this._defaultOptions.overlapTrigger),
                (this._hasBackdrop = this._defaultOptions.hasBackdrop),
                (this.closed = new cc()),
                (this.close = this.closed),
                (this.panelId = 'mat-menu-panel-' + iE++);
            }
            get xPosition() {
              return this._xPosition;
            }
            set xPosition(t) {
              (this._xPosition = t), this.setPositionClasses();
            }
            get yPosition() {
              return this._yPosition;
            }
            set yPosition(t) {
              (this._yPosition = t), this.setPositionClasses();
            }
            get overlapTrigger() {
              return this._overlapTrigger;
            }
            set overlapTrigger(t) {
              this._overlapTrigger = py(t);
            }
            get hasBackdrop() {
              return this._hasBackdrop;
            }
            set hasBackdrop(t) {
              this._hasBackdrop = py(t);
            }
            set panelClass(t) {
              const e = this._previousPanelClass;
              e &&
                e.length &&
                e.split(' ').forEach((t) => {
                  this._classList[t] = !1;
                }),
                (this._previousPanelClass = t),
                t &&
                  t.length &&
                  (t.split(' ').forEach((t) => {
                    this._classList[t] = !0;
                  }),
                  (this._elementRef.nativeElement.className = ''));
            }
            get classList() {
              return this.panelClass;
            }
            set classList(t) {
              this.panelClass = t;
            }
            ngOnInit() {
              this.setPositionClasses();
            }
            ngAfterContentInit() {
              this._updateDirectDescendants(),
                (this._keyManager = new Gy(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd()),
                (this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'))),
                this._directDescendantItems.changes
                  .pipe(
                    bv(this._directDescendantItems),
                    cf((t) => q(...t.map((t) => t._focused)))
                  )
                  .subscribe((t) => this._keyManager.updateActiveItem(t));
            }
            ngOnDestroy() {
              this._directDescendantItems.destroy(), this._tabSubscription.unsubscribe(), this.closed.complete();
            }
            _hovered() {
              return this._directDescendantItems.changes.pipe(
                bv(this._directDescendantItems),
                cf((t) => q(...t.map((t) => t._hovered)))
              );
            }
            addItem(t) {}
            removeItem(t) {}
            _handleKeydown(t) {
              const e = t.keyCode,
                n = this._keyManager;
              switch (e) {
                case ry:
                  ly(t) || (t.preventDefault(), this.closed.emit('keydown'));
                  break;
                case 37:
                  this.parentMenu && 'ltr' === this.direction && this.closed.emit('keydown');
                  break;
                case 39:
                  this.parentMenu && 'rtl' === this.direction && this.closed.emit('keydown');
                  break;
                default:
                  (e !== ay && 40 !== e) || n.setFocusOrigin('keyboard'), n.onKeydown(t);
              }
            }
            focusFirstItem(t = 'program') {
              this.lazyContent
                ? this._ngZone.onStable.pipe(pf(1)).subscribe(() => this._focusFirstItem(t))
                : this._focusFirstItem(t);
            }
            _focusFirstItem(t) {
              const e = this._keyManager;
              if ((e.setFocusOrigin(t).setFirstItemActive(), !e.activeItem && this._directDescendantItems.length)) {
                let t = this._directDescendantItems.first._getHostElement().parentElement;
                for (; t; ) {
                  if ('menu' === t.getAttribute('role')) {
                    t.focus();
                    break;
                  }
                  t = t.parentElement;
                }
              }
            }
            resetActiveItem() {
              this._keyManager.setActiveItem(-1);
            }
            setElevation(t) {
              const e = `mat-elevation-z${Math.min(4 + t, 24)}`,
                n = Object.keys(this._classList).find((t) => t.startsWith('mat-elevation-z'));
              (n && n !== this._previousElevation) ||
                (this._previousElevation && (this._classList[this._previousElevation] = !1),
                (this._classList[e] = !0),
                (this._previousElevation = e));
            }
            setPositionClasses(t = this.xPosition, e = this.yPosition) {
              const n = this._classList;
              (n['mat-menu-before'] = 'before' === t),
                (n['mat-menu-after'] = 'after' === t),
                (n['mat-menu-above'] = 'above' === e),
                (n['mat-menu-below'] = 'below' === e);
            }
            _startAnimation() {
              this._panelAnimationState = 'enter';
            }
            _resetAnimation() {
              this._panelAnimationState = 'void';
            }
            _onAnimationDone(t) {
              this._animationDone.next(t), (this._isAnimating = !1);
            }
            _onAnimationStart(t) {
              (this._isAnimating = !0),
                'enter' === t.toState && 0 === this._keyManager.activeItemIndex && (t.element.scrollTop = 0);
            }
            _updateDirectDescendants() {
              this._allItems.changes.pipe(bv(this._allItems)).subscribe((t) => {
                this._directDescendantItems.reset(t.filter((t) => t._parentMenu === this)),
                  this._directDescendantItems.notifyOnChanges();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Xc), Ro(nE));
            }),
            (t.ɵdir = Xt({
              type: t,
              contentQueries: function (t, e, n) {
                if ((1 & t && (Cc(n, KS, 1), Cc(n, eE, 1), Cc(n, eE, 0)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.lazyContent = t.first),
                    wc((t = kc())) && (e._allItems = t),
                    wc((t = kc())) && (e.items = t);
                }
              },
              viewQuery: function (t, e) {
                if ((1 & t && xc(Tl, 1), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.templateRef = t.first);
                }
              },
              inputs: {
                backdropClass: 'backdropClass',
                xPosition: 'xPosition',
                yPosition: 'yPosition',
                overlapTrigger: 'overlapTrigger',
                hasBackdrop: 'hasBackdrop',
                panelClass: ['class', 'panelClass'],
                classList: 'classList',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                ariaDescribedby: ['aria-describedby', 'ariaDescribedby'],
              },
              outputs: { closed: 'closed', close: 'close' },
            })),
            t
          );
        })(),
        rE = (() => {
          class t extends sE {
            constructor(t, e, n) {
              super(t, e, n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Xc), Ro(nE));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-menu']],
              hostVars: 3,
              hostBindings: function (t, e) {
                2 & t && Ao('aria-label', null)('aria-labelledby', null)('aria-describedby', null);
              },
              exportAs: ['matMenu'],
              features: [Wa([{ provide: ZS, useExisting: t }]), go],
              ngContentSelectors: YS,
              decls: 2,
              vars: 0,
              consts: [
                ['tabindex', '-1', 'role', 'menu', 1, 'mat-menu-panel', 3, 'id', 'ngClass', 'keydown', 'click'],
                [1, 'mat-menu-content'],
              ],
              template: function (t, e) {
                1 & t && (Jo(), Do(0, GS, 9, 6, 'ng-template'), Ca(1, '\n'));
              },
              directives: [Au],
              styles: [
                'mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:"";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\n',
              ],
              encapsulation: 2,
              data: { animation: [QS.transformMenu, QS.fadeInItems] },
              changeDetection: 0,
            })),
            t
          );
        })();
      const oE = new Jn('mat-menu-scroll-strategy'),
        aE = {
          provide: oE,
          deps: [Dx],
          useFactory: function (t) {
            return () => t.scrollStrategies.reposition();
          },
        },
        lE = Ay({ passive: !0 });
      let cE = (() => {
          class t {
            constructor(t, e, n, i, s, r, o, a) {
              (this._overlay = t),
                (this._element = e),
                (this._viewContainerRef = n),
                (this._menuItemInstance = r),
                (this._dir = o),
                (this._focusMonitor = a),
                (this._overlayRef = null),
                (this._menuOpen = !1),
                (this._closingActionsSubscription = u.EMPTY),
                (this._hoverSubscription = u.EMPTY),
                (this._menuCloseSubscription = u.EMPTY),
                (this._handleTouchStart = (t) => {
                  sv(t) || (this._openedBy = 'touch');
                }),
                (this._openedBy = void 0),
                (this.restoreFocus = !0),
                (this.menuOpened = new cc()),
                (this.onMenuOpen = this.menuOpened),
                (this.menuClosed = new cc()),
                (this.onMenuClose = this.menuClosed),
                (this._scrollStrategy = i),
                (this._parentMaterialMenu = s instanceof sE ? s : void 0),
                e.nativeElement.addEventListener('touchstart', this._handleTouchStart, lE),
                r && (r._triggersSubmenu = this.triggersSubmenu());
            }
            get _deprecatedMatMenuTriggerFor() {
              return this.menu;
            }
            set _deprecatedMatMenuTriggerFor(t) {
              this.menu = t;
            }
            get menu() {
              return this._menu;
            }
            set menu(t) {
              t !== this._menu &&
                ((this._menu = t),
                this._menuCloseSubscription.unsubscribe(),
                t &&
                  (this._menuCloseSubscription = t.close.subscribe((t) => {
                    this._destroyMenu(t),
                      ('click' !== t && 'tab' !== t) ||
                        !this._parentMaterialMenu ||
                        this._parentMaterialMenu.closed.emit(t);
                  })));
            }
            ngAfterContentInit() {
              this._checkMenu(), this._handleHover();
            }
            ngOnDestroy() {
              this._overlayRef && (this._overlayRef.dispose(), (this._overlayRef = null)),
                this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, lE),
                this._menuCloseSubscription.unsubscribe(),
                this._closingActionsSubscription.unsubscribe(),
                this._hoverSubscription.unsubscribe();
            }
            get menuOpen() {
              return this._menuOpen;
            }
            get dir() {
              return this._dir && 'rtl' === this._dir.value ? 'rtl' : 'ltr';
            }
            triggersSubmenu() {
              return !(!this._menuItemInstance || !this._parentMaterialMenu);
            }
            toggleMenu() {
              return this._menuOpen ? this.closeMenu() : this.openMenu();
            }
            openMenu() {
              if (this._menuOpen) return;
              this._checkMenu();
              const t = this._createOverlay(),
                e = t.getConfig();
              this._setPosition(e.positionStrategy),
                (e.hasBackdrop = null == this.menu.hasBackdrop ? !this.triggersSubmenu() : this.menu.hasBackdrop),
                t.attach(this._getPortal()),
                this.menu.lazyContent && this.menu.lazyContent.attach(this.menuData),
                (this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu())),
                this._initMenu(),
                this.menu instanceof sE && this.menu._startAnimation();
            }
            closeMenu() {
              this.menu.close.emit();
            }
            focus(t, e) {
              this._focusMonitor && t
                ? this._focusMonitor.focusVia(this._element, t, e)
                : this._element.nativeElement.focus(e);
            }
            _destroyMenu(t) {
              if (!this._overlayRef || !this.menuOpen) return;
              const e = this.menu;
              this._closingActionsSubscription.unsubscribe(),
                this._overlayRef.detach(),
                !this.restoreFocus ||
                  ('keydown' !== t && this._openedBy && this.triggersSubmenu()) ||
                  this.focus(this._openedBy),
                (this._openedBy = void 0),
                e instanceof sE
                  ? (e._resetAnimation(),
                    e.lazyContent
                      ? e._animationDone
                          .pipe(
                            _m((t) => 'void' === t.toState),
                            pf(1),
                            Lw(e.lazyContent._attached)
                          )
                          .subscribe({ next: () => e.lazyContent.detach(), complete: () => this._setIsMenuOpen(!1) })
                      : this._setIsMenuOpen(!1))
                  : (this._setIsMenuOpen(!1), e.lazyContent && e.lazyContent.detach());
            }
            _initMenu() {
              (this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : void 0),
                (this.menu.direction = this.dir),
                this._setMenuElevation(),
                this.menu.focusFirstItem(this._openedBy || 'program'),
                this._setIsMenuOpen(!0);
            }
            _setMenuElevation() {
              if (this.menu.setElevation) {
                let t = 0,
                  e = this.menu.parentMenu;
                for (; e; ) t++, (e = e.parentMenu);
                this.menu.setElevation(t);
              }
            }
            _setIsMenuOpen(t) {
              (this._menuOpen = t),
                this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit(),
                this.triggersSubmenu() && (this._menuItemInstance._highlighted = t);
            }
            _checkMenu() {}
            _createOverlay() {
              if (!this._overlayRef) {
                const t = this._getOverlayConfig();
                this._subscribeToPositions(t.positionStrategy),
                  (this._overlayRef = this._overlay.create(t)),
                  this._overlayRef.keydownEvents().subscribe();
              }
              return this._overlayRef;
            }
            _getOverlayConfig() {
              return new ux({
                positionStrategy: this._overlay
                  .position()
                  .flexibleConnectedTo(this._element)
                  .withLockedPosition()
                  .withGrowAfterOpen()
                  .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),
                backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',
                panelClass: this.menu.overlayPanelClass,
                scrollStrategy: this._scrollStrategy(),
                direction: this._dir,
              });
            }
            _subscribeToPositions(t) {
              this.menu.setPositionClasses &&
                t.positionChanges.subscribe((t) => {
                  this.menu.setPositionClasses(
                    'start' === t.connectionPair.overlayX ? 'after' : 'before',
                    'top' === t.connectionPair.overlayY ? 'below' : 'above'
                  );
                });
            }
            _setPosition(t) {
              let [e, n] = 'before' === this.menu.xPosition ? ['end', 'start'] : ['start', 'end'],
                [i, s] = 'above' === this.menu.yPosition ? ['bottom', 'top'] : ['top', 'bottom'],
                [r, o] = [i, s],
                [a, l] = [e, n],
                c = 0;
              this.triggersSubmenu()
                ? ((l = e = 'before' === this.menu.xPosition ? 'start' : 'end'),
                  (n = a = 'end' === e ? 'start' : 'end'),
                  (c = 'bottom' === i ? 8 : -8))
                : this.menu.overlapTrigger ||
                  ((r = 'top' === i ? 'bottom' : 'top'), (o = 'top' === s ? 'bottom' : 'top')),
                t.withPositions([
                  { originX: e, originY: r, overlayX: a, overlayY: i, offsetY: c },
                  { originX: n, originY: r, overlayX: l, overlayY: i, offsetY: c },
                  { originX: e, originY: o, overlayX: a, overlayY: s, offsetY: -c },
                  { originX: n, originY: o, overlayX: l, overlayY: s, offsetY: -c },
                ]);
            }
            _menuClosingActions() {
              const t = this._overlayRef.backdropClick(),
                e = this._overlayRef.detachments();
              return q(
                t,
                this._parentMaterialMenu ? this._parentMaterialMenu.closed : fm(),
                this._parentMaterialMenu
                  ? this._parentMaterialMenu._hovered().pipe(
                      _m((t) => t !== this._menuItemInstance),
                      _m(() => this._menuOpen)
                    )
                  : fm(),
                e
              );
            }
            _handleMousedown(t) {
              iv(t) ||
                ((this._openedBy = 0 === t.button ? 'mouse' : void 0), this.triggersSubmenu() && t.preventDefault());
            }
            _handleKeydown(t) {
              const e = t.keyCode;
              (e !== sy && e !== oy) || (this._openedBy = 'keyboard'),
                this.triggersSubmenu() &&
                  ((39 === e && 'ltr' === this.dir) || (37 === e && 'rtl' === this.dir)) &&
                  ((this._openedBy = 'keyboard'), this.openMenu());
            }
            _handleClick(t) {
              this.triggersSubmenu() ? (t.stopPropagation(), this.openMenu()) : this.toggleMenu();
            }
            _handleHover() {
              this.triggersSubmenu() &&
                this._parentMaterialMenu &&
                (this._hoverSubscription = this._parentMaterialMenu
                  ._hovered()
                  .pipe(
                    _m((t) => t === this._menuItemInstance && !t.disabled),
                    Sf(0, Sw)
                  )
                  .subscribe(() => {
                    (this._openedBy = 'mouse'),
                      this.menu instanceof sE && this.menu._isAnimating
                        ? this.menu._animationDone
                            .pipe(pf(1), Sf(0, Sw), Lw(this._parentMaterialMenu._hovered()))
                            .subscribe(() => this.openMenu())
                        : this.openMenu();
                  }));
            }
            _getPortal() {
              return (
                (this._portal && this._portal.templateRef === this.menu.templateRef) ||
                  (this._portal = new Qw(this.menu.templateRef, this._viewContainerRef)),
                this._portal
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Dx), Ro(Za), Ro(Nl), Ro(oE), Ro(ZS, 8), Ro(eE, 10), Ro(fv, 8), Ro(av));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'mat-menu-trigger-for', ''],
                ['', 'matMenuTriggerFor', ''],
              ],
              hostAttrs: ['aria-haspopup', 'true', 1, 'mat-menu-trigger'],
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('mousedown', function (t) {
                    return e._handleMousedown(t);
                  })('keydown', function (t) {
                    return e._handleKeydown(t);
                  })('click', function (t) {
                    return e._handleClick(t);
                  }),
                  2 & t && Ao('aria-expanded', e.menuOpen || null)('aria-controls', e.menuOpen ? e.menu.panelId : null);
              },
              inputs: {
                restoreFocus: ['matMenuTriggerRestoreFocus', 'restoreFocus'],
                _deprecatedMatMenuTriggerFor: ['mat-menu-trigger-for', '_deprecatedMatMenuTriggerFor'],
                menu: ['matMenuTriggerFor', 'menu'],
                menuData: ['matMenuTriggerData', 'menuData'],
              },
              outputs: {
                menuOpened: 'menuOpened',
                onMenuOpen: 'onMenuOpen',
                menuClosed: 'menuClosed',
                onMenuClose: 'onMenuClose',
              },
              exportAs: ['matMenuTrigger'],
            })),
            t
          );
        })(),
        hE = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [aE], imports: [Ev] })),
            t
          );
        })(),
        uE = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [aE], imports: [[Gu, Ev, sw, Nx, hE], Ww, Ev, hE] })),
            t
          );
        })();
      const dE = ['trigger'],
        pE = ['panel'];
      function mE(t, e) {
        if ((1 & t && (Fo(0, 'span', 8), Ca(1), No()), 2 & t)) {
          const t = Xo();
          tr(1), ka(t.placeholder);
        }
      }
      function fE(t, e) {
        if ((1 & t && (Fo(0, 'span', 12), Ca(1), No()), 2 & t)) {
          const t = Xo(2);
          tr(1), ka(t.triggerValue);
        }
      }
      function gE(t, e) {
        1 & t && ta(0, 0, ['*ngSwitchCase', 'true']);
      }
      function _E(t, e) {
        1 & t &&
          (Fo(0, 'span', 9),
          Ca(1, '\n      '),
          Do(2, fE, 2, 1, 'span', 10),
          Ca(3, '\n      '),
          Do(4, gE, 1, 0, 'ng-content', 11),
          Ca(5, '\n    '),
          No()),
          2 & t && (Io('ngSwitch', !!Xo().customTrigger), tr(4), Io('ngSwitchCase', !0));
      }
      function bE(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 13),
            Ca(2, '\n    '),
            Fo(3, 'div', 14, 15),
            Uo('@transformPanel.done', function (e) {
              return Fe(t), Xo()._panelDoneAnimatingStream.next(e.toState);
            })('keydown', function (e) {
              return Fe(t), Xo()._handleKeydown(e);
            }),
            Ca(5, '\n      '),
            ta(6, 1),
            Ca(7, '\n    '),
            No(),
            Ca(8, '\n  '),
            No(),
            Ca(9, '\n');
        }
        if (2 & t) {
          const t = Xo();
          tr(1),
            Io('@transformPanelWrap', void 0),
            tr(2),
            'mat-select-panel ',
            (n = t._getPanelTheme()),
            '',
            ma(ai, da, To(Ie(), 'mat-select-panel ', n, ''), !0),
            ca('transform-origin', t._transformOrigin)('font-size', t._triggerFontSize, 'px'),
            Io('ngClass', t.panelClass)('@transformPanel', t.multiple ? 'showing-multiple' : 'showing'),
            Ao('id', t.id + '-panel')('aria-multiselectable', t.multiple)('aria-label', t.ariaLabel || null)(
              'aria-labelledby',
              t._getPanelAriaLabelledby()
            );
        }
        var n;
      }
      const yE = [[['mat-select-trigger']], '*'],
        vE = ['mat-select-trigger', '*'],
        wE = {
          transformPanelWrap: yg('transformPanelWrap', [
            Sg('* => void', Og('@transformPanel', [Eg()], { optional: !0 })),
          ]),
          transformPanel: yg('transformPanel', [
            Cg('void', xg({ transform: 'scaleY(0.8)', minWidth: '100%', opacity: 0 })),
            Cg('showing', xg({ opacity: 1, minWidth: 'calc(100% + 32px)', transform: 'scaleY(1)' })),
            Cg('showing-multiple', xg({ opacity: 1, minWidth: 'calc(100% + 64px)', transform: 'scaleY(1)' })),
            Sg('void => *', vg('120ms cubic-bezier(0, 0, 0.2, 1)')),
            Sg('* => void', vg('100ms 25ms linear', xg({ opacity: 0 }))),
          ]),
        };
      let xE = 0;
      const CE = 256,
        kE = new Jn('mat-select-scroll-strategy'),
        SE = new Jn('MAT_SELECT_CONFIG'),
        EE = {
          provide: kE,
          deps: [Dx],
          useFactory: function (t) {
            return () => t.scrollStrategies.reposition();
          },
        };
      class OE {
        constructor(t, e) {
          (this.source = t), (this.value = e);
        }
      }
      class PE {
        constructor(t, e, n, i, s) {
          (this._elementRef = t),
            (this._defaultErrorStateMatcher = e),
            (this._parentForm = n),
            (this._parentFormGroup = i),
            (this.ngControl = s);
        }
      }
      const AE = Av(Tv(Ov(Dv(PE)))),
        TE = new Jn('MatSelectTrigger');
      let DE = (() => {
          class t extends AE {
            constructor(t, e, n, i, s, r, o, a, l, c, h, u, d, p) {
              var m, f, g;
              super(s, i, o, a, c),
                (this._viewportRuler = t),
                (this._changeDetectorRef = e),
                (this._ngZone = n),
                (this._dir = r),
                (this._parentFormField = l),
                (this.ngControl = c),
                (this._liveAnnouncer = d),
                (this._defaultOptions = p),
                (this._panelOpen = !1),
                (this._compareWith = (t, e) => t === e),
                (this._uid = 'mat-select-' + xE++),
                (this._triggerAriaLabelledBy = null),
                (this._destroy = new C()),
                (this._onChange = () => {}),
                (this._onTouched = () => {}),
                (this._valueId = 'mat-select-value-' + xE++),
                (this._panelDoneAnimatingStream = new C()),
                (this._overlayPanelClass =
                  (null === (m = this._defaultOptions) || void 0 === m ? void 0 : m.overlayPanelClass) || ''),
                (this._focused = !1),
                (this.controlType = 'mat-select'),
                (this._required = !1),
                (this._multiple = !1),
                (this._disableOptionCentering =
                  null !==
                    (g = null === (f = this._defaultOptions) || void 0 === f ? void 0 : f.disableOptionCentering) &&
                  void 0 !== g &&
                  g),
                (this.ariaLabel = ''),
                (this.optionSelectionChanges = tf(() => {
                  const t = this.options;
                  return t
                    ? t.changes.pipe(
                        bv(t),
                        cf(() => q(...t.map((t) => t.onSelectionChange)))
                      )
                    : this._ngZone.onStable.pipe(
                        pf(1),
                        cf(() => this.optionSelectionChanges)
                      );
                })),
                (this.openedChange = new cc()),
                (this._openedStream = this.openedChange.pipe(
                  _m((t) => t),
                  E(() => {})
                )),
                (this._closedStream = this.openedChange.pipe(
                  _m((t) => !t),
                  E(() => {})
                )),
                (this.selectionChange = new cc()),
                (this.valueChange = new cc()),
                this.ngControl && (this.ngControl.valueAccessor = this),
                null != (null == p ? void 0 : p.typeaheadDebounceInterval) &&
                  (this._typeaheadDebounceInterval = p.typeaheadDebounceInterval),
                (this._scrollStrategyFactory = u),
                (this._scrollStrategy = this._scrollStrategyFactory()),
                (this.tabIndex = parseInt(h) || 0),
                (this.id = this.id);
            }
            get focused() {
              return this._focused || this._panelOpen;
            }
            get placeholder() {
              return this._placeholder;
            }
            set placeholder(t) {
              (this._placeholder = t), this.stateChanges.next();
            }
            get required() {
              return this._required;
            }
            set required(t) {
              (this._required = py(t)), this.stateChanges.next();
            }
            get multiple() {
              return this._multiple;
            }
            set multiple(t) {
              this._multiple = py(t);
            }
            get disableOptionCentering() {
              return this._disableOptionCentering;
            }
            set disableOptionCentering(t) {
              this._disableOptionCentering = py(t);
            }
            get compareWith() {
              return this._compareWith;
            }
            set compareWith(t) {
              (this._compareWith = t), this._selectionModel && this._initializeSelection();
            }
            get value() {
              return this._value;
            }
            set value(t) {
              (t !== this._value || (this._multiple && Array.isArray(t))) &&
                (this.options && this._setSelectionByValue(t), (this._value = t));
            }
            get typeaheadDebounceInterval() {
              return this._typeaheadDebounceInterval;
            }
            set typeaheadDebounceInterval(t) {
              this._typeaheadDebounceInterval = my(t);
            }
            get id() {
              return this._id;
            }
            set id(t) {
              (this._id = t || this._uid), this.stateChanges.next();
            }
            ngOnInit() {
              (this._selectionModel = new zw(this.multiple)),
                this.stateChanges.next(),
                this._panelDoneAnimatingStream
                  .pipe(Ew(), Lw(this._destroy))
                  .subscribe(() => this._panelDoneAnimating(this.panelOpen));
            }
            ngAfterContentInit() {
              this._initKeyManager(),
                this._selectionModel.changed.pipe(Lw(this._destroy)).subscribe((t) => {
                  t.added.forEach((t) => t.select()), t.removed.forEach((t) => t.deselect());
                }),
                this.options.changes.pipe(bv(null), Lw(this._destroy)).subscribe(() => {
                  this._resetOptions(), this._initializeSelection();
                });
            }
            ngDoCheck() {
              const t = this._getTriggerAriaLabelledby();
              if (t !== this._triggerAriaLabelledBy) {
                const e = this._elementRef.nativeElement;
                (this._triggerAriaLabelledBy = t),
                  t ? e.setAttribute('aria-labelledby', t) : e.removeAttribute('aria-labelledby');
              }
              this.ngControl && this.updateErrorState();
            }
            ngOnChanges(t) {
              t.disabled && this.stateChanges.next(),
                t.typeaheadDebounceInterval &&
                  this._keyManager &&
                  this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);
            }
            ngOnDestroy() {
              this._destroy.next(), this._destroy.complete(), this.stateChanges.complete();
            }
            toggle() {
              this.panelOpen ? this.close() : this.open();
            }
            open() {
              this._canOpen() &&
                ((this._panelOpen = !0),
                this._keyManager.withHorizontalOrientation(null),
                this._highlightCorrectOption(),
                this._changeDetectorRef.markForCheck());
            }
            close() {
              this._panelOpen &&
                ((this._panelOpen = !1),
                this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr'),
                this._changeDetectorRef.markForCheck(),
                this._onTouched());
            }
            writeValue(t) {
              this.value = t;
            }
            registerOnChange(t) {
              this._onChange = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            setDisabledState(t) {
              (this.disabled = t), this._changeDetectorRef.markForCheck(), this.stateChanges.next();
            }
            get panelOpen() {
              return this._panelOpen;
            }
            get selected() {
              return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];
            }
            get triggerValue() {
              if (this.empty) return '';
              if (this._multiple) {
                const t = this._selectionModel.selected.map((t) => t.viewValue);
                return this._isRtl() && t.reverse(), t.join(', ');
              }
              return this._selectionModel.selected[0].viewValue;
            }
            _isRtl() {
              return !!this._dir && 'rtl' === this._dir.value;
            }
            _handleKeydown(t) {
              this.disabled || (this.panelOpen ? this._handleOpenKeydown(t) : this._handleClosedKeydown(t));
            }
            _handleClosedKeydown(t) {
              const e = t.keyCode,
                n = 40 === e || e === ay || 37 === e || 39 === e,
                i = e === sy || e === oy,
                s = this._keyManager;
              if ((!s.isTyping() && i && !ly(t)) || ((this.multiple || t.altKey) && n)) t.preventDefault(), this.open();
              else if (!this.multiple) {
                const e = this.selected;
                s.onKeydown(t);
                const n = this.selected;
                n && e !== n && this._liveAnnouncer.announce(n.viewValue, 1e4);
              }
            }
            _handleOpenKeydown(t) {
              const e = this._keyManager,
                n = t.keyCode,
                i = 40 === n || n === ay,
                s = e.isTyping();
              if (i && t.altKey) t.preventDefault(), this.close();
              else if (s || (n !== sy && n !== oy) || !e.activeItem || ly(t))
                if (!s && this._multiple && 65 === n && t.ctrlKey) {
                  t.preventDefault();
                  const e = this.options.some((t) => !t.disabled && !t.selected);
                  this.options.forEach((t) => {
                    t.disabled || (e ? t.select() : t.deselect());
                  });
                } else {
                  const n = e.activeItemIndex;
                  e.onKeydown(t),
                    this._multiple &&
                      i &&
                      t.shiftKey &&
                      e.activeItem &&
                      e.activeItemIndex !== n &&
                      e.activeItem._selectViaInteraction();
                }
              else t.preventDefault(), e.activeItem._selectViaInteraction();
            }
            _onFocus() {
              this.disabled || ((this._focused = !0), this.stateChanges.next());
            }
            _onBlur() {
              (this._focused = !1),
                this.disabled ||
                  this.panelOpen ||
                  (this._onTouched(), this._changeDetectorRef.markForCheck(), this.stateChanges.next());
            }
            _onAttached() {
              this.overlayDir.positionChange.pipe(pf(1)).subscribe(() => {
                this._changeDetectorRef.detectChanges(), this._positioningSettled();
              });
            }
            _getPanelTheme() {
              return this._parentFormField ? `mat-${this._parentFormField.color}` : '';
            }
            get empty() {
              return !this._selectionModel || this._selectionModel.isEmpty();
            }
            _initializeSelection() {
              Promise.resolve().then(() => {
                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value),
                  this.stateChanges.next();
              });
            }
            _setSelectionByValue(t) {
              if (
                (this._selectionModel.selected.forEach((t) => t.setInactiveStyles()),
                this._selectionModel.clear(),
                this.multiple && t)
              )
                Array.isArray(t), t.forEach((t) => this._selectValue(t)), this._sortValues();
              else {
                const e = this._selectValue(t);
                e ? this._keyManager.updateActiveItem(e) : this.panelOpen || this._keyManager.updateActiveItem(-1);
              }
              this._changeDetectorRef.markForCheck();
            }
            _selectValue(t) {
              const e = this.options.find((e) => {
                if (this._selectionModel.isSelected(e)) return !1;
                try {
                  return null != e.value && this._compareWith(e.value, t);
                } catch (n) {
                  return !1;
                }
              });
              return e && this._selectionModel.select(e), e;
            }
            _initKeyManager() {
              (this._keyManager = new Yy(this.options)
                .withTypeAhead(this._typeaheadDebounceInterval)
                .withVerticalOrientation()
                .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')
                .withHomeAndEnd()
                .withAllowedModifierKeys(['shiftKey'])),
                this._keyManager.tabOut.pipe(Lw(this._destroy)).subscribe(() => {
                  this.panelOpen &&
                    (!this.multiple &&
                      this._keyManager.activeItem &&
                      this._keyManager.activeItem._selectViaInteraction(),
                    this.focus(),
                    this.close());
                }),
                this._keyManager.change.pipe(Lw(this._destroy)).subscribe(() => {
                  this._panelOpen && this.panel
                    ? this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0)
                    : this._panelOpen ||
                      this.multiple ||
                      !this._keyManager.activeItem ||
                      this._keyManager.activeItem._selectViaInteraction();
                });
            }
            _resetOptions() {
              const t = q(this.options.changes, this._destroy);
              this.optionSelectionChanges.pipe(Lw(t)).subscribe((t) => {
                this._onSelect(t.source, t.isUserInput),
                  t.isUserInput && !this.multiple && this._panelOpen && (this.close(), this.focus());
              }),
                q(...this.options.map((t) => t._stateChanges))
                  .pipe(Lw(t))
                  .subscribe(() => {
                    this._changeDetectorRef.markForCheck(), this.stateChanges.next();
                  });
            }
            _onSelect(t, e) {
              const n = this._selectionModel.isSelected(t);
              null != t.value || this._multiple
                ? (n !== t.selected && (t.selected ? this._selectionModel.select(t) : this._selectionModel.deselect(t)),
                  e && this._keyManager.setActiveItem(t),
                  this.multiple && (this._sortValues(), e && this.focus()))
                : (t.deselect(), this._selectionModel.clear(), null != this.value && this._propagateChanges(t.value)),
                n !== this._selectionModel.isSelected(t) && this._propagateChanges(),
                this.stateChanges.next();
            }
            _sortValues() {
              if (this.multiple) {
                const t = this.options.toArray();
                this._selectionModel.sort((e, n) =>
                  this.sortComparator ? this.sortComparator(e, n, t) : t.indexOf(e) - t.indexOf(n)
                ),
                  this.stateChanges.next();
              }
            }
            _propagateChanges(t) {
              let e = null;
              (e = this.multiple ? this.selected.map((t) => t.value) : this.selected ? this.selected.value : t),
                (this._value = e),
                this.valueChange.emit(e),
                this._onChange(e),
                this.selectionChange.emit(this._getChangeEvent(e)),
                this._changeDetectorRef.markForCheck();
            }
            _highlightCorrectOption() {
              this._keyManager &&
                (this.empty
                  ? this._keyManager.setFirstItemActive()
                  : this._keyManager.setActiveItem(this._selectionModel.selected[0]));
            }
            _canOpen() {
              var t;
              return (
                !this._panelOpen &&
                !this.disabled &&
                (null === (t = this.options) || void 0 === t ? void 0 : t.length) > 0
              );
            }
            focus(t) {
              this._elementRef.nativeElement.focus(t);
            }
            _getPanelAriaLabelledby() {
              var t;
              if (this.ariaLabel) return null;
              const e = null === (t = this._parentFormField) || void 0 === t ? void 0 : t.getLabelId();
              return this.ariaLabelledby ? (e ? e + ' ' : '') + this.ariaLabelledby : e;
            }
            _getAriaActiveDescendant() {
              return this.panelOpen && this._keyManager && this._keyManager.activeItem
                ? this._keyManager.activeItem.id
                : null;
            }
            _getTriggerAriaLabelledby() {
              var t;
              if (this.ariaLabel) return null;
              const e = null === (t = this._parentFormField) || void 0 === t ? void 0 : t.getLabelId();
              let n = (e ? e + ' ' : '') + this._valueId;
              return this.ariaLabelledby && (n += ' ' + this.ariaLabelledby), n;
            }
            _panelDoneAnimating(t) {
              this.openedChange.emit(t);
            }
            setDescribedByIds(t) {
              this._ariaDescribedby = t.join(' ');
            }
            onContainerClick() {
              this.focus(), this.open();
            }
            get shouldLabelFloat() {
              return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                Ro(qw),
                Ro(kl),
                Ro(Xc),
                Ro(Uv),
                Ro(Za),
                Ro(fv, 8),
                Ro(jp, 8),
                Ro(em, 8),
                Ro(gC, 8),
                Ro(hp, 10),
                Kn('tabindex'),
                Ro(kE),
                Ro(nv),
                Ro(SE, 8)
              );
            }),
            (t.ɵdir = Xt({
              type: t,
              viewQuery: function (t, e) {
                if ((1 & t && (xc(dE, 1), xc(pE, 1), xc(Lx, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.trigger = t.first),
                    wc((t = kc())) && (e.panel = t.first),
                    wc((t = kc())) && (e.overlayDir = t.first);
                }
              },
              inputs: {
                ariaLabel: ['aria-label', 'ariaLabel'],
                id: 'id',
                placeholder: 'placeholder',
                required: 'required',
                multiple: 'multiple',
                disableOptionCentering: 'disableOptionCentering',
                compareWith: 'compareWith',
                value: 'value',
                typeaheadDebounceInterval: 'typeaheadDebounceInterval',
                panelClass: 'panelClass',
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                errorStateMatcher: 'errorStateMatcher',
                sortComparator: 'sortComparator',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                _closedStream: 'closed',
                selectionChange: 'selectionChange',
                valueChange: 'valueChange',
              },
              features: [go, ue],
            })),
            t
          );
        })(),
        ME = (() => {
          class t extends DE {
            constructor() {
              super(...arguments),
                (this._scrollTop = 0),
                (this._triggerFontSize = 0),
                (this._transformOrigin = 'top'),
                (this._offsetY = 0),
                (this._positions = [
                  { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'top' },
                  { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },
                ]);
            }
            _calculateOverlayScroll(t, e, n) {
              const i = this._getItemHeight();
              return Math.min(Math.max(0, i * t - e + i / 2), n);
            }
            ngOnInit() {
              super.ngOnInit(),
                this._viewportRuler
                  .change()
                  .pipe(Lw(this._destroy))
                  .subscribe(() => {
                    this.panelOpen &&
                      ((this._triggerRect = this.trigger.nativeElement.getBoundingClientRect()),
                      this._changeDetectorRef.markForCheck());
                  });
            }
            open() {
              super._canOpen() &&
                (super.open(),
                (this._triggerRect = this.trigger.nativeElement.getBoundingClientRect()),
                (this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0')),
                this._calculateOverlayPosition(),
                this._ngZone.onStable.pipe(pf(1)).subscribe(() => {
                  this._triggerFontSize &&
                    this.overlayDir.overlayRef &&
                    this.overlayDir.overlayRef.overlayElement &&
                    (this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`);
                }));
            }
            _scrollOptionIntoView(t) {
              const e = _w(t, this.options, this.optionGroups),
                n = this._getItemHeight();
              this.panel.nativeElement.scrollTop = bw((t + e) * n, n, this.panel.nativeElement.scrollTop, CE);
            }
            _positioningSettled() {
              this._calculateOverlayOffsetX(), (this.panel.nativeElement.scrollTop = this._scrollTop);
            }
            _panelDoneAnimating(t) {
              this.panelOpen
                ? (this._scrollTop = 0)
                : ((this.overlayDir.offsetX = 0), this._changeDetectorRef.markForCheck()),
                super._panelDoneAnimating(t);
            }
            _getChangeEvent(t) {
              return new OE(this, t);
            }
            _calculateOverlayOffsetX() {
              const t = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect(),
                e = this._viewportRuler.getViewportSize(),
                n = this._isRtl(),
                i = this.multiple ? 56 : 32;
              let s;
              if (this.multiple) s = 40;
              else if (this.disableOptionCentering) s = 16;
              else {
                let t = this._selectionModel.selected[0] || this.options.first;
                s = t && t.group ? 32 : 16;
              }
              n || (s *= -1);
              const r = 0 - (t.left + s - (n ? i : 0)),
                o = t.right + s - e.width + (n ? 0 : i);
              r > 0 ? (s += r + 8) : o > 0 && (s -= o + 8),
                (this.overlayDir.offsetX = Math.round(s)),
                this.overlayDir.overlayRef.updatePosition();
            }
            _calculateOverlayOffsetY(t, e, n) {
              const i = this._getItemHeight(),
                s = (i - this._triggerRect.height) / 2,
                r = Math.floor(CE / i);
              let o;
              return this.disableOptionCentering
                ? 0
                : ((o =
                    0 === this._scrollTop
                      ? t * i
                      : this._scrollTop === n
                      ? (t - (this._getItemCount() - r)) * i + (i - ((this._getItemCount() * i - CE) % i))
                      : e - i / 2),
                  Math.round(-1 * o - s));
            }
            _checkOverlayWithinViewport(t) {
              const e = this._getItemHeight(),
                n = this._viewportRuler.getViewportSize(),
                i = this._triggerRect.top - 8,
                s = n.height - this._triggerRect.bottom - 8,
                r = Math.abs(this._offsetY),
                o = Math.min(this._getItemCount() * e, CE) - r - this._triggerRect.height;
              o > s
                ? this._adjustPanelUp(o, s)
                : r > i
                ? this._adjustPanelDown(r, i, t)
                : (this._transformOrigin = this._getOriginBasedOnOption());
            }
            _adjustPanelUp(t, e) {
              const n = Math.round(t - e);
              (this._scrollTop -= n),
                (this._offsetY -= n),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop <= 0 &&
                  ((this._scrollTop = 0), (this._offsetY = 0), (this._transformOrigin = '50% bottom 0px'));
            }
            _adjustPanelDown(t, e, n) {
              const i = Math.round(t - e);
              if (
                ((this._scrollTop += i),
                (this._offsetY += i),
                (this._transformOrigin = this._getOriginBasedOnOption()),
                this._scrollTop >= n)
              )
                return (this._scrollTop = n), (this._offsetY = 0), void (this._transformOrigin = '50% top 0px');
            }
            _calculateOverlayPosition() {
              const t = this._getItemHeight(),
                e = this._getItemCount(),
                n = Math.min(e * t, CE),
                i = e * t - n;
              let s;
              (s = this.empty ? 0 : Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0)),
                (s += _w(s, this.options, this.optionGroups));
              const r = n / 2;
              (this._scrollTop = this._calculateOverlayScroll(s, r, i)),
                (this._offsetY = this._calculateOverlayOffsetY(s, r, i)),
                this._checkOverlayWithinViewport(i);
            }
            _getOriginBasedOnOption() {
              const t = this._getItemHeight(),
                e = (t - this._triggerRect.height) / 2;
              return `50% ${Math.abs(this._offsetY) - e + t / 2}px 0px`;
            }
            _getItemHeight() {
              return 3 * this._triggerFontSize;
            }
            _getItemCount() {
              return this.options.length + this.optionGroups.length;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return RE(e || t);
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-select']],
              contentQueries: function (t, e, n) {
                if ((1 & t && (Cc(n, TE, 1), Cc(n, gw, 1), Cc(n, dw, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.customTrigger = t.first),
                    wc((t = kc())) && (e.options = t),
                    wc((t = kc())) && (e.optionGroups = t);
                }
              },
              hostAttrs: ['role', 'combobox', 'aria-autocomplete', 'none', 'aria-haspopup', 'true', 1, 'mat-select'],
              hostVars: 20,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('keydown', function (t) {
                    return e._handleKeydown(t);
                  })('focus', function () {
                    return e._onFocus();
                  })('blur', function () {
                    return e._onBlur();
                  }),
                  2 & t &&
                    (Ao('id', e.id)('tabindex', e.tabIndex)('aria-controls', e.panelOpen ? e.id + '-panel' : null)(
                      'aria-expanded',
                      e.panelOpen
                    )('aria-label', e.ariaLabel || null)('aria-required', e.required.toString())(
                      'aria-disabled',
                      e.disabled.toString()
                    )('aria-invalid', e.errorState)('aria-describedby', e._ariaDescribedby || null)(
                      'aria-activedescendant',
                      e._getAriaActiveDescendant()
                    ),
                    ha('mat-select-disabled', e.disabled)('mat-select-invalid', e.errorState)(
                      'mat-select-required',
                      e.required
                    )('mat-select-empty', e.empty)('mat-select-multiple', e.multiple));
              },
              inputs: { disabled: 'disabled', disableRipple: 'disableRipple', tabIndex: 'tabIndex' },
              exportAs: ['matSelect'],
              features: [
                Wa([
                  { provide: rC, useExisting: t },
                  { provide: aw, useExisting: t },
                ]),
                go,
              ],
              ngContentSelectors: vE,
              decls: 18,
              vars: 12,
              consts: [
                ['cdk-overlay-origin', '', 1, 'mat-select-trigger', 3, 'click'],
                ['origin', 'cdkOverlayOrigin', 'trigger', ''],
                [1, 'mat-select-value', 3, 'ngSwitch'],
                ['class', 'mat-select-placeholder mat-select-min-line', 4, 'ngSwitchCase'],
                ['class', 'mat-select-value-text', 3, 'ngSwitch', 4, 'ngSwitchCase'],
                [1, 'mat-select-arrow-wrapper'],
                [1, 'mat-select-arrow'],
                [
                  'cdk-connected-overlay',
                  '',
                  'cdkConnectedOverlayLockPosition',
                  '',
                  'cdkConnectedOverlayHasBackdrop',
                  '',
                  'cdkConnectedOverlayBackdropClass',
                  'cdk-overlay-transparent-backdrop',
                  3,
                  'cdkConnectedOverlayPanelClass',
                  'cdkConnectedOverlayScrollStrategy',
                  'cdkConnectedOverlayOrigin',
                  'cdkConnectedOverlayOpen',
                  'cdkConnectedOverlayPositions',
                  'cdkConnectedOverlayMinWidth',
                  'cdkConnectedOverlayOffsetY',
                  'backdropClick',
                  'attach',
                  'detach',
                ],
                [1, 'mat-select-placeholder', 'mat-select-min-line'],
                [1, 'mat-select-value-text', 3, 'ngSwitch'],
                ['class', 'mat-select-min-line', 4, 'ngSwitchDefault'],
                [4, 'ngSwitchCase'],
                [1, 'mat-select-min-line'],
                [1, 'mat-select-panel-wrap'],
                ['role', 'listbox', 'tabindex', '-1', 3, 'ngClass', 'keydown'],
                ['panel', ''],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (Jo(yE),
                    Ca(0, '\n'),
                    Fo(1, 'div', 0, 1),
                    Uo('click', function () {
                      return e.toggle();
                    }),
                    Ca(4, '\n  '),
                    Fo(5, 'div', 2),
                    Ca(6, '\n    '),
                    Do(7, mE, 2, 1, 'span', 3),
                    Ca(8, '\n    '),
                    Do(9, _E, 6, 2, 'span', 4),
                    Ca(10, '\n  '),
                    No(),
                    Ca(11, '\n\n  '),
                    Fo(12, 'div', 5),
                    Vo(13, 'div', 6),
                    No(),
                    Ca(14, '\n'),
                    No(),
                    Ca(15, '\n\n'),
                    Do(16, bE, 10, 14, 'ng-template', 7),
                    Uo('backdropClick', function () {
                      return e.close();
                    })('attach', function () {
                      return e._onAttached();
                    })('detach', function () {
                      return e.close();
                    }),
                    Ca(17, '\n')),
                  2 & t)
                ) {
                  const t = Mo(2);
                  tr(1),
                    Ao('aria-owns', e.panelOpen ? e.id + '-panel' : null),
                    tr(4),
                    Io('ngSwitch', e.empty),
                    Ao('id', e._valueId),
                    tr(2),
                    Io('ngSwitchCase', !0),
                    tr(2),
                    Io('ngSwitchCase', !1),
                    tr(7),
                    Io('cdkConnectedOverlayPanelClass', e._overlayPanelClass)(
                      'cdkConnectedOverlayScrollStrategy',
                      e._scrollStrategy
                    )('cdkConnectedOverlayOrigin', t)('cdkConnectedOverlayOpen', e.panelOpen)(
                      'cdkConnectedOverlayPositions',
                      e._positions
                    )('cdkConnectedOverlayMinWidth', null == e._triggerRect ? null : e._triggerRect.width)(
                      'cdkConnectedOverlayOffsetY',
                      e._offsetY
                    );
                }
              },
              directives: [Ix, Nu, Vu, Lx, Bu, Au],
              styles: [
                '.mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:" ";white-space:pre;width:1px}\n',
              ],
              encapsulation: 2,
              data: { animation: [wE.transformPanelWrap, wE.transformPanel] },
              changeDetection: 0,
            })),
            t
          );
        })();
      const RE = Gn(ME);
      let IE = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ providers: [EE], imports: [[Gu, Nx, yw, Ev], Ww, bC, yw, Ev] })),
          t
        );
      })();
      class LE extends m {
        notifyNext(t, e, n, i, s) {
          this.destination.next(e);
        }
        notifyError(t, e) {
          this.destination.error(t);
        }
        notifyComplete(t) {
          this.destination.complete();
        }
      }
      class FE extends m {
        constructor(t, e, n) {
          super(), (this.parent = t), (this.outerValue = e), (this.outerIndex = n), (this.index = 0);
        }
        _next(t) {
          this.parent.notifyNext(this.outerValue, t, this.outerIndex, this.index++, this);
        }
        _error(t) {
          this.parent.notifyError(t, this), this.unsubscribe();
        }
        _complete() {
          this.parent.notifyComplete(this), this.unsubscribe();
        }
      }
      function NE(t, e, n, i, s = new FE(t, n, i)) {
        if (!s.closed) return e instanceof b ? e.subscribe(s) : R(e)(s);
      }
      const VE = {};
      function BE(...t) {
        let e, n;
        return (
          S(t[t.length - 1]) && (n = t.pop()),
          'function' == typeof t[t.length - 1] && (e = t.pop()),
          1 === t.length && l(t[0]) && (t = t[0]),
          $(t, n).lift(new zE(e))
        );
      }
      class zE {
        constructor(t) {
          this.resultSelector = t;
        }
        call(t, e) {
          return e.subscribe(new jE(t, this.resultSelector));
        }
      }
      class jE extends LE {
        constructor(t, e) {
          super(t), (this.resultSelector = e), (this.active = 0), (this.values = []), (this.observables = []);
        }
        _next(t) {
          this.values.push(VE), this.observables.push(t);
        }
        _complete() {
          const t = this.observables,
            e = t.length;
          if (0 === e) this.destination.complete();
          else {
            (this.active = e), (this.toRespond = e);
            for (let n = 0; n < e; n++) this.add(NE(this, t[n], void 0, n));
          }
        }
        notifyComplete(t) {
          0 == (this.active -= 1) && this.destination.complete();
        }
        notifyNext(t, e, n) {
          const i = this.values,
            s = this.toRespond ? (i[n] === VE ? --this.toRespond : this.toRespond) : 0;
          (i[n] = e), 0 === s && (this.resultSelector ? this._tryResultSelector(i) : this.destination.next(i.slice()));
        }
        _tryResultSelector(t) {
          let e;
          try {
            e = this.resultSelector.apply(this, t);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(e);
        }
      }
      class HE {
        constructor(t) {
          this.total = t;
        }
        call(t, e) {
          return e.subscribe(new $E(t, this.total));
        }
      }
      class $E extends m {
        constructor(t, e) {
          super(t), (this.total = e), (this.count = 0);
        }
        _next(t) {
          ++this.count > this.total && this.destination.next(t);
        }
      }
      const qE = new Set();
      let WE,
        UE = (() => {
          class t {
            constructor(t) {
              (this._platform = t),
                (this._matchMedia =
                  this._platform.isBrowser && window.matchMedia ? window.matchMedia.bind(window) : YE);
            }
            matchMedia(t) {
              return (
                this._platform.WEBKIT &&
                  (function (t) {
                    if (!qE.has(t))
                      try {
                        WE ||
                          ((WE = document.createElement('style')),
                          WE.setAttribute('type', 'text/css'),
                          document.head.appendChild(WE)),
                          WE.sheet && (WE.sheet.insertRule(`@media ${t} {.fx-query-test{ }}`, 0), qE.add(t));
                      } catch (e) {
                        console.error(e);
                      }
                  })(t),
                this._matchMedia(t)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(wy));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(wy));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      function YE(t) {
        return { matches: 'all' === t || '' === t, media: t, addListener: () => {}, removeListener: () => {} };
      }
      let GE = (() => {
        class t {
          constructor(t, e) {
            (this._mediaMatcher = t), (this._zone = e), (this._queries = new Map()), (this._destroySubject = new C());
          }
          ngOnDestroy() {
            this._destroySubject.next(), this._destroySubject.complete();
          }
          isMatched(t) {
            return QE(gy(t)).some((t) => this._registerQuery(t).mql.matches);
          }
          observe(t) {
            let e = BE(QE(gy(t)).map((t) => this._registerQuery(t).observable));
            return (
              (e = of(e.pipe(pf(1)), e.pipe((1, (t) => t.lift(new HE(1))), cy(0)))),
              e.pipe(
                E((t) => {
                  const e = { matches: !1, breakpoints: {} };
                  return (
                    t.forEach(({ matches: t, query: n }) => {
                      (e.matches = e.matches || t), (e.breakpoints[n] = t);
                    }),
                    e
                  );
                })
              )
            );
          }
          _registerQuery(t) {
            if (this._queries.has(t)) return this._queries.get(t);
            const e = this._mediaMatcher.matchMedia(t),
              n = {
                observable: new b((t) => {
                  const n = (e) => this._zone.run(() => t.next(e));
                  return (
                    e.addListener(n),
                    () => {
                      e.removeListener(n);
                    }
                  );
                }).pipe(
                  bv(e),
                  E(({ matches: e }) => ({ query: t, matches: e })),
                  Lw(this._destroySubject)
                ),
                mql: e,
              };
            return this._queries.set(t, n), n;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(UE), _i(Xc));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(UE), _i(Xc));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function QE(t) {
        return t
          .map((t) => t.split(','))
          .reduce((t, e) => t.concat(e))
          .map((t) => t.trim());
      }
      const KE = {
          tooltipState: yg('state', [
            Cg('initial, void, hidden', xg({ opacity: 0, transform: 'scale(0)' })),
            Cg('visible', xg({ transform: 'scale(1)' })),
            Sg(
              '* => visible',
              vg(
                '200ms cubic-bezier(0, 0, 0.2, 1)',
                kg([
                  xg({ opacity: 0, transform: 'scale(0)', offset: 0 }),
                  xg({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),
                  xg({ opacity: 1, transform: 'scale(1)', offset: 1 }),
                ])
              )
            ),
            Sg('* => hidden', vg('100ms cubic-bezier(0, 0, 0.2, 1)', xg({ opacity: 0 }))),
          ]),
        },
        XE = Ay({ passive: !0 }),
        ZE = new Jn('mat-tooltip-scroll-strategy'),
        JE = {
          provide: ZE,
          deps: [Dx],
          useFactory: function (t) {
            return () => t.scrollStrategies.reposition({ scrollThrottle: 20 });
          },
        },
        tO = new Jn('mat-tooltip-default-options', {
          providedIn: 'root',
          factory: function () {
            return { showDelay: 0, hideDelay: 0, touchendHideDelay: 1500 };
          },
        });
      let eO = (() => {
          class t {
            constructor(t, e, n, i, s, r, o, a, l, c, h, u) {
              (this._overlay = t),
                (this._elementRef = e),
                (this._scrollDispatcher = n),
                (this._viewContainerRef = i),
                (this._ngZone = s),
                (this._platform = r),
                (this._ariaDescriber = o),
                (this._focusMonitor = a),
                (this._dir = c),
                (this._defaultOptions = h),
                (this._position = 'below'),
                (this._disabled = !1),
                (this._viewInitialized = !1),
                (this._pointerExitEventsInitialized = !1),
                (this.showDelay = this._defaultOptions.showDelay),
                (this.hideDelay = this._defaultOptions.hideDelay),
                (this.touchGestures = 'auto'),
                (this._message = ''),
                (this._passiveListeners = []),
                (this._destroyed = new C()),
                (this._handleKeydown = (t) => {
                  this._isTooltipVisible() &&
                    t.keyCode === ry &&
                    !ly(t) &&
                    (t.preventDefault(), t.stopPropagation(), this._ngZone.run(() => this.hide(0)));
                }),
                (this._scrollStrategy = l),
                h &&
                  (h.position && (this.position = h.position),
                  h.touchGestures && (this.touchGestures = h.touchGestures)),
                s.runOutsideAngular(() => {
                  e.nativeElement.addEventListener('keydown', this._handleKeydown);
                });
            }
            get position() {
              return this._position;
            }
            set position(t) {
              t !== this._position &&
                ((this._position = t),
                this._overlayRef &&
                  (this._updatePosition(),
                  this._tooltipInstance && this._tooltipInstance.show(0),
                  this._overlayRef.updatePosition()));
            }
            get disabled() {
              return this._disabled;
            }
            set disabled(t) {
              (this._disabled = py(t)), this._disabled ? this.hide(0) : this._setupPointerEnterEventsIfNeeded();
            }
            get message() {
              return this._message;
            }
            set message(t) {
              this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip'),
                (this._message = null != t ? String(t).trim() : ''),
                !this._message && this._isTooltipVisible()
                  ? this.hide(0)
                  : (this._setupPointerEnterEventsIfNeeded(),
                    this._updateTooltipMessage(),
                    this._ngZone.runOutsideAngular(() => {
                      Promise.resolve().then(() => {
                        this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');
                      });
                    }));
            }
            get tooltipClass() {
              return this._tooltipClass;
            }
            set tooltipClass(t) {
              (this._tooltipClass = t), this._tooltipInstance && this._setTooltipClass(this._tooltipClass);
            }
            ngAfterViewInit() {
              (this._viewInitialized = !0),
                this._setupPointerEnterEventsIfNeeded(),
                this._focusMonitor
                  .monitor(this._elementRef)
                  .pipe(Lw(this._destroyed))
                  .subscribe((t) => {
                    t ? 'keyboard' === t && this._ngZone.run(() => this.show()) : this._ngZone.run(() => this.hide(0));
                  });
            }
            ngOnDestroy() {
              const t = this._elementRef.nativeElement;
              clearTimeout(this._touchstartTimeout),
                this._overlayRef && (this._overlayRef.dispose(), (this._tooltipInstance = null)),
                t.removeEventListener('keydown', this._handleKeydown),
                this._passiveListeners.forEach(([e, n]) => {
                  t.removeEventListener(e, n, XE);
                }),
                (this._passiveListeners.length = 0),
                this._destroyed.next(),
                this._destroyed.complete(),
                this._ariaDescriber.removeDescription(t, this.message, 'tooltip'),
                this._focusMonitor.stopMonitoring(t);
            }
            show(t = this.showDelay) {
              if (
                this.disabled ||
                !this.message ||
                (this._isTooltipVisible() &&
                  !this._tooltipInstance._showTimeoutId &&
                  !this._tooltipInstance._hideTimeoutId)
              )
                return;
              const e = this._createOverlay();
              this._detach(),
                (this._portal = this._portal || new Gw(nO, this._viewContainerRef)),
                (this._tooltipInstance = e.attach(this._portal).instance),
                this._tooltipInstance
                  .afterHidden()
                  .pipe(Lw(this._destroyed))
                  .subscribe(() => this._detach()),
                this._setTooltipClass(this._tooltipClass),
                this._updateTooltipMessage(),
                this._tooltipInstance.show(t);
            }
            hide(t = this.hideDelay) {
              this._tooltipInstance && this._tooltipInstance.hide(t);
            }
            toggle() {
              this._isTooltipVisible() ? this.hide() : this.show();
            }
            _isTooltipVisible() {
              return !!this._tooltipInstance && this._tooltipInstance.isVisible();
            }
            _createOverlay() {
              if (this._overlayRef) return this._overlayRef;
              const t = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef),
                e = this._overlay
                  .position()
                  .flexibleConnectedTo(this._elementRef)
                  .withTransformOriginOn('.mat-tooltip')
                  .withFlexibleDimensions(!1)
                  .withViewportMargin(8)
                  .withScrollableContainers(t);
              return (
                e.positionChanges.pipe(Lw(this._destroyed)).subscribe((t) => {
                  this._tooltipInstance &&
                    t.scrollableViewProperties.isOverlayClipped &&
                    this._tooltipInstance.isVisible() &&
                    this._ngZone.run(() => this.hide(0));
                }),
                (this._overlayRef = this._overlay.create({
                  direction: this._dir,
                  positionStrategy: e,
                  panelClass: 'mat-tooltip-panel',
                  scrollStrategy: this._scrollStrategy(),
                })),
                this._updatePosition(),
                this._overlayRef
                  .detachments()
                  .pipe(Lw(this._destroyed))
                  .subscribe(() => this._detach()),
                this._overlayRef
              );
            }
            _detach() {
              this._overlayRef && this._overlayRef.hasAttached() && this._overlayRef.detach(),
                (this._tooltipInstance = null);
            }
            _updatePosition() {
              const t = this._overlayRef.getConfig().positionStrategy,
                e = this._getOrigin(),
                n = this._getOverlayPosition();
              t.withPositions([
                Object.assign(Object.assign({}, e.main), n.main),
                Object.assign(Object.assign({}, e.fallback), n.fallback),
              ]);
            }
            _getOrigin() {
              const t = !this._dir || 'ltr' == this._dir.value,
                e = this.position;
              let n;
              'above' == e || 'below' == e
                ? (n = { originX: 'center', originY: 'above' == e ? 'top' : 'bottom' })
                : 'before' == e || ('left' == e && t) || ('right' == e && !t)
                ? (n = { originX: 'start', originY: 'center' })
                : ('after' == e || ('right' == e && t) || ('left' == e && !t)) &&
                  (n = { originX: 'end', originY: 'center' });
              const { x: i, y: s } = this._invertPosition(n.originX, n.originY);
              return { main: n, fallback: { originX: i, originY: s } };
            }
            _getOverlayPosition() {
              const t = !this._dir || 'ltr' == this._dir.value,
                e = this.position;
              let n;
              'above' == e
                ? (n = { overlayX: 'center', overlayY: 'bottom' })
                : 'below' == e
                ? (n = { overlayX: 'center', overlayY: 'top' })
                : 'before' == e || ('left' == e && t) || ('right' == e && !t)
                ? (n = { overlayX: 'end', overlayY: 'center' })
                : ('after' == e || ('right' == e && t) || ('left' == e && !t)) &&
                  (n = { overlayX: 'start', overlayY: 'center' });
              const { x: i, y: s } = this._invertPosition(n.overlayX, n.overlayY);
              return { main: n, fallback: { overlayX: i, overlayY: s } };
            }
            _updateTooltipMessage() {
              this._tooltipInstance &&
                ((this._tooltipInstance.message = this.message),
                this._tooltipInstance._markForCheck(),
                this._ngZone.onMicrotaskEmpty.pipe(pf(1), Lw(this._destroyed)).subscribe(() => {
                  this._tooltipInstance && this._overlayRef.updatePosition();
                }));
            }
            _setTooltipClass(t) {
              this._tooltipInstance &&
                ((this._tooltipInstance.tooltipClass = t), this._tooltipInstance._markForCheck());
            }
            _invertPosition(t, e) {
              return (
                'above' === this.position || 'below' === this.position
                  ? 'top' === e
                    ? (e = 'bottom')
                    : 'bottom' === e && (e = 'top')
                  : 'end' === t
                  ? (t = 'start')
                  : 'start' === t && (t = 'end'),
                { x: t, y: e }
              );
            }
            _setupPointerEnterEventsIfNeeded() {
              !this._disabled &&
                this.message &&
                this._viewInitialized &&
                !this._passiveListeners.length &&
                (this._platformSupportsMouseEvents()
                  ? this._passiveListeners.push([
                      'mouseenter',
                      () => {
                        this._setupPointerExitEventsIfNeeded(), this.show();
                      },
                    ])
                  : 'off' !== this.touchGestures &&
                    (this._disableNativeGesturesIfNecessary(),
                    this._passiveListeners.push([
                      'touchstart',
                      () => {
                        this._setupPointerExitEventsIfNeeded(),
                          clearTimeout(this._touchstartTimeout),
                          (this._touchstartTimeout = setTimeout(() => this.show(), 500));
                      },
                    ])),
                this._addListeners(this._passiveListeners));
            }
            _setupPointerExitEventsIfNeeded() {
              if (this._pointerExitEventsInitialized) return;
              this._pointerExitEventsInitialized = !0;
              const t = [];
              if (this._platformSupportsMouseEvents())
                t.push(['mouseleave', () => this.hide()], ['wheel', (t) => this._wheelListener(t)]);
              else if ('off' !== this.touchGestures) {
                this._disableNativeGesturesIfNecessary();
                const e = () => {
                  clearTimeout(this._touchstartTimeout), this.hide(this._defaultOptions.touchendHideDelay);
                };
                t.push(['touchend', e], ['touchcancel', e]);
              }
              this._addListeners(t), this._passiveListeners.push(...t);
            }
            _addListeners(t) {
              t.forEach(([t, e]) => {
                this._elementRef.nativeElement.addEventListener(t, e, XE);
              });
            }
            _platformSupportsMouseEvents() {
              return !this._platform.IOS && !this._platform.ANDROID;
            }
            _wheelListener(t) {
              if (this._isTooltipVisible()) {
                const e = (this._document || document).elementFromPoint(t.clientX, t.clientY),
                  n = this._elementRef.nativeElement;
                e === n || n.contains(e) || this.hide();
              }
            }
            _disableNativeGesturesIfNecessary() {
              const t = this.touchGestures;
              if ('off' !== t) {
                const e = this._elementRef.nativeElement,
                  n = e.style;
                ('on' === t || ('INPUT' !== e.nodeName && 'TEXTAREA' !== e.nodeName)) &&
                  (n.userSelect = n.msUserSelect = n.webkitUserSelect = n.MozUserSelect = 'none'),
                  ('on' !== t && e.draggable) || (n.webkitUserDrag = 'none'),
                  (n.touchAction = 'none'),
                  (n.webkitTapHighlightColor = 'transparent');
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                Ro(Dx),
                Ro(Za),
                Ro(Hw),
                Ro(Nl),
                Ro(Xc),
                Ro(wy),
                Ro($y),
                Ro(av),
                Ro(ZE),
                Ro(fv, 8),
                Ro(tO, 8),
                Ro(Th)
              );
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'matTooltip', '']],
              hostAttrs: [1, 'mat-tooltip-trigger'],
              inputs: {
                showDelay: ['matTooltipShowDelay', 'showDelay'],
                hideDelay: ['matTooltipHideDelay', 'hideDelay'],
                touchGestures: ['matTooltipTouchGestures', 'touchGestures'],
                position: ['matTooltipPosition', 'position'],
                disabled: ['matTooltipDisabled', 'disabled'],
                message: ['matTooltip', 'message'],
                tooltipClass: ['matTooltipClass', 'tooltipClass'],
              },
              exportAs: ['matTooltip'],
            })),
            t
          );
        })(),
        nO = (() => {
          class t {
            constructor(t, e) {
              (this._changeDetectorRef = t),
                (this._breakpointObserver = e),
                (this._visibility = 'initial'),
                (this._closeOnInteraction = !1),
                (this._onHide = new C()),
                (this._isHandset = this._breakpointObserver.observe(
                  '(max-width: 599.98px) and (orientation: portrait), (max-width: 959.98px) and (orientation: landscape)'
                ));
            }
            show(t) {
              this._hideTimeoutId && (clearTimeout(this._hideTimeoutId), (this._hideTimeoutId = null)),
                (this._closeOnInteraction = !0),
                (this._showTimeoutId = setTimeout(() => {
                  (this._visibility = 'visible'), (this._showTimeoutId = null), this._markForCheck();
                }, t));
            }
            hide(t) {
              this._showTimeoutId && (clearTimeout(this._showTimeoutId), (this._showTimeoutId = null)),
                (this._hideTimeoutId = setTimeout(() => {
                  (this._visibility = 'hidden'), (this._hideTimeoutId = null), this._markForCheck();
                }, t));
            }
            afterHidden() {
              return this._onHide;
            }
            isVisible() {
              return 'visible' === this._visibility;
            }
            ngOnDestroy() {
              this._onHide.complete();
            }
            _animationStart() {
              this._closeOnInteraction = !1;
            }
            _animationDone(t) {
              const e = t.toState;
              'hidden' !== e || this.isVisible() || this._onHide.next(),
                ('visible' !== e && 'hidden' !== e) || (this._closeOnInteraction = !0);
            }
            _handleBodyInteraction() {
              this._closeOnInteraction && this.hide(0);
            }
            _markForCheck() {
              this._changeDetectorRef.markForCheck();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(kl), Ro(GE));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-tooltip-component']],
              hostAttrs: ['aria-hidden', 'true'],
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo(
                    'click',
                    function () {
                      return e._handleBodyInteraction();
                    },
                    !1,
                    us
                  )(
                    'auxclick',
                    function () {
                      return e._handleBodyInteraction();
                    },
                    !1,
                    us
                  ),
                  2 & t && ca('zoom', 'visible' === e._visibility ? 1 : null);
              },
              decls: 4,
              vars: 7,
              consts: [[1, 'mat-tooltip', 3, 'ngClass']],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (Fo(0, 'div', 0),
                    Uo('@state.start', function () {
                      return e._animationStart();
                    })('@state.done', function (t) {
                      return e._animationDone(t);
                    }),
                    ic(1, 'async'),
                    Ca(2),
                    No(),
                    Ca(3, '\n')),
                  2 & t)
                ) {
                  let t = null;
                  ha('mat-tooltip-handset', null == (t = sc(1, 5, e._isHandset)) ? null : t.matches),
                    Io('ngClass', e.tooltipClass)('@state', e._visibility),
                    tr(2),
                    ka(e.message);
                }
              },
              directives: [Au],
              pipes: [Uu],
              styles: [
                '.mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\n',
              ],
              encapsulation: 2,
              data: { animation: [KE.tooltipState] },
              changeDetection: 0,
            })),
            t
          );
        })(),
        iO = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [JE], imports: [[pv, Gu, Nx, Ev], Ev, Ww] })),
            t
          );
        })();
      function sO(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 19), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          Io('value', t), tr(1), Sa('\n            ', t, '\n          ');
        }
      }
      function rO(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'mat-form-field', 16),
            Ca(1, '\n        '),
            Fo(2, 'mat-select', 17),
            Uo('selectionChange', function (e) {
              return Fe(t), Xo(2)._changePageSize(e.value);
            }),
            Ca(3, '\n          '),
            Do(4, sO, 2, 2, 'mat-option', 18),
            Ca(5, '\n        '),
            No(),
            Ca(6, '\n      '),
            No();
        }
        if (2 & t) {
          const t = Xo(2);
          Io('appearance', t._formFieldAppearance)('color', t.color),
            tr(2),
            Io('value', t.pageSize)('disabled', t.disabled)('aria-label', t._intl.itemsPerPageLabel),
            tr(2),
            Io('ngForOf', t._displayedPageSizeOptions);
        }
      }
      function oO(t, e) {
        if ((1 & t && (Fo(0, 'div', 20), Ca(1), No()), 2 & t)) {
          const t = Xo(2);
          tr(1), ka(t.pageSize);
        }
      }
      function aO(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'div', 12),
            Ca(1, '\n      '),
            Fo(2, 'div', 13),
            Ca(3),
            No(),
            Ca(4, '\n\n      '),
            Do(5, rO, 7, 6, 'mat-form-field', 14),
            Ca(6, '\n\n      '),
            Do(7, oO, 2, 1, 'div', 15),
            Ca(8, '\n    '),
            No()),
          2 & t)
        ) {
          const t = Xo();
          tr(3),
            Sa('\n        ', t._intl.itemsPerPageLabel, '\n      '),
            tr(2),
            Io('ngIf', t._displayedPageSizeOptions.length > 1),
            tr(2),
            Io('ngIf', t._displayedPageSizeOptions.length <= 1);
        }
      }
      function lO(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'button', 21),
            Uo('click', function () {
              return Fe(t), Xo().firstPage();
            }),
            Ca(1, '\n        '),
            un(),
            Fo(2, 'svg', 7),
            Ca(3, '\n          '),
            Vo(4, 'path', 22),
            Ca(5, '\n        '),
            No(),
            Ca(6, '\n      '),
            No();
        }
        if (2 & t) {
          const t = Xo();
          Io('matTooltip', t._intl.firstPageLabel)('matTooltipDisabled', t._previousButtonsDisabled())(
            'matTooltipPosition',
            'above'
          )('disabled', t._previousButtonsDisabled()),
            Ao('aria-label', t._intl.firstPageLabel);
        }
      }
      function cO(t, e) {
        if (1 & t) {
          const t = Ho();
          un(),
            dn(),
            Fo(0, 'button', 23),
            Uo('click', function () {
              return Fe(t), Xo().lastPage();
            }),
            Ca(1, '\n        '),
            un(),
            Fo(2, 'svg', 7),
            Ca(3, '\n          '),
            Vo(4, 'path', 24),
            Ca(5, '\n        '),
            No(),
            Ca(6, '\n      '),
            No();
        }
        if (2 & t) {
          const t = Xo();
          Io('matTooltip', t._intl.lastPageLabel)('matTooltipDisabled', t._nextButtonsDisabled())(
            'matTooltipPosition',
            'above'
          )('disabled', t._nextButtonsDisabled()),
            Ao('aria-label', t._intl.lastPageLabel);
        }
      }
      let hO = (() => {
        class t {
          constructor() {
            (this.changes = new C()),
              (this.itemsPerPageLabel = 'Items per page:'),
              (this.nextPageLabel = 'Next page'),
              (this.previousPageLabel = 'Previous page'),
              (this.firstPageLabel = 'First page'),
              (this.lastPageLabel = 'Last page'),
              (this.getRangeLabel = (t, e, n) => {
                if (0 == n || 0 == e) return `0 of ${n}`;
                const i = t * e;
                return `${i + 1} \u2013 ${i < (n = Math.max(n, 0)) ? Math.min(i + e, n) : i + e} of ${n}`;
              });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const uO = {
          provide: hO,
          deps: [[new xi(), new Ci(), hO]],
          useFactory: function (t) {
            return t || new hO();
          },
        },
        dO = new Jn('MAT_PAGINATOR_DEFAULT_OPTIONS');
      class pO {}
      const mO = Ov(Mv(pO));
      let fO = (() => {
          class t extends mO {
            constructor(t, e, n) {
              if (
                (super(),
                (this._intl = t),
                (this._changeDetectorRef = e),
                (this._pageIndex = 0),
                (this._length = 0),
                (this._pageSizeOptions = []),
                (this._hidePageSize = !1),
                (this._showFirstLastButtons = !1),
                (this.page = new cc()),
                (this._intlChanges = t.changes.subscribe(() => this._changeDetectorRef.markForCheck())),
                n)
              ) {
                const { pageSize: t, pageSizeOptions: e, hidePageSize: i, showFirstLastButtons: s } = n;
                null != t && (this._pageSize = t),
                  null != e && (this._pageSizeOptions = e),
                  null != i && (this._hidePageSize = i),
                  null != s && (this._showFirstLastButtons = s);
              }
            }
            get pageIndex() {
              return this._pageIndex;
            }
            set pageIndex(t) {
              (this._pageIndex = Math.max(my(t), 0)), this._changeDetectorRef.markForCheck();
            }
            get length() {
              return this._length;
            }
            set length(t) {
              (this._length = my(t)), this._changeDetectorRef.markForCheck();
            }
            get pageSize() {
              return this._pageSize;
            }
            set pageSize(t) {
              (this._pageSize = Math.max(my(t), 0)), this._updateDisplayedPageSizeOptions();
            }
            get pageSizeOptions() {
              return this._pageSizeOptions;
            }
            set pageSizeOptions(t) {
              (this._pageSizeOptions = (t || []).map((t) => my(t))), this._updateDisplayedPageSizeOptions();
            }
            get hidePageSize() {
              return this._hidePageSize;
            }
            set hidePageSize(t) {
              this._hidePageSize = py(t);
            }
            get showFirstLastButtons() {
              return this._showFirstLastButtons;
            }
            set showFirstLastButtons(t) {
              this._showFirstLastButtons = py(t);
            }
            ngOnInit() {
              (this._initialized = !0), this._updateDisplayedPageSizeOptions(), this._markInitialized();
            }
            ngOnDestroy() {
              this._intlChanges.unsubscribe();
            }
            nextPage() {
              if (!this.hasNextPage()) return;
              const t = this.pageIndex;
              this.pageIndex++, this._emitPageEvent(t);
            }
            previousPage() {
              if (!this.hasPreviousPage()) return;
              const t = this.pageIndex;
              this.pageIndex--, this._emitPageEvent(t);
            }
            firstPage() {
              if (!this.hasPreviousPage()) return;
              const t = this.pageIndex;
              (this.pageIndex = 0), this._emitPageEvent(t);
            }
            lastPage() {
              if (!this.hasNextPage()) return;
              const t = this.pageIndex;
              (this.pageIndex = this.getNumberOfPages() - 1), this._emitPageEvent(t);
            }
            hasPreviousPage() {
              return this.pageIndex >= 1 && 0 != this.pageSize;
            }
            hasNextPage() {
              const t = this.getNumberOfPages() - 1;
              return this.pageIndex < t && 0 != this.pageSize;
            }
            getNumberOfPages() {
              return this.pageSize ? Math.ceil(this.length / this.pageSize) : 0;
            }
            _changePageSize(t) {
              const e = this.pageIndex;
              (this.pageIndex = Math.floor((this.pageIndex * this.pageSize) / t) || 0),
                (this.pageSize = t),
                this._emitPageEvent(e);
            }
            _nextButtonsDisabled() {
              return this.disabled || !this.hasNextPage();
            }
            _previousButtonsDisabled() {
              return this.disabled || !this.hasPreviousPage();
            }
            _updateDisplayedPageSizeOptions() {
              this._initialized &&
                (this.pageSize || (this._pageSize = 0 != this.pageSizeOptions.length ? this.pageSizeOptions[0] : 50),
                (this._displayedPageSizeOptions = this.pageSizeOptions.slice()),
                -1 === this._displayedPageSizeOptions.indexOf(this.pageSize) &&
                  this._displayedPageSizeOptions.push(this.pageSize),
                this._displayedPageSizeOptions.sort((t, e) => t - e),
                this._changeDetectorRef.markForCheck());
            }
            _emitPageEvent(t) {
              this.page.emit({
                previousPageIndex: t,
                pageIndex: this.pageIndex,
                pageSize: this.pageSize,
                length: this.length,
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(hO), Ro(kl), Ro(void 0));
            }),
            (t.ɵdir = Xt({
              type: t,
              inputs: {
                pageIndex: 'pageIndex',
                length: 'length',
                pageSize: 'pageSize',
                pageSizeOptions: 'pageSizeOptions',
                hidePageSize: 'hidePageSize',
                showFirstLastButtons: 'showFirstLastButtons',
                color: 'color',
              },
              outputs: { page: 'page' },
              features: [go],
            })),
            t
          );
        })(),
        gO = (() => {
          class t extends fO {
            constructor(t, e, n) {
              super(t, e, n), n && null != n.formFieldAppearance && (this._formFieldAppearance = n.formFieldAppearance);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(hO), Ro(kl), Ro(dO, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-paginator']],
              hostAttrs: ['role', 'group', 1, 'mat-paginator'],
              inputs: { disabled: 'disabled' },
              exportAs: ['matPaginator'],
              features: [go],
              decls: 34,
              vars: 14,
              consts: [
                [1, 'mat-paginator-outer-container'],
                [1, 'mat-paginator-container'],
                ['class', 'mat-paginator-page-size', 4, 'ngIf'],
                [1, 'mat-paginator-range-actions'],
                [1, 'mat-paginator-range-label'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  'class',
                  'mat-paginator-navigation-first',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                  4,
                  'ngIf',
                ],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-paginator-navigation-previous',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                ],
                ['viewBox', '0 0 24 24', 'focusable', 'false', 1, 'mat-paginator-icon'],
                ['d', 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-paginator-navigation-next',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                ],
                ['d', 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  'class',
                  'mat-paginator-navigation-last',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                  4,
                  'ngIf',
                ],
                [1, 'mat-paginator-page-size'],
                [1, 'mat-paginator-page-size-label'],
                ['class', 'mat-paginator-page-size-select', 3, 'appearance', 'color', 4, 'ngIf'],
                ['class', 'mat-paginator-page-size-value', 4, 'ngIf'],
                [1, 'mat-paginator-page-size-select', 3, 'appearance', 'color'],
                [3, 'value', 'disabled', 'aria-label', 'selectionChange'],
                [3, 'value', 4, 'ngFor', 'ngForOf'],
                [3, 'value'],
                [1, 'mat-paginator-page-size-value'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-paginator-navigation-first',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                ],
                ['d', 'M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z'],
                [
                  'mat-icon-button',
                  '',
                  'type',
                  'button',
                  1,
                  'mat-paginator-navigation-last',
                  3,
                  'matTooltip',
                  'matTooltipDisabled',
                  'matTooltipPosition',
                  'disabled',
                  'click',
                ],
                ['d', 'M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'div', 1),
                  Ca(3, '\n    '),
                  Do(4, aO, 9, 3, 'div', 2),
                  Ca(5, '\n\n    '),
                  Fo(6, 'div', 3),
                  Ca(7, '\n      '),
                  Fo(8, 'div', 4),
                  Ca(9),
                  No(),
                  Ca(10, '\n\n      '),
                  Do(11, lO, 7, 5, 'button', 5),
                  Ca(12, '\n      '),
                  Fo(13, 'button', 6),
                  Uo('click', function () {
                    return e.previousPage();
                  }),
                  Ca(14, '\n        '),
                  un(),
                  Fo(15, 'svg', 7),
                  Ca(16, '\n          '),
                  Vo(17, 'path', 8),
                  Ca(18, '\n        '),
                  No(),
                  Ca(19, '\n      '),
                  No(),
                  Ca(20, '\n      '),
                  dn(),
                  Fo(21, 'button', 9),
                  Uo('click', function () {
                    return e.nextPage();
                  }),
                  Ca(22, '\n        '),
                  un(),
                  Fo(23, 'svg', 7),
                  Ca(24, '\n          '),
                  Vo(25, 'path', 10),
                  Ca(26, '\n        '),
                  No(),
                  Ca(27, '\n      '),
                  No(),
                  Ca(28, '\n      '),
                  Do(29, cO, 7, 5, 'button', 11),
                  Ca(30, '\n    '),
                  No(),
                  Ca(31, '\n  '),
                  No(),
                  Ca(32, '\n'),
                  No(),
                  Ca(33, '\n')),
                  2 & t &&
                    (tr(4),
                    Io('ngIf', !e.hidePageSize),
                    tr(5),
                    Sa('\n        ', e._intl.getRangeLabel(e.pageIndex, e.pageSize, e.length), '\n      '),
                    tr(2),
                    Io('ngIf', e.showFirstLastButtons),
                    tr(2),
                    Io('matTooltip', e._intl.previousPageLabel)('matTooltipDisabled', e._previousButtonsDisabled())(
                      'matTooltipPosition',
                      'above'
                    )('disabled', e._previousButtonsDisabled()),
                    Ao('aria-label', e._intl.previousPageLabel),
                    tr(8),
                    Io('matTooltip', e._intl.nextPageLabel)('matTooltipDisabled', e._nextButtonsDisabled())(
                      'matTooltipPosition',
                      'above'
                    )('disabled', e._nextButtonsDisabled()),
                    Ao('aria-label', e._intl.nextPageLabel),
                    tr(8),
                    Io('ngIf', e.showFirstLastButtons));
              },
              directives: [Ru, $C, eO, _C, ME, Du, gw],
              styles: [
                '.mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        _O = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [uO], imports: [[Gu, qC, IE, iO, Ev]] })),
            t
          );
        })(),
        bO = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu, Ev], Ev] })),
            t
          );
        })();
      function yO(t, e) {
        if ((1 & t && (un(), Vo(0, 'circle', 3)), 2 & t)) {
          const t = Xo();
          ca('animation-name', 'mat-progress-spinner-stroke-rotate-' + t._spinnerAnimationLabel)(
            'stroke-dashoffset',
            t._getStrokeDashOffset(),
            'px'
          )('stroke-dasharray', t._getStrokeCircumference(), 'px')('stroke-width', t._getCircleStrokeWidth(), '%'),
            Ao('r', t._getCircleRadius());
        }
      }
      function vO(t, e) {
        if ((1 & t && (un(), Vo(0, 'circle', 3)), 2 & t)) {
          const t = Xo();
          ca('stroke-dashoffset', t._getStrokeDashOffset(), 'px')(
            'stroke-dasharray',
            t._getStrokeCircumference(),
            'px'
          )('stroke-width', t._getCircleStrokeWidth(), '%'),
            Ao('r', t._getCircleRadius());
        }
      }
      class wO {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const xO = Pv(wO, 'primary'),
        CO = new Jn('mat-progress-spinner-default-options', {
          providedIn: 'root',
          factory: function () {
            return { diameter: 100 };
          },
        });
      class kO extends xO {
        constructor(t, e, n, i, s) {
          super(t),
            (this._elementRef = t),
            (this._document = n),
            (this._diameter = 100),
            (this._value = 0),
            (this._fallbackAnimation = !1),
            (this.mode = 'determinate');
          const r = kO._diameters;
          (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            r.has(n.head) || r.set(n.head, new Set([100])),
            (this._fallbackAnimation = e.EDGE || e.TRIDENT),
            (this._noopAnimations = 'NoopAnimations' === i && !!s && !s._forceAnimations),
            s && (s.diameter && (this.diameter = s.diameter), s.strokeWidth && (this.strokeWidth = s.strokeWidth));
        }
        get diameter() {
          return this._diameter;
        }
        set diameter(t) {
          (this._diameter = my(t)),
            (this._spinnerAnimationLabel = this._getSpinnerAnimationLabel()),
            !this._fallbackAnimation && this._styleRoot && this._attachStyleNode();
        }
        get strokeWidth() {
          return this._strokeWidth || this.diameter / 10;
        }
        set strokeWidth(t) {
          this._strokeWidth = my(t);
        }
        get value() {
          return 'determinate' === this.mode ? this._value : 0;
        }
        set value(t) {
          this._value = Math.max(0, Math.min(100, my(t)));
        }
        ngOnInit() {
          const t = this._elementRef.nativeElement;
          (this._styleRoot = My(t) || this._document.head),
            this._attachStyleNode(),
            t.classList.add(
              `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`
            );
        }
        _getCircleRadius() {
          return (this.diameter - 10) / 2;
        }
        _getViewBox() {
          const t = 2 * this._getCircleRadius() + this.strokeWidth;
          return `0 0 ${t} ${t}`;
        }
        _getStrokeCircumference() {
          return 2 * Math.PI * this._getCircleRadius();
        }
        _getStrokeDashOffset() {
          return 'determinate' === this.mode
            ? (this._getStrokeCircumference() * (100 - this._value)) / 100
            : this._fallbackAnimation && 'indeterminate' === this.mode
            ? 0.2 * this._getStrokeCircumference()
            : null;
        }
        _getCircleStrokeWidth() {
          return (this.strokeWidth / this.diameter) * 100;
        }
        _attachStyleNode() {
          const t = this._styleRoot,
            e = this._diameter,
            n = kO._diameters;
          let i = n.get(t);
          if (!i || !i.has(e)) {
            const s = this._document.createElement('style');
            s.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel),
              (s.textContent = this._getAnimationText()),
              t.appendChild(s),
              i || ((i = new Set()), n.set(t, i)),
              i.add(e);
          }
        }
        _getAnimationText() {
          const t = this._getStrokeCircumference();
          return '\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n'
            .replace(/START_VALUE/g, '' + 0.95 * t)
            .replace(/END_VALUE/g, '' + 0.2 * t)
            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);
        }
        _getSpinnerAnimationLabel() {
          return this.diameter.toString().replace('.', '_');
        }
      }
      (kO.ɵfac = function (t) {
        return new (t || kO)(Ro(Za), Ro(wy), Ro(Th, 8), Ro(ey, 8), Ro(CO));
      }),
        (kO.ɵcmp = Wt({
          type: kO,
          selectors: [['mat-progress-spinner']],
          hostAttrs: ['role', 'progressbar', 'tabindex', '-1', 1, 'mat-progress-spinner'],
          hostVars: 10,
          hostBindings: function (t, e) {
            2 & t &&
              (Ao('aria-valuemin', 'determinate' === e.mode ? 0 : null)(
                'aria-valuemax',
                'determinate' === e.mode ? 100 : null
              )('aria-valuenow', 'determinate' === e.mode ? e.value : null)('mode', e.mode),
              ca('width', e.diameter, 'px')('height', e.diameter, 'px'),
              ha('_mat-animation-noopable', e._noopAnimations));
          },
          inputs: { color: 'color', mode: 'mode', diameter: 'diameter', strokeWidth: 'strokeWidth', value: 'value' },
          exportAs: ['matProgressSpinner'],
          features: [go],
          decls: 10,
          vars: 8,
          consts: [
            ['preserveAspectRatio', 'xMidYMid meet', 'focusable', 'false', 'aria-hidden', 'true', 3, 'ngSwitch'],
            [
              'cx',
              '50%',
              'cy',
              '50%',
              3,
              'animation-name',
              'stroke-dashoffset',
              'stroke-dasharray',
              'stroke-width',
              4,
              'ngSwitchCase',
            ],
            ['cx', '50%', 'cy', '50%', 3, 'stroke-dashoffset', 'stroke-dasharray', 'stroke-width', 4, 'ngSwitchCase'],
            ['cx', '50%', 'cy', '50%'],
          ],
          template: function (t, e) {
            1 & t &&
              (Ca(0, '\n'),
              Ca(1, '\n'),
              un(),
              Fo(2, 'svg', 0),
              Ca(3, '\n\n  '),
              Ca(4, '\n  '),
              Do(5, yO, 1, 9, 'circle', 1),
              Ca(6, '\n\n  '),
              Do(7, vO, 1, 7, 'circle', 2),
              Ca(8, '\n'),
              No(),
              Ca(9, '\n')),
              2 & t &&
                (tr(2),
                ca('width', e.diameter, 'px')('height', e.diameter, 'px'),
                Io('ngSwitch', 'indeterminate' === e.mode),
                Ao('viewBox', e._getViewBox()),
                tr(3),
                Io('ngSwitchCase', !0),
                tr(2),
                Io('ngSwitchCase', !1));
          },
          directives: [Nu, Vu],
          styles: [
            '.mat-progress-spinner{display:block;position:relative;overflow:hidden}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor;stroke:CanvasText}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] svg{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\n',
          ],
          encapsulation: 2,
          changeDetection: 0,
        })),
        (kO._diameters = new WeakMap());
      let SO = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Ev, Gu], Ev] })),
            t
          );
        })(),
        EO = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[sw, Ev], Ev] })),
            t
          );
        })();
      function OO(t) {
        return (e) => e.lift(new PO(t));
      }
      class PO {
        constructor(t) {
          this.value = t;
        }
        call(t, e) {
          return e.subscribe(new AO(t, this.value));
        }
      }
      class AO extends m {
        constructor(t, e) {
          super(t), (this.value = e);
        }
        _next(t) {
          this.destination.next(this.value);
        }
      }
      const TO = ['*'];
      function DO(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div', 2),
            Uo('click', function () {
              return Fe(t), Xo()._onBackdropClicked();
            }),
            No();
        }
        2 & t && ha('mat-drawer-shown', Xo()._isShowingBackdrop());
      }
      function MO(t, e) {
        1 & t && (Fo(0, 'mat-drawer-content'), Ca(1, '\n  '), ta(2, 2), Ca(3, '\n'), No());
      }
      const RO = [[['mat-drawer']], [['mat-drawer-content']], '*'],
        IO = ['mat-drawer', 'mat-drawer-content', '*'];
      function LO(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div', 2),
            Uo('click', function () {
              return Fe(t), Xo()._onBackdropClicked();
            }),
            No();
        }
        2 & t && ha('mat-drawer-shown', Xo()._isShowingBackdrop());
      }
      function FO(t, e) {
        1 & t && (Fo(0, 'mat-sidenav-content', 3), Ca(1, '\n  '), ta(2, 2), Ca(3, '\n'), No());
      }
      const NO = [[['mat-sidenav']], [['mat-sidenav-content']], '*'],
        VO = ['mat-sidenav', 'mat-sidenav-content', '*'],
        BO =
          '.mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\n',
        zO = {
          transformDrawer: yg('transform', [
            Cg('open, open-instant', xg({ transform: 'none', visibility: 'visible' })),
            Cg('void', xg({ 'box-shadow': 'none', visibility: 'hidden' })),
            Sg('void => open-instant', vg('0ms')),
            Sg('void <=> open, open-instant => void', vg('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),
          ]),
        },
        jO = new Jn('MAT_DRAWER_DEFAULT_AUTOSIZE', {
          providedIn: 'root',
          factory: function () {
            return !1;
          },
        }),
        HO = new Jn('MAT_DRAWER_CONTAINER');
      let $O = (() => {
          class t extends $w {
            constructor(t, e, n, i, s) {
              super(n, i, s), (this._changeDetectorRef = t), (this._container = e);
            }
            ngAfterContentInit() {
              this._container._contentMarginChanges.subscribe(() => {
                this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(kl), Ro(ot(() => WO)), Ro(Za), Ro(Hw), Ro(Xc));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-drawer-content']],
              hostAttrs: [1, 'mat-drawer-content'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  ca('margin-left', e._container._contentMargins.left, 'px')(
                    'margin-right',
                    e._container._contentMargins.right,
                    'px'
                  );
              },
              features: [go],
              ngContentSelectors: TO,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (Jo(), ta(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        qO = (() => {
          class t {
            constructor(t, e, n, i, s, r, o) {
              (this._elementRef = t),
                (this._focusTrapFactory = e),
                (this._focusMonitor = n),
                (this._platform = i),
                (this._ngZone = s),
                (this._doc = r),
                (this._container = o),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._enableAnimations = !1),
                (this._position = 'start'),
                (this._mode = 'over'),
                (this._disableClose = !1),
                (this._opened = !1),
                (this._animationStarted = new C()),
                (this._animationEnd = new C()),
                (this._animationState = 'void'),
                (this.openedChange = new cc(!0)),
                (this._openedStream = this.openedChange.pipe(
                  _m((t) => t),
                  E(() => {})
                )),
                (this.openedStart = this._animationStarted.pipe(
                  _m((t) => t.fromState !== t.toState && 0 === t.toState.indexOf('open')),
                  OO(void 0)
                )),
                (this._closedStream = this.openedChange.pipe(
                  _m((t) => !t),
                  E(() => {})
                )),
                (this.closedStart = this._animationStarted.pipe(
                  _m((t) => t.fromState !== t.toState && 'void' === t.toState),
                  OO(void 0)
                )),
                (this._destroyed = new C()),
                (this.onPositionChanged = new cc()),
                (this._modeChanged = new C()),
                this.openedChange.subscribe((t) => {
                  t
                    ? (this._doc && (this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement),
                      this._takeFocus())
                    : this._isFocusWithinDrawer() && this._restoreFocus();
                }),
                this._ngZone.runOutsideAngular(() => {
                  sf(this._elementRef.nativeElement, 'keydown')
                    .pipe(
                      _m((t) => t.keyCode === ry && !this.disableClose && !ly(t)),
                      Lw(this._destroyed)
                    )
                    .subscribe((t) =>
                      this._ngZone.run(() => {
                        this.close(), t.stopPropagation(), t.preventDefault();
                      })
                    );
                }),
                this._animationEnd
                  .pipe(Ew((t, e) => t.fromState === e.fromState && t.toState === e.toState))
                  .subscribe((t) => {
                    const { fromState: e, toState: n } = t;
                    ((0 === n.indexOf('open') && 'void' === e) || ('void' === n && 0 === e.indexOf('open'))) &&
                      this.openedChange.emit(this._opened);
                  });
            }
            get position() {
              return this._position;
            }
            set position(t) {
              (t = 'end' === t ? 'end' : 'start') != this._position &&
                ((this._position = t), this.onPositionChanged.emit());
            }
            get mode() {
              return this._mode;
            }
            set mode(t) {
              (this._mode = t), this._updateFocusTrapState(), this._modeChanged.next();
            }
            get disableClose() {
              return this._disableClose;
            }
            set disableClose(t) {
              this._disableClose = py(t);
            }
            get autoFocus() {
              const t = this._autoFocus;
              return null == t ? 'side' !== this.mode : t;
            }
            set autoFocus(t) {
              this._autoFocus = py(t);
            }
            get opened() {
              return this._opened;
            }
            set opened(t) {
              this.toggle(py(t));
            }
            _takeFocus() {
              this.autoFocus &&
                this._focusTrap &&
                this._focusTrap.focusInitialElementWhenReady().then((t) => {
                  t ||
                    'function' != typeof this._elementRef.nativeElement.focus ||
                    this._elementRef.nativeElement.focus();
                });
            }
            _restoreFocus() {
              this.autoFocus &&
                (this._elementFocusedBeforeDrawerWasOpened
                  ? this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia)
                  : this._elementRef.nativeElement.blur(),
                (this._elementFocusedBeforeDrawerWasOpened = null),
                (this._openedVia = null));
            }
            _isFocusWithinDrawer() {
              var t;
              const e = null === (t = this._doc) || void 0 === t ? void 0 : t.activeElement;
              return !!e && this._elementRef.nativeElement.contains(e);
            }
            ngAfterContentInit() {
              (this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement)),
                this._updateFocusTrapState();
            }
            ngAfterContentChecked() {
              this._platform.isBrowser && (this._enableAnimations = !0);
            }
            ngOnDestroy() {
              this._focusTrap && this._focusTrap.destroy(),
                this._animationStarted.complete(),
                this._animationEnd.complete(),
                this._modeChanged.complete(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open(t) {
              return this.toggle(!0, t);
            }
            close() {
              return this.toggle(!1);
            }
            _closeViaBackdropClick() {
              return this._setOpen(!1, !0);
            }
            toggle(t = !this.opened, e) {
              return this._setOpen(t, !t && this._isFocusWithinDrawer(), e);
            }
            _setOpen(t, e, n = 'program') {
              return (
                (this._opened = t),
                t
                  ? ((this._animationState = this._enableAnimations ? 'open' : 'open-instant'), (this._openedVia = n))
                  : ((this._animationState = 'void'), e && this._restoreFocus()),
                this._updateFocusTrapState(),
                new Promise((t) => {
                  this.openedChange.pipe(pf(1)).subscribe((e) => t(e ? 'open' : 'close'));
                })
              );
            }
            _getWidth() {
              return (this._elementRef.nativeElement && this._elementRef.nativeElement.offsetWidth) || 0;
            }
            _updateFocusTrapState() {
              this._focusTrap && (this._focusTrap.enabled = this.opened && 'side' !== this.mode);
            }
            _animationStartListener(t) {
              this._animationStarted.next(t);
            }
            _animationDoneListener(t) {
              this._animationEnd.next(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Jy), Ro(av), Ro(wy), Ro(Xc), Ro(Th, 8), Ro(HO, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-drawer']],
              hostAttrs: ['tabIndex', '-1', 1, 'mat-drawer'],
              hostVars: 12,
              hostBindings: function (t, e) {
                1 & t &&
                  Yo('@transform.start', function (t) {
                    return e._animationStartListener(t);
                  })('@transform.done', function (t) {
                    return e._animationDoneListener(t);
                  }),
                  2 & t &&
                    (Ao('align', null),
                    Pa('@transform', e._animationState),
                    ha('mat-drawer-end', 'end' === e.position)('mat-drawer-over', 'over' === e.mode)(
                      'mat-drawer-push',
                      'push' === e.mode
                    )('mat-drawer-side', 'side' === e.mode)('mat-drawer-opened', e.opened));
              },
              inputs: {
                position: 'position',
                mode: 'mode',
                disableClose: 'disableClose',
                autoFocus: 'autoFocus',
                opened: 'opened',
              },
              outputs: {
                openedChange: 'openedChange',
                _openedStream: 'opened',
                openedStart: 'openedStart',
                _closedStream: 'closed',
                closedStart: 'closedStart',
                onPositionChanged: 'positionChanged',
              },
              exportAs: ['matDrawer'],
              ngContentSelectors: TO,
              decls: 5,
              vars: 0,
              consts: [['cdkScrollable', '', 1, 'mat-drawer-inner-container']],
              template: function (t, e) {
                1 & t && (Jo(), Fo(0, 'div', 0), Ca(1, '\n  '), ta(2), Ca(3, '\n'), No(), Ca(4, '\n'));
              },
              directives: [$w],
              encapsulation: 2,
              data: { animation: [zO.transformDrawer] },
              changeDetection: 0,
            })),
            t
          );
        })(),
        WO = (() => {
          class t {
            constructor(t, e, n, i, s, r = !1, o) {
              (this._dir = t),
                (this._element = e),
                (this._ngZone = n),
                (this._changeDetectorRef = i),
                (this._animationMode = o),
                (this._drawers = new uc()),
                (this.backdropClick = new cc()),
                (this._destroyed = new C()),
                (this._doCheckSubject = new C()),
                (this._contentMargins = { left: null, right: null }),
                (this._contentMarginChanges = new C()),
                t &&
                  t.change.pipe(Lw(this._destroyed)).subscribe(() => {
                    this._validateDrawers(), this.updateContentMargins();
                  }),
                s
                  .change()
                  .pipe(Lw(this._destroyed))
                  .subscribe(() => this.updateContentMargins()),
                (this._autosize = r);
            }
            get start() {
              return this._start;
            }
            get end() {
              return this._end;
            }
            get autosize() {
              return this._autosize;
            }
            set autosize(t) {
              this._autosize = py(t);
            }
            get hasBackdrop() {
              return null == this._backdropOverride
                ? !this._start || 'side' !== this._start.mode || !this._end || 'side' !== this._end.mode
                : this._backdropOverride;
            }
            set hasBackdrop(t) {
              this._backdropOverride = null == t ? null : py(t);
            }
            get scrollable() {
              return this._userContent || this._content;
            }
            ngAfterContentInit() {
              this._allDrawers.changes.pipe(bv(this._allDrawers), Lw(this._destroyed)).subscribe((t) => {
                this._drawers.reset(t.filter((t) => !t._container || t._container === this)),
                  this._drawers.notifyOnChanges();
              }),
                this._drawers.changes.pipe(bv(null)).subscribe(() => {
                  this._validateDrawers(),
                    this._drawers.forEach((t) => {
                      this._watchDrawerToggle(t), this._watchDrawerPosition(t), this._watchDrawerMode(t);
                    }),
                    (!this._drawers.length || this._isDrawerOpen(this._start) || this._isDrawerOpen(this._end)) &&
                      this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                this._ngZone.runOutsideAngular(() => {
                  this._doCheckSubject.pipe(cy(10), Lw(this._destroyed)).subscribe(() => this.updateContentMargins());
                });
            }
            ngOnDestroy() {
              this._contentMarginChanges.complete(),
                this._doCheckSubject.complete(),
                this._drawers.destroy(),
                this._destroyed.next(),
                this._destroyed.complete();
            }
            open() {
              this._drawers.forEach((t) => t.open());
            }
            close() {
              this._drawers.forEach((t) => t.close());
            }
            updateContentMargins() {
              let t = 0,
                e = 0;
              if (this._left && this._left.opened)
                if ('side' == this._left.mode) t += this._left._getWidth();
                else if ('push' == this._left.mode) {
                  const n = this._left._getWidth();
                  (t += n), (e -= n);
                }
              if (this._right && this._right.opened)
                if ('side' == this._right.mode) e += this._right._getWidth();
                else if ('push' == this._right.mode) {
                  const n = this._right._getWidth();
                  (e += n), (t -= n);
                }
              (t = t || null),
                (e = e || null),
                (t === this._contentMargins.left && e === this._contentMargins.right) ||
                  ((this._contentMargins = { left: t, right: e }),
                  this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins)));
            }
            ngDoCheck() {
              this._autosize && this._isPushed() && this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());
            }
            _watchDrawerToggle(t) {
              t._animationStarted
                .pipe(
                  _m((t) => t.fromState !== t.toState),
                  Lw(this._drawers.changes)
                )
                .subscribe((t) => {
                  'open-instant' !== t.toState &&
                    'NoopAnimations' !== this._animationMode &&
                    this._element.nativeElement.classList.add('mat-drawer-transition'),
                    this.updateContentMargins(),
                    this._changeDetectorRef.markForCheck();
                }),
                'side' !== t.mode &&
                  t.openedChange.pipe(Lw(this._drawers.changes)).subscribe(() => this._setContainerClass(t.opened));
            }
            _watchDrawerPosition(t) {
              t &&
                t.onPositionChanged.pipe(Lw(this._drawers.changes)).subscribe(() => {
                  this._ngZone.onMicrotaskEmpty.pipe(pf(1)).subscribe(() => {
                    this._validateDrawers();
                  });
                });
            }
            _watchDrawerMode(t) {
              t &&
                t._modeChanged.pipe(Lw(q(this._drawers.changes, this._destroyed))).subscribe(() => {
                  this.updateContentMargins(), this._changeDetectorRef.markForCheck();
                });
            }
            _setContainerClass(t) {
              const e = this._element.nativeElement.classList,
                n = 'mat-drawer-container-has-open';
              t ? e.add(n) : e.remove(n);
            }
            _validateDrawers() {
              (this._start = this._end = null),
                this._drawers.forEach((t) => {
                  'end' == t.position ? (this._end = t) : (this._start = t);
                }),
                (this._right = this._left = null),
                this._dir && 'rtl' === this._dir.value
                  ? ((this._left = this._end), (this._right = this._start))
                  : ((this._left = this._start), (this._right = this._end));
            }
            _isPushed() {
              return (
                (this._isDrawerOpen(this._start) && 'over' != this._start.mode) ||
                (this._isDrawerOpen(this._end) && 'over' != this._end.mode)
              );
            }
            _onBackdropClicked() {
              this.backdropClick.emit(), this._closeModalDrawersViaBackdrop();
            }
            _closeModalDrawersViaBackdrop() {
              [this._start, this._end]
                .filter((t) => t && !t.disableClose && this._canHaveBackdrop(t))
                .forEach((t) => t._closeViaBackdropClick());
            }
            _isShowingBackdrop() {
              return (
                (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||
                (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end))
              );
            }
            _canHaveBackdrop(t) {
              return 'side' !== t.mode || !!this._backdropOverride;
            }
            _isDrawerOpen(t) {
              return null != t && t.opened;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(fv, 8), Ro(Za), Ro(Xc), Ro(kl), Ro(qw), Ro(jO), Ro(ey, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-drawer-container']],
              contentQueries: function (t, e, n) {
                if ((1 & t && (Cc(n, $O, 1), Cc(n, qO, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._content = t.first), wc((t = kc())) && (e._allDrawers = t);
                }
              },
              viewQuery: function (t, e) {
                if ((1 & t && xc($O, 1), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._userContent = t.first);
                }
              },
              hostAttrs: [1, 'mat-drawer-container'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && ha('mat-drawer-container-explicit-backdrop', e._backdropOverride);
              },
              inputs: { autosize: 'autosize', hasBackdrop: 'hasBackdrop' },
              outputs: { backdropClick: 'backdropClick' },
              exportAs: ['matDrawerContainer'],
              features: [Wa([{ provide: HO, useExisting: t }])],
              ngContentSelectors: IO,
              decls: 8,
              vars: 2,
              consts: [
                ['class', 'mat-drawer-backdrop', 3, 'mat-drawer-shown', 'click', 4, 'ngIf'],
                [4, 'ngIf'],
                [1, 'mat-drawer-backdrop', 3, 'click'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Jo(RO),
                  Do(0, DO, 1, 2, 'div', 0),
                  Ca(1, '\n\n'),
                  ta(2),
                  Ca(3, '\n\n'),
                  ta(4, 1),
                  Ca(5, '\n'),
                  Do(6, MO, 4, 0, 'mat-drawer-content', 1),
                  Ca(7, '\n')),
                  2 & t && (Io('ngIf', e.hasBackdrop), tr(6), Io('ngIf', !e._content));
              },
              directives: [Ru, $O],
              styles: [BO],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        UO = (() => {
          class t extends $O {
            constructor(t, e, n, i, s) {
              super(t, e, n, i, s);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(kl), Ro(ot(() => QO)), Ro(Za), Ro(Hw), Ro(Xc));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-sidenav-content']],
              hostAttrs: [1, 'mat-drawer-content', 'mat-sidenav-content'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  ca('margin-left', e._container._contentMargins.left, 'px')(
                    'margin-right',
                    e._container._contentMargins.right,
                    'px'
                  );
              },
              features: [go],
              ngContentSelectors: TO,
              decls: 1,
              vars: 0,
              template: function (t, e) {
                1 & t && (Jo(), ta(0));
              },
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        YO = (() => {
          class t extends qO {
            constructor() {
              super(...arguments), (this._fixedInViewport = !1), (this._fixedTopGap = 0), (this._fixedBottomGap = 0);
            }
            get fixedInViewport() {
              return this._fixedInViewport;
            }
            set fixedInViewport(t) {
              this._fixedInViewport = py(t);
            }
            get fixedTopGap() {
              return this._fixedTopGap;
            }
            set fixedTopGap(t) {
              this._fixedTopGap = my(t);
            }
            get fixedBottomGap() {
              return this._fixedBottomGap;
            }
            set fixedBottomGap(t) {
              this._fixedBottomGap = my(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return GO(e || t);
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-sidenav']],
              hostAttrs: ['tabIndex', '-1', 1, 'mat-drawer', 'mat-sidenav'],
              hostVars: 17,
              hostBindings: function (t, e) {
                2 & t &&
                  (Ao('align', null),
                  ca('top', e.fixedInViewport ? e.fixedTopGap : null, 'px')(
                    'bottom',
                    e.fixedInViewport ? e.fixedBottomGap : null,
                    'px'
                  ),
                  ha('mat-drawer-end', 'end' === e.position)('mat-drawer-over', 'over' === e.mode)(
                    'mat-drawer-push',
                    'push' === e.mode
                  )('mat-drawer-side', 'side' === e.mode)('mat-drawer-opened', e.opened)(
                    'mat-sidenav-fixed',
                    e.fixedInViewport
                  ));
              },
              inputs: {
                fixedInViewport: 'fixedInViewport',
                fixedTopGap: 'fixedTopGap',
                fixedBottomGap: 'fixedBottomGap',
              },
              exportAs: ['matSidenav'],
              features: [go],
              ngContentSelectors: TO,
              decls: 5,
              vars: 0,
              consts: [['cdkScrollable', '', 1, 'mat-drawer-inner-container']],
              template: function (t, e) {
                1 & t && (Jo(), Fo(0, 'div', 0), Ca(1, '\n  '), ta(2), Ca(3, '\n'), No(), Ca(4, '\n'));
              },
              directives: [$w],
              encapsulation: 2,
              data: { animation: [zO.transformDrawer] },
              changeDetection: 0,
            })),
            t
          );
        })();
      const GO = Gn(YO);
      let QO = (() => {
        class t extends WO {}
        return (
          (t.ɵfac = function (e) {
            return KO(e || t);
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['mat-sidenav-container']],
            contentQueries: function (t, e, n) {
              if ((1 & t && (Cc(n, UO, 1), Cc(n, YO, 1)), 2 & t)) {
                let t;
                wc((t = kc())) && (e._content = t.first), wc((t = kc())) && (e._allDrawers = t);
              }
            },
            hostAttrs: [1, 'mat-drawer-container', 'mat-sidenav-container'],
            hostVars: 2,
            hostBindings: function (t, e) {
              2 & t && ha('mat-drawer-container-explicit-backdrop', e._backdropOverride);
            },
            exportAs: ['matSidenavContainer'],
            features: [Wa([{ provide: HO, useExisting: t }]), go],
            ngContentSelectors: VO,
            decls: 8,
            vars: 2,
            consts: [
              ['class', 'mat-drawer-backdrop', 3, 'mat-drawer-shown', 'click', 4, 'ngIf'],
              ['cdkScrollable', '', 4, 'ngIf'],
              [1, 'mat-drawer-backdrop', 3, 'click'],
              ['cdkScrollable', ''],
            ],
            template: function (t, e) {
              1 & t &&
                (Jo(NO),
                Do(0, LO, 1, 2, 'div', 0),
                Ca(1, '\n\n'),
                ta(2),
                Ca(3, '\n\n'),
                ta(4, 1),
                Ca(5, '\n'),
                Do(6, FO, 4, 0, 'mat-sidenav-content', 1),
                Ca(7, '\n')),
                2 & t && (Io('ngIf', e.hasBackdrop), tr(6), Io('ngIf', !e._content));
            },
            directives: [Ru, UO, $w],
            styles: [BO],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const KO = Gn(QO);
      let XO = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[Gu, Ev, xy, Ww], Ww, Ev] })),
          t
        );
      })();
      const ZO = ['thumbContainer'],
        JO = ['toggleBar'],
        tP = ['input'],
        eP = function () {
          return { enterDuration: 150 };
        },
        nP = ['*'],
        iP = new Jn('mat-slide-toggle-default-options', {
          providedIn: 'root',
          factory: () => ({ disableToggleValue: !1 }),
        });
      let sP = 0;
      const rP = { provide: Nd, useExisting: ot(() => cP), multi: !0 };
      class oP {
        constructor(t, e) {
          (this.source = t), (this.checked = e);
        }
      }
      class aP {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const lP = Tv(Pv(Av(Ov(aP)), 'accent'));
      let cP = (() => {
          class t extends lP {
            constructor(t, e, n, i, s, r) {
              super(t),
                (this._focusMonitor = e),
                (this._changeDetectorRef = n),
                (this.defaults = s),
                (this._animationMode = r),
                (this._onChange = (t) => {}),
                (this._onTouched = () => {}),
                (this._uniqueId = 'mat-slide-toggle-' + ++sP),
                (this._required = !1),
                (this._checked = !1),
                (this.name = null),
                (this.id = this._uniqueId),
                (this.labelPosition = 'after'),
                (this.ariaLabel = null),
                (this.ariaLabelledby = null),
                (this.change = new cc()),
                (this.toggleChange = new cc()),
                (this.tabIndex = parseInt(i) || 0);
            }
            get required() {
              return this._required;
            }
            set required(t) {
              this._required = py(t);
            }
            get checked() {
              return this._checked;
            }
            set checked(t) {
              (this._checked = py(t)), this._changeDetectorRef.markForCheck();
            }
            get inputId() {
              return `${this.id || this._uniqueId}-input`;
            }
            ngAfterContentInit() {
              this._focusMonitor.monitor(this._elementRef, !0).subscribe((t) => {
                'keyboard' === t || 'program' === t
                  ? this._inputElement.nativeElement.focus()
                  : t || Promise.resolve().then(() => this._onTouched());
              });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef);
            }
            _onChangeEvent(t) {
              t.stopPropagation(),
                this.toggleChange.emit(),
                this.defaults.disableToggleValue
                  ? (this._inputElement.nativeElement.checked = this.checked)
                  : ((this.checked = this._inputElement.nativeElement.checked), this._emitChangeEvent());
            }
            _onInputClick(t) {
              t.stopPropagation();
            }
            writeValue(t) {
              this.checked = !!t;
            }
            registerOnChange(t) {
              this._onChange = t;
            }
            registerOnTouched(t) {
              this._onTouched = t;
            }
            setDisabledState(t) {
              (this.disabled = t), this._changeDetectorRef.markForCheck();
            }
            focus(t, e) {
              e ? this._focusMonitor.focusVia(this._inputElement, e, t) : this._inputElement.nativeElement.focus(t);
            }
            toggle() {
              (this.checked = !this.checked), this._onChange(this.checked);
            }
            _emitChangeEvent() {
              this._onChange(this.checked), this.change.emit(new oP(this, this.checked));
            }
            _onLabelTextChange() {
              this._changeDetectorRef.detectChanges();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(av), Ro(kl), Kn('tabindex'), Ro(iP), Ro(ey, 8));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-slide-toggle']],
              viewQuery: function (t, e) {
                if ((1 & t && (xc(ZO, 1), xc(JO, 1), xc(tP, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._thumbEl = t.first),
                    wc((t = kc())) && (e._thumbBarEl = t.first),
                    wc((t = kc())) && (e._inputElement = t.first);
                }
              },
              hostAttrs: [1, 'mat-slide-toggle'],
              hostVars: 12,
              hostBindings: function (t, e) {
                2 & t &&
                  (Oa('id', e.id),
                  Ao('tabindex', e.disabled ? null : -1)('aria-label', null)('aria-labelledby', null),
                  ha('mat-checked', e.checked)('mat-disabled', e.disabled)(
                    'mat-slide-toggle-label-before',
                    'before' == e.labelPosition
                  )('_mat-animation-noopable', 'NoopAnimations' === e._animationMode));
              },
              inputs: {
                disabled: 'disabled',
                disableRipple: 'disableRipple',
                color: 'color',
                tabIndex: 'tabIndex',
                name: 'name',
                id: 'id',
                labelPosition: 'labelPosition',
                ariaLabel: ['aria-label', 'ariaLabel'],
                ariaLabelledby: ['aria-labelledby', 'ariaLabelledby'],
                required: 'required',
                checked: 'checked',
              },
              outputs: { change: 'change', toggleChange: 'toggleChange' },
              exportAs: ['matSlideToggle'],
              features: [Wa([rP]), go],
              ngContentSelectors: nP,
              decls: 32,
              vars: 18,
              consts: [
                [1, 'mat-slide-toggle-label'],
                ['label', ''],
                [1, 'mat-slide-toggle-bar'],
                ['toggleBar', ''],
                [
                  'type',
                  'checkbox',
                  'role',
                  'switch',
                  1,
                  'mat-slide-toggle-input',
                  'cdk-visually-hidden',
                  3,
                  'id',
                  'required',
                  'tabIndex',
                  'checked',
                  'disabled',
                  'change',
                  'click',
                ],
                ['input', ''],
                [1, 'mat-slide-toggle-thumb-container'],
                ['thumbContainer', ''],
                [1, 'mat-slide-toggle-thumb'],
                [
                  'mat-ripple',
                  '',
                  1,
                  'mat-slide-toggle-ripple',
                  'mat-focus-indicator',
                  3,
                  'matRippleTrigger',
                  'matRippleDisabled',
                  'matRippleCentered',
                  'matRippleRadius',
                  'matRippleAnimation',
                ],
                [1, 'mat-ripple-element', 'mat-slide-toggle-persistent-ripple'],
                [1, 'mat-slide-toggle-content', 3, 'cdkObserveContent'],
                ['labelContent', ''],
                [2, 'display', 'none'],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (Jo(),
                    Fo(0, 'label', 0, 1),
                    Ca(2, '\n  '),
                    Fo(3, 'div', 2, 3),
                    Ca(5, '\n\n    '),
                    Fo(6, 'input', 4, 5),
                    Uo('change', function (t) {
                      return e._onChangeEvent(t);
                    })('click', function (t) {
                      return e._onInputClick(t);
                    }),
                    No(),
                    Ca(8, '\n\n    '),
                    Fo(9, 'div', 6, 7),
                    Ca(11, '\n      '),
                    Vo(12, 'div', 8),
                    Ca(13, '\n      '),
                    Fo(14, 'div', 9),
                    Ca(15, '\n\n        '),
                    Vo(16, 'div', 10),
                    Ca(17, '\n      '),
                    No(),
                    Ca(18, '\n    '),
                    No(),
                    Ca(19, '\n\n  '),
                    No(),
                    Ca(20, '\n\n  '),
                    Fo(21, 'span', 11, 12),
                    Uo('cdkObserveContent', function () {
                      return e._onLabelTextChange();
                    }),
                    Ca(23, '\n    '),
                    Ca(24, '\n    '),
                    Fo(25, 'span', 13),
                    Ca(26, '\xa0'),
                    No(),
                    Ca(27, '\n    '),
                    ta(28),
                    Ca(29, '\n  '),
                    No(),
                    Ca(30, '\n'),
                    No(),
                    Ca(31, '\n')),
                  2 & t)
                ) {
                  const t = Mo(1),
                    n = Mo(22);
                  Ao('for', e.inputId),
                    tr(3),
                    ha('mat-slide-toggle-bar-no-side-margin', !n.textContent || !n.textContent.trim()),
                    tr(3),
                    Io('id', e.inputId)('required', e.required)('tabIndex', e.tabIndex)('checked', e.checked)(
                      'disabled',
                      e.disabled
                    ),
                    Ao('name', e.name)('aria-checked', e.checked.toString())('aria-label', e.ariaLabel)(
                      'aria-labelledby',
                      e.ariaLabelledby
                    ),
                    tr(8),
                    Io('matRippleTrigger', t)('matRippleDisabled', e.disableRipple || e.disabled)(
                      'matRippleCentered',
                      !0
                    )('matRippleRadius', 20)('matRippleAnimation', Zl(17, eP));
                }
              },
              directives: [iw, Ly],
              styles: [
                '.mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        hP = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })(),
        uP = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[hP, sw, Ev, Fy], hP, Ev] })),
            t
          );
        })(),
        dP = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu, Ev], Ev] })),
            t
          );
        })();
      function pP(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div', 1),
            Ca(1, '\n  '),
            Fo(2, 'button', 2),
            Uo('click', function () {
              return Fe(t), Xo().action();
            }),
            Ca(3),
            No(),
            Ca(4, '\n'),
            No();
        }
        if (2 & t) {
          const t = Xo();
          tr(3), ka(t.data.action);
        }
      }
      function mP(t, e) {}
      const fP = new Jn('MatSnackBarData');
      class gP {
        constructor() {
          (this.politeness = 'assertive'),
            (this.announcementMessage = ''),
            (this.duration = 0),
            (this.data = null),
            (this.horizontalPosition = 'center'),
            (this.verticalPosition = 'bottom');
        }
      }
      const _P = Math.pow(2, 31) - 1;
      class bP {
        constructor(t, e) {
          (this._overlayRef = e),
            (this._afterDismissed = new C()),
            (this._afterOpened = new C()),
            (this._onAction = new C()),
            (this._dismissedByAction = !1),
            (this.containerInstance = t),
            this.onAction().subscribe(() => this.dismiss()),
            t._onExit.subscribe(() => this._finishDismiss());
        }
        dismiss() {
          this._afterDismissed.closed || this.containerInstance.exit(), clearTimeout(this._durationTimeoutId);
        }
        dismissWithAction() {
          this._onAction.closed || ((this._dismissedByAction = !0), this._onAction.next(), this._onAction.complete()),
            clearTimeout(this._durationTimeoutId);
        }
        closeWithAction() {
          this.dismissWithAction();
        }
        _dismissAfter(t) {
          this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(t, _P));
        }
        _open() {
          this._afterOpened.closed || (this._afterOpened.next(), this._afterOpened.complete());
        }
        _finishDismiss() {
          this._overlayRef.dispose(),
            this._onAction.closed || this._onAction.complete(),
            this._afterDismissed.next({ dismissedByAction: this._dismissedByAction }),
            this._afterDismissed.complete(),
            (this._dismissedByAction = !1);
        }
        afterDismissed() {
          return this._afterDismissed;
        }
        afterOpened() {
          return this.containerInstance._onEnter;
        }
        onAction() {
          return this._onAction;
        }
      }
      let yP = (() => {
        class t {
          constructor(t, e) {
            (this.snackBarRef = t), (this.data = e);
          }
          action() {
            this.snackBarRef.dismissWithAction();
          }
          get hasAction() {
            return !!this.data.action;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(bP), Ro(fP));
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['simple-snack-bar']],
            hostAttrs: [1, 'mat-simple-snackbar'],
            decls: 5,
            vars: 2,
            consts: [
              ['class', 'mat-simple-snackbar-action', 4, 'ngIf'],
              [1, 'mat-simple-snackbar-action'],
              ['mat-button', '', 3, 'click'],
            ],
            template: function (t, e) {
              1 & t && (Fo(0, 'span'), Ca(1), No(), Ca(2, '\n'), Do(3, pP, 5, 1, 'div', 0), Ca(4, '\n')),
                2 & t && (tr(1), ka(e.data.message), tr(2), Io('ngIf', e.hasAction));
            },
            directives: [Ru, $C],
            styles: [
              '.mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\n',
            ],
            encapsulation: 2,
            changeDetection: 0,
          })),
          t
        );
      })();
      const vP = {
        snackBarState: yg('state', [
          Cg('void, hidden', xg({ transform: 'scale(0.8)', opacity: 0 })),
          Cg('visible', xg({ transform: 'scale(1)', opacity: 1 })),
          Sg('* => visible', vg('150ms cubic-bezier(0, 0, 0.2, 1)')),
          Sg('* => void, * => hidden', vg('75ms cubic-bezier(0.4, 0.0, 1, 1)', xg({ opacity: 0 }))),
        ]),
      };
      let wP = (() => {
          class t extends Xw {
            constructor(t, e, n, i, s) {
              super(),
                (this._ngZone = t),
                (this._elementRef = e),
                (this._changeDetectorRef = n),
                (this._platform = i),
                (this.snackBarConfig = s),
                (this._announceDelay = 150),
                (this._destroyed = !1),
                (this._onAnnounce = new C()),
                (this._onExit = new C()),
                (this._onEnter = new C()),
                (this._animationState = 'void'),
                (this.attachDomPortal = (t) => (
                  this._assertNotAttached(), this._applySnackBarClasses(), this._portalOutlet.attachDomPortal(t)
                )),
                (this._live =
                  'assertive' !== s.politeness || s.announcementMessage
                    ? 'off' === s.politeness
                      ? 'off'
                      : 'polite'
                    : 'assertive'),
                this._platform.FIREFOX &&
                  ('polite' === this._live && (this._role = 'status'),
                  'assertive' === this._live && (this._role = 'alert'));
            }
            attachComponentPortal(t) {
              return (
                this._assertNotAttached(), this._applySnackBarClasses(), this._portalOutlet.attachComponentPortal(t)
              );
            }
            attachTemplatePortal(t) {
              return (
                this._assertNotAttached(), this._applySnackBarClasses(), this._portalOutlet.attachTemplatePortal(t)
              );
            }
            onAnimationEnd(t) {
              const { fromState: e, toState: n } = t;
              if (((('void' === n && 'void' !== e) || 'hidden' === n) && this._completeExit(), 'visible' === n)) {
                const t = this._onEnter;
                this._ngZone.run(() => {
                  t.next(), t.complete();
                });
              }
            }
            enter() {
              this._destroyed ||
                ((this._animationState = 'visible'),
                this._changeDetectorRef.detectChanges(),
                this._screenReaderAnnounce());
            }
            exit() {
              return (
                (this._animationState = 'hidden'),
                this._elementRef.nativeElement.setAttribute('mat-exit', ''),
                clearTimeout(this._announceTimeoutId),
                this._onExit
              );
            }
            ngOnDestroy() {
              (this._destroyed = !0), this._completeExit();
            }
            _completeExit() {
              this._ngZone.onMicrotaskEmpty.pipe(pf(1)).subscribe(() => {
                this._onExit.next(), this._onExit.complete();
              });
            }
            _applySnackBarClasses() {
              const t = this._elementRef.nativeElement,
                e = this.snackBarConfig.panelClass;
              e && (Array.isArray(e) ? e.forEach((e) => t.classList.add(e)) : t.classList.add(e)),
                'center' === this.snackBarConfig.horizontalPosition && t.classList.add('mat-snack-bar-center'),
                'top' === this.snackBarConfig.verticalPosition && t.classList.add('mat-snack-bar-top');
            }
            _assertNotAttached() {
              this._portalOutlet.hasAttached();
            }
            _screenReaderAnnounce() {
              this._announceTimeoutId ||
                this._ngZone.runOutsideAngular(() => {
                  this._announceTimeoutId = setTimeout(() => {
                    const t = this._elementRef.nativeElement.querySelector('[aria-hidden]'),
                      e = this._elementRef.nativeElement.querySelector('[aria-live]');
                    if (t && e) {
                      let n = null;
                      this._platform.isBrowser &&
                        document.activeElement instanceof HTMLElement &&
                        t.contains(document.activeElement) &&
                        (n = document.activeElement),
                        t.removeAttribute('aria-hidden'),
                        e.appendChild(t),
                        null == n || n.focus(),
                        this._onAnnounce.next(),
                        this._onAnnounce.complete();
                    }
                  }, this._announceDelay);
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Xc), Ro(Za), Ro(kl), Ro(wy), Ro(gP));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['snack-bar-container']],
              viewQuery: function (t, e) {
                if ((1 & t && xc(Jw, 3), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._portalOutlet = t.first);
                }
              },
              hostAttrs: [1, 'mat-snack-bar-container'],
              hostVars: 1,
              hostBindings: function (t, e) {
                1 & t &&
                  Yo('@state.done', function (t) {
                    return e.onAnimationEnd(t);
                  }),
                  2 & t && Pa('@state', e._animationState);
              },
              features: [go],
              decls: 9,
              vars: 2,
              consts: [
                ['aria-hidden', 'true'],
                ['cdkPortalOutlet', ''],
              ],
              template: function (t, e) {
                1 & t &&
                  (Ca(0, '\n'),
                  Fo(1, 'div', 0),
                  Ca(2, '\n  '),
                  Do(3, mP, 0, 0, 'ng-template', 1),
                  Ca(4, '\n'),
                  No(),
                  Ca(5, '\n\n'),
                  Ca(6, '\n'),
                  Vo(7, 'div'),
                  Ca(8, '\n')),
                  2 & t && (tr(7), Ao('aria-live', e._live)('role', e._role));
              },
              directives: [Jw],
              styles: [
                '.mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\n',
              ],
              encapsulation: 2,
              data: { animation: [vP.snackBarState] },
            })),
            t
          );
        })(),
        xP = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Nx, tx, Gu, qC, Ev], Ev] })),
            t
          );
        })();
      const CP = new Jn('mat-snack-bar-default-options', {
        providedIn: 'root',
        factory: function () {
          return new gP();
        },
      });
      let kP = (() => {
        class t {
          constructor(t, e, n, i, s, r) {
            (this._overlay = t),
              (this._live = e),
              (this._injector = n),
              (this._breakpointObserver = i),
              (this._parentSnackBar = s),
              (this._defaultConfig = r),
              (this._snackBarRefAtThisLevel = null),
              (this.simpleSnackBarComponent = yP),
              (this.snackBarContainerComponent = wP),
              (this.handsetCssClass = 'mat-snack-bar-handset');
          }
          get _openedSnackBarRef() {
            const t = this._parentSnackBar;
            return t ? t._openedSnackBarRef : this._snackBarRefAtThisLevel;
          }
          set _openedSnackBarRef(t) {
            this._parentSnackBar ? (this._parentSnackBar._openedSnackBarRef = t) : (this._snackBarRefAtThisLevel = t);
          }
          openFromComponent(t, e) {
            return this._attach(t, e);
          }
          openFromTemplate(t, e) {
            return this._attach(t, e);
          }
          open(t, e = '', n) {
            const i = Object.assign(Object.assign({}, this._defaultConfig), n);
            return (
              (i.data = { message: t, action: e }),
              i.announcementMessage === t && (i.announcementMessage = void 0),
              this.openFromComponent(this.simpleSnackBarComponent, i)
            );
          }
          dismiss() {
            this._openedSnackBarRef && this._openedSnackBarRef.dismiss();
          }
          ngOnDestroy() {
            this._snackBarRefAtThisLevel && this._snackBarRefAtThisLevel.dismiss();
          }
          _attachSnackBarContainer(t, e) {
            const n = mo.create({
                parent: (e && e.viewContainerRef && e.viewContainerRef.injector) || this._injector,
                providers: [{ provide: gP, useValue: e }],
              }),
              i = new Gw(this.snackBarContainerComponent, e.viewContainerRef, n),
              s = t.attach(i);
            return (s.instance.snackBarConfig = e), s.instance;
          }
          _attach(t, e) {
            const n = Object.assign(Object.assign(Object.assign({}, new gP()), this._defaultConfig), e),
              i = this._createOverlay(n),
              s = this._attachSnackBarContainer(i, n),
              r = new bP(s, i);
            if (t instanceof Tl) {
              const e = new Qw(t, null, { $implicit: n.data, snackBarRef: r });
              r.instance = s.attachTemplatePortal(e);
            } else {
              const e = this._createInjector(n, r),
                i = new Gw(t, void 0, e),
                o = s.attachComponentPortal(i);
              r.instance = o.instance;
            }
            return (
              this._breakpointObserver
                .observe('(max-width: 599.98px) and (orientation: portrait)')
                .pipe(Lw(i.detachments()))
                .subscribe((t) => {
                  const e = i.overlayElement.classList;
                  t.matches ? e.add(this.handsetCssClass) : e.remove(this.handsetCssClass);
                }),
              n.announcementMessage &&
                s._onAnnounce.subscribe(() => {
                  this._live.announce(n.announcementMessage, n.politeness);
                }),
              this._animateSnackBar(r, n),
              (this._openedSnackBarRef = r),
              this._openedSnackBarRef
            );
          }
          _animateSnackBar(t, e) {
            t.afterDismissed().subscribe(() => {
              this._openedSnackBarRef == t && (this._openedSnackBarRef = null),
                e.announcementMessage && this._live.clear();
            }),
              this._openedSnackBarRef
                ? (this._openedSnackBarRef.afterDismissed().subscribe(() => {
                    t.containerInstance.enter();
                  }),
                  this._openedSnackBarRef.dismiss())
                : t.containerInstance.enter(),
              e.duration && e.duration > 0 && t.afterOpened().subscribe(() => t._dismissAfter(e.duration));
          }
          _createOverlay(t) {
            const e = new ux();
            e.direction = t.direction;
            let n = this._overlay.position().global();
            const i = 'rtl' === t.direction,
              s =
                'left' === t.horizontalPosition ||
                ('start' === t.horizontalPosition && !i) ||
                ('end' === t.horizontalPosition && i),
              r = !s && 'center' !== t.horizontalPosition;
            return (
              s ? n.left('0') : r ? n.right('0') : n.centerHorizontally(),
              'top' === t.verticalPosition ? n.top('0') : n.bottom('0'),
              (e.positionStrategy = n),
              this._overlay.create(e)
            );
          }
          _createInjector(t, e) {
            return mo.create({
              parent: (t && t.viewContainerRef && t.viewContainerRef.injector) || this._injector,
              providers: [
                { provide: bP, useValue: e },
                { provide: fP, useValue: t.data },
              ],
            });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Dx), _i(nv), _i(mo), _i(GE), _i(t, 12), _i(CP));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(Dx), _i(nv), _i(Xr), _i(GE), _i(t, 12), _i(CP));
            },
            token: t,
            providedIn: xP,
          })),
          t
        );
      })();
      const SP = ['mat-sort-header', ''];
      function EP(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div', 3),
            Uo('@arrowPosition.start', function () {
              return Fe(t), (Xo()._disableViewStateAnimation = !0);
            })('@arrowPosition.done', function () {
              return Fe(t), (Xo()._disableViewStateAnimation = !1);
            }),
            Ca(1, '\n    '),
            Vo(2, 'div', 4),
            Ca(3, '\n    '),
            Fo(4, 'div', 5),
            Ca(5, '\n      '),
            Vo(6, 'div', 6),
            Ca(7, '\n      '),
            Vo(8, 'div', 7),
            Ca(9, '\n      '),
            Vo(10, 'div', 8),
            Ca(11, '\n    '),
            No(),
            Ca(12, '\n  '),
            No();
        }
        if (2 & t) {
          const t = Xo();
          Io('@arrowOpacity', t._getArrowViewState())('@arrowPosition', t._getArrowViewState())(
            '@allowChildren',
            t._getArrowDirectionState()
          ),
            tr(4),
            Io('@indicator', t._getArrowDirectionState()),
            tr(2),
            Io('@leftPointer', t._getArrowDirectionState()),
            tr(2),
            Io('@rightPointer', t._getArrowDirectionState());
        }
      }
      const OP = ['*'],
        PP = new Jn('MAT_SORT_DEFAULT_OPTIONS');
      class AP {}
      const TP = Mv(Ov(AP));
      let DP = (() => {
        class t extends TP {
          constructor(t) {
            super(),
              (this._defaultOptions = t),
              (this.sortables = new Map()),
              (this._stateChanges = new C()),
              (this.start = 'asc'),
              (this._direction = ''),
              (this.sortChange = new cc());
          }
          get direction() {
            return this._direction;
          }
          set direction(t) {
            this._direction = t;
          }
          get disableClear() {
            return this._disableClear;
          }
          set disableClear(t) {
            this._disableClear = py(t);
          }
          register(t) {
            this.sortables.set(t.id, t);
          }
          deregister(t) {
            this.sortables.delete(t.id);
          }
          sort(t) {
            this.active != t.id
              ? ((this.active = t.id), (this.direction = t.start ? t.start : this.start))
              : (this.direction = this.getNextSortDirection(t)),
              this.sortChange.emit({ active: this.active, direction: this.direction });
          }
          getNextSortDirection(t) {
            var e, n, i;
            if (!t) return '';
            const s =
              null !==
                (n = null !== (e = null == t ? void 0 : t.disableClear) && void 0 !== e ? e : this.disableClear) &&
              void 0 !== n
                ? n
                : !!(null === (i = this._defaultOptions) || void 0 === i ? void 0 : i.disableClear);
            let r = (function (t, e) {
                let n = ['asc', 'desc'];
                return 'desc' == t && n.reverse(), e || n.push(''), n;
              })(t.start || this.start, s),
              o = r.indexOf(this.direction) + 1;
            return o >= r.length && (o = 0), r[o];
          }
          ngOnInit() {
            this._markInitialized();
          }
          ngOnChanges() {
            this._stateChanges.next();
          }
          ngOnDestroy() {
            this._stateChanges.complete();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(PP, 8));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'matSort', '']],
            hostAttrs: [1, 'mat-sort'],
            inputs: {
              disabled: ['matSortDisabled', 'disabled'],
              start: ['matSortStart', 'start'],
              direction: ['matSortDirection', 'direction'],
              disableClear: ['matSortDisableClear', 'disableClear'],
              active: ['matSortActive', 'active'],
            },
            outputs: { sortChange: 'matSortChange' },
            exportAs: ['matSort'],
            features: [go, ue],
          })),
          t
        );
      })();
      const MP = Cv.ENTERING + ' ' + xv.STANDARD_CURVE,
        RP = {
          indicator: yg('indicator', [
            Cg('active-asc, asc', xg({ transform: 'translateY(0px)' })),
            Cg('active-desc, desc', xg({ transform: 'translateY(10px)' })),
            Sg('active-asc <=> active-desc', vg(MP)),
          ]),
          leftPointer: yg('leftPointer', [
            Cg('active-asc, asc', xg({ transform: 'rotate(-45deg)' })),
            Cg('active-desc, desc', xg({ transform: 'rotate(45deg)' })),
            Sg('active-asc <=> active-desc', vg(MP)),
          ]),
          rightPointer: yg('rightPointer', [
            Cg('active-asc, asc', xg({ transform: 'rotate(45deg)' })),
            Cg('active-desc, desc', xg({ transform: 'rotate(-45deg)' })),
            Sg('active-asc <=> active-desc', vg(MP)),
          ]),
          arrowOpacity: yg('arrowOpacity', [
            Cg('desc-to-active, asc-to-active, active', xg({ opacity: 1 })),
            Cg('desc-to-hint, asc-to-hint, hint', xg({ opacity: 0.54 })),
            Cg('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', xg({ opacity: 0 })),
            Sg('* => asc, * => desc, * => active, * => hint, * => void', vg('0ms')),
            Sg('* <=> *', vg(MP)),
          ]),
          arrowPosition: yg('arrowPosition', [
            Sg(
              '* => desc-to-hint, * => desc-to-active',
              vg(MP, kg([xg({ transform: 'translateY(-25%)' }), xg({ transform: 'translateY(0)' })]))
            ),
            Sg(
              '* => hint-to-desc, * => active-to-desc',
              vg(MP, kg([xg({ transform: 'translateY(0)' }), xg({ transform: 'translateY(25%)' })]))
            ),
            Sg(
              '* => asc-to-hint, * => asc-to-active',
              vg(MP, kg([xg({ transform: 'translateY(25%)' }), xg({ transform: 'translateY(0)' })]))
            ),
            Sg(
              '* => hint-to-asc, * => active-to-asc',
              vg(MP, kg([xg({ transform: 'translateY(0)' }), xg({ transform: 'translateY(-25%)' })]))
            ),
            Cg(
              'desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active',
              xg({ transform: 'translateY(0)' })
            ),
            Cg('hint-to-desc, active-to-desc, desc', xg({ transform: 'translateY(-25%)' })),
            Cg('hint-to-asc, active-to-asc, asc', xg({ transform: 'translateY(25%)' })),
          ]),
          allowChildren: yg('allowChildren', [Sg('* <=> *', [Og('@*', Eg(), { optional: !0 })])]),
        };
      let IP = (() => {
        class t {
          constructor() {
            (this.changes = new C()), (this.sortButtonLabel = (t) => `Change sorting for ${t}`);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const LP = {
        provide: IP,
        deps: [[new xi(), new Ci(), IP]],
        useFactory: function (t) {
          return t || new IP();
        },
      };
      class FP {}
      const NP = Ov(FP);
      let VP = (() => {
          class t extends NP {
            constructor(t, e, n, i, s, r) {
              super(),
                (this._intl = t),
                (this._changeDetectorRef = e),
                (this._sort = n),
                (this._columnDef = i),
                (this._focusMonitor = s),
                (this._elementRef = r),
                (this._showIndicatorHint = !1),
                (this._viewState = {}),
                (this._arrowDirection = ''),
                (this._disableViewStateAnimation = !1),
                (this.arrowPosition = 'after'),
                this._handleStateChanges();
            }
            get disableClear() {
              return this._disableClear;
            }
            set disableClear(t) {
              this._disableClear = py(t);
            }
            ngOnInit() {
              !this.id && this._columnDef && (this.id = this._columnDef.name),
                this._updateArrowDirection(),
                this._setAnimationTransitionState({ toState: this._isSorted() ? 'active' : this._arrowDirection }),
                this._sort.register(this);
            }
            ngAfterViewInit() {
              this._focusMonitor.monitor(this._elementRef, !0).subscribe((t) => {
                const e = !!t;
                e !== this._showIndicatorHint &&
                  (this._setIndicatorHintVisible(e), this._changeDetectorRef.markForCheck());
              });
            }
            ngOnDestroy() {
              this._focusMonitor.stopMonitoring(this._elementRef),
                this._sort.deregister(this),
                this._rerenderSubscription.unsubscribe();
            }
            _setIndicatorHintVisible(t) {
              (this._isDisabled() && t) ||
                ((this._showIndicatorHint = t),
                this._isSorted() ||
                  (this._updateArrowDirection(),
                  this._setAnimationTransitionState(
                    this._showIndicatorHint
                      ? { fromState: this._arrowDirection, toState: 'hint' }
                      : { fromState: 'hint', toState: this._arrowDirection }
                  )));
            }
            _setAnimationTransitionState(t) {
              (this._viewState = t || {}),
                this._disableViewStateAnimation && (this._viewState = { toState: t.toState });
            }
            _toggleOnInteraction() {
              this._sort.sort(this),
                ('hint' !== this._viewState.toState && 'active' !== this._viewState.toState) ||
                  (this._disableViewStateAnimation = !0);
            }
            _handleClick() {
              this._isDisabled() || this._sort.sort(this);
            }
            _handleKeydown(t) {
              this._isDisabled() ||
                (t.keyCode !== oy && t.keyCode !== sy) ||
                (t.preventDefault(), this._toggleOnInteraction());
            }
            _isSorted() {
              return (
                this._sort.active == this.id && ('asc' === this._sort.direction || 'desc' === this._sort.direction)
              );
            }
            _getArrowDirectionState() {
              return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;
            }
            _getArrowViewState() {
              const t = this._viewState.fromState;
              return (t ? `${t}-to-` : '') + this._viewState.toState;
            }
            _updateArrowDirection() {
              this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;
            }
            _isDisabled() {
              return this._sort.disabled || this.disabled;
            }
            _getAriaSortAttribute() {
              return this._isSorted() ? ('asc' == this._sort.direction ? 'ascending' : 'descending') : 'none';
            }
            _renderArrow() {
              return !this._isDisabled() || this._isSorted();
            }
            _handleStateChanges() {
              this._rerenderSubscription = q(
                this._sort.sortChange,
                this._sort._stateChanges,
                this._intl.changes
              ).subscribe(() => {
                this._isSorted() &&
                  (this._updateArrowDirection(),
                  ('hint' !== this._viewState.toState && 'active' !== this._viewState.toState) ||
                    (this._disableViewStateAnimation = !0),
                  this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' }),
                  (this._showIndicatorHint = !1)),
                  !this._isSorted() &&
                    this._viewState &&
                    'active' === this._viewState.toState &&
                    ((this._disableViewStateAnimation = !1),
                    this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection })),
                  this._changeDetectorRef.markForCheck();
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(IP), Ro(kl), Ro(DP, 8), Ro('MAT_SORT_HEADER_COLUMN_DEF', 8), Ro(av), Ro(Za));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['', 'mat-sort-header', '']],
              hostAttrs: [1, 'mat-sort-header'],
              hostVars: 3,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('click', function () {
                    return e._handleClick();
                  })('keydown', function (t) {
                    return e._handleKeydown(t);
                  })('mouseenter', function () {
                    return e._setIndicatorHintVisible(!0);
                  })('mouseleave', function () {
                    return e._setIndicatorHintVisible(!1);
                  }),
                  2 & t &&
                    (Ao('aria-sort', e._getAriaSortAttribute()), ha('mat-sort-header-disabled', e._isDisabled()));
              },
              inputs: {
                disabled: 'disabled',
                arrowPosition: 'arrowPosition',
                disableClear: 'disableClear',
                id: ['mat-sort-header', 'id'],
                start: 'start',
              },
              exportAs: ['matSortHeader'],
              features: [go],
              attrs: SP,
              ngContentSelectors: OP,
              decls: 13,
              vars: 6,
              consts: [
                ['role', 'button', 1, 'mat-sort-header-container', 'mat-focus-indicator'],
                [1, 'mat-sort-header-content'],
                ['class', 'mat-sort-header-arrow', 4, 'ngIf'],
                [1, 'mat-sort-header-arrow'],
                [1, 'mat-sort-header-stem'],
                [1, 'mat-sort-header-indicator'],
                [1, 'mat-sort-header-pointer-left'],
                [1, 'mat-sort-header-pointer-right'],
                [1, 'mat-sort-header-pointer-middle'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Jo(),
                  Ca(0, '\n'),
                  Fo(1, 'div', 0),
                  Ca(2, '\n\n  '),
                  Ca(3, '\n  '),
                  Fo(4, 'div', 1),
                  Ca(5, '\n    '),
                  ta(6),
                  Ca(7, '\n  '),
                  No(),
                  Ca(8, '\n\n  '),
                  Ca(9, '\n  '),
                  Do(10, EP, 13, 6, 'div', 2),
                  Ca(11, '\n'),
                  No(),
                  Ca(12, '\n')),
                  2 & t &&
                    (tr(1),
                    ha('mat-sort-header-sorted', e._isSorted())(
                      'mat-sort-header-position-before',
                      'before' == e.arrowPosition
                    ),
                    Ao('tabindex', e._isDisabled() ? null : 0),
                    tr(9),
                    Io('ngIf', e._renderArrow()));
              },
              directives: [Ru],
              styles: [
                '.mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\n',
              ],
              encapsulation: 2,
              data: {
                animation: [
                  RP.indicator,
                  RP.leftPointer,
                  RP.rightPointer,
                  RP.arrowOpacity,
                  RP.arrowPosition,
                  RP.allowChildren,
                ],
              },
              changeDetection: 0,
            })),
            t
          );
        })(),
        BP = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [LP], imports: [[Gu, Ev]] })),
            t
          );
        })(),
        zP = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[gv]] })),
            t
          );
        })(),
        jP = (() => {
          class t {
            constructor() {
              (this.changes = new C()), (this.optionalLabel = 'Optional');
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const HP = {
        provide: jP,
        deps: [[new xi(), new Ci(), jP]],
        useFactory: function (t) {
          return t || new jP();
        },
      };
      let $P = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ providers: [HP, Uv], imports: [[Ev, Gu, tx, qC, zP, DS, sw], Ev] })),
          t
        );
      })();
      class qP extends C {
        constructor(t) {
          super(), (this._value = t);
        }
        get value() {
          return this.getValue();
        }
        _subscribe(t) {
          const e = super._subscribe(t);
          return e && !e.closed && t.next(this._value), e;
        }
        getValue() {
          if (this.hasError) throw this.thrownError;
          if (this.closed) throw new v();
          return this._value;
        }
        next(t) {
          super.next((this._value = t));
        }
      }
      const WP = [[['caption']], [['colgroup'], ['col']]],
        UP = ['caption', 'colgroup, col'];
      function YP(t) {
        return class extends t {
          constructor(...t) {
            super(...t), (this._sticky = !1), (this._hasStickyChanged = !1);
          }
          get sticky() {
            return this._sticky;
          }
          set sticky(t) {
            const e = this._sticky;
            (this._sticky = py(t)), (this._hasStickyChanged = e !== this._sticky);
          }
          hasStickyChanged() {
            const t = this._hasStickyChanged;
            return (this._hasStickyChanged = !1), t;
          }
          resetStickyChanged() {
            this._hasStickyChanged = !1;
          }
        };
      }
      const GP = new Jn('CDK_TABLE');
      let QP = (() => {
          class t {
            constructor(t) {
              this.template = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Tl));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'cdkCellDef', '']] })),
            t
          );
        })(),
        KP = (() => {
          class t {
            constructor(t) {
              this.template = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Tl));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'cdkHeaderCellDef', '']] })),
            t
          );
        })(),
        XP = (() => {
          class t {
            constructor(t) {
              this.template = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Tl));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'cdkFooterCellDef', '']] })),
            t
          );
        })();
      class ZP {}
      const JP = YP(ZP);
      let tA = (() => {
        class t extends JP {
          constructor(t) {
            super(), (this._table = t), (this._stickyEnd = !1);
          }
          get name() {
            return this._name;
          }
          set name(t) {
            this._setNameInput(t);
          }
          get stickyEnd() {
            return this._stickyEnd;
          }
          set stickyEnd(t) {
            const e = this._stickyEnd;
            (this._stickyEnd = py(t)), (this._hasStickyChanged = e !== this._stickyEnd);
          }
          _updateColumnCssClassName() {
            this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];
          }
          _setNameInput(t) {
            t &&
              ((this._name = t),
              (this.cssClassFriendlyName = t.replace(/[^a-z0-9_-]/gi, '-')),
              this._updateColumnCssClassName());
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(GP, 8));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'cdkColumnDef', '']],
            contentQueries: function (t, e, n) {
              if ((1 & t && (Cc(n, QP, 1), Cc(n, KP, 1), Cc(n, XP, 1)), 2 & t)) {
                let t;
                wc((t = kc())) && (e.cell = t.first),
                  wc((t = kc())) && (e.headerCell = t.first),
                  wc((t = kc())) && (e.footerCell = t.first);
              }
            },
            inputs: { sticky: 'sticky', name: ['cdkColumnDef', 'name'], stickyEnd: 'stickyEnd' },
            features: [Wa([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: t }]), go],
          })),
          t
        );
      })();
      class eA {
        constructor(t, e) {
          const n = e.nativeElement.classList;
          for (const i of t._columnCssClassName) n.add(i);
        }
      }
      let nA = (() => {
          class t extends eA {
            constructor(t, e) {
              super(t, e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(tA), Ro(Za));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['cdk-header-cell'], ['th', 'cdk-header-cell', '']],
              hostAttrs: ['role', 'columnheader', 1, 'cdk-header-cell'],
              features: [go],
            })),
            t
          );
        })(),
        iA = (() => {
          class t extends eA {
            constructor(t, e) {
              super(t, e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(tA), Ro(Za));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['cdk-cell'], ['td', 'cdk-cell', '']],
              hostAttrs: ['role', 'gridcell', 1, 'cdk-cell'],
              features: [go],
            })),
            t
          );
        })();
      class sA {
        constructor() {
          (this.tasks = []), (this.endTasks = []);
        }
      }
      const rA = new Jn('_COALESCED_STYLE_SCHEDULER');
      let oA = (() => {
          class t {
            constructor(t) {
              (this._ngZone = t), (this._currentSchedule = null), (this._destroyed = new C());
            }
            schedule(t) {
              this._createScheduleIfNeeded(), this._currentSchedule.tasks.push(t);
            }
            scheduleEnd(t) {
              this._createScheduleIfNeeded(), this._currentSchedule.endTasks.push(t);
            }
            ngOnDestroy() {
              this._destroyed.next(), this._destroyed.complete();
            }
            _createScheduleIfNeeded() {
              this._currentSchedule ||
                ((this._currentSchedule = new sA()),
                this._getScheduleObservable()
                  .pipe(Lw(this._destroyed))
                  .subscribe(() => {
                    for (; this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length; ) {
                      const t = this._currentSchedule;
                      this._currentSchedule = new sA();
                      for (const e of t.tasks) e();
                      for (const e of t.endTasks) e();
                    }
                    this._currentSchedule = null;
                  }));
            }
            _getScheduleObservable() {
              return this._ngZone.isStable ? L(Promise.resolve(void 0)) : this._ngZone.onStable.pipe(pf(1));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Xc));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        aA = (() => {
          class t {
            constructor(t, e) {
              (this.template = t), (this._differs = e);
            }
            ngOnChanges(t) {
              if (!this._columnsDiffer) {
                const e = (t.columns && t.columns.currentValue) || [];
                (this._columnsDiffer = this._differs.find(e).create()), this._columnsDiffer.diff(e);
              }
            }
            getColumnsDiff() {
              return this._columnsDiffer.diff(this.columns);
            }
            extractCellTemplate(t) {
              return this instanceof hA
                ? t.headerCell.template
                : this instanceof pA
                ? t.footerCell.template
                : t.cell.template;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Tl), Ro(_l));
            }),
            (t.ɵdir = Xt({ type: t, features: [ue] })),
            t
          );
        })();
      class lA extends aA {}
      const cA = YP(lA);
      let hA = (() => {
        class t extends cA {
          constructor(t, e, n) {
            super(t, e), (this._table = n);
          }
          ngOnChanges(t) {
            super.ngOnChanges(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(Tl), Ro(_l), Ro(GP, 8));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'cdkHeaderRowDef', '']],
            inputs: { columns: ['cdkHeaderRowDef', 'columns'], sticky: ['cdkHeaderRowDefSticky', 'sticky'] },
            features: [go, ue],
          })),
          t
        );
      })();
      class uA extends aA {}
      const dA = YP(uA);
      let pA = (() => {
          class t extends dA {
            constructor(t, e, n) {
              super(t, e), (this._table = n);
            }
            ngOnChanges(t) {
              super.ngOnChanges(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Tl), Ro(_l), Ro(GP, 8));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'cdkFooterRowDef', '']],
              inputs: { columns: ['cdkFooterRowDef', 'columns'], sticky: ['cdkFooterRowDefSticky', 'sticky'] },
              features: [go, ue],
            })),
            t
          );
        })(),
        mA = (() => {
          class t extends aA {
            constructor(t, e, n) {
              super(t, e), (this._table = n);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Tl), Ro(_l), Ro(GP, 8));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'cdkRowDef', '']],
              inputs: { columns: ['cdkRowDefColumns', 'columns'], when: ['cdkRowDefWhen', 'when'] },
              features: [go],
            })),
            t
          );
        })(),
        fA = (() => {
          class t {
            constructor(e) {
              (this._viewContainer = e), (t.mostRecentCellOutlet = this);
            }
            ngOnDestroy() {
              t.mostRecentCellOutlet === this && (t.mostRecentCellOutlet = null);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Nl));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'cdkCellOutlet', '']] })),
            (t.mostRecentCellOutlet = null),
            t
          );
        })(),
        gA = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['cdk-header-row'], ['tr', 'cdk-header-row', '']],
              hostAttrs: ['role', 'row', 1, 'cdk-header-row'],
              decls: 1,
              vars: 0,
              consts: [['cdkCellOutlet', '']],
              template: function (t, e) {
                1 & t && jo(0, 0);
              },
              directives: [fA],
              encapsulation: 2,
            })),
            t
          );
        })(),
        _A = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['cdk-row'], ['tr', 'cdk-row', '']],
              hostAttrs: ['role', 'row', 1, 'cdk-row'],
              decls: 1,
              vars: 0,
              consts: [['cdkCellOutlet', '']],
              template: function (t, e) {
                1 & t && jo(0, 0);
              },
              directives: [fA],
              encapsulation: 2,
            })),
            t
          );
        })(),
        bA = (() => {
          class t {
            constructor(t) {
              this.templateRef = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Tl));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['ng-template', 'cdkNoDataRow', '']] })),
            t
          );
        })();
      const yA = ['top', 'bottom', 'left', 'right'];
      class vA {
        constructor(t, e, n, i, s = !0, r = !0, o) {
          (this._isNativeHtmlTable = t),
            (this._stickCellCss = e),
            (this.direction = n),
            (this._coalescedStyleScheduler = i),
            (this._isBrowser = s),
            (this._needsPositionStickyOnElement = r),
            (this._positionListener = o),
            (this._cachedCellWidths = []),
            (this._borderCellCss = {
              top: `${e}-border-elem-top`,
              bottom: `${e}-border-elem-bottom`,
              left: `${e}-border-elem-left`,
              right: `${e}-border-elem-right`,
            });
        }
        clearStickyPositioning(t, e) {
          const n = [];
          for (const i of t)
            if (i.nodeType === i.ELEMENT_NODE) {
              n.push(i);
              for (let t = 0; t < i.children.length; t++) n.push(i.children[t]);
            }
          this._scheduleStyleChanges(() => {
            for (const t of n) this._removeStickyStyle(t, e);
          });
        }
        updateStickyColumns(t, e, n, i = !0) {
          if (!t.length || !this._isBrowser || (!e.some((t) => t) && !n.some((t) => t)))
            return void (
              this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({ sizes: [] }),
              this._positionListener.stickyEndColumnsUpdated({ sizes: [] }))
            );
          const s = t[0],
            r = s.children.length,
            o = this._getCellWidths(s, i),
            a = this._getStickyStartColumnPositions(o, e),
            l = this._getStickyEndColumnPositions(o, n),
            c = e.lastIndexOf(!0),
            h = n.indexOf(!0);
          this._scheduleStyleChanges(() => {
            const i = 'rtl' === this.direction,
              s = i ? 'right' : 'left',
              u = i ? 'left' : 'right';
            for (const o of t)
              for (let t = 0; t < r; t++) {
                const i = o.children[t];
                e[t] && this._addStickyStyle(i, s, a[t], t === c), n[t] && this._addStickyStyle(i, u, l[t], t === h);
              }
            this._positionListener &&
              (this._positionListener.stickyColumnsUpdated({
                sizes: -1 === c ? [] : o.slice(0, c + 1).map((t, n) => (e[n] ? t : null)),
              }),
              this._positionListener.stickyEndColumnsUpdated({
                sizes:
                  -1 === h
                    ? []
                    : o
                        .slice(h)
                        .map((t, e) => (n[e + h] ? t : null))
                        .reverse(),
              }));
          });
        }
        stickRows(t, e, n) {
          if (!this._isBrowser) return;
          const i = 'bottom' === n ? t.slice().reverse() : t,
            s = 'bottom' === n ? e.slice().reverse() : e,
            r = [],
            o = [],
            a = [];
          for (let c = 0, h = 0; c < i.length; c++) {
            if (((r[c] = h), !s[c])) continue;
            const t = i[c];
            a[c] = this._isNativeHtmlTable ? Array.from(t.children) : [t];
            const e = t.getBoundingClientRect().height;
            (h += e), (o[c] = e);
          }
          const l = s.lastIndexOf(!0);
          this._scheduleStyleChanges(() => {
            var t, e;
            for (let o = 0; o < i.length; o++) {
              if (!s[o]) continue;
              const t = r[o],
                e = o === l;
              for (const i of a[o]) this._addStickyStyle(i, n, t, e);
            }
            'top' === n
              ? null === (t = this._positionListener) ||
                void 0 === t ||
                t.stickyHeaderRowsUpdated({ sizes: o, elements: a })
              : null === (e = this._positionListener) ||
                void 0 === e ||
                e.stickyFooterRowsUpdated({ sizes: o, elements: a });
          });
        }
        updateStickyFooterContainer(t, e) {
          if (!this._isNativeHtmlTable) return;
          const n = t.querySelector('tfoot');
          this._scheduleStyleChanges(() => {
            e.some((t) => !t) ? this._removeStickyStyle(n, ['bottom']) : this._addStickyStyle(n, 'bottom', 0, !1);
          });
        }
        _removeStickyStyle(t, e) {
          for (const n of e) (t.style[n] = ''), t.classList.remove(this._borderCellCss[n]);
          yA.some((n) => -1 === e.indexOf(n) && t.style[n])
            ? (t.style.zIndex = this._getCalculatedZIndex(t))
            : ((t.style.zIndex = ''),
              this._needsPositionStickyOnElement && (t.style.position = ''),
              t.classList.remove(this._stickCellCss));
        }
        _addStickyStyle(t, e, n, i) {
          t.classList.add(this._stickCellCss),
            i && t.classList.add(this._borderCellCss[e]),
            (t.style[e] = `${n}px`),
            (t.style.zIndex = this._getCalculatedZIndex(t)),
            this._needsPositionStickyOnElement && (t.style.cssText += 'position: -webkit-sticky; position: sticky; ');
        }
        _getCalculatedZIndex(t) {
          const e = { top: 100, bottom: 10, left: 1, right: 1 };
          let n = 0;
          for (const i of yA) t.style[i] && (n += e[i]);
          return n ? `${n}` : '';
        }
        _getCellWidths(t, e = !0) {
          if (!e && this._cachedCellWidths.length) return this._cachedCellWidths;
          const n = [],
            i = t.children;
          for (let s = 0; s < i.length; s++) n.push(i[s].getBoundingClientRect().width);
          return (this._cachedCellWidths = n), n;
        }
        _getStickyStartColumnPositions(t, e) {
          const n = [];
          let i = 0;
          for (let s = 0; s < t.length; s++) e[s] && ((n[s] = i), (i += t[s]));
          return n;
        }
        _getStickyEndColumnPositions(t, e) {
          const n = [];
          let i = 0;
          for (let s = t.length; s > 0; s--) e[s] && ((n[s] = i), (i += t[s]));
          return n;
        }
        _scheduleStyleChanges(t) {
          this._coalescedStyleScheduler ? this._coalescedStyleScheduler.schedule(t) : t();
        }
      }
      const wA = new Jn('CDK_SPL');
      let xA = (() => {
          class t {
            constructor(t, e) {
              (this.viewContainer = t), (this.elementRef = e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Nl), Ro(Za));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'rowOutlet', '']] })),
            t
          );
        })(),
        CA = (() => {
          class t {
            constructor(t, e) {
              (this.viewContainer = t), (this.elementRef = e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Nl), Ro(Za));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'headerRowOutlet', '']] })),
            t
          );
        })(),
        kA = (() => {
          class t {
            constructor(t, e) {
              (this.viewContainer = t), (this.elementRef = e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Nl), Ro(Za));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'footerRowOutlet', '']] })),
            t
          );
        })(),
        SA = (() => {
          class t {
            constructor(t, e) {
              (this.viewContainer = t), (this.elementRef = e);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Nl), Ro(Za));
            }),
            (t.ɵdir = Xt({ type: t, selectors: [['', 'noDataRowOutlet', '']] })),
            t
          );
        })(),
        EA = (() => {
          class t {
            constructor(t, e, n, i, s, r, o, a, l, c, h) {
              (this._differs = t),
                (this._changeDetectorRef = e),
                (this._elementRef = n),
                (this._dir = s),
                (this._platform = o),
                (this._viewRepeater = a),
                (this._coalescedStyleScheduler = l),
                (this._stickyPositioningListener = c),
                (this._viewportRuler = h),
                (this._onDestroy = new C()),
                (this._columnDefsByName = new Map()),
                (this._customColumnDefs = new Set()),
                (this._customRowDefs = new Set()),
                (this._customHeaderRowDefs = new Set()),
                (this._customFooterRowDefs = new Set()),
                (this._headerRowDefChanged = !0),
                (this._footerRowDefChanged = !0),
                (this._stickyColumnStylesNeedReset = !0),
                (this._forceRecalculateCellWidths = !0),
                (this._cachedRenderRowsMap = new Map()),
                (this.stickyCssClass = 'cdk-table-sticky'),
                (this.needsPositionStickyOnElement = !0),
                (this._isShowingNoDataRow = !1),
                (this._multiTemplateDataRows = !1),
                (this._fixedLayout = !1),
                (this.viewChange = new qP({ start: 0, end: Number.MAX_VALUE })),
                i || this._elementRef.nativeElement.setAttribute('role', 'grid'),
                (this._document = r),
                (this._isNativeHtmlTable = 'TABLE' === this._elementRef.nativeElement.nodeName);
            }
            get trackBy() {
              return this._trackByFn;
            }
            set trackBy(t) {
              this._trackByFn = t;
            }
            get dataSource() {
              return this._dataSource;
            }
            set dataSource(t) {
              this._dataSource !== t && this._switchDataSource(t);
            }
            get multiTemplateDataRows() {
              return this._multiTemplateDataRows;
            }
            set multiTemplateDataRows(t) {
              (this._multiTemplateDataRows = py(t)),
                this._rowOutlet &&
                  this._rowOutlet.viewContainer.length &&
                  (this._forceRenderDataRows(), this.updateStickyColumnStyles());
            }
            get fixedLayout() {
              return this._fixedLayout;
            }
            set fixedLayout(t) {
              (this._fixedLayout = py(t)),
                (this._forceRecalculateCellWidths = !0),
                (this._stickyColumnStylesNeedReset = !0);
            }
            ngOnInit() {
              this._setupStickyStyler(),
                this._isNativeHtmlTable && this._applyNativeTableSections(),
                (this._dataDiffer = this._differs
                  .find([])
                  .create((t, e) => (this.trackBy ? this.trackBy(e.dataIndex, e.data) : e))),
                this._viewportRuler &&
                  this._viewportRuler
                    .change()
                    .pipe(Lw(this._onDestroy))
                    .subscribe(() => {
                      this._forceRecalculateCellWidths = !0;
                    });
            }
            ngAfterContentChecked() {
              this._cacheRowDefs(), this._cacheColumnDefs();
              const t = this._renderUpdatedColumns() || this._headerRowDefChanged || this._footerRowDefChanged;
              (this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || t),
                (this._forceRecalculateCellWidths = t),
                this._headerRowDefChanged && (this._forceRenderHeaderRows(), (this._headerRowDefChanged = !1)),
                this._footerRowDefChanged && (this._forceRenderFooterRows(), (this._footerRowDefChanged = !1)),
                this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription
                  ? this._observeRenderChanges()
                  : this._stickyColumnStylesNeedReset && this.updateStickyColumnStyles(),
                this._checkStickyStates();
            }
            ngOnDestroy() {
              this._rowOutlet.viewContainer.clear(),
                this._noDataRowOutlet.viewContainer.clear(),
                this._headerRowOutlet.viewContainer.clear(),
                this._footerRowOutlet.viewContainer.clear(),
                this._cachedRenderRowsMap.clear(),
                this._onDestroy.next(),
                this._onDestroy.complete(),
                Vw(this.dataSource) && this.dataSource.disconnect(this);
            }
            renderRows() {
              this._renderRows = this._getAllRenderRows();
              const t = this._dataDiffer.diff(this._renderRows);
              if (!t) return void this._updateNoDataRow();
              const e = this._rowOutlet.viewContainer;
              this._viewRepeater
                ? this._viewRepeater.applyChanges(
                    t,
                    e,
                    (t, e, n) => this._getEmbeddedViewArgs(t.item, n),
                    (t) => t.item.data,
                    (t) => {
                      1 === t.operation &&
                        t.context &&
                        this._renderCellTemplateForItem(t.record.item.rowDef, t.context);
                    }
                  )
                : t.forEachOperation((t, n, i) => {
                    if (null == t.previousIndex) {
                      const e = t.item;
                      this._renderRow(this._rowOutlet, e.rowDef, i, { $implicit: e.data });
                    } else if (null == i) e.remove(n);
                    else {
                      const t = e.get(n);
                      e.move(t, i);
                    }
                  }),
                this._updateRowIndexContext(),
                t.forEachIdentityChange((t) => {
                  e.get(t.currentIndex).context.$implicit = t.item.data;
                }),
                this._updateNoDataRow(),
                this.updateStickyColumnStyles();
            }
            addColumnDef(t) {
              this._customColumnDefs.add(t);
            }
            removeColumnDef(t) {
              this._customColumnDefs.delete(t);
            }
            addRowDef(t) {
              this._customRowDefs.add(t);
            }
            removeRowDef(t) {
              this._customRowDefs.delete(t);
            }
            addHeaderRowDef(t) {
              this._customHeaderRowDefs.add(t), (this._headerRowDefChanged = !0);
            }
            removeHeaderRowDef(t) {
              this._customHeaderRowDefs.delete(t), (this._headerRowDefChanged = !0);
            }
            addFooterRowDef(t) {
              this._customFooterRowDefs.add(t), (this._footerRowDefChanged = !0);
            }
            removeFooterRowDef(t) {
              this._customFooterRowDefs.delete(t), (this._footerRowDefChanged = !0);
            }
            setNoDataRow(t) {
              this._customNoDataRow = t;
            }
            updateStickyHeaderRowStyles() {
              const t = this._getRenderedRows(this._headerRowOutlet),
                e = this._elementRef.nativeElement.querySelector('thead');
              e && (e.style.display = t.length ? '' : 'none');
              const n = this._headerRowDefs.map((t) => t.sticky);
              this._stickyStyler.clearStickyPositioning(t, ['top']),
                this._stickyStyler.stickRows(t, n, 'top'),
                this._headerRowDefs.forEach((t) => t.resetStickyChanged());
            }
            updateStickyFooterRowStyles() {
              const t = this._getRenderedRows(this._footerRowOutlet),
                e = this._elementRef.nativeElement.querySelector('tfoot');
              e && (e.style.display = t.length ? '' : 'none');
              const n = this._footerRowDefs.map((t) => t.sticky);
              this._stickyStyler.clearStickyPositioning(t, ['bottom']),
                this._stickyStyler.stickRows(t, n, 'bottom'),
                this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, n),
                this._footerRowDefs.forEach((t) => t.resetStickyChanged());
            }
            updateStickyColumnStyles() {
              const t = this._getRenderedRows(this._headerRowOutlet),
                e = this._getRenderedRows(this._rowOutlet),
                n = this._getRenderedRows(this._footerRowOutlet);
              ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) &&
                (this._stickyStyler.clearStickyPositioning([...t, ...e, ...n], ['left', 'right']),
                (this._stickyColumnStylesNeedReset = !1)),
                t.forEach((t, e) => {
                  this._addStickyColumnStyles([t], this._headerRowDefs[e]);
                }),
                this._rowDefs.forEach((t) => {
                  const n = [];
                  for (let i = 0; i < e.length; i++) this._renderRows[i].rowDef === t && n.push(e[i]);
                  this._addStickyColumnStyles(n, t);
                }),
                n.forEach((t, e) => {
                  this._addStickyColumnStyles([t], this._footerRowDefs[e]);
                }),
                Array.from(this._columnDefsByName.values()).forEach((t) => t.resetStickyChanged());
            }
            _getAllRenderRows() {
              const t = [],
                e = this._cachedRenderRowsMap;
              this._cachedRenderRowsMap = new Map();
              for (let n = 0; n < this._data.length; n++) {
                let i = this._data[n];
                const s = this._getRenderRowsForData(i, n, e.get(i));
                this._cachedRenderRowsMap.has(i) || this._cachedRenderRowsMap.set(i, new WeakMap());
                for (let e = 0; e < s.length; e++) {
                  let n = s[e];
                  const i = this._cachedRenderRowsMap.get(n.data);
                  i.has(n.rowDef) ? i.get(n.rowDef).push(n) : i.set(n.rowDef, [n]), t.push(n);
                }
              }
              return t;
            }
            _getRenderRowsForData(t, e, n) {
              return this._getRowDefs(t, e).map((i) => {
                const s = n && n.has(i) ? n.get(i) : [];
                if (s.length) {
                  const t = s.shift();
                  return (t.dataIndex = e), t;
                }
                return { data: t, rowDef: i, dataIndex: e };
              });
            }
            _cacheColumnDefs() {
              this._columnDefsByName.clear(),
                OA(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs).forEach((t) => {
                  this._columnDefsByName.has(t.name), this._columnDefsByName.set(t.name, t);
                });
            }
            _cacheRowDefs() {
              (this._headerRowDefs = OA(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs)),
                (this._footerRowDefs = OA(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs)),
                (this._rowDefs = OA(this._getOwnDefs(this._contentRowDefs), this._customRowDefs));
              const t = this._rowDefs.filter((t) => !t.when);
              this._defaultRowDef = t[0];
            }
            _renderUpdatedColumns() {
              const t = (t, e) => t || !!e.getColumnsDiff(),
                e = this._rowDefs.reduce(t, !1);
              e && this._forceRenderDataRows();
              const n = this._headerRowDefs.reduce(t, !1);
              n && this._forceRenderHeaderRows();
              const i = this._footerRowDefs.reduce(t, !1);
              return i && this._forceRenderFooterRows(), e || n || i;
            }
            _switchDataSource(t) {
              (this._data = []),
                Vw(this.dataSource) && this.dataSource.disconnect(this),
                this._renderChangeSubscription &&
                  (this._renderChangeSubscription.unsubscribe(), (this._renderChangeSubscription = null)),
                t || (this._dataDiffer && this._dataDiffer.diff([]), this._rowOutlet.viewContainer.clear()),
                (this._dataSource = t);
            }
            _observeRenderChanges() {
              if (!this.dataSource) return;
              let t;
              Vw(this.dataSource)
                ? (t = this.dataSource.connect(this))
                : zf(this.dataSource)
                ? (t = this.dataSource)
                : Array.isArray(this.dataSource) && (t = fm(this.dataSource)),
                (this._renderChangeSubscription = t.pipe(Lw(this._onDestroy)).subscribe((t) => {
                  (this._data = t || []), this.renderRows();
                }));
            }
            _forceRenderHeaderRows() {
              this._headerRowOutlet.viewContainer.length > 0 && this._headerRowOutlet.viewContainer.clear(),
                this._headerRowDefs.forEach((t, e) => this._renderRow(this._headerRowOutlet, t, e)),
                this.updateStickyHeaderRowStyles();
            }
            _forceRenderFooterRows() {
              this._footerRowOutlet.viewContainer.length > 0 && this._footerRowOutlet.viewContainer.clear(),
                this._footerRowDefs.forEach((t, e) => this._renderRow(this._footerRowOutlet, t, e)),
                this.updateStickyFooterRowStyles();
            }
            _addStickyColumnStyles(t, e) {
              const n = Array.from(e.columns || []).map((t) => this._columnDefsByName.get(t)),
                i = n.map((t) => t.sticky),
                s = n.map((t) => t.stickyEnd);
              this._stickyStyler.updateStickyColumns(t, i, s, !this._fixedLayout || this._forceRecalculateCellWidths);
            }
            _getRenderedRows(t) {
              const e = [];
              for (let n = 0; n < t.viewContainer.length; n++) {
                const i = t.viewContainer.get(n);
                e.push(i.rootNodes[0]);
              }
              return e;
            }
            _getRowDefs(t, e) {
              if (1 == this._rowDefs.length) return [this._rowDefs[0]];
              let n = [];
              if (this.multiTemplateDataRows) n = this._rowDefs.filter((n) => !n.when || n.when(e, t));
              else {
                let i = this._rowDefs.find((n) => n.when && n.when(e, t)) || this._defaultRowDef;
                i && n.push(i);
              }
              return n;
            }
            _getEmbeddedViewArgs(t, e) {
              return { templateRef: t.rowDef.template, context: { $implicit: t.data }, index: e };
            }
            _renderRow(t, e, n, i = {}) {
              const s = t.viewContainer.createEmbeddedView(e.template, i, n);
              return this._renderCellTemplateForItem(e, i), s;
            }
            _renderCellTemplateForItem(t, e) {
              for (let n of this._getCellTemplates(t))
                fA.mostRecentCellOutlet && fA.mostRecentCellOutlet._viewContainer.createEmbeddedView(n, e);
              this._changeDetectorRef.markForCheck();
            }
            _updateRowIndexContext() {
              const t = this._rowOutlet.viewContainer;
              for (let e = 0, n = t.length; e < n; e++) {
                const i = t.get(e).context;
                (i.count = n),
                  (i.first = 0 === e),
                  (i.last = e === n - 1),
                  (i.even = e % 2 == 0),
                  (i.odd = !i.even),
                  this.multiTemplateDataRows
                    ? ((i.dataIndex = this._renderRows[e].dataIndex), (i.renderIndex = e))
                    : (i.index = this._renderRows[e].dataIndex);
              }
            }
            _getCellTemplates(t) {
              return t && t.columns
                ? Array.from(t.columns, (e) => {
                    const n = this._columnDefsByName.get(e);
                    return t.extractCellTemplate(n);
                  })
                : [];
            }
            _applyNativeTableSections() {
              const t = this._document.createDocumentFragment(),
                e = [
                  { tag: 'thead', outlets: [this._headerRowOutlet] },
                  { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },
                  { tag: 'tfoot', outlets: [this._footerRowOutlet] },
                ];
              for (const n of e) {
                const e = this._document.createElement(n.tag);
                e.setAttribute('role', 'rowgroup');
                for (const t of n.outlets) e.appendChild(t.elementRef.nativeElement);
                t.appendChild(e);
              }
              this._elementRef.nativeElement.appendChild(t);
            }
            _forceRenderDataRows() {
              this._dataDiffer.diff([]), this._rowOutlet.viewContainer.clear(), this.renderRows();
            }
            _checkStickyStates() {
              const t = (t, e) => t || e.hasStickyChanged();
              this._headerRowDefs.reduce(t, !1) && this.updateStickyHeaderRowStyles(),
                this._footerRowDefs.reduce(t, !1) && this.updateStickyFooterRowStyles(),
                Array.from(this._columnDefsByName.values()).reduce(t, !1) &&
                  ((this._stickyColumnStylesNeedReset = !0), this.updateStickyColumnStyles());
            }
            _setupStickyStyler() {
              (this._stickyStyler = new vA(
                this._isNativeHtmlTable,
                this.stickyCssClass,
                this._dir ? this._dir.value : 'ltr',
                this._coalescedStyleScheduler,
                this._platform.isBrowser,
                this.needsPositionStickyOnElement,
                this._stickyPositioningListener
              )),
                (this._dir ? this._dir.change : fm()).pipe(Lw(this._onDestroy)).subscribe((t) => {
                  (this._stickyStyler.direction = t), this.updateStickyColumnStyles();
                });
            }
            _getOwnDefs(t) {
              return t.filter((t) => !t._table || t._table === this);
            }
            _updateNoDataRow() {
              const t = this._customNoDataRow || this._noDataRow;
              if (t) {
                const e = 0 === this._rowOutlet.viewContainer.length;
                if (e !== this._isShowingNoDataRow) {
                  const n = this._noDataRowOutlet.viewContainer;
                  e ? n.createEmbeddedView(t.templateRef) : n.clear(), (this._isShowingNoDataRow = e);
                }
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(
                Ro(_l),
                Ro(kl),
                Ro(Za),
                Kn('role'),
                Ro(fv, 8),
                Ro(Th),
                Ro(wy),
                Ro(jw, 8),
                Ro(rA, 8),
                Ro(wA, 12),
                Ro(qw, 8)
              );
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['cdk-table'], ['table', 'cdk-table', '']],
              contentQueries: function (t, e, n) {
                if ((1 & t && (Cc(n, bA, 1), Cc(n, tA, 1), Cc(n, mA, 1), Cc(n, hA, 1), Cc(n, pA, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._noDataRow = t.first),
                    wc((t = kc())) && (e._contentColumnDefs = t),
                    wc((t = kc())) && (e._contentRowDefs = t),
                    wc((t = kc())) && (e._contentHeaderRowDefs = t),
                    wc((t = kc())) && (e._contentFooterRowDefs = t);
                }
              },
              viewQuery: function (t, e) {
                if ((1 & t && (xc(xA, 3), xc(CA, 3), xc(kA, 3), xc(SA, 3)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._rowOutlet = t.first),
                    wc((t = kc())) && (e._headerRowOutlet = t.first),
                    wc((t = kc())) && (e._footerRowOutlet = t.first),
                    wc((t = kc())) && (e._noDataRowOutlet = t.first);
                }
              },
              hostAttrs: [1, 'cdk-table'],
              hostVars: 2,
              hostBindings: function (t, e) {
                2 & t && ha('cdk-table-fixed-layout', e.fixedLayout);
              },
              inputs: {
                trackBy: 'trackBy',
                dataSource: 'dataSource',
                multiTemplateDataRows: 'multiTemplateDataRows',
                fixedLayout: 'fixedLayout',
              },
              exportAs: ['cdkTable'],
              features: [
                Wa([
                  { provide: GP, useExisting: t },
                  { provide: jw, useClass: Bw },
                  { provide: rA, useClass: oA },
                  { provide: wA, useValue: null },
                ]),
              ],
              ngContentSelectors: UP,
              decls: 13,
              vars: 0,
              consts: [
                ['headerRowOutlet', ''],
                ['rowOutlet', ''],
                ['noDataRowOutlet', ''],
                ['footerRowOutlet', ''],
              ],
              template: function (t, e) {
                1 & t &&
                  (Jo(WP),
                  Ca(0, '\n  '),
                  ta(1),
                  Ca(2, '\n  '),
                  ta(3, 1),
                  Ca(4, '\n  '),
                  jo(5, 0),
                  Ca(6, '\n  '),
                  jo(7, 1),
                  Ca(8, '\n  '),
                  jo(9, 2),
                  Ca(10, '\n  '),
                  jo(11, 3),
                  Ca(12, '\n'));
              },
              directives: [CA, xA, SA, kA],
              styles: ['.cdk-table-fixed-layout{table-layout:fixed}\n'],
              encapsulation: 2,
            })),
            t
          );
        })();
      function OA(t, e) {
        return t.concat(Array.from(e));
      }
      let PA = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[Uw]] })),
          t
        );
      })();
      const AA = [[['caption']], [['colgroup'], ['col']]],
        TA = ['caption', 'colgroup, col'];
      let DA = (() => {
        class t extends EA {
          constructor() {
            super(...arguments), (this.stickyCssClass = 'mat-table-sticky'), (this.needsPositionStickyOnElement = !1);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return MA(e || t);
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['mat-table'], ['table', 'mat-table', '']],
            hostAttrs: [1, 'mat-table'],
            hostVars: 2,
            hostBindings: function (t, e) {
              2 & t && ha('mat-table-fixed-layout', e.fixedLayout);
            },
            exportAs: ['matTable'],
            features: [
              Wa([
                { provide: jw, useClass: Bw },
                { provide: EA, useExisting: t },
                { provide: GP, useExisting: t },
                { provide: rA, useClass: oA },
              ]),
              go,
            ],
            ngContentSelectors: TA,
            decls: 13,
            vars: 0,
            consts: [
              ['headerRowOutlet', ''],
              ['rowOutlet', ''],
              ['noDataRowOutlet', ''],
              ['footerRowOutlet', ''],
            ],
            template: function (t, e) {
              1 & t &&
                (Jo(AA),
                Ca(0, '\n  '),
                ta(1),
                Ca(2, '\n  '),
                ta(3, 1),
                Ca(4, '\n  '),
                jo(5, 0),
                Ca(6, '\n  '),
                jo(7, 1),
                Ca(8, '\n  '),
                jo(9, 2),
                Ca(10, '\n  '),
                jo(11, 3),
                Ca(12, '\n'));
            },
            directives: [CA, xA, SA, kA],
            styles: [
              'mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:""}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky !important;position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\n',
            ],
            encapsulation: 2,
          })),
          t
        );
      })();
      const MA = Gn(DA);
      let RA = (() => {
        class t extends QP {}
        return (
          (t.ɵfac = function (e) {
            return IA(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'matCellDef', '']],
            features: [Wa([{ provide: QP, useExisting: t }]), go],
          })),
          t
        );
      })();
      const IA = Gn(RA);
      let LA = (() => {
        class t extends KP {}
        return (
          (t.ɵfac = function (e) {
            return FA(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'matHeaderCellDef', '']],
            features: [Wa([{ provide: KP, useExisting: t }]), go],
          })),
          t
        );
      })();
      const FA = Gn(LA);
      let NA = (() => {
        class t extends tA {
          get name() {
            return this._name;
          }
          set name(t) {
            this._setNameInput(t);
          }
          _updateColumnCssClassName() {
            super._updateColumnCssClassName(), this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return VA(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'matColumnDef', '']],
            inputs: { sticky: 'sticky', name: ['matColumnDef', 'name'] },
            features: [
              Wa([
                { provide: tA, useExisting: t },
                { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: t },
              ]),
              go,
            ],
          })),
          t
        );
      })();
      const VA = Gn(NA);
      let BA = (() => {
        class t extends nA {}
        return (
          (t.ɵfac = function (e) {
            return zA(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['mat-header-cell'], ['th', 'mat-header-cell', '']],
            hostAttrs: ['role', 'columnheader', 1, 'mat-header-cell'],
            features: [go],
          })),
          t
        );
      })();
      const zA = Gn(BA);
      let jA = (() => {
        class t extends iA {}
        return (
          (t.ɵfac = function (e) {
            return HA(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['mat-cell'], ['td', 'mat-cell', '']],
            hostAttrs: ['role', 'gridcell', 1, 'mat-cell'],
            features: [go],
          })),
          t
        );
      })();
      const HA = Gn(jA);
      let $A = (() => {
        class t extends hA {}
        return (
          (t.ɵfac = function (e) {
            return qA(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'matHeaderRowDef', '']],
            inputs: { columns: ['matHeaderRowDef', 'columns'], sticky: ['matHeaderRowDefSticky', 'sticky'] },
            features: [Wa([{ provide: hA, useExisting: t }]), go],
          })),
          t
        );
      })();
      const qA = Gn($A);
      let WA = (() => {
        class t extends mA {}
        return (
          (t.ɵfac = function (e) {
            return UA(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['', 'matRowDef', '']],
            inputs: { columns: ['matRowDefColumns', 'columns'], when: ['matRowDefWhen', 'when'] },
            features: [Wa([{ provide: mA, useExisting: t }]), go],
          })),
          t
        );
      })();
      const UA = Gn(WA);
      let YA = (() => {
        class t extends gA {}
        return (
          (t.ɵfac = function (e) {
            return GA(e || t);
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['mat-header-row'], ['tr', 'mat-header-row', '']],
            hostAttrs: ['role', 'row', 1, 'mat-header-row'],
            exportAs: ['matHeaderRow'],
            features: [Wa([{ provide: gA, useExisting: t }]), go],
            decls: 1,
            vars: 0,
            consts: [['cdkCellOutlet', '']],
            template: function (t, e) {
              1 & t && jo(0, 0);
            },
            directives: [fA],
            encapsulation: 2,
          })),
          t
        );
      })();
      const GA = Gn(YA);
      let QA = (() => {
        class t extends _A {}
        return (
          (t.ɵfac = function (e) {
            return KA(e || t);
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['mat-row'], ['tr', 'mat-row', '']],
            hostAttrs: ['role', 'row', 1, 'mat-row'],
            exportAs: ['matRow'],
            features: [Wa([{ provide: _A, useExisting: t }]), go],
            decls: 1,
            vars: 0,
            consts: [['cdkCellOutlet', '']],
            template: function (t, e) {
              1 & t && jo(0, 0);
            },
            directives: [fA],
            encapsulation: 2,
          })),
          t
        );
      })();
      const KA = Gn(QA);
      let XA = (() => {
        class t extends bA {}
        return (
          (t.ɵfac = function (e) {
            return ZA(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [['ng-template', 'matNoDataRow', '']],
            features: [Wa([{ provide: bA, useExisting: t }]), go],
          })),
          t
        );
      })();
      const ZA = Gn(XA);
      let JA = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[PA, Ev], Ev] })),
          t
        );
      })();
      class tT extends class extends class {} {
        constructor(t = []) {
          super(),
            (this._renderData = new qP([])),
            (this._filter = new qP('')),
            (this._internalPageChanges = new C()),
            (this._renderChangesSubscription = null),
            (this.sortingDataAccessor = (t, e) => {
              const n = t[e];
              if (fy(n)) {
                const t = Number(n);
                return t < 9007199254740991 ? t : n;
              }
              return n;
            }),
            (this.sortData = (t, e) => {
              const n = e.active,
                i = e.direction;
              return n && '' != i
                ? t.sort((t, e) => {
                    let s = this.sortingDataAccessor(t, n),
                      r = this.sortingDataAccessor(e, n);
                    const o = typeof s,
                      a = typeof r;
                    o !== a && ('number' === o && (s += ''), 'number' === a && (r += ''));
                    let l = 0;
                    return (
                      null != s && null != r
                        ? s > r
                          ? (l = 1)
                          : s < r && (l = -1)
                        : null != s
                        ? (l = 1)
                        : null != r && (l = -1),
                      l * ('asc' == i ? 1 : -1)
                    );
                  })
                : t;
            }),
            (this.filterPredicate = (t, e) => {
              const n = Object.keys(t)
                  .reduce((e, n) => e + t[n] + '\u25ec', '')
                  .toLowerCase(),
                i = e.trim().toLowerCase();
              return -1 != n.indexOf(i);
            }),
            (this._data = new qP(t)),
            this._updateChangeSubscription();
        }
        get data() {
          return this._data.value;
        }
        set data(t) {
          this._data.next(t), this._renderChangesSubscription || this._filterData(t);
        }
        get filter() {
          return this._filter.value;
        }
        set filter(t) {
          this._filter.next(t), this._renderChangesSubscription || this._filterData(this.data);
        }
        get sort() {
          return this._sort;
        }
        set sort(t) {
          (this._sort = t), this._updateChangeSubscription();
        }
        get paginator() {
          return this._paginator;
        }
        set paginator(t) {
          (this._paginator = t), this._updateChangeSubscription();
        }
        _updateChangeSubscription() {
          var t;
          const e = this._sort ? q(this._sort.sortChange, this._sort.initialized) : fm(null),
            n = this._paginator
              ? q(this._paginator.page, this._internalPageChanges, this._paginator.initialized)
              : fm(null),
            i = BE([this._data, this._filter]).pipe(E(([t]) => this._filterData(t))),
            s = BE([i, e]).pipe(E(([t]) => this._orderData(t))),
            r = BE([s, n]).pipe(E(([t]) => this._pageData(t)));
          null === (t = this._renderChangesSubscription) || void 0 === t || t.unsubscribe(),
            (this._renderChangesSubscription = r.subscribe((t) => this._renderData.next(t)));
        }
        _filterData(t) {
          return (
            (this.filteredData =
              null == this.filter || '' === this.filter ? t : t.filter((t) => this.filterPredicate(t, this.filter))),
            this.paginator && this._updatePaginator(this.filteredData.length),
            this.filteredData
          );
        }
        _orderData(t) {
          return this.sort ? this.sortData(t.slice(), this.sort) : t;
        }
        _pageData(t) {
          if (!this.paginator) return t;
          const e = this.paginator.pageIndex * this.paginator.pageSize;
          return t.slice(e, e + this.paginator.pageSize);
        }
        _updatePaginator(t) {
          Promise.resolve().then(() => {
            const e = this.paginator;
            if (e && ((e.length = t), e.pageIndex > 0)) {
              const t = Math.ceil(e.length / e.pageSize) - 1 || 0,
                n = Math.min(e.pageIndex, t);
              n !== e.pageIndex && ((e.pageIndex = n), this._internalPageChanges.next());
            }
          });
        }
        connect() {
          return this._renderChangesSubscription || this._updateChangeSubscription(), this._renderData;
        }
        disconnect() {
          var t;
          null === (t = this._renderChangesSubscription) || void 0 === t || t.unsubscribe(),
            (this._renderChangesSubscription = null);
        }
      } {}
      let eT = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[Gu, Ev, tx, sw, Fy, pv], Ev] })),
          t
        );
      })();
      const nT = ['*', [['mat-toolbar-row']]],
        iT = ['*', 'mat-toolbar-row'];
      class sT {
        constructor(t) {
          this._elementRef = t;
        }
      }
      const rT = Pv(sT);
      let oT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['mat-toolbar-row']],
              hostAttrs: [1, 'mat-toolbar-row'],
              exportAs: ['matToolbarRow'],
            })),
            t
          );
        })(),
        aT = (() => {
          class t extends rT {
            constructor(t, e, n) {
              super(t), (this._platform = e), (this._document = n);
            }
            ngAfterViewInit() {
              this._platform.isBrowser &&
                (this._checkToolbarMixedModes(),
                this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes()));
            }
            _checkToolbarMixedModes() {}
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(wy), Ro(Th));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['mat-toolbar']],
              contentQueries: function (t, e, n) {
                if ((1 & t && Cc(n, oT, 1), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._toolbarRows = t);
                }
              },
              hostAttrs: [1, 'mat-toolbar'],
              hostVars: 4,
              hostBindings: function (t, e) {
                2 & t &&
                  ha('mat-toolbar-multiple-rows', e._toolbarRows.length > 0)(
                    'mat-toolbar-single-row',
                    0 === e._toolbarRows.length
                  );
              },
              inputs: { color: 'color' },
              exportAs: ['matToolbar'],
              features: [go],
              ngContentSelectors: iT,
              decls: 4,
              vars: 0,
              template: function (t, e) {
                1 & t && (Jo(nT), ta(0), Ca(1, '\n'), ta(2, 1), Ca(3, '\n'));
              },
              styles: [
                '.cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}\n',
              ],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        lT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Ev], Ev] })),
            t
          );
        })(),
        cT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })(),
        hT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[cT, Ev], Ev] })),
            t
          );
        })(),
        uT = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({
              imports: [
                FC,
                NC,
                qC,
                WC,
                XC,
                uk,
                Ak,
                Ev,
                sS,
                Wk,
                oS,
                lS,
                bC,
                cS,
                DS,
                eS,
                Qv,
                WS,
                uE,
                Wv,
                yw,
                _O,
                bO,
                SO,
                ow,
                EO,
                sw,
                IE,
                XO,
                uP,
                dP,
                xP,
                BP,
                $P,
                JA,
                eT,
                lT,
                iO,
                hT,
              ],
            })),
            t
          );
        })();
      const dT = !0,
        pT = '1.0.1',
        mT = 'https://diet.bodysperfect.com',
        fT = ['en-US'],
        gT = (() => {
          function t() {
            return Error.call(this), (this.message = 'no elements in sequence'), (this.name = 'EmptyError'), this;
          }
          return (t.prototype = Object.create(Error.prototype)), t;
        })();
      function _T(t, e) {
        let n = !1;
        return (
          arguments.length >= 2 && (n = !0),
          function (i) {
            return i.lift(new bT(t, e, n));
          }
        );
      }
      class bT {
        constructor(t, e, n = !1) {
          (this.accumulator = t), (this.seed = e), (this.hasSeed = n);
        }
        call(t, e) {
          return e.subscribe(new yT(t, this.accumulator, this.seed, this.hasSeed));
        }
      }
      class yT extends m {
        constructor(t, e, n, i) {
          super(t), (this.accumulator = e), (this._seed = n), (this.hasSeed = i), (this.index = 0);
        }
        get seed() {
          return this._seed;
        }
        set seed(t) {
          (this.hasSeed = !0), (this._seed = t);
        }
        _next(t) {
          if (this.hasSeed) return this._tryNext(t);
          (this.seed = t), this.destination.next(t);
        }
        _tryNext(t) {
          const e = this.index++;
          let n;
          try {
            n = this.accumulator(this.seed, t, e);
          } catch (i) {
            this.destination.error(i);
          }
          (this.seed = n), this.destination.next(n);
        }
      }
      function vT(t) {
        return function (e) {
          return 0 === t ? Jm() : e.lift(new wT(t));
        };
      }
      class wT {
        constructor(t) {
          if (((this.total = t), this.total < 0)) throw new df();
        }
        call(t, e) {
          return e.subscribe(new xT(t, this.total));
        }
      }
      class xT extends m {
        constructor(t, e) {
          super(t), (this.total = e), (this.ring = new Array()), (this.count = 0);
        }
        _next(t) {
          const e = this.ring,
            n = this.total,
            i = this.count++;
          e.length < n ? e.push(t) : (e[i % n] = t);
        }
        _complete() {
          const t = this.destination;
          let e = this.count;
          if (e > 0) {
            const n = this.count >= this.total ? this.total : this.count,
              i = this.ring;
            for (let s = 0; s < n; s++) {
              const s = e++ % n;
              t.next(i[s]);
            }
          }
          t.complete();
        }
      }
      function CT(t = ET) {
        return (e) => e.lift(new kT(t));
      }
      class kT {
        constructor(t) {
          this.errorFactory = t;
        }
        call(t, e) {
          return e.subscribe(new ST(t, this.errorFactory));
        }
      }
      class ST extends m {
        constructor(t, e) {
          super(t), (this.errorFactory = e), (this.hasValue = !1);
        }
        _next(t) {
          (this.hasValue = !0), this.destination.next(t);
        }
        _complete() {
          if (this.hasValue) return this.destination.complete();
          {
            let e;
            try {
              e = this.errorFactory();
            } catch (t) {
              e = t;
            }
            this.destination.error(e);
          }
        }
      }
      function ET() {
        return new gT();
      }
      function OT(t = null) {
        return (e) => e.lift(new PT(t));
      }
      class PT {
        constructor(t) {
          this.defaultValue = t;
        }
        call(t, e) {
          return e.subscribe(new AT(t, this.defaultValue));
        }
      }
      class AT extends m {
        constructor(t, e) {
          super(t), (this.defaultValue = e), (this.isEmpty = !0);
        }
        _next(t) {
          (this.isEmpty = !1), this.destination.next(t);
        }
        _complete() {
          this.isEmpty && this.destination.next(this.defaultValue), this.destination.complete();
        }
      }
      function TT(t, e) {
        const n = arguments.length >= 2;
        return (i) => i.pipe(t ? _m((e, n) => t(e, n, i)) : _, pf(1), n ? OT(e) : CT(() => new gT()));
      }
      class DT {
        constructor(t, e) {
          (this.id = t), (this.url = e);
        }
      }
      class MT extends DT {
        constructor(t, e, n = 'imperative', i = null) {
          super(t, e), (this.navigationTrigger = n), (this.restoredState = i);
        }
        toString() {
          return `NavigationStart(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class RT extends DT {
        constructor(t, e, n) {
          super(t, e), (this.urlAfterRedirects = n);
        }
        toString() {
          return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;
        }
      }
      class IT extends DT {
        constructor(t, e, n) {
          super(t, e), (this.reason = n);
        }
        toString() {
          return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;
        }
      }
      class LT extends DT {
        constructor(t, e, n) {
          super(t, e), (this.error = n);
        }
        toString() {
          return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;
        }
      }
      class FT extends DT {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class NT extends DT {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class VT extends DT {
        constructor(t, e, n, i, s) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i), (this.shouldActivate = s);
        }
        toString() {
          return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;
        }
      }
      class BT extends DT {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class zT extends DT {
        constructor(t, e, n, i) {
          super(t, e), (this.urlAfterRedirects = n), (this.state = i);
        }
        toString() {
          return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;
        }
      }
      class jT {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadStart(path: ${this.route.path})`;
        }
      }
      class HT {
        constructor(t) {
          this.route = t;
        }
        toString() {
          return `RouteConfigLoadEnd(path: ${this.route.path})`;
        }
      }
      class $T {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class qT {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ChildActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class WT {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationStart(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class UT {
        constructor(t) {
          this.snapshot = t;
        }
        toString() {
          return `ActivationEnd(path: '${(this.snapshot.routeConfig && this.snapshot.routeConfig.path) || ''}')`;
        }
      }
      class YT {
        constructor(t, e, n) {
          (this.routerEvent = t), (this.position = e), (this.anchor = n);
        }
        toString() {
          return `Scroll(anchor: '${this.anchor}', position: '${
            this.position ? `${this.position[0]}, ${this.position[1]}` : null
          }')`;
        }
      }
      const GT = 'primary';
      class QT {
        constructor(t) {
          this.params = t || {};
        }
        has(t) {
          return Object.prototype.hasOwnProperty.call(this.params, t);
        }
        get(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e[0] : e;
          }
          return null;
        }
        getAll(t) {
          if (this.has(t)) {
            const e = this.params[t];
            return Array.isArray(e) ? e : [e];
          }
          return [];
        }
        get keys() {
          return Object.keys(this.params);
        }
      }
      function KT(t) {
        return new QT(t);
      }
      function XT(t) {
        const e = Error('NavigationCancelingError: ' + t);
        return (e.ngNavigationCancelingError = !0), e;
      }
      function ZT(t, e, n) {
        const i = n.path.split('/');
        if (i.length > t.length) return null;
        if ('full' === n.pathMatch && (e.hasChildren() || i.length < t.length)) return null;
        const s = {};
        for (let r = 0; r < i.length; r++) {
          const e = i[r],
            n = t[r];
          if (e.startsWith(':')) s[e.substring(1)] = n;
          else if (e !== n.path) return null;
        }
        return { consumed: t.slice(0, i.length), posParams: s };
      }
      function JT(t, e) {
        const n = t ? Object.keys(t) : void 0,
          i = e ? Object.keys(e) : void 0;
        if (!n || !i || n.length != i.length) return !1;
        let s;
        for (let r = 0; r < n.length; r++) if (((s = n[r]), !tD(t[s], e[s]))) return !1;
        return !0;
      }
      function tD(t, e) {
        if (Array.isArray(t) && Array.isArray(e)) {
          if (t.length !== e.length) return !1;
          const n = [...t].sort(),
            i = [...e].sort();
          return n.every((t, e) => i[e] === t);
        }
        return t === e;
      }
      function eD(t) {
        return Array.prototype.concat.apply([], t);
      }
      function nD(t) {
        return t.length > 0 ? t[t.length - 1] : null;
      }
      function iD(t, e) {
        for (const n in t) t.hasOwnProperty(n) && e(t[n], n);
      }
      function sD(t) {
        return Wo(t) ? t : $o(t) ? L(Promise.resolve(t)) : fm(t);
      }
      function rD(t, e, n) {
        return n
          ? (function (t, e) {
              return JT(t, e);
            })(t.queryParams, e.queryParams) && oD(t.root, e.root)
          : (function (t, e) {
              return Object.keys(e).length <= Object.keys(t).length && Object.keys(e).every((n) => tD(t[n], e[n]));
            })(t.queryParams, e.queryParams) && aD(t.root, e.root);
      }
      function oD(t, e) {
        if (!dD(t.segments, e.segments)) return !1;
        if (t.numberOfChildren !== e.numberOfChildren) return !1;
        for (const n in e.children) {
          if (!t.children[n]) return !1;
          if (!oD(t.children[n], e.children[n])) return !1;
        }
        return !0;
      }
      function aD(t, e) {
        return lD(t, e, e.segments);
      }
      function lD(t, e, n) {
        if (t.segments.length > n.length) return !!dD(t.segments.slice(0, n.length), n) && !e.hasChildren();
        if (t.segments.length === n.length) {
          if (!dD(t.segments, n)) return !1;
          for (const n in e.children) {
            if (!t.children[n]) return !1;
            if (!aD(t.children[n], e.children[n])) return !1;
          }
          return !0;
        }
        {
          const i = n.slice(0, t.segments.length),
            s = n.slice(t.segments.length);
          return !!dD(t.segments, i) && !!t.children.primary && lD(t.children.primary, e, s);
        }
      }
      class cD {
        constructor(t, e, n) {
          (this.root = t), (this.queryParams = e), (this.fragment = n);
        }
        get queryParamMap() {
          return this._queryParamMap || (this._queryParamMap = KT(this.queryParams)), this._queryParamMap;
        }
        toString() {
          return fD.serialize(this);
        }
      }
      class hD {
        constructor(t, e) {
          (this.segments = t), (this.children = e), (this.parent = null), iD(e, (t, e) => (t.parent = this));
        }
        hasChildren() {
          return this.numberOfChildren > 0;
        }
        get numberOfChildren() {
          return Object.keys(this.children).length;
        }
        toString() {
          return gD(this);
        }
      }
      class uD {
        constructor(t, e) {
          (this.path = t), (this.parameters = e);
        }
        get parameterMap() {
          return this._parameterMap || (this._parameterMap = KT(this.parameters)), this._parameterMap;
        }
        toString() {
          return CD(this);
        }
      }
      function dD(t, e) {
        return t.length === e.length && t.every((t, n) => t.path === e[n].path);
      }
      class pD {}
      class mD {
        parse(t) {
          const e = new PD(t);
          return new cD(e.parseRootSegment(), e.parseQueryParams(), e.parseFragment());
        }
        serialize(t) {
          var e;
          return `/${_D(t.root, !0)}${(function (t) {
            const e = Object.keys(t).map((e) => {
              const n = t[e];
              return Array.isArray(n) ? n.map((t) => `${yD(e)}=${yD(t)}`).join('&') : `${yD(e)}=${yD(n)}`;
            });
            return e.length ? `?${e.join('&')}` : '';
          })(t.queryParams)}${'string' == typeof t.fragment ? `#${((e = t.fragment), encodeURI(e))}` : ''}`;
        }
      }
      const fD = new mD();
      function gD(t) {
        return t.segments.map((t) => CD(t)).join('/');
      }
      function _D(t, e) {
        if (!t.hasChildren()) return gD(t);
        if (e) {
          const e = t.children.primary ? _D(t.children.primary, !1) : '',
            n = [];
          return (
            iD(t.children, (t, e) => {
              e !== GT && n.push(`${e}:${_D(t, !1)}`);
            }),
            n.length > 0 ? `${e}(${n.join('//')})` : e
          );
        }
        {
          const e = (function (t, e) {
            let n = [];
            return (
              iD(t.children, (t, i) => {
                i === GT && (n = n.concat(e(t, i)));
              }),
              iD(t.children, (t, i) => {
                i !== GT && (n = n.concat(e(t, i)));
              }),
              n
            );
          })(t, (e, n) => (n === GT ? [_D(t.children.primary, !1)] : [`${n}:${_D(e, !1)}`]));
          return 1 === Object.keys(t.children).length && null != t.children.primary
            ? `${gD(t)}/${e[0]}`
            : `${gD(t)}/(${e.join('//')})`;
        }
      }
      function bD(t) {
        return encodeURIComponent(t)
          .replace(/%40/g, '@')
          .replace(/%3A/gi, ':')
          .replace(/%24/g, '$')
          .replace(/%2C/gi, ',');
      }
      function yD(t) {
        return bD(t).replace(/%3B/gi, ';');
      }
      function vD(t) {
        return bD(t).replace(/\(/g, '%28').replace(/\)/g, '%29').replace(/%26/gi, '&');
      }
      function wD(t) {
        return decodeURIComponent(t);
      }
      function xD(t) {
        return wD(t.replace(/\+/g, '%20'));
      }
      function CD(t) {
        return `${vD(t.path)}${
          ((e = t.parameters),
          Object.keys(e)
            .map((t) => `;${vD(t)}=${vD(e[t])}`)
            .join(''))
        }`;
        var e;
      }
      const kD = /^[^\/()?;=#]+/;
      function SD(t) {
        const e = t.match(kD);
        return e ? e[0] : '';
      }
      const ED = /^[^=?&#]+/,
        OD = /^[^?&#]+/;
      class PD {
        constructor(t) {
          (this.url = t), (this.remaining = t);
        }
        parseRootSegment() {
          return (
            this.consumeOptional('/'),
            '' === this.remaining || this.peekStartsWith('?') || this.peekStartsWith('#')
              ? new hD([], {})
              : new hD([], this.parseChildren())
          );
        }
        parseQueryParams() {
          const t = {};
          if (this.consumeOptional('?'))
            do {
              this.parseQueryParam(t);
            } while (this.consumeOptional('&'));
          return t;
        }
        parseFragment() {
          return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;
        }
        parseChildren() {
          if ('' === this.remaining) return {};
          this.consumeOptional('/');
          const t = [];
          for (
            this.peekStartsWith('(') || t.push(this.parseSegment());
            this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(');

          )
            this.capture('/'), t.push(this.parseSegment());
          let e = {};
          this.peekStartsWith('/(') && (this.capture('/'), (e = this.parseParens(!0)));
          let n = {};
          return (
            this.peekStartsWith('(') && (n = this.parseParens(!1)),
            (t.length > 0 || Object.keys(e).length > 0) && (n.primary = new hD(t, e)),
            n
          );
        }
        parseSegment() {
          const t = SD(this.remaining);
          if ('' === t && this.peekStartsWith(';'))
            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);
          return this.capture(t), new uD(wD(t), this.parseMatrixParams());
        }
        parseMatrixParams() {
          const t = {};
          for (; this.consumeOptional(';'); ) this.parseParam(t);
          return t;
        }
        parseParam(t) {
          const e = SD(this.remaining);
          if (!e) return;
          this.capture(e);
          let n = '';
          if (this.consumeOptional('=')) {
            const t = SD(this.remaining);
            t && ((n = t), this.capture(n));
          }
          t[wD(e)] = wD(n);
        }
        parseQueryParam(t) {
          const e = (function (t) {
            const e = t.match(ED);
            return e ? e[0] : '';
          })(this.remaining);
          if (!e) return;
          this.capture(e);
          let n = '';
          if (this.consumeOptional('=')) {
            const t = (function (t) {
              const e = t.match(OD);
              return e ? e[0] : '';
            })(this.remaining);
            t && ((n = t), this.capture(n));
          }
          const i = xD(e),
            s = xD(n);
          if (t.hasOwnProperty(i)) {
            let e = t[i];
            Array.isArray(e) || ((e = [e]), (t[i] = e)), e.push(s);
          } else t[i] = s;
        }
        parseParens(t) {
          const e = {};
          for (this.capture('('); !this.consumeOptional(')') && this.remaining.length > 0; ) {
            const n = SD(this.remaining),
              i = this.remaining[n.length];
            if ('/' !== i && ')' !== i && ';' !== i) throw new Error(`Cannot parse url '${this.url}'`);
            let s;
            n.indexOf(':') > -1
              ? ((s = n.substr(0, n.indexOf(':'))), this.capture(s), this.capture(':'))
              : t && (s = GT);
            const r = this.parseChildren();
            (e[s] = 1 === Object.keys(r).length ? r.primary : new hD([], r)), this.consumeOptional('//');
          }
          return e;
        }
        peekStartsWith(t) {
          return this.remaining.startsWith(t);
        }
        consumeOptional(t) {
          return !!this.peekStartsWith(t) && ((this.remaining = this.remaining.substring(t.length)), !0);
        }
        capture(t) {
          if (!this.consumeOptional(t)) throw new Error(`Expected "${t}".`);
        }
      }
      class AD {
        constructor(t) {
          this._root = t;
        }
        get root() {
          return this._root.value;
        }
        parent(t) {
          const e = this.pathFromRoot(t);
          return e.length > 1 ? e[e.length - 2] : null;
        }
        children(t) {
          const e = TD(t, this._root);
          return e ? e.children.map((t) => t.value) : [];
        }
        firstChild(t) {
          const e = TD(t, this._root);
          return e && e.children.length > 0 ? e.children[0].value : null;
        }
        siblings(t) {
          const e = DD(t, this._root);
          return e.length < 2 ? [] : e[e.length - 2].children.map((t) => t.value).filter((e) => e !== t);
        }
        pathFromRoot(t) {
          return DD(t, this._root).map((t) => t.value);
        }
      }
      function TD(t, e) {
        if (t === e.value) return e;
        for (const n of e.children) {
          const e = TD(t, n);
          if (e) return e;
        }
        return null;
      }
      function DD(t, e) {
        if (t === e.value) return [e];
        for (const n of e.children) {
          const i = DD(t, n);
          if (i.length) return i.unshift(e), i;
        }
        return [];
      }
      class MD {
        constructor(t, e) {
          (this.value = t), (this.children = e);
        }
        toString() {
          return `TreeNode(${this.value})`;
        }
      }
      function RD(t) {
        const e = {};
        return t && t.children.forEach((t) => (e[t.value.outlet] = t)), e;
      }
      class ID extends AD {
        constructor(t, e) {
          super(t), (this.snapshot = e), zD(this, t);
        }
        toString() {
          return this.snapshot.toString();
        }
      }
      function LD(t, e) {
        const n = (function (t, e) {
            const n = new VD([], {}, {}, '', {}, GT, e, null, t.root, -1, {});
            return new BD('', new MD(n, []));
          })(t, e),
          i = new qP([new uD('', {})]),
          s = new qP({}),
          r = new qP({}),
          o = new qP({}),
          a = new qP(''),
          l = new FD(i, s, o, a, r, GT, e, n.root);
        return (l.snapshot = n.root), new ID(new MD(l, []), n);
      }
      class FD {
        constructor(t, e, n, i, s, r, o, a) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = n),
            (this.fragment = i),
            (this.data = s),
            (this.outlet = r),
            (this.component = o),
            (this._futureSnapshot = a);
        }
        get routeConfig() {
          return this._futureSnapshot.routeConfig;
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return this._paramMap || (this._paramMap = this.params.pipe(E((t) => KT(t)))), this._paramMap;
        }
        get queryParamMap() {
          return (
            this._queryParamMap || (this._queryParamMap = this.queryParams.pipe(E((t) => KT(t)))), this._queryParamMap
          );
        }
        toString() {
          return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;
        }
      }
      function ND(t, e = 'emptyOnly') {
        const n = t.pathFromRoot;
        let i = 0;
        if ('always' !== e)
          for (i = n.length - 1; i >= 1; ) {
            const t = n[i],
              e = n[i - 1];
            if (t.routeConfig && '' === t.routeConfig.path) i--;
            else {
              if (e.component) break;
              i--;
            }
          }
        return (function (t) {
          return t.reduce(
            (t, e) => ({
              params: Object.assign(Object.assign({}, t.params), e.params),
              data: Object.assign(Object.assign({}, t.data), e.data),
              resolve: Object.assign(Object.assign({}, t.resolve), e._resolvedData),
            }),
            { params: {}, data: {}, resolve: {} }
          );
        })(n.slice(i));
      }
      class VD {
        constructor(t, e, n, i, s, r, o, a, l, c, h) {
          (this.url = t),
            (this.params = e),
            (this.queryParams = n),
            (this.fragment = i),
            (this.data = s),
            (this.outlet = r),
            (this.component = o),
            (this.routeConfig = a),
            (this._urlSegment = l),
            (this._lastPathIndex = c),
            (this._resolve = h);
        }
        get root() {
          return this._routerState.root;
        }
        get parent() {
          return this._routerState.parent(this);
        }
        get firstChild() {
          return this._routerState.firstChild(this);
        }
        get children() {
          return this._routerState.children(this);
        }
        get pathFromRoot() {
          return this._routerState.pathFromRoot(this);
        }
        get paramMap() {
          return this._paramMap || (this._paramMap = KT(this.params)), this._paramMap;
        }
        get queryParamMap() {
          return this._queryParamMap || (this._queryParamMap = KT(this.queryParams)), this._queryParamMap;
        }
        toString() {
          return `Route(url:'${this.url.map((t) => t.toString()).join('/')}', path:'${
            this.routeConfig ? this.routeConfig.path : ''
          }')`;
        }
      }
      class BD extends AD {
        constructor(t, e) {
          super(e), (this.url = t), zD(this, e);
        }
        toString() {
          return jD(this._root);
        }
      }
      function zD(t, e) {
        (e.value._routerState = t), e.children.forEach((e) => zD(t, e));
      }
      function jD(t) {
        const e = t.children.length > 0 ? ` { ${t.children.map(jD).join(', ')} } ` : '';
        return `${t.value}${e}`;
      }
      function HD(t) {
        if (t.snapshot) {
          const e = t.snapshot,
            n = t._futureSnapshot;
          (t.snapshot = n),
            JT(e.queryParams, n.queryParams) || t.queryParams.next(n.queryParams),
            e.fragment !== n.fragment && t.fragment.next(n.fragment),
            JT(e.params, n.params) || t.params.next(n.params),
            (function (t, e) {
              if (t.length !== e.length) return !1;
              for (let n = 0; n < t.length; ++n) if (!JT(t[n], e[n])) return !1;
              return !0;
            })(e.url, n.url) || t.url.next(n.url),
            JT(e.data, n.data) || t.data.next(n.data);
        } else (t.snapshot = t._futureSnapshot), t.data.next(t._futureSnapshot.data);
      }
      function $D(t, e) {
        var n, i;
        return (
          JT(t.params, e.params) &&
          dD((n = t.url), (i = e.url)) &&
          n.every((t, e) => JT(t.parameters, i[e].parameters)) &&
          !(!t.parent != !e.parent) &&
          (!t.parent || $D(t.parent, e.parent))
        );
      }
      function qD(t, e, n) {
        if (n && t.shouldReuseRoute(e.value, n.value.snapshot)) {
          const i = n.value;
          i._futureSnapshot = e.value;
          const s = (function (t, e, n) {
            return e.children.map((e) => {
              for (const i of n.children) if (t.shouldReuseRoute(e.value, i.value.snapshot)) return qD(t, e, i);
              return qD(t, e);
            });
          })(t, e, n);
          return new MD(i, s);
        }
        {
          if (t.shouldAttach(e.value)) {
            const n = t.retrieve(e.value);
            if (null !== n) {
              const t = n.route;
              return WD(e, t), t;
            }
          }
          const n = new FD(
              new qP((i = e.value).url),
              new qP(i.params),
              new qP(i.queryParams),
              new qP(i.fragment),
              new qP(i.data),
              i.outlet,
              i.component,
              i
            ),
            s = e.children.map((e) => qD(t, e));
          return new MD(n, s);
        }
        var i;
      }
      function WD(t, e) {
        if (t.value.routeConfig !== e.value.routeConfig)
          throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');
        if (t.children.length !== e.children.length)
          throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');
        e.value._futureSnapshot = t.value;
        for (let n = 0; n < t.children.length; ++n) WD(t.children[n], e.children[n]);
      }
      function UD(t) {
        return 'object' == typeof t && null != t && !t.outlets && !t.segmentPath;
      }
      function YD(t) {
        return 'object' == typeof t && null != t && t.outlets;
      }
      function GD(t, e, n, i, s) {
        let r = {};
        return (
          i &&
            iD(i, (t, e) => {
              r[e] = Array.isArray(t) ? t.map((t) => `${t}`) : `${t}`;
            }),
          new cD(n.root === t ? e : QD(n.root, t, e), r, s)
        );
      }
      function QD(t, e, n) {
        const i = {};
        return (
          iD(t.children, (t, s) => {
            i[s] = t === e ? n : QD(t, e, n);
          }),
          new hD(t.segments, i)
        );
      }
      class KD {
        constructor(t, e, n) {
          if (
            ((this.isAbsolute = t), (this.numberOfDoubleDots = e), (this.commands = n), t && n.length > 0 && UD(n[0]))
          )
            throw new Error('Root segment cannot have matrix parameters');
          const i = n.find(YD);
          if (i && i !== nD(n)) throw new Error('{outlets:{}} has to be the last command');
        }
        toRoot() {
          return this.isAbsolute && 1 === this.commands.length && '/' == this.commands[0];
        }
      }
      class XD {
        constructor(t, e, n) {
          (this.segmentGroup = t), (this.processChildren = e), (this.index = n);
        }
      }
      function ZD(t, e, n) {
        if ((t || (t = new hD([], {})), 0 === t.segments.length && t.hasChildren())) return JD(t, e, n);
        const i = (function (t, e, n) {
            let i = 0,
              s = e;
            const r = { match: !1, pathIndex: 0, commandIndex: 0 };
            for (; s < t.segments.length; ) {
              if (i >= n.length) return r;
              const e = t.segments[s],
                o = n[i];
              if (YD(o)) break;
              const a = `${o}`,
                l = i < n.length - 1 ? n[i + 1] : null;
              if (s > 0 && void 0 === a) break;
              if (a && l && 'object' == typeof l && void 0 === l.outlets) {
                if (!iM(a, l, e)) return r;
                i += 2;
              } else {
                if (!iM(a, {}, e)) return r;
                i++;
              }
              s++;
            }
            return { match: !0, pathIndex: s, commandIndex: i };
          })(t, e, n),
          s = n.slice(i.commandIndex);
        if (i.match && i.pathIndex < t.segments.length) {
          const e = new hD(t.segments.slice(0, i.pathIndex), {});
          return (e.children.primary = new hD(t.segments.slice(i.pathIndex), t.children)), JD(e, 0, s);
        }
        return i.match && 0 === s.length
          ? new hD(t.segments, {})
          : i.match && !t.hasChildren()
          ? tM(t, e, n)
          : i.match
          ? JD(t, 0, s)
          : tM(t, e, n);
      }
      function JD(t, e, n) {
        if (0 === n.length) return new hD(t.segments, {});
        {
          const i = (function (t) {
              return YD(t[0]) ? t[0].outlets : { [GT]: t };
            })(n),
            s = {};
          return (
            iD(i, (n, i) => {
              'string' == typeof n && (n = [n]), null !== n && (s[i] = ZD(t.children[i], e, n));
            }),
            iD(t.children, (t, e) => {
              void 0 === i[e] && (s[e] = t);
            }),
            new hD(t.segments, s)
          );
        }
      }
      function tM(t, e, n) {
        const i = t.segments.slice(0, e);
        let s = 0;
        for (; s < n.length; ) {
          const r = n[s];
          if (YD(r)) {
            const t = eM(r.outlets);
            return new hD(i, t);
          }
          if (0 === s && UD(n[0])) {
            i.push(new uD(t.segments[e].path, nM(n[0]))), s++;
            continue;
          }
          const o = YD(r) ? r.outlets.primary : `${r}`,
            a = s < n.length - 1 ? n[s + 1] : null;
          o && a && UD(a) ? (i.push(new uD(o, nM(a))), (s += 2)) : (i.push(new uD(o, {})), s++);
        }
        return new hD(i, {});
      }
      function eM(t) {
        const e = {};
        return (
          iD(t, (t, n) => {
            'string' == typeof t && (t = [t]), null !== t && (e[n] = tM(new hD([], {}), 0, t));
          }),
          e
        );
      }
      function nM(t) {
        const e = {};
        return iD(t, (t, n) => (e[n] = `${t}`)), e;
      }
      function iM(t, e, n) {
        return t == n.path && JT(e, n.parameters);
      }
      class sM {
        constructor(t, e, n, i) {
          (this.routeReuseStrategy = t), (this.futureState = e), (this.currState = n), (this.forwardEvent = i);
        }
        activate(t) {
          const e = this.futureState._root,
            n = this.currState ? this.currState._root : null;
          this.deactivateChildRoutes(e, n, t), HD(this.futureState.root), this.activateChildRoutes(e, n, t);
        }
        deactivateChildRoutes(t, e, n) {
          const i = RD(e);
          t.children.forEach((t) => {
            const e = t.value.outlet;
            this.deactivateRoutes(t, i[e], n), delete i[e];
          }),
            iD(i, (t, e) => {
              this.deactivateRouteAndItsChildren(t, n);
            });
        }
        deactivateRoutes(t, e, n) {
          const i = t.value,
            s = e ? e.value : null;
          if (i === s)
            if (i.component) {
              const s = n.getContext(i.outlet);
              s && this.deactivateChildRoutes(t, e, s.children);
            } else this.deactivateChildRoutes(t, e, n);
          else s && this.deactivateRouteAndItsChildren(e, n);
        }
        deactivateRouteAndItsChildren(t, e) {
          this.routeReuseStrategy.shouldDetach(t.value.snapshot)
            ? this.detachAndStoreRouteSubtree(t, e)
            : this.deactivateRouteAndOutlet(t, e);
        }
        detachAndStoreRouteSubtree(t, e) {
          const n = e.getContext(t.value.outlet);
          if (n && n.outlet) {
            const e = n.outlet.detach(),
              i = n.children.onOutletDeactivated();
            this.routeReuseStrategy.store(t.value.snapshot, { componentRef: e, route: t, contexts: i });
          }
        }
        deactivateRouteAndOutlet(t, e) {
          const n = e.getContext(t.value.outlet),
            i = n && t.value.component ? n.children : e,
            s = RD(t);
          for (const r of Object.keys(s)) this.deactivateRouteAndItsChildren(s[r], i);
          n &&
            n.outlet &&
            (n.outlet.deactivate(),
            n.children.onOutletDeactivated(),
            (n.attachRef = null),
            (n.resolver = null),
            (n.route = null));
        }
        activateChildRoutes(t, e, n) {
          const i = RD(e);
          t.children.forEach((t) => {
            this.activateRoutes(t, i[t.value.outlet], n), this.forwardEvent(new UT(t.value.snapshot));
          }),
            t.children.length && this.forwardEvent(new qT(t.value.snapshot));
        }
        activateRoutes(t, e, n) {
          const i = t.value,
            s = e ? e.value : null;
          if ((HD(i), i === s))
            if (i.component) {
              const s = n.getOrCreateContext(i.outlet);
              this.activateChildRoutes(t, e, s.children);
            } else this.activateChildRoutes(t, e, n);
          else if (i.component) {
            const e = n.getOrCreateContext(i.outlet);
            if (this.routeReuseStrategy.shouldAttach(i.snapshot)) {
              const t = this.routeReuseStrategy.retrieve(i.snapshot);
              this.routeReuseStrategy.store(i.snapshot, null),
                e.children.onOutletReAttached(t.contexts),
                (e.attachRef = t.componentRef),
                (e.route = t.route.value),
                e.outlet && e.outlet.attach(t.componentRef, t.route.value),
                rM(t.route);
            } else {
              const n = (function (t) {
                  for (let e = t.parent; e; e = e.parent) {
                    const t = e.routeConfig;
                    if (t && t._loadedConfig) return t._loadedConfig;
                    if (t && t.component) return null;
                  }
                  return null;
                })(i.snapshot),
                s = n ? n.module.componentFactoryResolver : null;
              (e.attachRef = null),
                (e.route = i),
                (e.resolver = s),
                e.outlet && e.outlet.activateWith(i, s),
                this.activateChildRoutes(t, null, e.children);
            }
          } else this.activateChildRoutes(t, null, n);
        }
      }
      function rM(t) {
        HD(t.value), t.children.forEach(rM);
      }
      class oM {
        constructor(t, e) {
          (this.routes = t), (this.module = e);
        }
      }
      function aM(t) {
        return 'function' == typeof t;
      }
      function lM(t) {
        return t instanceof cD;
      }
      const cM = Symbol('INITIAL_VALUE');
      function hM() {
        return cf((t) =>
          BE(t.map((t) => t.pipe(pf(1), bv(cM)))).pipe(
            _T((t, e) => {
              let n = !1;
              return e.reduce((t, i, s) => {
                if (t !== cM) return t;
                if ((i === cM && (n = !0), !n)) {
                  if (!1 === i) return i;
                  if (s === e.length - 1 || lM(i)) return i;
                }
                return t;
              }, t);
            }, cM),
            _m((t) => t !== cM),
            E((t) => (lM(t) ? t : !0 === t)),
            pf(1)
          )
        );
      }
      let uM = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['ng-component']],
            decls: 1,
            vars: 0,
            template: function (t, e) {
              1 & t && Vo(0, 'router-outlet');
            },
            directives: function () {
              return [lR];
            },
            encapsulation: 2,
          })),
          t
        );
      })();
      function dM(t, e = '') {
        for (let n = 0; n < t.length; n++) {
          const i = t[n];
          pM(i, mM(e, i));
        }
      }
      function pM(t, e) {
        t.children && dM(t.children, e);
      }
      function mM(t, e) {
        return e ? (t || e.path ? (t && !e.path ? `${t}/` : !t && e.path ? e.path : `${t}/${e.path}`) : '') : t;
      }
      function fM(t) {
        const e = t.children && t.children.map(fM),
          n = e ? Object.assign(Object.assign({}, t), { children: e }) : Object.assign({}, t);
        return !n.component && (e || n.loadChildren) && n.outlet && n.outlet !== GT && (n.component = uM), n;
      }
      function gM(t) {
        return t.outlet || GT;
      }
      function _M(t, e) {
        const n = t.filter((t) => gM(t) === e);
        return n.push(...t.filter((t) => gM(t) !== e)), n;
      }
      const bM = { matched: !1, consumedSegments: [], lastChild: 0, parameters: {}, positionalParamSegments: {} };
      function yM(t, e, n) {
        var i;
        if ('' === e.path)
          return 'full' === e.pathMatch && (t.hasChildren() || n.length > 0)
            ? Object.assign({}, bM)
            : { matched: !0, consumedSegments: [], lastChild: 0, parameters: {}, positionalParamSegments: {} };
        const s = (e.matcher || ZT)(n, t, e);
        if (!s) return Object.assign({}, bM);
        const r = {};
        iD(s.posParams, (t, e) => {
          r[e] = t.path;
        });
        const o =
          s.consumed.length > 0 ? Object.assign(Object.assign({}, r), s.consumed[s.consumed.length - 1].parameters) : r;
        return {
          matched: !0,
          consumedSegments: s.consumed,
          lastChild: s.consumed.length,
          parameters: o,
          positionalParamSegments: null !== (i = s.posParams) && void 0 !== i ? i : {},
        };
      }
      function vM(t, e, n, i, s = 'corrected') {
        if (
          n.length > 0 &&
          (function (t, e, n) {
            return n.some((n) => wM(t, e, n) && gM(n) !== GT);
          })(t, n, i)
        ) {
          const s = new hD(
            e,
            (function (t, e, n, i) {
              const s = {};
              (s.primary = i), (i._sourceSegment = t), (i._segmentIndexShift = e.length);
              for (const r of n)
                if ('' === r.path && gM(r) !== GT) {
                  const n = new hD([], {});
                  (n._sourceSegment = t), (n._segmentIndexShift = e.length), (s[gM(r)] = n);
                }
              return s;
            })(t, e, i, new hD(n, t.children))
          );
          return (s._sourceSegment = t), (s._segmentIndexShift = e.length), { segmentGroup: s, slicedSegments: [] };
        }
        if (
          0 === n.length &&
          (function (t, e, n) {
            return n.some((n) => wM(t, e, n));
          })(t, n, i)
        ) {
          const r = new hD(
            t.segments,
            (function (t, e, n, i, s, r) {
              const o = {};
              for (const a of i)
                if (wM(t, n, a) && !s[gM(a)]) {
                  const n = new hD([], {});
                  (n._sourceSegment = t),
                    (n._segmentIndexShift = 'legacy' === r ? t.segments.length : e.length),
                    (o[gM(a)] = n);
                }
              return Object.assign(Object.assign({}, s), o);
            })(t, e, n, i, t.children, s)
          );
          return (r._sourceSegment = t), (r._segmentIndexShift = e.length), { segmentGroup: r, slicedSegments: n };
        }
        const r = new hD(t.segments, t.children);
        return (r._sourceSegment = t), (r._segmentIndexShift = e.length), { segmentGroup: r, slicedSegments: n };
      }
      function wM(t, e, n) {
        return (!(t.hasChildren() || e.length > 0) || 'full' !== n.pathMatch) && '' === n.path;
      }
      function xM(t, e, n, i) {
        return !!(gM(t) === i || (i !== GT && wM(e, n, t))) && ('**' === t.path || yM(e, t, n).matched);
      }
      function CM(t, e, n) {
        return 0 === e.length && !t.children[n];
      }
      class kM {
        constructor(t) {
          this.segmentGroup = t || null;
        }
      }
      class SM {
        constructor(t) {
          this.urlTree = t;
        }
      }
      function EM(t) {
        return new b((e) => e.error(new kM(t)));
      }
      function OM(t) {
        return new b((e) => e.error(new SM(t)));
      }
      function PM(t) {
        return new b((e) => e.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${t}'`)));
      }
      class AM {
        constructor(t, e, n, i, s) {
          (this.configLoader = e),
            (this.urlSerializer = n),
            (this.urlTree = i),
            (this.config = s),
            (this.allowRedirects = !0),
            (this.ngModule = t.get(Il));
        }
        apply() {
          const t = vM(this.urlTree.root, [], [], this.config).segmentGroup,
            e = new hD(t.segments, t.children);
          return this.expandSegmentGroup(this.ngModule, this.config, e, GT)
            .pipe(E((t) => this.createUrlTree(TM(t), this.urlTree.queryParams, this.urlTree.fragment)))
            .pipe(
              hS((t) => {
                if (t instanceof SM) return (this.allowRedirects = !1), this.match(t.urlTree);
                if (t instanceof kM) throw this.noMatchError(t);
                throw t;
              })
            );
        }
        match(t) {
          return this.expandSegmentGroup(this.ngModule, this.config, t.root, GT)
            .pipe(E((e) => this.createUrlTree(TM(e), t.queryParams, t.fragment)))
            .pipe(
              hS((t) => {
                if (t instanceof kM) throw this.noMatchError(t);
                throw t;
              })
            );
        }
        noMatchError(t) {
          return new Error(`Cannot match any routes. URL Segment: '${t.segmentGroup}'`);
        }
        createUrlTree(t, e, n) {
          const i = t.segments.length > 0 ? new hD([], { [GT]: t }) : t;
          return new cD(i, e, n);
        }
        expandSegmentGroup(t, e, n, i) {
          return 0 === n.segments.length && n.hasChildren()
            ? this.expandChildren(t, e, n).pipe(E((t) => new hD([], t)))
            : this.expandSegment(t, n, e, n.segments, i, !0);
        }
        expandChildren(t, e, n) {
          const i = [];
          for (const s of Object.keys(n.children)) 'primary' === s ? i.unshift(s) : i.push(s);
          return L(i).pipe(
            gm((i) => {
              const s = n.children[i],
                r = _M(e, i);
              return this.expandSegmentGroup(t, r, s, i).pipe(E((t) => ({ segment: t, outlet: i })));
            }),
            _T((t, e) => ((t[e.outlet] = e.segment), t), {}),
            (function (t, e) {
              const n = arguments.length >= 2;
              return (i) => i.pipe(t ? _m((e, n) => t(e, n, i)) : _, vT(1), n ? OT(e) : CT(() => new gT()));
            })()
          );
        }
        expandSegment(t, e, n, i, s, r) {
          return L(n).pipe(
            gm((o) =>
              this.expandSegmentAgainstRoute(t, e, n, o, i, s, r).pipe(
                hS((t) => {
                  if (t instanceof kM) return fm(null);
                  throw t;
                })
              )
            ),
            TT((t) => !!t),
            hS((t, n) => {
              if (t instanceof gT || 'EmptyError' === t.name) {
                if (CM(e, i, s)) return fm(new hD([], {}));
                throw new kM(e);
              }
              throw t;
            })
          );
        }
        expandSegmentAgainstRoute(t, e, n, i, s, r, o) {
          return xM(i, e, s, r)
            ? void 0 === i.redirectTo
              ? this.matchSegmentAgainstRoute(t, e, i, s, r)
              : o && this.allowRedirects
              ? this.expandSegmentAgainstRouteUsingRedirect(t, e, n, i, s, r)
              : EM(e)
            : EM(e);
        }
        expandSegmentAgainstRouteUsingRedirect(t, e, n, i, s, r) {
          return '**' === i.path
            ? this.expandWildCardWithParamsAgainstRouteUsingRedirect(t, n, i, r)
            : this.expandRegularSegmentAgainstRouteUsingRedirect(t, e, n, i, s, r);
        }
        expandWildCardWithParamsAgainstRouteUsingRedirect(t, e, n, i) {
          const s = this.applyRedirectCommands([], n.redirectTo, {});
          return n.redirectTo.startsWith('/')
            ? OM(s)
            : this.lineralizeSegments(n, s).pipe(
                B((n) => {
                  const s = new hD(n, {});
                  return this.expandSegment(t, s, e, n, i, !1);
                })
              );
        }
        expandRegularSegmentAgainstRouteUsingRedirect(t, e, n, i, s, r) {
          const { matched: o, consumedSegments: a, lastChild: l, positionalParamSegments: c } = yM(e, i, s);
          if (!o) return EM(e);
          const h = this.applyRedirectCommands(a, i.redirectTo, c);
          return i.redirectTo.startsWith('/')
            ? OM(h)
            : this.lineralizeSegments(i, h).pipe(B((i) => this.expandSegment(t, e, n, i.concat(s.slice(l)), r, !1)));
        }
        matchSegmentAgainstRoute(t, e, n, i, s) {
          if ('**' === n.path)
            return n.loadChildren
              ? (n._loadedConfig ? fm(n._loadedConfig) : this.configLoader.load(t.injector, n)).pipe(
                  E((t) => ((n._loadedConfig = t), new hD(i, {})))
                )
              : fm(new hD(i, {}));
          const { matched: r, consumedSegments: o, lastChild: a } = yM(e, n, i);
          if (!r) return EM(e);
          const l = i.slice(a);
          return this.getChildConfig(t, n, i).pipe(
            B((t) => {
              const i = t.module,
                r = t.routes,
                { segmentGroup: a, slicedSegments: c } = vM(e, o, l, r),
                h = new hD(a.segments, a.children);
              if (0 === c.length && h.hasChildren()) return this.expandChildren(i, r, h).pipe(E((t) => new hD(o, t)));
              if (0 === r.length && 0 === c.length) return fm(new hD(o, {}));
              const u = gM(n) === s;
              return this.expandSegment(i, h, r, c, u ? GT : s, !0).pipe(
                E((t) => new hD(o.concat(t.segments), t.children))
              );
            })
          );
        }
        getChildConfig(t, e, n) {
          return e.children
            ? fm(new oM(e.children, t))
            : e.loadChildren
            ? void 0 !== e._loadedConfig
              ? fm(e._loadedConfig)
              : this.runCanLoadGuards(t.injector, e, n).pipe(
                  B((n) =>
                    n
                      ? this.configLoader.load(t.injector, e).pipe(E((t) => ((e._loadedConfig = t), t)))
                      : (function (t) {
                          return new b((e) =>
                            e.error(
                              XT(
                                `Cannot load children because the guard of the route "path: '${t.path}'" returned false`
                              )
                            )
                          );
                        })(e)
                  )
                )
            : fm(new oM([], t));
        }
        runCanLoadGuards(t, e, n) {
          const i = e.canLoad;
          return i && 0 !== i.length
            ? fm(
                i.map((i) => {
                  const s = t.get(i);
                  let r;
                  if (
                    (function (t) {
                      return t && aM(t.canLoad);
                    })(s)
                  )
                    r = s.canLoad(e, n);
                  else {
                    if (!aM(s)) throw new Error('Invalid CanLoad guard');
                    r = s(e, n);
                  }
                  return sD(r);
                })
              ).pipe(
                hM(),
                gf((t) => {
                  if (!lM(t)) return;
                  const e = XT(`Redirecting to "${this.urlSerializer.serialize(t)}"`);
                  throw ((e.url = t), e);
                }),
                E((t) => !0 === t)
              )
            : fm(!0);
        }
        lineralizeSegments(t, e) {
          let n = [],
            i = e.root;
          for (;;) {
            if (((n = n.concat(i.segments)), 0 === i.numberOfChildren)) return fm(n);
            if (i.numberOfChildren > 1 || !i.children.primary) return PM(t.redirectTo);
            i = i.children.primary;
          }
        }
        applyRedirectCommands(t, e, n) {
          return this.applyRedirectCreatreUrlTree(e, this.urlSerializer.parse(e), t, n);
        }
        applyRedirectCreatreUrlTree(t, e, n, i) {
          const s = this.createSegmentGroup(t, e.root, n, i);
          return new cD(s, this.createQueryParams(e.queryParams, this.urlTree.queryParams), e.fragment);
        }
        createQueryParams(t, e) {
          const n = {};
          return (
            iD(t, (t, i) => {
              if ('string' == typeof t && t.startsWith(':')) {
                const s = t.substring(1);
                n[i] = e[s];
              } else n[i] = t;
            }),
            n
          );
        }
        createSegmentGroup(t, e, n, i) {
          const s = this.createSegments(t, e.segments, n, i);
          let r = {};
          return (
            iD(e.children, (e, s) => {
              r[s] = this.createSegmentGroup(t, e, n, i);
            }),
            new hD(s, r)
          );
        }
        createSegments(t, e, n, i) {
          return e.map((e) => (e.path.startsWith(':') ? this.findPosParam(t, e, i) : this.findOrReturn(e, n)));
        }
        findPosParam(t, e, n) {
          const i = n[e.path.substring(1)];
          if (!i) throw new Error(`Cannot redirect to '${t}'. Cannot find '${e.path}'.`);
          return i;
        }
        findOrReturn(t, e) {
          let n = 0;
          for (const i of e) {
            if (i.path === t.path) return e.splice(n), i;
            n++;
          }
          return t;
        }
      }
      function TM(t) {
        const e = {};
        for (const n of Object.keys(t.children)) {
          const i = TM(t.children[n]);
          (i.segments.length > 0 || i.hasChildren()) && (e[n] = i);
        }
        return (function (t) {
          if (1 === t.numberOfChildren && t.children.primary) {
            const e = t.children.primary;
            return new hD(t.segments.concat(e.segments), e.children);
          }
          return t;
        })(new hD(t.segments, e));
      }
      class DM {
        constructor(t) {
          (this.path = t), (this.route = this.path[this.path.length - 1]);
        }
      }
      class MM {
        constructor(t, e) {
          (this.component = t), (this.route = e);
        }
      }
      function RM(t, e, n) {
        const i = t._root;
        return LM(i, e ? e._root : null, n, [i.value]);
      }
      function IM(t, e, n) {
        const i = (function (t) {
          if (!t) return null;
          for (let e = t.parent; e; e = e.parent) {
            const t = e.routeConfig;
            if (t && t._loadedConfig) return t._loadedConfig;
          }
          return null;
        })(e);
        return (i ? i.module.injector : n).get(t);
      }
      function LM(t, e, n, i, s = { canDeactivateChecks: [], canActivateChecks: [] }) {
        const r = RD(e);
        return (
          t.children.forEach((t) => {
            !(function (t, e, n, i, s = { canDeactivateChecks: [], canActivateChecks: [] }) {
              const r = t.value,
                o = e ? e.value : null,
                a = n ? n.getContext(t.value.outlet) : null;
              if (o && r.routeConfig === o.routeConfig) {
                const l = (function (t, e, n) {
                  if ('function' == typeof n) return n(t, e);
                  switch (n) {
                    case 'pathParamsChange':
                      return !dD(t.url, e.url);
                    case 'pathParamsOrQueryParamsChange':
                      return !dD(t.url, e.url) || !JT(t.queryParams, e.queryParams);
                    case 'always':
                      return !0;
                    case 'paramsOrQueryParamsChange':
                      return !$D(t, e) || !JT(t.queryParams, e.queryParams);
                    case 'paramsChange':
                    default:
                      return !$D(t, e);
                  }
                })(o, r, r.routeConfig.runGuardsAndResolvers);
                l ? s.canActivateChecks.push(new DM(i)) : ((r.data = o.data), (r._resolvedData = o._resolvedData)),
                  LM(t, e, r.component ? (a ? a.children : null) : n, i, s),
                  l &&
                    a &&
                    a.outlet &&
                    a.outlet.isActivated &&
                    s.canDeactivateChecks.push(new MM(a.outlet.component, o));
              } else
                o && FM(e, a, s),
                  s.canActivateChecks.push(new DM(i)),
                  LM(t, null, r.component ? (a ? a.children : null) : n, i, s);
            })(t, r[t.value.outlet], n, i.concat([t.value]), s),
              delete r[t.value.outlet];
          }),
          iD(r, (t, e) => FM(t, n.getContext(e), s)),
          s
        );
      }
      function FM(t, e, n) {
        const i = RD(t),
          s = t.value;
        iD(i, (t, i) => {
          FM(t, s.component ? (e ? e.children.getContext(i) : null) : e, n);
        }),
          n.canDeactivateChecks.push(
            new MM(s.component && e && e.outlet && e.outlet.isActivated ? e.outlet.component : null, s)
          );
      }
      class NM {}
      function VM(t) {
        return new b((e) => e.error(t));
      }
      class BM {
        constructor(t, e, n, i, s, r) {
          (this.rootComponentType = t),
            (this.config = e),
            (this.urlTree = n),
            (this.url = i),
            (this.paramsInheritanceStrategy = s),
            (this.relativeLinkResolution = r);
        }
        recognize() {
          const t = vM(
              this.urlTree.root,
              [],
              [],
              this.config.filter((t) => void 0 === t.redirectTo),
              this.relativeLinkResolution
            ).segmentGroup,
            e = this.processSegmentGroup(this.config, t, GT);
          if (null === e) return null;
          const n = new VD(
              [],
              Object.freeze({}),
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              {},
              GT,
              this.rootComponentType,
              null,
              this.urlTree.root,
              -1,
              {}
            ),
            i = new MD(n, e),
            s = new BD(this.url, i);
          return this.inheritParamsAndData(s._root), s;
        }
        inheritParamsAndData(t) {
          const e = t.value,
            n = ND(e, this.paramsInheritanceStrategy);
          (e.params = Object.freeze(n.params)),
            (e.data = Object.freeze(n.data)),
            t.children.forEach((t) => this.inheritParamsAndData(t));
        }
        processSegmentGroup(t, e, n) {
          return 0 === e.segments.length && e.hasChildren()
            ? this.processChildren(t, e)
            : this.processSegment(t, e, e.segments, n);
        }
        processChildren(t, e) {
          const n = [];
          for (const s of Object.keys(e.children)) {
            const i = e.children[s],
              r = _M(t, s),
              o = this.processSegmentGroup(r, i, s);
            if (null === o) return null;
            n.push(...o);
          }
          const i = jM(n);
          return (
            i.sort((t, e) =>
              t.value.outlet === GT ? -1 : e.value.outlet === GT ? 1 : t.value.outlet.localeCompare(e.value.outlet)
            ),
            i
          );
        }
        processSegment(t, e, n, i) {
          for (const s of t) {
            const t = this.processSegmentAgainstRoute(s, e, n, i);
            if (null !== t) return t;
          }
          return CM(e, n, i) ? [] : null;
        }
        processSegmentAgainstRoute(t, e, n, i) {
          if (t.redirectTo || !xM(t, e, n, i)) return null;
          let s,
            r = [],
            o = [];
          if ('**' === t.path) {
            const i = n.length > 0 ? nD(n).parameters : {};
            s = new VD(
              n,
              i,
              Object.freeze(Object.assign({}, this.urlTree.queryParams)),
              this.urlTree.fragment,
              qM(t),
              gM(t),
              t.component,
              t,
              HM(e),
              $M(e) + n.length,
              WM(t)
            );
          } else {
            const i = yM(e, t, n);
            if (!i.matched) return null;
            (r = i.consumedSegments),
              (o = n.slice(i.lastChild)),
              (s = new VD(
                r,
                i.parameters,
                Object.freeze(Object.assign({}, this.urlTree.queryParams)),
                this.urlTree.fragment,
                qM(t),
                gM(t),
                t.component,
                t,
                HM(e),
                $M(e) + r.length,
                WM(t)
              ));
          }
          const a = (function (t) {
              return t.children ? t.children : t.loadChildren ? t._loadedConfig.routes : [];
            })(t),
            { segmentGroup: l, slicedSegments: c } = vM(
              e,
              r,
              o,
              a.filter((t) => void 0 === t.redirectTo),
              this.relativeLinkResolution
            );
          if (0 === c.length && l.hasChildren()) {
            const t = this.processChildren(a, l);
            return null === t ? null : [new MD(s, t)];
          }
          if (0 === a.length && 0 === c.length) return [new MD(s, [])];
          const h = gM(t) === i,
            u = this.processSegment(a, l, c, h ? GT : i);
          return null === u ? null : [new MD(s, u)];
        }
      }
      function zM(t) {
        const e = t.value.routeConfig;
        return e && '' === e.path && void 0 === e.redirectTo;
      }
      function jM(t) {
        const e = [],
          n = new Set();
        for (const i of t) {
          if (!zM(i)) {
            e.push(i);
            continue;
          }
          const t = e.find((t) => i.value.routeConfig === t.value.routeConfig);
          void 0 !== t ? (t.children.push(...i.children), n.add(t)) : e.push(i);
        }
        for (const i of n) {
          const t = jM(i.children);
          e.push(new MD(i.value, t));
        }
        return e.filter((t) => !n.has(t));
      }
      function HM(t) {
        let e = t;
        for (; e._sourceSegment; ) e = e._sourceSegment;
        return e;
      }
      function $M(t) {
        let e = t,
          n = e._segmentIndexShift ? e._segmentIndexShift : 0;
        for (; e._sourceSegment; ) (e = e._sourceSegment), (n += e._segmentIndexShift ? e._segmentIndexShift : 0);
        return n - 1;
      }
      function qM(t) {
        return t.data || {};
      }
      function WM(t) {
        return t.resolve || {};
      }
      function UM(t) {
        return cf((e) => {
          const n = t(e);
          return n ? L(n).pipe(E(() => e)) : fm(e);
        });
      }
      class YM {}
      class GM extends class {
        shouldDetach(t) {
          return !1;
        }
        store(t, e) {}
        shouldAttach(t) {
          return !1;
        }
        retrieve(t) {
          return null;
        }
        shouldReuseRoute(t, e) {
          return t.routeConfig === e.routeConfig;
        }
      } {}
      const QM = new Jn('ROUTES');
      class KM {
        constructor(t, e, n, i) {
          (this.loader = t), (this.compiler = e), (this.onLoadStartListener = n), (this.onLoadEndListener = i);
        }
        load(t, e) {
          if (e._loader$) return e._loader$;
          this.onLoadStartListener && this.onLoadStartListener(e);
          const n = this.loadModuleFactory(e.loadChildren).pipe(
            E((n) => {
              this.onLoadEndListener && this.onLoadEndListener(e);
              const i = n.create(t);
              return new oM(eD(i.injector.get(QM, void 0, xt.Self | xt.Optional)).map(fM), i);
            }),
            hS((t) => {
              throw ((e._loader$ = void 0), t);
            })
          );
          return (e._loader$ = new G(n, () => new C()).pipe(W())), e._loader$;
        }
        loadModuleFactory(t) {
          return 'string' == typeof t
            ? L(this.loader.load(t))
            : sD(t()).pipe(B((t) => (t instanceof Ll ? fm(t) : L(this.compiler.compileModuleAsync(t)))));
        }
      }
      class XM {
        constructor() {
          (this.outlet = null),
            (this.route = null),
            (this.resolver = null),
            (this.children = new ZM()),
            (this.attachRef = null);
        }
      }
      class ZM {
        constructor() {
          this.contexts = new Map();
        }
        onChildOutletCreated(t, e) {
          const n = this.getOrCreateContext(t);
          (n.outlet = e), this.contexts.set(t, n);
        }
        onChildOutletDestroyed(t) {
          const e = this.getContext(t);
          e && (e.outlet = null);
        }
        onOutletDeactivated() {
          const t = this.contexts;
          return (this.contexts = new Map()), t;
        }
        onOutletReAttached(t) {
          this.contexts = t;
        }
        getOrCreateContext(t) {
          let e = this.getContext(t);
          return e || ((e = new XM()), this.contexts.set(t, e)), e;
        }
        getContext(t) {
          return this.contexts.get(t) || null;
        }
      }
      class JM {
        shouldProcessUrl(t) {
          return !0;
        }
        extract(t) {
          return t;
        }
        merge(t, e) {
          return t;
        }
      }
      function tR(t) {
        throw t;
      }
      function eR(t, e, n) {
        return e.parse('/');
      }
      function nR(t, e) {
        return fm(null);
      }
      let iR = (() => {
          class t {
            constructor(t, e, n, i, s, r, o, a) {
              (this.rootComponentType = t),
                (this.urlSerializer = e),
                (this.rootContexts = n),
                (this.location = i),
                (this.config = a),
                (this.lastSuccessfulNavigation = null),
                (this.currentNavigation = null),
                (this.disposed = !1),
                (this.lastLocationChangeInfo = null),
                (this.navigationId = 0),
                (this.isNgZoneEnabled = !1),
                (this.events = new C()),
                (this.errorHandler = tR),
                (this.malformedUriErrorHandler = eR),
                (this.navigated = !1),
                (this.lastSuccessfulId = -1),
                (this.hooks = { beforePreactivation: nR, afterPreactivation: nR }),
                (this.urlHandlingStrategy = new JM()),
                (this.routeReuseStrategy = new GM()),
                (this.onSameUrlNavigation = 'ignore'),
                (this.paramsInheritanceStrategy = 'emptyOnly'),
                (this.urlUpdateStrategy = 'deferred'),
                (this.relativeLinkResolution = 'corrected'),
                (this.ngModule = s.get(Il)),
                (this.console = s.get(Vc));
              const l = s.get(Xc);
              (this.isNgZoneEnabled = l instanceof Xc && Xc.isInAngularZone()),
                this.resetConfig(a),
                (this.currentUrlTree = new cD(new hD([], {}), {}, null)),
                (this.rawUrlTree = this.currentUrlTree),
                (this.browserUrlTree = this.currentUrlTree),
                (this.configLoader = new KM(
                  r,
                  o,
                  (t) => this.triggerEvent(new jT(t)),
                  (t) => this.triggerEvent(new HT(t))
                )),
                (this.routerState = LD(this.currentUrlTree, this.rootComponentType)),
                (this.transitions = new qP({
                  id: 0,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.currentUrlTree,
                  extractedUrl: this.urlHandlingStrategy.extract(this.currentUrlTree),
                  urlAfterRedirects: this.urlHandlingStrategy.extract(this.currentUrlTree),
                  rawUrl: this.currentUrlTree,
                  extras: {},
                  resolve: null,
                  reject: null,
                  promise: Promise.resolve(!0),
                  source: 'imperative',
                  restoredState: null,
                  currentSnapshot: this.routerState.snapshot,
                  targetSnapshot: null,
                  currentRouterState: this.routerState,
                  targetRouterState: null,
                  guards: { canActivateChecks: [], canDeactivateChecks: [] },
                  guardsResult: null,
                })),
                (this.navigations = this.setupNavigations(this.transitions)),
                this.processNavigations();
            }
            setupNavigations(t) {
              const e = this.events;
              return t.pipe(
                _m((t) => 0 !== t.id),
                E((t) =>
                  Object.assign(Object.assign({}, t), { extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl) })
                ),
                cf((t) => {
                  let n = !1,
                    i = !1;
                  return fm(t).pipe(
                    gf((t) => {
                      this.currentNavigation = {
                        id: t.id,
                        initialUrl: t.currentRawUrl,
                        extractedUrl: t.extractedUrl,
                        trigger: t.source,
                        extras: t.extras,
                        previousNavigation: this.lastSuccessfulNavigation
                          ? Object.assign(Object.assign({}, this.lastSuccessfulNavigation), {
                              previousNavigation: null,
                            })
                          : null,
                      };
                    }),
                    cf((t) => {
                      const n = !this.navigated || t.extractedUrl.toString() !== this.browserUrlTree.toString();
                      if (
                        ('reload' === this.onSameUrlNavigation || n) &&
                        this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)
                      )
                        return fm(t).pipe(
                          cf((t) => {
                            const n = this.transitions.getValue();
                            return (
                              e.next(new MT(t.id, this.serializeUrl(t.extractedUrl), t.source, t.restoredState)),
                              n !== this.transitions.getValue() ? Zm : Promise.resolve(t)
                            );
                          }),
                          (function (t, e, n, i) {
                            return cf((s) =>
                              (function (t, e, n, i, s) {
                                return new AM(t, e, n, i, s).apply();
                              })(t, e, n, s.extractedUrl, i).pipe(
                                E((t) => Object.assign(Object.assign({}, s), { urlAfterRedirects: t }))
                              )
                            );
                          })(this.ngModule.injector, this.configLoader, this.urlSerializer, this.config),
                          gf((t) => {
                            this.currentNavigation = Object.assign(Object.assign({}, this.currentNavigation), {
                              finalUrl: t.urlAfterRedirects,
                            });
                          }),
                          (function (t, e, n, i, s) {
                            return B((r) =>
                              (function (t, e, n, i, s = 'emptyOnly', r = 'legacy') {
                                try {
                                  const o = new BM(t, e, n, i, s, r).recognize();
                                  return null === o ? VM(new NM()) : fm(o);
                                } catch (o) {
                                  return VM(o);
                                }
                              })(t, e, r.urlAfterRedirects, n(r.urlAfterRedirects), i, s).pipe(
                                E((t) => Object.assign(Object.assign({}, r), { targetSnapshot: t }))
                              )
                            );
                          })(
                            this.rootComponentType,
                            this.config,
                            (t) => this.serializeUrl(t),
                            this.paramsInheritanceStrategy,
                            this.relativeLinkResolution
                          ),
                          gf((t) => {
                            'eager' === this.urlUpdateStrategy &&
                              (t.extras.skipLocationChange ||
                                this.setBrowserUrl(t.urlAfterRedirects, !!t.extras.replaceUrl, t.id, t.extras.state),
                              (this.browserUrlTree = t.urlAfterRedirects));
                            const n = new FT(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            e.next(n);
                          })
                        );
                      if (n && this.rawUrlTree && this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {
                        const { id: n, extractedUrl: i, source: s, restoredState: r, extras: o } = t,
                          a = new MT(n, this.serializeUrl(i), s, r);
                        e.next(a);
                        const l = LD(i, this.rootComponentType).snapshot;
                        return fm(
                          Object.assign(Object.assign({}, t), {
                            targetSnapshot: l,
                            urlAfterRedirects: i,
                            extras: Object.assign(Object.assign({}, o), { skipLocationChange: !1, replaceUrl: !1 }),
                          })
                        );
                      }
                      return (
                        (this.rawUrlTree = t.rawUrl), (this.browserUrlTree = t.urlAfterRedirects), t.resolve(null), Zm
                      );
                    }),
                    UM((t) => {
                      const {
                        targetSnapshot: e,
                        id: n,
                        extractedUrl: i,
                        rawUrl: s,
                        extras: { skipLocationChange: r, replaceUrl: o },
                      } = t;
                      return this.hooks.beforePreactivation(e, {
                        navigationId: n,
                        appliedUrlTree: i,
                        rawUrlTree: s,
                        skipLocationChange: !!r,
                        replaceUrl: !!o,
                      });
                    }),
                    gf((t) => {
                      const e = new NT(
                        t.id,
                        this.serializeUrl(t.extractedUrl),
                        this.serializeUrl(t.urlAfterRedirects),
                        t.targetSnapshot
                      );
                      this.triggerEvent(e);
                    }),
                    E((t) =>
                      Object.assign(Object.assign({}, t), {
                        guards: RM(t.targetSnapshot, t.currentSnapshot, this.rootContexts),
                      })
                    ),
                    (function (t, e) {
                      return B((n) => {
                        const {
                          targetSnapshot: i,
                          currentSnapshot: s,
                          guards: { canActivateChecks: r, canDeactivateChecks: o },
                        } = n;
                        return 0 === o.length && 0 === r.length
                          ? fm(Object.assign(Object.assign({}, n), { guardsResult: !0 }))
                          : (function (t, e, n, i) {
                              return L(t).pipe(
                                B((t) =>
                                  (function (t, e, n, i, s) {
                                    const r = e && e.routeConfig ? e.routeConfig.canDeactivate : null;
                                    return r && 0 !== r.length
                                      ? fm(
                                          r.map((r) => {
                                            const o = IM(r, e, s);
                                            let a;
                                            if (
                                              (function (t) {
                                                return t && aM(t.canDeactivate);
                                              })(o)
                                            )
                                              a = sD(o.canDeactivate(t, e, n, i));
                                            else {
                                              if (!aM(o)) throw new Error('Invalid CanDeactivate guard');
                                              a = sD(o(t, e, n, i));
                                            }
                                            return a.pipe(TT());
                                          })
                                        ).pipe(hM())
                                      : fm(!0);
                                  })(t.component, t.route, n, e, i)
                                ),
                                TT((t) => !0 !== t, !0)
                              );
                            })(o, i, s, t).pipe(
                              B((n) =>
                                n && 'boolean' == typeof n
                                  ? (function (t, e, n, i) {
                                      return L(e).pipe(
                                        gm((e) =>
                                          of(
                                            (function (t, e) {
                                              return null !== t && e && e(new $T(t)), fm(!0);
                                            })(e.route.parent, i),
                                            (function (t, e) {
                                              return null !== t && e && e(new WT(t)), fm(!0);
                                            })(e.route, i),
                                            (function (t, e, n) {
                                              const i = e[e.length - 1],
                                                s = e
                                                  .slice(0, e.length - 1)
                                                  .reverse()
                                                  .map((t) =>
                                                    (function (t) {
                                                      const e = t.routeConfig ? t.routeConfig.canActivateChild : null;
                                                      return e && 0 !== e.length ? { node: t, guards: e } : null;
                                                    })(t)
                                                  )
                                                  .filter((t) => null !== t)
                                                  .map((e) =>
                                                    tf(() =>
                                                      fm(
                                                        e.guards.map((s) => {
                                                          const r = IM(s, e.node, n);
                                                          let o;
                                                          if (
                                                            (function (t) {
                                                              return t && aM(t.canActivateChild);
                                                            })(r)
                                                          )
                                                            o = sD(r.canActivateChild(i, t));
                                                          else {
                                                            if (!aM(r))
                                                              throw new Error('Invalid CanActivateChild guard');
                                                            o = sD(r(i, t));
                                                          }
                                                          return o.pipe(TT());
                                                        })
                                                      ).pipe(hM())
                                                    )
                                                  );
                                              return fm(s).pipe(hM());
                                            })(t, e.path, n),
                                            (function (t, e, n) {
                                              const i = e.routeConfig ? e.routeConfig.canActivate : null;
                                              return i && 0 !== i.length
                                                ? fm(
                                                    i.map((i) =>
                                                      tf(() => {
                                                        const s = IM(i, e, n);
                                                        let r;
                                                        if (
                                                          (function (t) {
                                                            return t && aM(t.canActivate);
                                                          })(s)
                                                        )
                                                          r = sD(s.canActivate(e, t));
                                                        else {
                                                          if (!aM(s)) throw new Error('Invalid CanActivate guard');
                                                          r = sD(s(e, t));
                                                        }
                                                        return r.pipe(TT());
                                                      })
                                                    )
                                                  ).pipe(hM())
                                                : fm(!0);
                                            })(t, e.route, n)
                                          )
                                        ),
                                        TT((t) => !0 !== t, !0)
                                      );
                                    })(i, r, t, e)
                                  : fm(n)
                              ),
                              E((t) => Object.assign(Object.assign({}, n), { guardsResult: t }))
                            );
                      });
                    })(this.ngModule.injector, (t) => this.triggerEvent(t)),
                    gf((t) => {
                      if (lM(t.guardsResult)) {
                        const e = XT(`Redirecting to "${this.serializeUrl(t.guardsResult)}"`);
                        throw ((e.url = t.guardsResult), e);
                      }
                      const e = new VT(
                        t.id,
                        this.serializeUrl(t.extractedUrl),
                        this.serializeUrl(t.urlAfterRedirects),
                        t.targetSnapshot,
                        !!t.guardsResult
                      );
                      this.triggerEvent(e);
                    }),
                    _m((t) => {
                      if (!t.guardsResult) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new IT(t.id, this.serializeUrl(t.extractedUrl), '');
                        return e.next(n), t.resolve(!1), !1;
                      }
                      return !0;
                    }),
                    UM((t) => {
                      if (t.guards.canActivateChecks.length)
                        return fm(t).pipe(
                          gf((t) => {
                            const e = new BT(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            this.triggerEvent(e);
                          }),
                          cf((t) => {
                            let n = !1;
                            return fm(t).pipe(
                              ((i = this.paramsInheritanceStrategy),
                              (s = this.ngModule.injector),
                              B((t) => {
                                const {
                                  targetSnapshot: e,
                                  guards: { canActivateChecks: n },
                                } = t;
                                if (!n.length) return fm(t);
                                let r = 0;
                                return L(n).pipe(
                                  gm((t) =>
                                    (function (t, e, n, i) {
                                      return (function (t, e, n, i) {
                                        const s = Object.keys(t);
                                        if (0 === s.length) return fm({});
                                        const r = {};
                                        return L(s).pipe(
                                          B((s) =>
                                            (function (t, e, n, i) {
                                              const s = IM(t, e, i);
                                              return sD(s.resolve ? s.resolve(e, n) : s(e, n));
                                            })(t[s], e, n, i).pipe(
                                              gf((t) => {
                                                r[s] = t;
                                              })
                                            )
                                          ),
                                          vT(1),
                                          B(() => (Object.keys(r).length === s.length ? fm(r) : Zm))
                                        );
                                      })(t._resolve, t, e, i).pipe(
                                        E(
                                          (e) => (
                                            (t._resolvedData = e),
                                            (t.data = Object.assign(Object.assign({}, t.data), ND(t, n).resolve)),
                                            null
                                          )
                                        )
                                      );
                                    })(t.route, e, i, s)
                                  ),
                                  gf(() => r++),
                                  vT(1),
                                  B((e) => (r === n.length ? fm(t) : Zm))
                                );
                              })),
                              gf({
                                next: () => (n = !0),
                                complete: () => {
                                  if (!n) {
                                    const n = new IT(
                                      t.id,
                                      this.serializeUrl(t.extractedUrl),
                                      "At least one route resolver didn't emit any value."
                                    );
                                    e.next(n), t.resolve(!1);
                                  }
                                },
                              })
                            );
                            var i, s;
                          }),
                          gf((t) => {
                            const e = new zT(
                              t.id,
                              this.serializeUrl(t.extractedUrl),
                              this.serializeUrl(t.urlAfterRedirects),
                              t.targetSnapshot
                            );
                            this.triggerEvent(e);
                          })
                        );
                    }),
                    UM((t) => {
                      const {
                        targetSnapshot: e,
                        id: n,
                        extractedUrl: i,
                        rawUrl: s,
                        extras: { skipLocationChange: r, replaceUrl: o },
                      } = t;
                      return this.hooks.afterPreactivation(e, {
                        navigationId: n,
                        appliedUrlTree: i,
                        rawUrlTree: s,
                        skipLocationChange: !!r,
                        replaceUrl: !!o,
                      });
                    }),
                    E((t) => {
                      const e = (function (t, e, n) {
                        const i = qD(t, e._root, n ? n._root : void 0);
                        return new ID(i, e);
                      })(this.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);
                      return Object.assign(Object.assign({}, t), { targetRouterState: e });
                    }),
                    gf((t) => {
                      (this.currentUrlTree = t.urlAfterRedirects),
                        (this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, t.rawUrl)),
                        (this.routerState = t.targetRouterState),
                        'deferred' === this.urlUpdateStrategy &&
                          (t.extras.skipLocationChange ||
                            this.setBrowserUrl(this.rawUrlTree, !!t.extras.replaceUrl, t.id, t.extras.state),
                          (this.browserUrlTree = t.urlAfterRedirects));
                    }),
                    ((s = this.rootContexts),
                    (r = this.routeReuseStrategy),
                    (o = (t) => this.triggerEvent(t)),
                    E((t) => (new sM(r, t.targetRouterState, t.currentRouterState, o).activate(s), t))),
                    gf({
                      next() {
                        n = !0;
                      },
                      complete() {
                        n = !0;
                      },
                    }),
                    pS(() => {
                      if (!n && !i) {
                        this.resetUrlToCurrentUrlTree();
                        const n = new IT(
                          t.id,
                          this.serializeUrl(t.extractedUrl),
                          `Navigation ID ${t.id} is not equal to the current navigation id ${this.navigationId}`
                        );
                        e.next(n), t.resolve(!1);
                      }
                      this.currentNavigation = null;
                    }),
                    hS((n) => {
                      if (((i = !0), (s = n) && s.ngNavigationCancelingError)) {
                        const i = lM(n.url);
                        i ||
                          ((this.navigated = !0),
                          this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl));
                        const s = new IT(t.id, this.serializeUrl(t.extractedUrl), n.message);
                        e.next(s),
                          i
                            ? setTimeout(() => {
                                const e = this.urlHandlingStrategy.merge(n.url, this.rawUrlTree);
                                this.scheduleNavigation(
                                  e,
                                  'imperative',
                                  null,
                                  {
                                    skipLocationChange: t.extras.skipLocationChange,
                                    replaceUrl: 'eager' === this.urlUpdateStrategy,
                                  },
                                  { resolve: t.resolve, reject: t.reject, promise: t.promise }
                                );
                              }, 0)
                            : t.resolve(!1);
                      } else {
                        this.resetStateAndUrl(t.currentRouterState, t.currentUrlTree, t.rawUrl);
                        const i = new LT(t.id, this.serializeUrl(t.extractedUrl), n);
                        e.next(i);
                        try {
                          t.resolve(this.errorHandler(n));
                        } catch (r) {
                          t.reject(r);
                        }
                      }
                      var s;
                      return Zm;
                    })
                  );
                  var s, r, o;
                })
              );
            }
            resetRootComponentType(t) {
              (this.rootComponentType = t), (this.routerState.root.component = this.rootComponentType);
            }
            getTransition() {
              const t = this.transitions.value;
              return (t.urlAfterRedirects = this.browserUrlTree), t;
            }
            setTransition(t) {
              this.transitions.next(Object.assign(Object.assign({}, this.getTransition()), t));
            }
            initialNavigation() {
              this.setUpLocationChangeListener(),
                0 === this.navigationId && this.navigateByUrl(this.location.path(!0), { replaceUrl: !0 });
            }
            setUpLocationChangeListener() {
              this.locationSubscription ||
                (this.locationSubscription = this.location.subscribe((t) => {
                  const e = this.extractLocationChangeInfoFromEvent(t);
                  this.shouldScheduleNavigation(this.lastLocationChangeInfo, e) &&
                    setTimeout(() => {
                      const { source: t, state: n, urlTree: i } = e,
                        s = { replaceUrl: !0 };
                      if (n) {
                        const t = Object.assign({}, n);
                        delete t.navigationId, 0 !== Object.keys(t).length && (s.state = t);
                      }
                      this.scheduleNavigation(i, t, n, s);
                    }, 0),
                    (this.lastLocationChangeInfo = e);
                }));
            }
            extractLocationChangeInfoFromEvent(t) {
              var e;
              return {
                source: 'popstate' === t.type ? 'popstate' : 'hashchange',
                urlTree: this.parseUrl(t.url),
                state: (null === (e = t.state) || void 0 === e ? void 0 : e.navigationId) ? t.state : null,
                transitionId: this.getTransition().id,
              };
            }
            shouldScheduleNavigation(t, e) {
              if (!t) return !0;
              const n = e.urlTree.toString() === t.urlTree.toString();
              return !(
                e.transitionId === t.transitionId &&
                n &&
                (('hashchange' === e.source && 'popstate' === t.source) ||
                  ('popstate' === e.source && 'hashchange' === t.source))
              );
            }
            get url() {
              return this.serializeUrl(this.currentUrlTree);
            }
            getCurrentNavigation() {
              return this.currentNavigation;
            }
            triggerEvent(t) {
              this.events.next(t);
            }
            resetConfig(t) {
              dM(t), (this.config = t.map(fM)), (this.navigated = !1), (this.lastSuccessfulId = -1);
            }
            ngOnDestroy() {
              this.dispose();
            }
            dispose() {
              this.transitions.complete(),
                this.locationSubscription &&
                  (this.locationSubscription.unsubscribe(), (this.locationSubscription = void 0)),
                (this.disposed = !0);
            }
            createUrlTree(t, e = {}) {
              const { relativeTo: n, queryParams: i, fragment: s, queryParamsHandling: r, preserveFragment: o } = e,
                a = n || this.routerState.root,
                l = o ? this.currentUrlTree.fragment : s;
              let c = null;
              switch (r) {
                case 'merge':
                  c = Object.assign(Object.assign({}, this.currentUrlTree.queryParams), i);
                  break;
                case 'preserve':
                  c = this.currentUrlTree.queryParams;
                  break;
                default:
                  c = i || null;
              }
              return (
                null !== c && (c = this.removeEmptyProps(c)),
                (function (t, e, n, i, s) {
                  if (0 === n.length) return GD(e.root, e.root, e, i, s);
                  const r = (function (t) {
                    if ('string' == typeof t[0] && 1 === t.length && '/' === t[0]) return new KD(!0, 0, t);
                    let e = 0,
                      n = !1;
                    const i = t.reduce((t, i, s) => {
                      if ('object' == typeof i && null != i) {
                        if (i.outlets) {
                          const e = {};
                          return (
                            iD(i.outlets, (t, n) => {
                              e[n] = 'string' == typeof t ? t.split('/') : t;
                            }),
                            [...t, { outlets: e }]
                          );
                        }
                        if (i.segmentPath) return [...t, i.segmentPath];
                      }
                      return 'string' != typeof i
                        ? [...t, i]
                        : 0 === s
                        ? (i.split('/').forEach((i, s) => {
                            (0 == s && '.' === i) ||
                              (0 == s && '' === i ? (n = !0) : '..' === i ? e++ : '' != i && t.push(i));
                          }),
                          t)
                        : [...t, i];
                    }, []);
                    return new KD(n, e, i);
                  })(n);
                  if (r.toRoot()) return GD(e.root, new hD([], {}), e, i, s);
                  const o = (function (t, e, n) {
                      if (t.isAbsolute) return new XD(e.root, !0, 0);
                      if (-1 === n.snapshot._lastPathIndex) {
                        const t = n.snapshot._urlSegment;
                        return new XD(t, t === e.root, 0);
                      }
                      const i = UD(t.commands[0]) ? 0 : 1;
                      return (function (t, e, n) {
                        let i = t,
                          s = e,
                          r = n;
                        for (; r > s; ) {
                          if (((r -= s), (i = i.parent), !i)) throw new Error("Invalid number of '../'");
                          s = i.segments.length;
                        }
                        return new XD(i, !1, s - r);
                      })(n.snapshot._urlSegment, n.snapshot._lastPathIndex + i, t.numberOfDoubleDots);
                    })(r, e, t),
                    a = o.processChildren
                      ? JD(o.segmentGroup, o.index, r.commands)
                      : ZD(o.segmentGroup, o.index, r.commands);
                  return GD(o.segmentGroup, a, e, i, s);
                })(a, this.currentUrlTree, t, c, l)
              );
            }
            navigateByUrl(t, e = { skipLocationChange: !1 }) {
              const n = lM(t) ? t : this.parseUrl(t),
                i = this.urlHandlingStrategy.merge(n, this.rawUrlTree);
              return this.scheduleNavigation(i, 'imperative', null, e);
            }
            navigate(t, e = { skipLocationChange: !1 }) {
              return (
                (function (t) {
                  for (let e = 0; e < t.length; e++) {
                    const n = t[e];
                    if (null == n) throw new Error(`The requested path contains ${n} segment at index ${e}`);
                  }
                })(t),
                this.navigateByUrl(this.createUrlTree(t, e), e)
              );
            }
            serializeUrl(t) {
              return this.urlSerializer.serialize(t);
            }
            parseUrl(t) {
              let e;
              try {
                e = this.urlSerializer.parse(t);
              } catch (n) {
                e = this.malformedUriErrorHandler(n, this.urlSerializer, t);
              }
              return e;
            }
            isActive(t, e) {
              if (lM(t)) return rD(this.currentUrlTree, t, e);
              const n = this.parseUrl(t);
              return rD(this.currentUrlTree, n, e);
            }
            removeEmptyProps(t) {
              return Object.keys(t).reduce((e, n) => {
                const i = t[n];
                return null != i && (e[n] = i), e;
              }, {});
            }
            processNavigations() {
              this.navigations.subscribe(
                (t) => {
                  (this.navigated = !0),
                    (this.lastSuccessfulId = t.id),
                    this.events.next(
                      new RT(t.id, this.serializeUrl(t.extractedUrl), this.serializeUrl(this.currentUrlTree))
                    ),
                    (this.lastSuccessfulNavigation = this.currentNavigation),
                    t.resolve(!0);
                },
                (t) => {
                  this.console.warn('Unhandled Navigation Error: ');
                }
              );
            }
            scheduleNavigation(t, e, n, i, s) {
              if (this.disposed) return Promise.resolve(!1);
              const r = this.getTransition(),
                o = 'imperative' !== e && 'imperative' === (null == r ? void 0 : r.source),
                a =
                  (this.lastSuccessfulId === r.id || this.currentNavigation
                    ? r.rawUrl
                    : r.urlAfterRedirects
                  ).toString() === t.toString();
              if (o && a) return Promise.resolve(!0);
              let l, c, h;
              s
                ? ((l = s.resolve), (c = s.reject), (h = s.promise))
                : (h = new Promise((t, e) => {
                    (l = t), (c = e);
                  }));
              const u = ++this.navigationId;
              return (
                this.setTransition({
                  id: u,
                  source: e,
                  restoredState: n,
                  currentUrlTree: this.currentUrlTree,
                  currentRawUrl: this.rawUrlTree,
                  rawUrl: t,
                  extras: i,
                  resolve: l,
                  reject: c,
                  promise: h,
                  currentSnapshot: this.routerState.snapshot,
                  currentRouterState: this.routerState,
                }),
                h.catch((t) => Promise.reject(t))
              );
            }
            setBrowserUrl(t, e, n, i) {
              const s = this.urlSerializer.serialize(t);
              (i = i || {}),
                this.location.isCurrentPathEqualTo(s) || e
                  ? this.location.replaceState(s, '', Object.assign(Object.assign({}, i), { navigationId: n }))
                  : this.location.go(s, '', Object.assign(Object.assign({}, i), { navigationId: n }));
            }
            resetStateAndUrl(t, e, n) {
              (this.routerState = t),
                (this.currentUrlTree = e),
                (this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, n)),
                this.resetUrlToCurrentUrlTree();
            }
            resetUrlToCurrentUrlTree() {
              this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', {
                navigationId: this.lastSuccessfulId,
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(ei), _i(pD), _i(ZM), _i(Wh), _i(mo), _i(vh), _i(Gc), _i(void 0));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        sR = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this.router = t),
                (this.route = e),
                (this.commands = []),
                (this.onChanges = new C()),
                null == n && i.setAttribute(s.nativeElement, 'tabindex', '0');
            }
            ngOnChanges(t) {
              this.onChanges.next(this);
            }
            set routerLink(t) {
              this.commands = null != t ? (Array.isArray(t) ? t : [t]) : [];
            }
            onClick() {
              const t = {
                skipLocationChange: oR(this.skipLocationChange),
                replaceUrl: oR(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, t), !0;
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: oR(this.preserveFragment),
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(iR), Ro(FD), Kn('tabindex'), Ro(el), Ro(Za));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'routerLink', '', 5, 'a', 5, 'area']],
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('click', function () {
                    return e.onClick();
                  });
              },
              inputs: {
                routerLink: 'routerLink',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                state: 'state',
                relativeTo: 'relativeTo',
              },
              features: [ue],
            })),
            t
          );
        })(),
        rR = (() => {
          class t {
            constructor(t, e, n) {
              (this.router = t),
                (this.route = e),
                (this.locationStrategy = n),
                (this.commands = []),
                (this.onChanges = new C()),
                (this.subscription = t.events.subscribe((t) => {
                  t instanceof RT && this.updateTargetUrlAndHref();
                }));
            }
            set routerLink(t) {
              this.commands = null != t ? (Array.isArray(t) ? t : [t]) : [];
            }
            ngOnChanges(t) {
              this.updateTargetUrlAndHref(), this.onChanges.next(this);
            }
            ngOnDestroy() {
              this.subscription.unsubscribe();
            }
            onClick(t, e, n, i, s) {
              if (0 !== t || e || n || i || s) return !0;
              if ('string' == typeof this.target && '_self' != this.target) return !0;
              const r = {
                skipLocationChange: oR(this.skipLocationChange),
                replaceUrl: oR(this.replaceUrl),
                state: this.state,
              };
              return this.router.navigateByUrl(this.urlTree, r), !1;
            }
            updateTargetUrlAndHref() {
              this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));
            }
            get urlTree() {
              return this.router.createUrlTree(this.commands, {
                relativeTo: void 0 !== this.relativeTo ? this.relativeTo : this.route,
                queryParams: this.queryParams,
                fragment: this.fragment,
                queryParamsHandling: this.queryParamsHandling,
                preserveFragment: oR(this.preserveFragment),
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(iR), Ro(FD), Ro(zh));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['a', 'routerLink', ''],
                ['area', 'routerLink', ''],
              ],
              hostVars: 2,
              hostBindings: function (t, e) {
                1 & t &&
                  Uo('click', function (t) {
                    return e.onClick(t.button, t.ctrlKey, t.shiftKey, t.altKey, t.metaKey);
                  }),
                  2 & t && (Oa('href', e.href, ss), Ao('target', e.target));
              },
              inputs: {
                routerLink: 'routerLink',
                target: 'target',
                queryParams: 'queryParams',
                fragment: 'fragment',
                queryParamsHandling: 'queryParamsHandling',
                preserveFragment: 'preserveFragment',
                skipLocationChange: 'skipLocationChange',
                replaceUrl: 'replaceUrl',
                state: 'state',
                relativeTo: 'relativeTo',
              },
              features: [ue],
            })),
            t
          );
        })();
      function oR(t) {
        return '' === t || !!t;
      }
      let aR = (() => {
          class t {
            constructor(t, e, n, i, s, r) {
              (this.router = t),
                (this.element = e),
                (this.renderer = n),
                (this.cdr = i),
                (this.link = s),
                (this.linkWithHref = r),
                (this.classes = []),
                (this.isActive = !1),
                (this.routerLinkActiveOptions = { exact: !1 }),
                (this.routerEventsSubscription = t.events.subscribe((t) => {
                  t instanceof RT && this.update();
                }));
            }
            ngAfterContentInit() {
              fm(this.links.changes, this.linksWithHrefs.changes, fm(null))
                .pipe(H())
                .subscribe((t) => {
                  this.update(), this.subscribeToEachLinkOnChanges();
                });
            }
            subscribeToEachLinkOnChanges() {
              var t;
              null === (t = this.linkInputChangesSubscription) || void 0 === t || t.unsubscribe();
              const e = [...this.links.toArray(), ...this.linksWithHrefs.toArray(), this.link, this.linkWithHref]
                .filter((t) => !!t)
                .map((t) => t.onChanges);
              this.linkInputChangesSubscription = L(e)
                .pipe(H())
                .subscribe((t) => {
                  this.isActive !== this.isLinkActive(this.router)(t) && this.update();
                });
            }
            set routerLinkActive(t) {
              const e = Array.isArray(t) ? t : t.split(' ');
              this.classes = e.filter((t) => !!t);
            }
            ngOnChanges(t) {
              this.update();
            }
            ngOnDestroy() {
              var t;
              this.routerEventsSubscription.unsubscribe(),
                null === (t = this.linkInputChangesSubscription) || void 0 === t || t.unsubscribe();
            }
            update() {
              this.links &&
                this.linksWithHrefs &&
                this.router.navigated &&
                Promise.resolve().then(() => {
                  const t = this.hasActiveLinks();
                  this.isActive !== t &&
                    ((this.isActive = t),
                    this.cdr.markForCheck(),
                    this.classes.forEach((e) => {
                      t
                        ? this.renderer.addClass(this.element.nativeElement, e)
                        : this.renderer.removeClass(this.element.nativeElement, e);
                    }));
                });
            }
            isLinkActive(t) {
              return (e) => t.isActive(e.urlTree, this.routerLinkActiveOptions.exact);
            }
            hasActiveLinks() {
              const t = this.isLinkActive(this.router);
              return (
                (this.link && t(this.link)) ||
                (this.linkWithHref && t(this.linkWithHref)) ||
                this.links.some(t) ||
                this.linksWithHrefs.some(t)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(iR), Ro(Za), Ro(el), Ro(kl), Ro(sR, 8), Ro(rR, 8));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['', 'routerLinkActive', '']],
              contentQueries: function (t, e, n) {
                if ((1 & t && (Cc(n, sR, 1), Cc(n, rR, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.links = t), wc((t = kc())) && (e.linksWithHrefs = t);
                }
              },
              inputs: { routerLinkActiveOptions: 'routerLinkActiveOptions', routerLinkActive: 'routerLinkActive' },
              exportAs: ['routerLinkActive'],
              features: [ue],
            })),
            t
          );
        })(),
        lR = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this.parentContexts = t),
                (this.location = e),
                (this.resolver = n),
                (this.changeDetector = s),
                (this.activated = null),
                (this._activatedRoute = null),
                (this.activateEvents = new cc()),
                (this.deactivateEvents = new cc()),
                (this.name = i || GT),
                t.onChildOutletCreated(this.name, this);
            }
            ngOnDestroy() {
              this.parentContexts.onChildOutletDestroyed(this.name);
            }
            ngOnInit() {
              if (!this.activated) {
                const t = this.parentContexts.getContext(this.name);
                t &&
                  t.route &&
                  (t.attachRef ? this.attach(t.attachRef, t.route) : this.activateWith(t.route, t.resolver || null));
              }
            }
            get isActivated() {
              return !!this.activated;
            }
            get component() {
              if (!this.activated) throw new Error('Outlet is not activated');
              return this.activated.instance;
            }
            get activatedRoute() {
              if (!this.activated) throw new Error('Outlet is not activated');
              return this._activatedRoute;
            }
            get activatedRouteData() {
              return this._activatedRoute ? this._activatedRoute.snapshot.data : {};
            }
            detach() {
              if (!this.activated) throw new Error('Outlet is not activated');
              this.location.detach();
              const t = this.activated;
              return (this.activated = null), (this._activatedRoute = null), t;
            }
            attach(t, e) {
              (this.activated = t), (this._activatedRoute = e), this.location.insert(t.hostView);
            }
            deactivate() {
              if (this.activated) {
                const t = this.component;
                this.activated.destroy(),
                  (this.activated = null),
                  (this._activatedRoute = null),
                  this.deactivateEvents.emit(t);
              }
            }
            activateWith(t, e) {
              if (this.isActivated) throw new Error('Cannot activate an already activated outlet');
              this._activatedRoute = t;
              const n = (e = e || this.resolver).resolveComponentFactory(t._futureSnapshot.routeConfig.component),
                i = this.parentContexts.getOrCreateContext(this.name).children,
                s = new cR(t, i, this.location.injector);
              (this.activated = this.location.createComponent(n, this.location.length, s)),
                this.changeDetector.markForCheck(),
                this.activateEvents.emit(this.activated.instance);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(ZM), Ro(Nl), Ro(Ga), Kn('name'), Ro(kl));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['router-outlet']],
              outputs: { activateEvents: 'activate', deactivateEvents: 'deactivate' },
              exportAs: ['outlet'],
            })),
            t
          );
        })();
      class cR {
        constructor(t, e, n) {
          (this.route = t), (this.childContexts = e), (this.parent = n);
        }
        get(t, e) {
          return t === FD ? this.route : t === ZM ? this.childContexts : this.parent.get(t, e);
        }
      }
      class hR {}
      class uR {
        preload(t, e) {
          return fm(null);
        }
      }
      let dR = (() => {
          class t {
            constructor(t, e, n, i, s) {
              (this.router = t),
                (this.injector = i),
                (this.preloadingStrategy = s),
                (this.loader = new KM(
                  e,
                  n,
                  (e) => t.triggerEvent(new jT(e)),
                  (e) => t.triggerEvent(new HT(e))
                ));
            }
            setUpPreloading() {
              this.subscription = this.router.events
                .pipe(
                  _m((t) => t instanceof RT),
                  gm(() => this.preload())
                )
                .subscribe(() => {});
            }
            preload() {
              const t = this.injector.get(Il);
              return this.processRoutes(t, this.router.config);
            }
            ngOnDestroy() {
              this.subscription && this.subscription.unsubscribe();
            }
            processRoutes(t, e) {
              const n = [];
              for (const i of e)
                if (i.loadChildren && !i.canLoad && i._loadedConfig) {
                  const t = i._loadedConfig;
                  n.push(this.processRoutes(t.module, t.routes));
                } else
                  i.loadChildren && !i.canLoad
                    ? n.push(this.preloadConfig(t, i))
                    : i.children && n.push(this.processRoutes(t, i.children));
              return L(n).pipe(
                H(),
                E((t) => {})
              );
            }
            preloadConfig(t, e) {
              return this.preloadingStrategy.preload(e, () =>
                (e._loadedConfig ? fm(e._loadedConfig) : this.loader.load(t.injector, e)).pipe(
                  B((t) => ((e._loadedConfig = t), this.processRoutes(t.module, t.routes)))
                )
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(iR), _i(vh), _i(Gc), _i(mo), _i(hR));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        pR = (() => {
          class t {
            constructor(t, e, n = {}) {
              (this.router = t),
                (this.viewportScroller = e),
                (this.options = n),
                (this.lastId = 0),
                (this.lastSource = 'imperative'),
                (this.restoredId = 0),
                (this.store = {}),
                (n.scrollPositionRestoration = n.scrollPositionRestoration || 'disabled'),
                (n.anchorScrolling = n.anchorScrolling || 'disabled');
            }
            init() {
              'disabled' !== this.options.scrollPositionRestoration &&
                this.viewportScroller.setHistoryScrollRestoration('manual'),
                (this.routerEventsSubscription = this.createScrollEvents()),
                (this.scrollEventsSubscription = this.consumeScrollEvents());
            }
            createScrollEvents() {
              return this.router.events.subscribe((t) => {
                t instanceof MT
                  ? ((this.store[this.lastId] = this.viewportScroller.getScrollPosition()),
                    (this.lastSource = t.navigationTrigger),
                    (this.restoredId = t.restoredState ? t.restoredState.navigationId : 0))
                  : t instanceof RT &&
                    ((this.lastId = t.id),
                    this.scheduleScrollEvent(t, this.router.parseUrl(t.urlAfterRedirects).fragment));
              });
            }
            consumeScrollEvents() {
              return this.router.events.subscribe((t) => {
                t instanceof YT &&
                  (t.position
                    ? 'top' === this.options.scrollPositionRestoration
                      ? this.viewportScroller.scrollToPosition([0, 0])
                      : 'enabled' === this.options.scrollPositionRestoration &&
                        this.viewportScroller.scrollToPosition(t.position)
                    : t.anchor && 'enabled' === this.options.anchorScrolling
                    ? this.viewportScroller.scrollToAnchor(t.anchor)
                    : 'disabled' !== this.options.scrollPositionRestoration &&
                      this.viewportScroller.scrollToPosition([0, 0]));
              });
            }
            scheduleScrollEvent(t, e) {
              this.router.triggerEvent(
                new YT(t, 'popstate' === this.lastSource ? this.store[this.restoredId] : null, e)
              );
            }
            ngOnDestroy() {
              this.routerEventsSubscription && this.routerEventsSubscription.unsubscribe(),
                this.scrollEventsSubscription && this.scrollEventsSubscription.unsubscribe();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(iR), _i(Xu), _i(void 0));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })();
      const mR = new Jn('ROUTER_CONFIGURATION'),
        fR = new Jn('ROUTER_FORROOT_GUARD'),
        gR = [
          Wh,
          { provide: pD, useClass: mD },
          {
            provide: iR,
            useFactory: function (t, e, n, i, s, r, o, a = {}, l, c) {
              const h = new iR(null, t, e, n, i, s, r, eD(o));
              if (
                (l && (h.urlHandlingStrategy = l),
                c && (h.routeReuseStrategy = c),
                (function (t, e) {
                  t.errorHandler && (e.errorHandler = t.errorHandler),
                    t.malformedUriErrorHandler && (e.malformedUriErrorHandler = t.malformedUriErrorHandler),
                    t.onSameUrlNavigation && (e.onSameUrlNavigation = t.onSameUrlNavigation),
                    t.paramsInheritanceStrategy && (e.paramsInheritanceStrategy = t.paramsInheritanceStrategy),
                    t.relativeLinkResolution && (e.relativeLinkResolution = t.relativeLinkResolution),
                    t.urlUpdateStrategy && (e.urlUpdateStrategy = t.urlUpdateStrategy);
                })(a, h),
                a.enableTracing)
              ) {
                const t = Ah();
                h.events.subscribe((e) => {
                  t.logGroup(`Router Event: ${e.constructor.name}`), t.log(e.toString()), t.log(e), t.logGroupEnd();
                });
              }
              return h;
            },
            deps: [pD, ZM, Wh, mo, vh, Gc, QM, mR, [class {}, new xi()], [YM, new xi()]],
          },
          ZM,
          {
            provide: FD,
            useFactory: function (t) {
              return t.routerState.root;
            },
            deps: [iR],
          },
          { provide: vh, useClass: Ch },
          dR,
          uR,
          class {
            preload(t, e) {
              return e().pipe(hS(() => fm(null)));
            }
          },
          { provide: mR, useValue: { enableTracing: !1 } },
        ];
      function _R() {
        return new ph('Router', iR);
      }
      let bR = (() => {
        class t {
          constructor(t, e) {}
          static forRoot(e, n) {
            return {
              ngModule: t,
              providers: [
                gR,
                xR(e),
                { provide: fR, useFactory: wR, deps: [[iR, new xi(), new Ci()]] },
                { provide: mR, useValue: n || {} },
                { provide: zh, useFactory: vR, deps: [Dh, [new wi(Hh), new xi()], mR] },
                { provide: pR, useFactory: yR, deps: [iR, Xu, mR] },
                { provide: hR, useExisting: n && n.preloadingStrategy ? n.preloadingStrategy : uR },
                { provide: ph, multi: !0, useFactory: _R },
                [
                  CR,
                  { provide: Tc, multi: !0, useFactory: kR, deps: [CR] },
                  { provide: ER, useFactory: SR, deps: [CR] },
                  { provide: Nc, multi: !0, useExisting: ER },
                ],
              ],
            };
          }
          static forChild(e) {
            return { ngModule: t, providers: [xR(e)] };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(fR, 8), _i(iR, 8));
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({})),
          t
        );
      })();
      function yR(t, e, n) {
        return n.scrollOffset && e.setOffset(n.scrollOffset), new pR(t, e, n);
      }
      function vR(t, e, n = {}) {
        return n.useHash ? new qh(t, e) : new $h(t, e);
      }
      function wR(t) {
        return 'guarded';
      }
      function xR(t) {
        return [
          { provide: ti, multi: !0, useValue: t },
          { provide: QM, multi: !0, useValue: t },
        ];
      }
      let CR = (() => {
        class t {
          constructor(t) {
            (this.injector = t), (this.initNavigation = !1), (this.resultOfPreactivationDone = new C());
          }
          appInitializer() {
            return this.injector.get(Rh, Promise.resolve(null)).then(() => {
              let t = null;
              const e = new Promise((e) => (t = e)),
                n = this.injector.get(iR),
                i = this.injector.get(mR);
              return (
                'disabled' === i.initialNavigation
                  ? (n.setUpLocationChangeListener(), t(!0))
                  : 'enabled' === i.initialNavigation || 'enabledBlocking' === i.initialNavigation
                  ? ((n.hooks.afterPreactivation = () =>
                      this.initNavigation
                        ? fm(null)
                        : ((this.initNavigation = !0), t(!0), this.resultOfPreactivationDone)),
                    n.initialNavigation())
                  : t(!0),
                e
              );
            });
          }
          bootstrapListener(t) {
            const e = this.injector.get(mR),
              n = this.injector.get(dR),
              i = this.injector.get(pR),
              s = this.injector.get(iR),
              r = this.injector.get(bh);
            t === r.components[0] &&
              (('enabledNonBlocking' !== e.initialNavigation && void 0 !== e.initialNavigation) ||
                s.initialNavigation(),
              n.setUpPreloading(),
              i.init(),
              s.resetRootComponentType(r.componentTypes[0]),
              this.resultOfPreactivationDone.next(null),
              this.resultOfPreactivationDone.complete());
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(mo));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      function kR(t) {
        return t.appInitializer.bind(t);
      }
      function SR(t) {
        return t.bootstrapListener.bind(t);
      }
      const ER = new Jn('Router Initializer');
      let OR = (() => {
        class t extends YM {
          shouldDetach(t) {
            return !1;
          }
          store(t, e) {}
          shouldAttach(t) {
            return !1;
          }
          retrieve(t) {
            return null;
          }
          shouldReuseRoute(t, e) {
            var n, i, s;
            return (
              t.routeConfig === e.routeConfig ||
              Boolean(
                (null === (n = t.routeConfig) || void 0 === n ? void 0 : n.component) &&
                  (null === (i = t.routeConfig) || void 0 === i ? void 0 : i.component) ===
                    (null === (s = e.routeConfig) || void 0 === s ? void 0 : s.component)
              )
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return PR(e || t);
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
          t
        );
      })();
      const PR = Gn(OR);
      let AR = (() => {
        class t {
          intercept(t, e) {
            return /^(http|https):/i.test(t.url) || (t = t.clone({ url: mT + t.url })), e.handle(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      var TR = (() => (
        (function (t) {
          (t[(t.Off = 0)] = 'Off'),
            (t[(t.Error = 1)] = 'Error'),
            (t[(t.Warning = 2)] = 'Warning'),
            (t[(t.Info = 3)] = 'Info'),
            (t[(t.Debug = 4)] = 'Debug');
        })(TR || (TR = {})),
        TR
      ))();
      class DR {
        constructor(t) {
          this.source = t;
        }
        static enableProductionMode() {
          DR.level = TR.Warning;
        }
        debug(...t) {
          this.log(console.log, TR.Debug, t);
        }
        info(...t) {
          this.log(console.info, TR.Info, t);
        }
        warn(...t) {
          this.log(console.warn, TR.Warning, t);
        }
        error(...t) {
          this.log(console.error, TR.Error, t);
        }
        log(t, e, n) {
          if (e <= DR.level) {
            const i = this.source ? ['[' + this.source + ']'].concat(n) : n;
            t.apply(console, i), DR.outputs.forEach((t) => t.apply(t, [this.source, e, ...n]));
          }
        }
      }
      (DR.level = TR.Debug), (DR.outputs = []);
      new DR('ErrorHandlerInterceptor');
      let MR = (() => {
          class t {
            intercept(t, e) {
              return e.handle(t).pipe(hS((t) => this.errorHandler(t)));
            }
            errorHandler(t) {
              throw t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            t
          );
        })(),
        RR = (() => {
          class t {
            constructor(t) {
              if (t) throw new Error(`${t} has already been loaded. Import Core module in the AppModule only.`);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(t, 12));
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({
              providers: [
                { provide: Vm, useClass: AR, multi: !0 },
                { provide: Vm, useClass: MR, multi: !0 },
                { provide: YM, useClass: OR },
              ],
              imports: [[Gu, Xm, gg, bR]],
            })),
            t
          );
        })();
      const IR = Bt,
        LR = Symbol('__destroy'),
        FR = Symbol('__decoratorApplied');
      function NR(t) {
        return 'string' == typeof t ? Symbol(`__destroy__${t}`) : LR;
      }
      function VR(t, e) {
        t[e] || (t[e] = new C());
      }
      function BR(t, e) {
        t[e] && (t[e].next(), t[e].complete(), (t[e] = null));
      }
      function zR(t) {
        t && 'function' == typeof t.unsubscribe && t.unsubscribe();
      }
      function jR(t, e) {
        return function () {
          var n, i;
          if ((t && t.call(this), BR(this, NR()), e.arrayName))
            return (i = this[e.arrayName]), void (Array.isArray(i) && i.forEach(zR));
          if (e.checkProperties)
            for (const t in this) (null === (n = e.blackList) || void 0 === n ? void 0 : n.includes(t)) || zR(this[t]);
        };
      }
      function HR(t = {}) {
        return (e) => {
          e[IR]
            ? (function (t, e) {
                const n = t.ɵpipe;
                n.onDestroy = jR(n.onDestroy, e);
              })(e, t)
            : (function (t, e) {
                t.prototype.ngOnDestroy = jR(t.prototype.ngOnDestroy, e);
              })(e, t),
            (function (t) {
              t.prototype[FR] = !0;
            })(e);
        };
      }
      function $R(t, e) {
        return (n) => {
          const i = NR(e);
          return (
            'string' == typeof e
              ? (function (t, e, n) {
                  const i = t[e];
                  VR(t, n),
                    (t[e] = function () {
                      i.apply(this, arguments), BR(this, n), (t[e] = i);
                    });
                })(t, e, i)
              : VR(t, i),
            n.pipe(Lw(t[i]))
          );
        };
      }
      const qR = {
          provide: Nc,
          useFactory: function (t, e) {
            return () => {
              if (Qu(e)) {
                const e = Array.from(t.querySelectorAll(`[class*=${WR}]`)),
                  n = /\bflex-layout-.+?\b/g;
                e.forEach((t) => {
                  t.classList.contains(`${WR}ssr`) && t.parentNode
                    ? t.parentNode.removeChild(t)
                    : t.className.replace(n, '');
                });
              }
            };
          },
          deps: [Th, Fc],
          multi: !0,
        },
        WR = 'flex-layout-';
      let UR = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ providers: [qR] })),
          t
        );
      })();
      class YR {
        constructor(t = !1, e = 'all', n = '', i = '', s = 0) {
          (this.matches = t),
            (this.mediaQuery = e),
            (this.mqAlias = n),
            (this.suffix = i),
            (this.priority = s),
            (this.property = '');
        }
        clone() {
          return new YR(this.matches, this.mediaQuery, this.mqAlias, this.suffix);
        }
      }
      let GR = (() => {
        class t {
          constructor() {
            this.stylesheet = new Map();
          }
          addStyleToElement(t, e, n) {
            const i = this.stylesheet.get(t);
            i ? i.set(e, n) : this.stylesheet.set(t, new Map([[e, n]]));
          }
          clearStyles() {
            this.stylesheet.clear();
          }
          getStyleForElement(t, e) {
            const n = this.stylesheet.get(t);
            let i = '';
            if (n) {
              const t = n.get(e);
              ('number' != typeof t && 'string' != typeof t) || (i = t + '');
            }
            return i;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const QR = {
          addFlexToParent: !0,
          addOrientationBps: !1,
          disableDefaultBps: !1,
          disableVendorPrefixes: !1,
          serverLoaded: !1,
          useColumnBasisZero: !0,
          printWithBreakpoints: [],
          mediaTriggerAutoRestore: !0,
          ssrObserveBreakpoints: [],
        },
        KR = new Jn('Flex Layout token, config options for the library', { providedIn: 'root', factory: () => QR }),
        XR = new Jn('FlexLayoutServerLoaded', { providedIn: 'root', factory: () => !1 }),
        ZR = new Jn('Flex Layout token, collect all breakpoints into one provider', {
          providedIn: 'root',
          factory: () => null,
        });
      function JR(t, e) {
        return (
          (t = t ? t.clone() : new YR()),
          e && ((t.mqAlias = e.alias), (t.mediaQuery = e.mediaQuery), (t.suffix = e.suffix), (t.priority = e.priority)),
          t
        );
      }
      const tI = 'inline',
        eI = ['row', 'column', 'row-reverse', 'column-reverse'];
      function nI(t) {
        if (t)
          switch (t.toLowerCase()) {
            case 'reverse':
            case 'wrap-reverse':
            case 'reverse-wrap':
              t = 'wrap-reverse';
              break;
            case 'no':
            case 'none':
            case 'nowrap':
              t = 'nowrap';
              break;
            default:
              t = 'wrap';
          }
        return t;
      }
      let iI = (() => {
        class t {
          constructor(t, e, n, i) {
            (this.elementRef = t),
              (this.styleBuilder = e),
              (this.styler = n),
              (this.marshal = i),
              (this.DIRECTIVE_KEY = ''),
              (this.inputs = []),
              (this.mru = {}),
              (this.destroySubject = new C()),
              (this.styleCache = new Map());
          }
          get parentElement() {
            return this.elementRef.nativeElement.parentElement;
          }
          get nativeElement() {
            return this.elementRef.nativeElement;
          }
          get activatedValue() {
            return this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY);
          }
          set activatedValue(t) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, t, this.marshal.activatedAlias);
          }
          ngOnChanges(t) {
            Object.keys(t).forEach((e) => {
              if (-1 !== this.inputs.indexOf(e)) {
                const n = e.split('.').slice(1).join('.');
                this.setValue(t[e].currentValue, n);
              }
            });
          }
          ngOnDestroy() {
            this.destroySubject.next(), this.destroySubject.complete(), this.marshal.releaseElement(this.nativeElement);
          }
          init(t = []) {
            this.marshal.init(
              this.elementRef.nativeElement,
              this.DIRECTIVE_KEY,
              this.updateWithValue.bind(this),
              this.clearStyles.bind(this),
              t
            );
          }
          addStyles(t, e) {
            const n = this.styleBuilder,
              i = n.shouldCache;
            let s = this.styleCache.get(t);
            (s && i) || ((s = n.buildStyles(t, e)), i && this.styleCache.set(t, s)),
              (this.mru = Object.assign({}, s)),
              this.applyStyleToElement(s),
              n.sideEffect(t, s, e);
          }
          clearStyles() {
            Object.keys(this.mru).forEach((t) => {
              this.mru[t] = '';
            }),
              this.applyStyleToElement(this.mru),
              (this.mru = {});
          }
          triggerUpdate() {
            this.marshal.triggerUpdate(this.nativeElement, this.DIRECTIVE_KEY);
          }
          getFlexFlowDirection(t, e = !1) {
            if (t) {
              const [n, i] = this.styler.getFlowDirection(t);
              if (!i && e) {
                const e = (function (t) {
                  let [e, n, i] = (function (t) {
                    t = t ? t.toLowerCase() : '';
                    let [e, n, i] = t.split(' ');
                    return (
                      eI.find((t) => t === e) || (e = eI[0]),
                      n === tI && ((n = i !== tI ? i : ''), (i = tI)),
                      [e, nI(n), !!i]
                    );
                  })(t);
                  return (function (t, e = null, n = !1) {
                    return {
                      display: n ? 'inline-flex' : 'flex',
                      'box-sizing': 'border-box',
                      'flex-direction': t,
                      'flex-wrap': e || null,
                    };
                  })(e, n, i);
                })(n);
                this.styler.applyStyleToElements(e, [t]);
              }
              return n.trim();
            }
            return 'row';
          }
          hasWrap(t) {
            return this.styler.hasWrap(t);
          }
          applyStyleToElement(t, e, n = this.nativeElement) {
            this.styler.applyStyleToElement(n, t, e);
          }
          setValue(t, e) {
            this.marshal.setValue(this.nativeElement, this.DIRECTIVE_KEY, t, e);
          }
          updateWithValue(t) {
            this.currentValue !== t && (this.addStyles(t), (this.currentValue = t));
          }
        }
        return (
          (t.ɵfac = function (t) {
            !(function () {
              throw new Error('invalid');
            })();
          }),
          (t.ɵdir = Xt({ type: t, features: [ue] })),
          t
        );
      })();
      const sI = [
          { alias: 'xs', mediaQuery: 'screen and (min-width: 0px) and (max-width: 599.98px)', priority: 1e3 },
          { alias: 'sm', mediaQuery: 'screen and (min-width: 600px) and (max-width: 959.98px)', priority: 900 },
          { alias: 'md', mediaQuery: 'screen and (min-width: 960px) and (max-width: 1279.98px)', priority: 800 },
          { alias: 'lg', mediaQuery: 'screen and (min-width: 1280px) and (max-width: 1919.98px)', priority: 700 },
          { alias: 'xl', mediaQuery: 'screen and (min-width: 1920px) and (max-width: 4999.98px)', priority: 600 },
          { alias: 'lt-sm', overlapping: !0, mediaQuery: 'screen and (max-width: 599.98px)', priority: 950 },
          { alias: 'lt-md', overlapping: !0, mediaQuery: 'screen and (max-width: 959.98px)', priority: 850 },
          { alias: 'lt-lg', overlapping: !0, mediaQuery: 'screen and (max-width: 1279.98px)', priority: 750 },
          { alias: 'lt-xl', overlapping: !0, priority: 650, mediaQuery: 'screen and (max-width: 1919.98px)' },
          { alias: 'gt-xs', overlapping: !0, mediaQuery: 'screen and (min-width: 600px)', priority: -950 },
          { alias: 'gt-sm', overlapping: !0, mediaQuery: 'screen and (min-width: 960px)', priority: -850 },
          { alias: 'gt-md', overlapping: !0, mediaQuery: 'screen and (min-width: 1280px)', priority: -750 },
          { alias: 'gt-lg', overlapping: !0, mediaQuery: 'screen and (min-width: 1920px)', priority: -650 },
        ],
        rI = '(orientation: portrait) and (max-width: 599.98px)',
        oI = '(orientation: landscape) and (max-width: 959.98px)',
        aI = '(orientation: portrait) and (min-width: 600px) and (max-width: 839.98px)',
        lI = '(orientation: landscape) and (min-width: 960px) and (max-width: 1279.98px)',
        cI = '(orientation: portrait) and (min-width: 840px)',
        hI = '(orientation: landscape) and (min-width: 1280px)',
        uI = {
          HANDSET: `${rI}, ${oI}`,
          TABLET: `${aI} , ${lI}`,
          WEB: `${cI}, ${hI} `,
          HANDSET_PORTRAIT: `${rI}`,
          TABLET_PORTRAIT: `${aI} `,
          WEB_PORTRAIT: `${cI}`,
          HANDSET_LANDSCAPE: `${oI}`,
          TABLET_LANDSCAPE: `${lI}`,
          WEB_LANDSCAPE: `${hI}`,
        },
        dI = [
          { alias: 'handset', priority: 2e3, mediaQuery: uI.HANDSET },
          { alias: 'handset.landscape', priority: 2e3, mediaQuery: uI.HANDSET_LANDSCAPE },
          { alias: 'handset.portrait', priority: 2e3, mediaQuery: uI.HANDSET_PORTRAIT },
          { alias: 'tablet', priority: 2100, mediaQuery: uI.TABLET },
          { alias: 'tablet.landscape', priority: 2100, mediaQuery: uI.TABLET_LANDSCAPE },
          { alias: 'tablet.portrait', priority: 2100, mediaQuery: uI.TABLET_PORTRAIT },
          { alias: 'web', priority: 2200, mediaQuery: uI.WEB, overlapping: !0 },
          { alias: 'web.landscape', priority: 2200, mediaQuery: uI.WEB_LANDSCAPE, overlapping: !0 },
          { alias: 'web.portrait', priority: 2200, mediaQuery: uI.WEB_PORTRAIT, overlapping: !0 },
        ],
        pI = /(\.|-|_)/g;
      function mI(t) {
        let e = t.length > 0 ? t.charAt(0) : '',
          n = t.length > 1 ? t.slice(1) : '';
        return e.toUpperCase() + n;
      }
      const fI = new Jn('Token (@angular/flex-layout) Breakpoints', {
        providedIn: 'root',
        factory: () => {
          const t = bi(ZR),
            e = bi(KR),
            n = [].concat.apply(
              [],
              (t || []).map((t) => (Array.isArray(t) ? t : [t]))
            );
          return (function (t, e = []) {
            const n = {};
            return (
              t.forEach((t) => {
                n[t.alias] = t;
              }),
              e.forEach((t) => {
                n[t.alias]
                  ? (function (t, ...e) {
                      if (null == t) throw TypeError('Cannot convert undefined or null to object');
                      for (let n of e) if (null != n) for (let e in n) n.hasOwnProperty(e) && (t[e] = n[e]);
                    })(n[t.alias], t)
                  : (n[t.alias] = t);
              }),
              (i = Object.keys(n).map((t) => n[t])).forEach((t) => {
                t.suffix ||
                  ((t.suffix = t.alias.replace(pI, '|').split('|').map(mI).join('')),
                  (t.overlapping = !!t.overlapping));
              }),
              i
            );
            var i;
          })((e.disableDefaultBps ? [] : sI).concat(e.addOrientationBps ? dI : []), n);
        },
      });
      function gI(t, e) {
        return ((e && e.priority) || 0) - ((t && t.priority) || 0);
      }
      function _I(t, e) {
        return (t.priority || 0) - (e.priority || 0);
      }
      let bI = (() => {
          class t {
            constructor(t) {
              (this.findByMap = new Map()), (this.items = [...t].sort(_I));
            }
            findByAlias(t) {
              return t ? this.findWithPredicate(t, (e) => e.alias == t) : null;
            }
            findByQuery(t) {
              return this.findWithPredicate(t, (e) => e.mediaQuery == t);
            }
            get overlappings() {
              return this.items.filter((t) => 1 == t.overlapping);
            }
            get aliases() {
              return this.items.map((t) => t.alias);
            }
            get suffixes() {
              return this.items.map((t) => (t.suffix ? t.suffix : ''));
            }
            findWithPredicate(t, e) {
              let n = this.findByMap.get(t);
              return n || ((n = this.items.find(e) || null), this.findByMap.set(t, n)), n || null;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(fI));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(fI));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        yI = (() => {
          class t {
            constructor(t, e, n) {
              (this._zone = t),
                (this._platformId = e),
                (this._document = n),
                (this.source = new qP(new YR(!0))),
                (this.registry = new Map()),
                (this.pendingRemoveListenerFns = []),
                (this._observable$ = this.source.asObservable());
            }
            get activations() {
              const t = [];
              return (
                this.registry.forEach((e, n) => {
                  e.matches && t.push(n);
                }),
                t
              );
            }
            isActive(t) {
              const e = this.registry.get(t);
              return e ? e.matches : this.registerQuery(t).some((t) => t.matches);
            }
            observe(t, e = !1) {
              if (t && t.length) {
                const n = this._observable$.pipe(_m((n) => !e || t.indexOf(n.mediaQuery) > -1));
                return q(
                  new b((e) => {
                    const n = this.registerQuery(t);
                    if (n.length) {
                      const t = n.pop();
                      n.forEach((t) => {
                        e.next(t);
                      }),
                        this.source.next(t);
                    }
                    e.complete();
                  }),
                  n
                );
              }
              return this._observable$;
            }
            registerQuery(t) {
              const e = Array.isArray(t) ? t : [t],
                n = [];
              return (
                (function (t, e) {
                  const n = t.filter((t) => !vI[t]);
                  if (n.length > 0) {
                    const t = n.join(', ');
                    try {
                      const i = e.createElement('style');
                      i.setAttribute('type', 'text/css'),
                        i.styleSheet ||
                          i.appendChild(
                            e.createTextNode(
                              `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${t} {.fx-query-test{ }}\n`
                            )
                          ),
                        e.head.appendChild(i),
                        n.forEach((t) => (vI[t] = i));
                    } catch (i) {
                      console.error(i);
                    }
                  }
                })(e, this._document),
                e.forEach((t) => {
                  const e = (e) => {
                    this._zone.run(() => this.source.next(new YR(e.matches, t)));
                  };
                  let i = this.registry.get(t);
                  i ||
                    ((i = this.buildMQL(t)),
                    i.addListener(e),
                    this.pendingRemoveListenerFns.push(() => i.removeListener(e)),
                    this.registry.set(t, i)),
                    i.matches && n.push(new YR(!0, t));
                }),
                n
              );
            }
            ngOnDestroy() {
              let t;
              for (; (t = this.pendingRemoveListenerFns.pop()); ) t();
            }
            buildMQL(t) {
              return (function (t, e) {
                return e && window.matchMedia('all').addListener
                  ? window.matchMedia(t)
                  : {
                      matches: 'all' === t || '' === t,
                      media: t,
                      addListener: () => {},
                      removeListener: () => {},
                      onchange: null,
                      addEventListener() {},
                      removeEventListener() {},
                      dispatchEvent: () => !1,
                    };
              })(t, Qu(this._platformId));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Xc), _i(Fc), _i(Th));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Xc), _i(Fc), _i(Th));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      const vI = {},
        wI = 'print',
        xI = { alias: wI, mediaQuery: wI, priority: 1e3 };
      let CI = (() => {
        class t {
          constructor(t, e, n) {
            (this.breakpoints = t),
              (this.layoutConfig = e),
              (this._document = n),
              (this.registeredBeforeAfterPrintHooks = !1),
              (this.isPrintingBeforeAfterEvent = !1),
              (this.beforePrintEventListeners = []),
              (this.afterPrintEventListeners = []),
              (this.isPrinting = !1),
              (this.queue = new kI()),
              (this.deactivations = []);
          }
          withPrintQuery(t) {
            return [...t, wI];
          }
          isPrintEvent(t) {
            return t.mediaQuery.startsWith(wI);
          }
          get printAlias() {
            return this.layoutConfig.printWithBreakpoints || [];
          }
          get printBreakPoints() {
            return this.printAlias.map((t) => this.breakpoints.findByAlias(t)).filter((t) => null !== t);
          }
          getEventBreakpoints({ mediaQuery: t }) {
            const e = this.breakpoints.findByQuery(t);
            return (e ? [...this.printBreakPoints, e] : this.printBreakPoints).sort(gI);
          }
          updateEvent(t) {
            let e = this.breakpoints.findByQuery(t.mediaQuery);
            return (
              this.isPrintEvent(t) && ((e = this.getEventBreakpoints(t)[0]), (t.mediaQuery = e ? e.mediaQuery : '')),
              JR(t, e)
            );
          }
          registerBeforeAfterPrintHooks(t) {
            if (!this._document.defaultView || this.registeredBeforeAfterPrintHooks) return;
            this.registeredBeforeAfterPrintHooks = !0;
            const e = () => {
                this.isPrinting ||
                  ((this.isPrintingBeforeAfterEvent = !0),
                  this.startPrinting(t, this.getEventBreakpoints(new YR(!0, wI))),
                  t.updateStyles());
              },
              n = () => {
                (this.isPrintingBeforeAfterEvent = !1), this.isPrinting && (this.stopPrinting(t), t.updateStyles());
              };
            this._document.defaultView.addEventListener('beforeprint', e),
              this._document.defaultView.addEventListener('afterprint', n),
              this.beforePrintEventListeners.push(e),
              this.afterPrintEventListeners.push(n);
          }
          interceptEvents(t) {
            return (
              this.registerBeforeAfterPrintHooks(t),
              (e) => {
                this.isPrintEvent(e)
                  ? e.matches && !this.isPrinting
                    ? (this.startPrinting(t, this.getEventBreakpoints(e)), t.updateStyles())
                    : e.matches ||
                      !this.isPrinting ||
                      this.isPrintingBeforeAfterEvent ||
                      (this.stopPrinting(t), t.updateStyles())
                  : this.collectActivations(e);
              }
            );
          }
          blockPropagation() {
            return (t) => !(this.isPrinting || this.isPrintEvent(t));
          }
          startPrinting(t, e) {
            (this.isPrinting = !0), (t.activatedBreakpoints = this.queue.addPrintBreakpoints(e));
          }
          stopPrinting(t) {
            (t.activatedBreakpoints = this.deactivations),
              (this.deactivations = []),
              this.queue.clear(),
              (this.isPrinting = !1);
          }
          collectActivations(t) {
            if (!this.isPrinting || this.isPrintingBeforeAfterEvent)
              if (t.matches) this.isPrintingBeforeAfterEvent || (this.deactivations = []);
              else {
                const e = this.breakpoints.findByQuery(t.mediaQuery);
                e && (this.deactivations.push(e), this.deactivations.sort(gI));
              }
          }
          ngOnDestroy() {
            this.beforePrintEventListeners.forEach((t) =>
              this._document.defaultView.removeEventListener('beforeprint', t)
            ),
              this.afterPrintEventListeners.forEach((t) =>
                this._document.defaultView.removeEventListener('afterprint', t)
              );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(bI), _i(KR), _i(Th));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(bI), _i(KR), _i(Th));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class kI {
        constructor() {
          this.printBreakpoints = [];
        }
        addPrintBreakpoints(t) {
          return t.push(xI), t.sort(gI), t.forEach((t) => this.addBreakpoint(t)), this.printBreakpoints;
        }
        addBreakpoint(t) {
          t &&
            void 0 === this.printBreakpoints.find((e) => e.mediaQuery === t.mediaQuery) &&
            (this.printBreakpoints = (function (t) {
              return !!t && t.mediaQuery.startsWith(wI);
            })(t)
              ? [t, ...this.printBreakpoints]
              : [...this.printBreakpoints, t]);
        }
        clear() {
          this.printBreakpoints = [];
        }
      }
      let SI = (() => {
        class t {
          constructor(t, e, n) {
            (this.breakpoints = t),
              (this.matchMedia = e),
              (this.hook = n),
              (this.filterOverlaps = !1),
              (this.destroyed$ = new C()),
              (this._media$ = this.watchActivations()),
              (this.media$ = this._media$.pipe(
                _m((t) => t.length > 0),
                E((t) => t[0])
              ));
          }
          ngOnDestroy() {
            this.destroyed$.next(), this.destroyed$.complete();
          }
          asObservable() {
            return this._media$;
          }
          isActive(t) {
            return (function (t) {
              return Array.isArray(t) ? t : [t];
            })(t)
              .map((t) => t.split(','))
              .reduce((t, e) => t.concat(e))
              .map((t) => t.trim())
              .some((t) => {
                const e = (function (t, e) {
                  const n = e.findByAlias(t) || e.findByQuery(t);
                  return n ? n.mediaQuery : null;
                })(t, this.breakpoints);
                return null !== e && this.matchMedia.isActive(e);
              });
          }
          watchActivations() {
            const t = this.breakpoints.items.map((t) => t.mediaQuery);
            return this.buildObservable(t);
          }
          buildObservable(t) {
            return this.matchMedia.observe(this.hook.withPrintQuery(t)).pipe(
              _m((t) => t.matches),
              cy(0, Sw),
              cf((t) => fm(this.findAllActivations())),
              E((t) =>
                this.filterOverlaps
                  ? t.filter((t) => {
                      const e = this.breakpoints.findByQuery(t.mediaQuery);
                      return !e || !e.overlapping;
                    })
                  : t
              ),
              _m((t) => t.filter((t) => t.mediaQuery.length > 0).length > 0),
              Lw(this.destroyed$)
            );
          }
          findAllActivations() {
            return this.matchMedia.activations
              .map((t) => new YR(!0, t))
              .map((t) => (this.hook.isPrintEvent(t) ? this.hook.updateEvent(t) : t))
              .map((t) => JR(t, this.breakpoints.findByQuery(t.mediaQuery)))
              .sort(gI);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(bI), _i(yI), _i(CI));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(bI), _i(yI), _i(CI));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function EI(t) {
        for (let e in t) {
          let n = t[e] || '';
          switch (e) {
            case 'display':
              t.display =
                'flex' === n
                  ? ['-webkit-flex', 'flex']
                  : 'inline-flex' === n
                  ? ['-webkit-inline-flex', 'inline-flex']
                  : n;
              break;
            case 'align-items':
            case 'align-self':
            case 'align-content':
            case 'flex':
            case 'flex-basis':
            case 'flex-flow':
            case 'flex-grow':
            case 'flex-shrink':
            case 'flex-wrap':
            case 'justify-content':
              t['-webkit-' + e] = n;
              break;
            case 'flex-direction':
              (n = n || 'row'), (t['-webkit-flex-direction'] = n), (t['flex-direction'] = n);
              break;
            case 'order':
              t.order = t['-webkit-' + e] = isNaN(+n) ? '0' : n;
          }
        }
        return t;
      }
      let OI = (() => {
        class t {
          constructor(t, e, n, i) {
            (this._serverStylesheet = t),
              (this._serverModuleLoaded = e),
              (this._platformId = n),
              (this.layoutConfig = i);
          }
          applyStyleToElement(t, e, n = null) {
            let i = {};
            'string' == typeof e && ((i[e] = n), (e = i)),
              (i = this.layoutConfig.disableVendorPrefixes ? e : EI(e)),
              this._applyMultiValueStyleToElement(i, t);
          }
          applyStyleToElements(t, e = []) {
            const n = this.layoutConfig.disableVendorPrefixes ? t : EI(t);
            e.forEach((t) => {
              this._applyMultiValueStyleToElement(n, t);
            });
          }
          getFlowDirection(t) {
            const e = 'flex-direction';
            let n = this.lookupStyle(t, e);
            return [
              n || 'row',
              this.lookupInlineStyle(t, e) || (Ku(this._platformId) && this._serverModuleLoaded) ? n : '',
            ];
          }
          hasWrap(t) {
            return 'wrap' === this.lookupStyle(t, 'flex-wrap');
          }
          lookupAttributeValue(t, e) {
            return t.getAttribute(e) || '';
          }
          lookupInlineStyle(t, e) {
            return Qu(this._platformId) ? t.style.getPropertyValue(e) : this._getServerStyle(t, e);
          }
          lookupStyle(t, e, n = !1) {
            let i = '';
            return (
              t &&
                ((i = this.lookupInlineStyle(t, e)) ||
                  (Qu(this._platformId)
                    ? n || (i = getComputedStyle(t).getPropertyValue(e))
                    : this._serverModuleLoaded && (i = this._serverStylesheet.getStyleForElement(t, e)))),
              i ? i.trim() : ''
            );
          }
          _applyMultiValueStyleToElement(t, e) {
            Object.keys(t)
              .sort()
              .forEach((n) => {
                const i = t[n],
                  s = Array.isArray(i) ? i : [i];
                s.sort();
                for (let t of s)
                  (t = t ? t + '' : ''),
                    Qu(this._platformId) || !this._serverModuleLoaded
                      ? Qu(this._platformId)
                        ? e.style.setProperty(n, t)
                        : this._setServerStyle(e, n, t)
                      : this._serverStylesheet.addStyleToElement(e, n, t);
              });
          }
          _setServerStyle(t, e, n) {
            e = e.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
            const i = this._readStyleAttribute(t);
            (i[e] = n || ''), this._writeStyleAttribute(t, i);
          }
          _getServerStyle(t, e) {
            return this._readStyleAttribute(t)[e] || '';
          }
          _readStyleAttribute(t) {
            const e = {},
              n = t.getAttribute('style');
            if (n) {
              const t = n.split(/;+/g);
              for (let n = 0; n < t.length; n++) {
                const i = t[n].trim();
                if (i.length > 0) {
                  const t = i.indexOf(':');
                  if (-1 === t) throw new Error(`Invalid CSS style: ${i}`);
                  e[i.substr(0, t).trim()] = i.substr(t + 1).trim();
                }
              }
            }
            return e;
          }
          _writeStyleAttribute(t, e) {
            let n = '';
            for (const i in e) e[i] && (n += i + ':' + e[i] + ';');
            t.setAttribute('style', n);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(GR), _i(XR), _i(Fc), _i(KR));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(GR), _i(XR), _i(Fc), _i(KR));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      class PI {
        constructor() {
          this.shouldCache = !0;
        }
        sideEffect(t, e, n) {}
      }
      function AI(t, e = '1', n = '1') {
        let i = [e, n, t],
          s = t.indexOf('calc');
        if (s > 0) {
          i[2] = TI(t.substring(s).trim());
          let e = t.substr(0, s).trim().split(' ');
          2 == e.length && ((i[0] = e[0]), (i[1] = e[1]));
        } else if (0 == s) i[2] = TI(t.trim());
        else {
          let s = t.split(' ');
          i = 3 === s.length ? s : [e, n, t];
        }
        return i;
      }
      function TI(t) {
        return t.replace(/[\s]/g, '').replace(/[\/\*\+\-]/g, ' $& ');
      }
      let DI = (() => {
        class t {
          constructor(t, e, n) {
            (this.matchMedia = t),
              (this.breakpoints = e),
              (this.hook = n),
              (this.activatedBreakpoints = []),
              (this.elementMap = new Map()),
              (this.elementKeyMap = new WeakMap()),
              (this.watcherMap = new WeakMap()),
              (this.updateMap = new WeakMap()),
              (this.clearMap = new WeakMap()),
              (this.subject = new C()),
              this.observeActivations();
          }
          get activatedAlias() {
            return this.activatedBreakpoints[0] ? this.activatedBreakpoints[0].alias : '';
          }
          onMediaChange(t) {
            const e = this.findByQuery(t.mediaQuery);
            e &&
              ((t = JR(t, e)).matches && -1 === this.activatedBreakpoints.indexOf(e)
                ? (this.activatedBreakpoints.push(e), this.activatedBreakpoints.sort(gI), this.updateStyles())
                : t.matches ||
                  -1 === this.activatedBreakpoints.indexOf(e) ||
                  (this.activatedBreakpoints.splice(this.activatedBreakpoints.indexOf(e), 1),
                  this.activatedBreakpoints.sort(gI),
                  this.updateStyles()));
          }
          init(t, e, n, i, s = []) {
            MI(this.updateMap, t, e, n),
              MI(this.clearMap, t, e, i),
              this.buildElementKeyMap(t, e),
              this.watchExtraTriggers(t, e, s);
          }
          getValue(t, e, n) {
            const i = this.elementMap.get(t);
            if (i) {
              const t = void 0 !== n ? i.get(n) : this.getActivatedValues(i, e);
              if (t) return t.get(e);
            }
          }
          hasValue(t, e) {
            const n = this.elementMap.get(t);
            if (n) {
              const t = this.getActivatedValues(n, e);
              if (t) return void 0 !== t.get(e) || !1;
            }
            return !1;
          }
          setValue(t, e, n, i) {
            let s = this.elementMap.get(t);
            if (s) {
              const r = (s.get(i) || new Map()).set(e, n);
              s.set(i, r), this.elementMap.set(t, s);
            } else (s = new Map().set(i, new Map().set(e, n))), this.elementMap.set(t, s);
            const r = this.getValue(t, e);
            void 0 !== r && this.updateElement(t, e, r);
          }
          trackValue(t, e) {
            return this.subject.asObservable().pipe(_m((n) => n.element === t && n.key === e));
          }
          updateStyles() {
            this.elementMap.forEach((t, e) => {
              const n = new Set(this.elementKeyMap.get(e));
              let i = this.getActivatedValues(t);
              i &&
                i.forEach((t, i) => {
                  this.updateElement(e, i, t), n.delete(i);
                }),
                n.forEach((n) => {
                  if (((i = this.getActivatedValues(t, n)), i)) {
                    const t = i.get(n);
                    this.updateElement(e, n, t);
                  } else this.clearElement(e, n);
                });
            });
          }
          clearElement(t, e) {
            const n = this.clearMap.get(t);
            if (n) {
              const i = n.get(e);
              i && (i(), this.subject.next({ element: t, key: e, value: '' }));
            }
          }
          updateElement(t, e, n) {
            const i = this.updateMap.get(t);
            if (i) {
              const s = i.get(e);
              s && (s(n), this.subject.next({ element: t, key: e, value: n }));
            }
          }
          releaseElement(t) {
            const e = this.watcherMap.get(t);
            e && (e.forEach((t) => t.unsubscribe()), this.watcherMap.delete(t));
            const n = this.elementMap.get(t);
            n && (n.forEach((t, e) => n.delete(e)), this.elementMap.delete(t));
          }
          triggerUpdate(t, e) {
            const n = this.elementMap.get(t);
            if (n) {
              const i = this.getActivatedValues(n, e);
              i && (e ? this.updateElement(t, e, i.get(e)) : i.forEach((e, n) => this.updateElement(t, n, e)));
            }
          }
          buildElementKeyMap(t, e) {
            let n = this.elementKeyMap.get(t);
            n || ((n = new Set()), this.elementKeyMap.set(t, n)), n.add(e);
          }
          watchExtraTriggers(t, e, n) {
            if (n && n.length) {
              let i = this.watcherMap.get(t);
              if ((i || ((i = new Map()), this.watcherMap.set(t, i)), !i.get(e))) {
                const s = q(...n).subscribe(() => {
                  const n = this.getValue(t, e);
                  this.updateElement(t, e, n);
                });
                i.set(e, s);
              }
            }
          }
          findByQuery(t) {
            return this.breakpoints.findByQuery(t);
          }
          getActivatedValues(t, e) {
            for (let i = 0; i < this.activatedBreakpoints.length; i++) {
              const n = t.get(this.activatedBreakpoints[i].alias);
              if (n && (void 0 === e || (n.has(e) && null != n.get(e)))) return n;
            }
            const n = t.get('');
            return void 0 === e || (n && n.has(e)) ? n : void 0;
          }
          observeActivations() {
            const t = this.breakpoints.items.map((t) => t.mediaQuery);
            this.matchMedia
              .observe(this.hook.withPrintQuery(t))
              .pipe(gf(this.hook.interceptEvents(this)), _m(this.hook.blockPropagation()))
              .subscribe(this.onMediaChange.bind(this));
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(yI), _i(bI), _i(CI));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(yI), _i(bI), _i(CI));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      function MI(t, e, n, i) {
        if (void 0 !== i) {
          let s = t.get(e);
          s || ((s = new Map()), t.set(e, s)), s.set(n, i);
        }
      }
      let RI = (() => {
        class t extends iI {
          constructor(t, e, n, i, s, r, o) {
            super(t, null, e, n),
              (this.ngClassInstance = o),
              (this.DIRECTIVE_KEY = 'ngClass'),
              this.ngClassInstance || (this.ngClassInstance = new Au(i, s, t, r)),
              this.init(),
              this.setValue('', '');
          }
          set klass(t) {
            (this.ngClassInstance.klass = t), this.setValue(t, '');
          }
          updateWithValue(t) {
            (this.ngClassInstance.ngClass = t), this.ngClassInstance.ngDoCheck();
          }
          ngDoCheck() {
            this.ngClassInstance.ngDoCheck();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(Za), Ro(OI), Ro(DI), Ro(_l), Ro(yl), Ro(el), Ro(Au, 10));
          }),
          (t.ɵdir = Xt({ type: t, inputs: { klass: ['class', 'klass'] }, features: [go] })),
          t
        );
      })();
      const II = [
        'ngClass',
        'ngClass.xs',
        'ngClass.sm',
        'ngClass.md',
        'ngClass.lg',
        'ngClass.xl',
        'ngClass.lt-sm',
        'ngClass.lt-md',
        'ngClass.lt-lg',
        'ngClass.lt-xl',
        'ngClass.gt-xs',
        'ngClass.gt-sm',
        'ngClass.gt-md',
        'ngClass.gt-lg',
      ];
      let LI = (() => {
        class t extends RI {
          constructor() {
            super(...arguments), (this.inputs = II);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return FI(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [
              ['', 'ngClass', ''],
              ['', 'ngClass.xs', ''],
              ['', 'ngClass.sm', ''],
              ['', 'ngClass.md', ''],
              ['', 'ngClass.lg', ''],
              ['', 'ngClass.xl', ''],
              ['', 'ngClass.lt-sm', ''],
              ['', 'ngClass.lt-md', ''],
              ['', 'ngClass.lt-lg', ''],
              ['', 'ngClass.lt-xl', ''],
              ['', 'ngClass.gt-xs', ''],
              ['', 'ngClass.gt-sm', ''],
              ['', 'ngClass.gt-md', ''],
              ['', 'ngClass.gt-lg', ''],
            ],
            inputs: {
              ngClass: 'ngClass',
              'ngClass.xs': 'ngClass.xs',
              'ngClass.sm': 'ngClass.sm',
              'ngClass.md': 'ngClass.md',
              'ngClass.lg': 'ngClass.lg',
              'ngClass.xl': 'ngClass.xl',
              'ngClass.lt-sm': 'ngClass.lt-sm',
              'ngClass.lt-md': 'ngClass.lt-md',
              'ngClass.lt-lg': 'ngClass.lt-lg',
              'ngClass.lt-xl': 'ngClass.lt-xl',
              'ngClass.gt-xs': 'ngClass.gt-xs',
              'ngClass.gt-sm': 'ngClass.gt-sm',
              'ngClass.gt-md': 'ngClass.gt-md',
              'ngClass.gt-lg': 'ngClass.gt-lg',
            },
            features: [go],
          })),
          t
        );
      })();
      const FI = Gn(LI);
      let NI = (() => {
        class t extends PI {
          buildStyles(t, e) {
            return { display: 'true' === t ? e.display || (e.isServer ? 'initial' : '') : 'none' };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return VI(e || t);
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const VI = Gn(NI);
      let BI = (() => {
        class t extends iI {
          constructor(t, e, n, i, s, r, o) {
            super(t, e, n, i),
              (this.layoutConfig = s),
              (this.platformId = r),
              (this.serverModuleLoaded = o),
              (this.DIRECTIVE_KEY = 'show-hide'),
              (this.display = ''),
              (this.hasLayout = !1),
              (this.hasFlexChild = !1);
          }
          ngAfterViewInit() {
            this.trackExtraTriggers();
            const t = Array.from(this.nativeElement.children);
            for (let n = 0; n < t.length; n++)
              if (this.marshal.hasValue(t[n], 'flex')) {
                this.hasFlexChild = !0;
                break;
              }
            zI.has(this.nativeElement)
              ? (this.display = zI.get(this.nativeElement))
              : ((this.display = this.getDisplayStyle()), zI.set(this.nativeElement, this.display)),
              this.init();
            const e = this.marshal.getValue(this.nativeElement, this.DIRECTIVE_KEY, '');
            void 0 === e || '' === e ? this.setValue(!0, '') : this.triggerUpdate();
          }
          ngOnChanges(t) {
            Object.keys(t).forEach((e) => {
              if (-1 !== this.inputs.indexOf(e)) {
                const n = e.split('.'),
                  i = n.slice(1).join('.'),
                  s = t[e].currentValue;
                let r = '' === s || (0 !== s && py(s));
                'fxHide' === n[0] && (r = !r), this.setValue(r, i);
              }
            });
          }
          trackExtraTriggers() {
            (this.hasLayout = this.marshal.hasValue(this.nativeElement, 'layout')),
              ['layout', 'layout-align'].forEach((t) => {
                this.marshal
                  .trackValue(this.nativeElement, t)
                  .pipe(Lw(this.destroySubject))
                  .subscribe(this.triggerUpdate.bind(this));
              });
          }
          getDisplayStyle() {
            return this.hasLayout || (this.hasFlexChild && this.layoutConfig.addFlexToParent)
              ? 'flex'
              : this.styler.lookupStyle(this.nativeElement, 'display', !0);
          }
          updateWithValue(t = !0) {
            if ('' === t) return;
            const e = Ku(this.platformId);
            this.addStyles(t ? 'true' : 'false', { display: this.display, isServer: e }),
              e && this.serverModuleLoaded && this.nativeElement.style.setProperty('display', ''),
              this.marshal.triggerUpdate(this.parentElement, 'layout-gap');
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(Za), Ro(NI), Ro(OI), Ro(DI), Ro(KR), Ro(Fc), Ro(XR));
          }),
          (t.ɵdir = Xt({ type: t, features: [go, ue] })),
          t
        );
      })();
      const zI = new WeakMap(),
        jI = [
          'fxShow',
          'fxShow.print',
          'fxShow.xs',
          'fxShow.sm',
          'fxShow.md',
          'fxShow.lg',
          'fxShow.xl',
          'fxShow.lt-sm',
          'fxShow.lt-md',
          'fxShow.lt-lg',
          'fxShow.lt-xl',
          'fxShow.gt-xs',
          'fxShow.gt-sm',
          'fxShow.gt-md',
          'fxShow.gt-lg',
          'fxHide',
          'fxHide.print',
          'fxHide.xs',
          'fxHide.sm',
          'fxHide.md',
          'fxHide.lg',
          'fxHide.xl',
          'fxHide.lt-sm',
          'fxHide.lt-md',
          'fxHide.lt-lg',
          'fxHide.lt-xl',
          'fxHide.gt-xs',
          'fxHide.gt-sm',
          'fxHide.gt-md',
          'fxHide.gt-lg',
        ];
      let HI = (() => {
        class t extends BI {
          constructor() {
            super(...arguments), (this.inputs = jI);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return $I(e || t);
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [
              ['', 'fxShow', ''],
              ['', 'fxShow.print', ''],
              ['', 'fxShow.xs', ''],
              ['', 'fxShow.sm', ''],
              ['', 'fxShow.md', ''],
              ['', 'fxShow.lg', ''],
              ['', 'fxShow.xl', ''],
              ['', 'fxShow.lt-sm', ''],
              ['', 'fxShow.lt-md', ''],
              ['', 'fxShow.lt-lg', ''],
              ['', 'fxShow.lt-xl', ''],
              ['', 'fxShow.gt-xs', ''],
              ['', 'fxShow.gt-sm', ''],
              ['', 'fxShow.gt-md', ''],
              ['', 'fxShow.gt-lg', ''],
              ['', 'fxHide', ''],
              ['', 'fxHide.print', ''],
              ['', 'fxHide.xs', ''],
              ['', 'fxHide.sm', ''],
              ['', 'fxHide.md', ''],
              ['', 'fxHide.lg', ''],
              ['', 'fxHide.xl', ''],
              ['', 'fxHide.lt-sm', ''],
              ['', 'fxHide.lt-md', ''],
              ['', 'fxHide.lt-lg', ''],
              ['', 'fxHide.lt-xl', ''],
              ['', 'fxHide.gt-xs', ''],
              ['', 'fxHide.gt-sm', ''],
              ['', 'fxHide.gt-md', ''],
              ['', 'fxHide.gt-lg', ''],
            ],
            inputs: {
              fxShow: 'fxShow',
              'fxShow.print': 'fxShow.print',
              'fxShow.xs': 'fxShow.xs',
              'fxShow.sm': 'fxShow.sm',
              'fxShow.md': 'fxShow.md',
              'fxShow.lg': 'fxShow.lg',
              'fxShow.xl': 'fxShow.xl',
              'fxShow.lt-sm': 'fxShow.lt-sm',
              'fxShow.lt-md': 'fxShow.lt-md',
              'fxShow.lt-lg': 'fxShow.lt-lg',
              'fxShow.lt-xl': 'fxShow.lt-xl',
              'fxShow.gt-xs': 'fxShow.gt-xs',
              'fxShow.gt-sm': 'fxShow.gt-sm',
              'fxShow.gt-md': 'fxShow.gt-md',
              'fxShow.gt-lg': 'fxShow.gt-lg',
              fxHide: 'fxHide',
              'fxHide.print': 'fxHide.print',
              'fxHide.xs': 'fxHide.xs',
              'fxHide.sm': 'fxHide.sm',
              'fxHide.md': 'fxHide.md',
              'fxHide.lg': 'fxHide.lg',
              'fxHide.xl': 'fxHide.xl',
              'fxHide.lt-sm': 'fxHide.lt-sm',
              'fxHide.lt-md': 'fxHide.lt-md',
              'fxHide.lt-lg': 'fxHide.lt-lg',
              'fxHide.lt-xl': 'fxHide.lt-xl',
              'fxHide.gt-xs': 'fxHide.gt-xs',
              'fxHide.gt-sm': 'fxHide.gt-sm',
              'fxHide.gt-md': 'fxHide.gt-md',
              'fxHide.gt-lg': 'fxHide.gt-lg',
            },
            features: [go],
          })),
          t
        );
      })();
      const $I = Gn(HI);
      let qI = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[UR]] })),
          t
        );
      })();
      const WI = 'inline',
        UI = ['row', 'column', 'row-reverse', 'column-reverse'];
      function YI(t) {
        t = t ? t.toLowerCase() : '';
        let [e, n, i] = t.split(' ');
        return UI.find((t) => t === e) || (e = UI[0]), n === WI && ((n = i !== WI ? i : ''), (i = WI)), [e, QI(n), !!i];
      }
      function GI(t) {
        let [e] = YI(t);
        return e.indexOf('row') > -1;
      }
      function QI(t) {
        if (t)
          switch (t.toLowerCase()) {
            case 'reverse':
            case 'wrap-reverse':
            case 'reverse-wrap':
              t = 'wrap-reverse';
              break;
            case 'no':
            case 'none':
            case 'nowrap':
              t = 'nowrap';
              break;
            default:
              t = 'wrap';
          }
        return t;
      }
      let KI = (() => {
        class t extends PI {
          buildStyles(t) {
            return (function (t) {
              let [e, n, i] = YI(t);
              return (function (t, e = null, n = !1) {
                return {
                  display: n ? 'inline-flex' : 'flex',
                  'box-sizing': 'border-box',
                  'flex-direction': t,
                  'flex-wrap': e || null,
                };
              })(e, n, i);
            })(t);
          }
        }
        return (
          (t.ɵfac = function (e) {
            return XI(e || t);
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const XI = Gn(KI),
        ZI = [
          'fxLayout',
          'fxLayout.xs',
          'fxLayout.sm',
          'fxLayout.md',
          'fxLayout.lg',
          'fxLayout.xl',
          'fxLayout.lt-sm',
          'fxLayout.lt-md',
          'fxLayout.lt-lg',
          'fxLayout.lt-xl',
          'fxLayout.gt-xs',
          'fxLayout.gt-sm',
          'fxLayout.gt-md',
          'fxLayout.gt-lg',
        ];
      let JI = (() => {
          class t extends iI {
            constructor(t, e, n, i) {
              super(t, n, e, i), (this.DIRECTIVE_KEY = 'layout'), (this.styleCache = nL), this.init();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(OI), Ro(KI), Ro(DI));
            }),
            (t.ɵdir = Xt({ type: t, features: [go] })),
            t
          );
        })(),
        tL = (() => {
          class t extends JI {
            constructor() {
              super(...arguments), (this.inputs = ZI);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return eL(e || t);
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'fxLayout', ''],
                ['', 'fxLayout.xs', ''],
                ['', 'fxLayout.sm', ''],
                ['', 'fxLayout.md', ''],
                ['', 'fxLayout.lg', ''],
                ['', 'fxLayout.xl', ''],
                ['', 'fxLayout.lt-sm', ''],
                ['', 'fxLayout.lt-md', ''],
                ['', 'fxLayout.lt-lg', ''],
                ['', 'fxLayout.lt-xl', ''],
                ['', 'fxLayout.gt-xs', ''],
                ['', 'fxLayout.gt-sm', ''],
                ['', 'fxLayout.gt-md', ''],
                ['', 'fxLayout.gt-lg', ''],
              ],
              inputs: {
                fxLayout: 'fxLayout',
                'fxLayout.xs': 'fxLayout.xs',
                'fxLayout.sm': 'fxLayout.sm',
                'fxLayout.md': 'fxLayout.md',
                'fxLayout.lg': 'fxLayout.lg',
                'fxLayout.xl': 'fxLayout.xl',
                'fxLayout.lt-sm': 'fxLayout.lt-sm',
                'fxLayout.lt-md': 'fxLayout.lt-md',
                'fxLayout.lt-lg': 'fxLayout.lt-lg',
                'fxLayout.lt-xl': 'fxLayout.lt-xl',
                'fxLayout.gt-xs': 'fxLayout.gt-xs',
                'fxLayout.gt-sm': 'fxLayout.gt-sm',
                'fxLayout.gt-md': 'fxLayout.gt-md',
                'fxLayout.gt-lg': 'fxLayout.gt-lg',
              },
              features: [go],
            })),
            t
          );
        })();
      const eL = Gn(tL),
        nL = new Map(),
        iL = { 'margin-left': null, 'margin-right': null, 'margin-top': null, 'margin-bottom': null };
      let sL = (() => {
        class t extends PI {
          constructor(t) {
            super(), (this._styler = t);
          }
          buildStyles(t, e) {
            return t.endsWith(pL)
              ? (function (t, e) {
                  const [n, i] = t.split(' '),
                    s = (t) => `-${t}`;
                  let r = '0px',
                    o = s(i || n),
                    a = '0px';
                  return 'rtl' === e ? (a = s(n)) : (r = s(n)), { margin: `0px ${r} ${o} ${a}` };
                })((t = t.slice(0, t.indexOf(pL))), e.directionality)
              : {};
          }
          sideEffect(t, e, n) {
            const i = n.items;
            if (t.endsWith(pL)) {
              const e = (function (t, e) {
                const [n, i] = t.split(' ');
                let s = '0px',
                  r = '0px';
                return 'rtl' === e ? (r = n) : (s = n), { padding: `0px ${s} ${i || n} ${r}` };
              })((t = t.slice(0, t.indexOf(pL))), n.directionality);
              this._styler.applyStyleToElements(e, n.items);
            } else {
              const e = i.pop(),
                s = (function (t, e) {
                  const n = mL(e.directionality, e.layout),
                    i = Object.assign({}, iL);
                  return (i[n] = t), i;
                })(t, n);
              this._styler.applyStyleToElements(s, i), this._styler.applyStyleToElements(iL, [e]);
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(OI));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(OI));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const rL = [
        'fxLayoutGap',
        'fxLayoutGap.xs',
        'fxLayoutGap.sm',
        'fxLayoutGap.md',
        'fxLayoutGap.lg',
        'fxLayoutGap.xl',
        'fxLayoutGap.lt-sm',
        'fxLayoutGap.lt-md',
        'fxLayoutGap.lt-lg',
        'fxLayoutGap.lt-xl',
        'fxLayoutGap.gt-xs',
        'fxLayoutGap.gt-sm',
        'fxLayoutGap.gt-md',
        'fxLayoutGap.gt-lg',
      ];
      let oL = (() => {
          class t extends iI {
            constructor(t, e, n, i, s, r) {
              super(t, s, i, r),
                (this.zone = e),
                (this.directionality = n),
                (this.styleUtils = i),
                (this.layout = 'row'),
                (this.DIRECTIVE_KEY = 'layout-gap'),
                (this.observerSubject = new C());
              const o = [this.directionality.change, this.observerSubject.asObservable()];
              this.init(o),
                this.marshal
                  .trackValue(this.nativeElement, 'layout')
                  .pipe(Lw(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this));
            }
            get childrenNodes() {
              const t = this.nativeElement.children,
                e = [];
              for (let n = t.length; n--; ) e[n] = t[n];
              return e;
            }
            ngAfterContentInit() {
              this.buildChildObservable(), this.triggerUpdate();
            }
            ngOnDestroy() {
              super.ngOnDestroy(), this.observer && this.observer.disconnect();
            }
            onLayoutChange(t) {
              const e = t.value.split(' ');
              (this.layout = e[0]), UI.find((t) => t === this.layout) || (this.layout = 'row'), this.triggerUpdate();
            }
            updateWithValue(t) {
              const e = this.childrenNodes
                .filter((t) => 1 === t.nodeType && this.willDisplay(t))
                .sort((t, e) => {
                  const n = +this.styler.lookupStyle(t, 'order'),
                    i = +this.styler.lookupStyle(e, 'order');
                  return isNaN(n) || isNaN(i) || n === i ? 0 : n > i ? 1 : -1;
                });
              if (e.length > 0) {
                const n = this.directionality.value,
                  i = this.layout;
                'row' === i && 'rtl' === n
                  ? (this.styleCache = cL)
                  : 'row' === i && 'rtl' !== n
                  ? (this.styleCache = uL)
                  : 'column' === i && 'rtl' === n
                  ? (this.styleCache = hL)
                  : 'column' === i && 'rtl' !== n && (this.styleCache = dL),
                  this.addStyles(t, { directionality: n, items: e, layout: i });
              }
            }
            clearStyles() {
              const t = Object.keys(this.mru).length > 0,
                e = t ? 'padding' : mL(this.directionality.value, this.layout);
              t && super.clearStyles(), this.styleUtils.applyStyleToElements({ [e]: '' }, this.childrenNodes);
            }
            willDisplay(t) {
              const e = this.marshal.getValue(t, 'show-hide');
              return !0 === e || (void 0 === e && 'none' !== this.styleUtils.lookupStyle(t, 'display'));
            }
            buildChildObservable() {
              this.zone.runOutsideAngular(() => {
                'undefined' != typeof MutationObserver &&
                  ((this.observer = new MutationObserver((t) => {
                    t.some(
                      (t) => (t.addedNodes && t.addedNodes.length > 0) || (t.removedNodes && t.removedNodes.length > 0)
                    ) && this.observerSubject.next();
                  })),
                  this.observer.observe(this.nativeElement, { childList: !0 }));
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Xc), Ro(fv), Ro(OI), Ro(sL), Ro(DI));
            }),
            (t.ɵdir = Xt({ type: t, features: [go] })),
            t
          );
        })(),
        aL = (() => {
          class t extends oL {
            constructor() {
              super(...arguments), (this.inputs = rL);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return lL(e || t);
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'fxLayoutGap', ''],
                ['', 'fxLayoutGap.xs', ''],
                ['', 'fxLayoutGap.sm', ''],
                ['', 'fxLayoutGap.md', ''],
                ['', 'fxLayoutGap.lg', ''],
                ['', 'fxLayoutGap.xl', ''],
                ['', 'fxLayoutGap.lt-sm', ''],
                ['', 'fxLayoutGap.lt-md', ''],
                ['', 'fxLayoutGap.lt-lg', ''],
                ['', 'fxLayoutGap.lt-xl', ''],
                ['', 'fxLayoutGap.gt-xs', ''],
                ['', 'fxLayoutGap.gt-sm', ''],
                ['', 'fxLayoutGap.gt-md', ''],
                ['', 'fxLayoutGap.gt-lg', ''],
              ],
              inputs: {
                fxLayoutGap: 'fxLayoutGap',
                'fxLayoutGap.xs': 'fxLayoutGap.xs',
                'fxLayoutGap.sm': 'fxLayoutGap.sm',
                'fxLayoutGap.md': 'fxLayoutGap.md',
                'fxLayoutGap.lg': 'fxLayoutGap.lg',
                'fxLayoutGap.xl': 'fxLayoutGap.xl',
                'fxLayoutGap.lt-sm': 'fxLayoutGap.lt-sm',
                'fxLayoutGap.lt-md': 'fxLayoutGap.lt-md',
                'fxLayoutGap.lt-lg': 'fxLayoutGap.lt-lg',
                'fxLayoutGap.lt-xl': 'fxLayoutGap.lt-xl',
                'fxLayoutGap.gt-xs': 'fxLayoutGap.gt-xs',
                'fxLayoutGap.gt-sm': 'fxLayoutGap.gt-sm',
                'fxLayoutGap.gt-md': 'fxLayoutGap.gt-md',
                'fxLayoutGap.gt-lg': 'fxLayoutGap.gt-lg',
              },
              features: [go],
            })),
            t
          );
        })();
      const lL = Gn(aL),
        cL = new Map(),
        hL = new Map(),
        uL = new Map(),
        dL = new Map(),
        pL = ' grid';
      function mL(t, e) {
        switch (e) {
          case 'column':
            return 'margin-bottom';
          case 'column-reverse':
            return 'margin-top';
          case 'row':
            return 'rtl' === t ? 'margin-left' : 'margin-right';
          case 'row-reverse':
            return 'rtl' === t ? 'margin-right' : 'margin-left';
          default:
            return 'rtl' === t ? 'margin-left' : 'margin-right';
        }
      }
      function fL(t, ...e) {
        if (null == t) throw TypeError('Cannot convert undefined or null to object');
        for (let n of e) if (null != n) for (let e in n) n.hasOwnProperty(e) && (t[e] = n[e]);
        return t;
      }
      let gL = (() => {
        class t extends PI {
          constructor(t) {
            super(), (this.layoutConfig = t);
          }
          buildStyles(t, e) {
            let [n, i, ...s] = t.split(' '),
              r = s.join(' ');
            const o = e.direction.indexOf('column') > -1 ? 'column' : 'row',
              a = GI(o) ? 'max-width' : 'max-height',
              l = GI(o) ? 'min-width' : 'min-height',
              c = String(r).indexOf('calc') > -1,
              h = c || 'auto' === r,
              u = String(r).indexOf('%') > -1 && !c,
              d =
                String(r).indexOf('px') > -1 ||
                String(r).indexOf('rem') > -1 ||
                String(r).indexOf('em') > -1 ||
                String(r).indexOf('vw') > -1 ||
                String(r).indexOf('vh') > -1;
            let p = c || d;
            (n = '0' == n ? 0 : n), (i = '0' == i ? 0 : i);
            const m = !n && !i;
            let f = {};
            const g = { 'max-width': null, 'max-height': null, 'min-width': null, 'min-height': null };
            switch (r || '') {
              case '':
                const t = !1 !== this.layoutConfig.useColumnBasisZero;
                r = 'row' === o ? '0%' : t ? '0.000000001px' : 'auto';
                break;
              case 'initial':
              case 'nogrow':
                (n = 0), (r = 'auto');
                break;
              case 'grow':
                r = '100%';
                break;
              case 'noshrink':
                (i = 0), (r = 'auto');
                break;
              case 'auto':
                break;
              case 'none':
                (n = 0), (i = 0), (r = 'auto');
                break;
              default:
                p || u || isNaN(r) || (r += '%'),
                  '0%' === r && (p = !0),
                  '0px' === r && (r = '0%'),
                  (f = fL(
                    g,
                    c
                      ? { 'flex-grow': n, 'flex-shrink': i, 'flex-basis': p ? r : '100%' }
                      : { flex: `${n} ${i} ${p ? r : '100%'}` }
                  ));
            }
            return (
              f.flex ||
                f['flex-grow'] ||
                (f = fL(g, c ? { 'flex-grow': n, 'flex-shrink': i, 'flex-basis': r } : { flex: `${n} ${i} ${r}` })),
              '0%' !== r &&
                '0px' !== r &&
                '0.000000001px' !== r &&
                'auto' !== r &&
                ((f[l] = m || (p && n) ? r : null), (f[a] = m || (!h && i) ? r : null)),
              f[l] || f[a]
                ? e.hasWrap &&
                  (f[c ? 'flex-basis' : 'flex'] = f[a]
                    ? c
                      ? f[a]
                      : `${n} ${i} ${f[a]}`
                    : c
                    ? f[l]
                    : `${n} ${i} ${f[l]}`)
                : (f = fL(g, c ? { 'flex-grow': n, 'flex-shrink': i, 'flex-basis': r } : { flex: `${n} ${i} ${r}` })),
              fL(f, { 'box-sizing': 'border-box' })
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(KR));
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t(_i(KR));
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const _L = [
        'fxFlex',
        'fxFlex.xs',
        'fxFlex.sm',
        'fxFlex.md',
        'fxFlex.lg',
        'fxFlex.xl',
        'fxFlex.lt-sm',
        'fxFlex.lt-md',
        'fxFlex.lt-lg',
        'fxFlex.lt-xl',
        'fxFlex.gt-xs',
        'fxFlex.gt-sm',
        'fxFlex.gt-md',
        'fxFlex.gt-lg',
      ];
      let bL = (() => {
          class t extends iI {
            constructor(t, e, n, i, s) {
              super(t, i, e, s),
                (this.layoutConfig = n),
                (this.marshal = s),
                (this.DIRECTIVE_KEY = 'flex'),
                (this.direction = void 0),
                (this.wrap = void 0),
                (this.flexGrow = '1'),
                (this.flexShrink = '1'),
                this.init();
            }
            get shrink() {
              return this.flexShrink;
            }
            set shrink(t) {
              (this.flexShrink = t || '1'), this.triggerReflow();
            }
            get grow() {
              return this.flexGrow;
            }
            set grow(t) {
              (this.flexGrow = t || '1'), this.triggerReflow();
            }
            ngOnInit() {
              this.parentElement &&
                (this.marshal
                  .trackValue(this.parentElement, 'layout')
                  .pipe(Lw(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this)),
                this.marshal
                  .trackValue(this.nativeElement, 'layout-align')
                  .pipe(Lw(this.destroySubject))
                  .subscribe(this.triggerReflow.bind(this)));
            }
            onLayoutChange(t) {
              const e = t.value.split(' ');
              (this.direction = e[0]), (this.wrap = void 0 !== e[1] && 'wrap' === e[1]), this.triggerUpdate();
            }
            updateWithValue(t) {
              void 0 === this.direction &&
                (this.direction = this.getFlexFlowDirection(
                  this.parentElement,
                  !1 !== this.layoutConfig.addFlexToParent
                )),
                void 0 === this.wrap && (this.wrap = this.hasWrap(this.parentElement));
              const e = this.direction,
                n = e.startsWith('row'),
                i = this.wrap;
              n && i
                ? (this.styleCache = CL)
                : n && !i
                ? (this.styleCache = wL)
                : !n && i
                ? (this.styleCache = kL)
                : n || i || (this.styleCache = xL);
              const s = AI(String(t).replace(';', ''), this.flexGrow, this.flexShrink);
              this.addStyles(s.join(' '), { direction: e, hasWrap: i });
            }
            triggerReflow() {
              const t = this.activatedValue;
              if (void 0 !== t) {
                const e = AI(t + '', this.flexGrow, this.flexShrink);
                this.marshal.updateElement(this.nativeElement, this.DIRECTIVE_KEY, e.join(' '));
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(OI), Ro(KR), Ro(gL), Ro(DI));
            }),
            (t.ɵdir = Xt({
              type: t,
              inputs: { shrink: ['fxShrink', 'shrink'], grow: ['fxGrow', 'grow'] },
              features: [go],
            })),
            t
          );
        })(),
        yL = (() => {
          class t extends bL {
            constructor() {
              super(...arguments), (this.inputs = _L);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return vL(e || t);
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'fxFlex', ''],
                ['', 'fxFlex.xs', ''],
                ['', 'fxFlex.sm', ''],
                ['', 'fxFlex.md', ''],
                ['', 'fxFlex.lg', ''],
                ['', 'fxFlex.xl', ''],
                ['', 'fxFlex.lt-sm', ''],
                ['', 'fxFlex.lt-md', ''],
                ['', 'fxFlex.lt-lg', ''],
                ['', 'fxFlex.lt-xl', ''],
                ['', 'fxFlex.gt-xs', ''],
                ['', 'fxFlex.gt-sm', ''],
                ['', 'fxFlex.gt-md', ''],
                ['', 'fxFlex.gt-lg', ''],
              ],
              inputs: {
                fxFlex: 'fxFlex',
                'fxFlex.xs': 'fxFlex.xs',
                'fxFlex.sm': 'fxFlex.sm',
                'fxFlex.md': 'fxFlex.md',
                'fxFlex.lg': 'fxFlex.lg',
                'fxFlex.xl': 'fxFlex.xl',
                'fxFlex.lt-sm': 'fxFlex.lt-sm',
                'fxFlex.lt-md': 'fxFlex.lt-md',
                'fxFlex.lt-lg': 'fxFlex.lt-lg',
                'fxFlex.lt-xl': 'fxFlex.lt-xl',
                'fxFlex.gt-xs': 'fxFlex.gt-xs',
                'fxFlex.gt-sm': 'fxFlex.gt-sm',
                'fxFlex.gt-md': 'fxFlex.gt-md',
                'fxFlex.gt-lg': 'fxFlex.gt-lg',
              },
              features: [go],
            })),
            t
          );
        })();
      const vL = Gn(yL),
        wL = new Map(),
        xL = new Map(),
        CL = new Map(),
        kL = new Map(),
        SL = { margin: 0, width: '100%', height: '100%', 'min-width': '100%', 'min-height': '100%' };
      let EL = (() => {
        class t extends PI {
          buildStyles(t) {
            return SL;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return OL(e || t);
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const OL = Gn(EL);
      let PL = (() => {
        class t extends iI {
          constructor(t, e, n, i) {
            super(t, n, e, i), (this.styleCache = AL), this.addStyles('');
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(Za), Ro(OI), Ro(EL), Ro(DI));
          }),
          (t.ɵdir = Xt({
            type: t,
            selectors: [
              ['', 'fxFill', ''],
              ['', 'fxFlexFill', ''],
            ],
            features: [go],
          })),
          t
        );
      })();
      const AL = new Map();
      let TL = (() => {
        class t extends PI {
          buildStyles(t, e) {
            const n = {},
              [i, s] = t.split(' ');
            switch (i) {
              case 'center':
                n['justify-content'] = 'center';
                break;
              case 'space-around':
                n['justify-content'] = 'space-around';
                break;
              case 'space-between':
                n['justify-content'] = 'space-between';
                break;
              case 'space-evenly':
                n['justify-content'] = 'space-evenly';
                break;
              case 'end':
              case 'flex-end':
                n['justify-content'] = 'flex-end';
                break;
              case 'start':
              case 'flex-start':
              default:
                n['justify-content'] = 'flex-start';
            }
            switch (s) {
              case 'start':
              case 'flex-start':
                n['align-items'] = n['align-content'] = 'flex-start';
                break;
              case 'center':
                n['align-items'] = n['align-content'] = 'center';
                break;
              case 'end':
              case 'flex-end':
                n['align-items'] = n['align-content'] = 'flex-end';
                break;
              case 'space-between':
                (n['align-content'] = 'space-between'), (n['align-items'] = 'stretch');
                break;
              case 'space-around':
                (n['align-content'] = 'space-around'), (n['align-items'] = 'stretch');
                break;
              case 'baseline':
                (n['align-content'] = 'stretch'), (n['align-items'] = 'baseline');
                break;
              case 'stretch':
              default:
                n['align-items'] = n['align-content'] = 'stretch';
            }
            return fL(n, {
              display: e.inline ? 'inline-flex' : 'flex',
              'flex-direction': e.layout,
              'box-sizing': 'border-box',
              'max-width': 'stretch' === s ? (GI(e.layout) ? null : '100%') : null,
              'max-height': 'stretch' === s && GI(e.layout) ? '100%' : null,
            });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return DL(e || t);
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const DL = Gn(TL),
        ML = [
          'fxLayoutAlign',
          'fxLayoutAlign.xs',
          'fxLayoutAlign.sm',
          'fxLayoutAlign.md',
          'fxLayoutAlign.lg',
          'fxLayoutAlign.xl',
          'fxLayoutAlign.lt-sm',
          'fxLayoutAlign.lt-md',
          'fxLayoutAlign.lt-lg',
          'fxLayoutAlign.lt-xl',
          'fxLayoutAlign.gt-xs',
          'fxLayoutAlign.gt-sm',
          'fxLayoutAlign.gt-md',
          'fxLayoutAlign.gt-lg',
        ];
      let RL = (() => {
          class t extends iI {
            constructor(t, e, n, i) {
              super(t, n, e, i),
                (this.DIRECTIVE_KEY = 'layout-align'),
                (this.layout = 'row'),
                (this.inline = !1),
                this.init(),
                this.marshal
                  .trackValue(this.nativeElement, 'layout')
                  .pipe(Lw(this.destroySubject))
                  .subscribe(this.onLayoutChange.bind(this));
            }
            updateWithValue(t) {
              const e = this.layout || 'row',
                n = this.inline;
              'row' === e && n
                ? (this.styleCache = zL)
                : 'row' !== e || n
                ? 'row-reverse' === e && n
                  ? (this.styleCache = HL)
                  : 'row-reverse' !== e || n
                  ? 'column' === e && n
                    ? (this.styleCache = jL)
                    : 'column' !== e || n
                    ? 'column-reverse' === e && n
                      ? (this.styleCache = $L)
                      : 'column-reverse' !== e || n || (this.styleCache = BL)
                    : (this.styleCache = NL)
                  : (this.styleCache = VL)
                : (this.styleCache = FL),
                this.addStyles(t, { layout: e, inline: n });
            }
            onLayoutChange(t) {
              const e = t.value.split(' ');
              (this.layout = e[0]),
                (this.inline = t.value.includes('inline')),
                UI.find((t) => t === this.layout) || (this.layout = 'row'),
                this.triggerUpdate();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(OI), Ro(TL), Ro(DI));
            }),
            (t.ɵdir = Xt({ type: t, features: [go] })),
            t
          );
        })(),
        IL = (() => {
          class t extends RL {
            constructor() {
              super(...arguments), (this.inputs = ML);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return LL(e || t);
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [
                ['', 'fxLayoutAlign', ''],
                ['', 'fxLayoutAlign.xs', ''],
                ['', 'fxLayoutAlign.sm', ''],
                ['', 'fxLayoutAlign.md', ''],
                ['', 'fxLayoutAlign.lg', ''],
                ['', 'fxLayoutAlign.xl', ''],
                ['', 'fxLayoutAlign.lt-sm', ''],
                ['', 'fxLayoutAlign.lt-md', ''],
                ['', 'fxLayoutAlign.lt-lg', ''],
                ['', 'fxLayoutAlign.lt-xl', ''],
                ['', 'fxLayoutAlign.gt-xs', ''],
                ['', 'fxLayoutAlign.gt-sm', ''],
                ['', 'fxLayoutAlign.gt-md', ''],
                ['', 'fxLayoutAlign.gt-lg', ''],
              ],
              inputs: {
                fxLayoutAlign: 'fxLayoutAlign',
                'fxLayoutAlign.xs': 'fxLayoutAlign.xs',
                'fxLayoutAlign.sm': 'fxLayoutAlign.sm',
                'fxLayoutAlign.md': 'fxLayoutAlign.md',
                'fxLayoutAlign.lg': 'fxLayoutAlign.lg',
                'fxLayoutAlign.xl': 'fxLayoutAlign.xl',
                'fxLayoutAlign.lt-sm': 'fxLayoutAlign.lt-sm',
                'fxLayoutAlign.lt-md': 'fxLayoutAlign.lt-md',
                'fxLayoutAlign.lt-lg': 'fxLayoutAlign.lt-lg',
                'fxLayoutAlign.lt-xl': 'fxLayoutAlign.lt-xl',
                'fxLayoutAlign.gt-xs': 'fxLayoutAlign.gt-xs',
                'fxLayoutAlign.gt-sm': 'fxLayoutAlign.gt-sm',
                'fxLayoutAlign.gt-md': 'fxLayoutAlign.gt-md',
                'fxLayoutAlign.gt-lg': 'fxLayoutAlign.gt-lg',
              },
              features: [go],
            })),
            t
          );
        })();
      const LL = Gn(IL),
        FL = new Map(),
        NL = new Map(),
        VL = new Map(),
        BL = new Map(),
        zL = new Map(),
        jL = new Map(),
        HL = new Map(),
        $L = new Map();
      let qL = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[UR, gv]] })),
            t
          );
        })(),
        WL = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[UR]] })),
            t
          );
        })(),
        UL = (() => {
          class t {
            constructor(t, e) {
              Ku(e) && !t && console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');
            }
            static withConfig(e, n = []) {
              return {
                ngModule: t,
                providers: e.serverLoaded
                  ? [
                      { provide: KR, useValue: Object.assign(Object.assign({}, QR), e) },
                      { provide: ZR, useValue: n, multi: !0 },
                      { provide: XR, useValue: !0 },
                    ]
                  : [
                      { provide: KR, useValue: Object.assign(Object.assign({}, QR), e) },
                      { provide: ZR, useValue: n, multi: !0 },
                    ],
              };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(XR), _i(Fc));
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[qL, qI, WL], qL, qI, WL] })),
            t
          );
        })(),
        YL = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[UL, uT, Gu]] })),
            t
          );
        })(),
        GL = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu, gg, UL, uT]] })),
            t
          );
        })();
      const QL = JSON.parse(
          '{"APP_NAME":"Maxi - Web Client","About":"About","Hello world !":"Hello world !","Home":"Home","Logged in as":"Logged in as","Login":"Login","Logout":"Logout","Password":"Password","Password is required":"Password is required","Username":"Username","Username is required":"Username is required","Username or password incorrect.":"Username or password incorrect.","Remember me":"Remember me","Version":"Version"}'
        ),
        KL = new DR('I18nService'),
        XL = 'language';
      let ZL = (() => {
        class t {
          constructor(t) {
            (this.translateService = t), t.setTranslation('en-US', QL);
          }
          init(t, e) {
            (this.defaultLanguage = t),
              (this.supportedLanguages = e),
              (this.language = ''),
              (this.langChangeSubscription = this.translateService.onLangChange.subscribe((t) => {
                localStorage.setItem(XL, t.lang);
              }));
          }
          destroy() {
            this.langChangeSubscription && this.langChangeSubscription.unsubscribe();
          }
          set language(t) {
            t = t || localStorage.getItem(XL) || this.translateService.getBrowserCultureLang();
            let e = this.supportedLanguages.includes(t);
            t &&
              !e &&
              ((t = t.split('-')[0]),
              (t = this.supportedLanguages.find((e) => e.startsWith(t)) || ''),
              (e = Boolean(t))),
              e || (t = this.defaultLanguage),
              KL.debug(`Language set to ${t}`),
              this.translateService.use(t);
          }
          get language() {
            return this.translateService.currentLang;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(pg));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      function JL(t, e, n, i) {
        var s,
          r = arguments.length,
          o = r < 3 ? e : null === i ? (i = Object.getOwnPropertyDescriptor(e, n)) : i;
        if ('object' == typeof Reflect && 'function' == typeof Reflect.decorate) o = Reflect.decorate(t, e, n, i);
        else
          for (var a = t.length - 1; a >= 0; a--)
            (s = t[a]) && (o = (r < 3 ? s(o) : r > 3 ? s(e, n, o) : s(e, n)) || o);
        return r > 3 && o && Object.defineProperty(e, n, o), o;
      }
      function tF(t, e) {
        if ('object' == typeof Reflect && 'function' == typeof Reflect.metadata) return Reflect.metadata(t, e);
      }
      const eF = 'credentials';
      let nF = (() => {
          class t {
            constructor() {
              this._credentials = null;
              const t = sessionStorage.getItem(eF) || localStorage.getItem(eF);
              t && (this._credentials = JSON.parse(t));
            }
            isAuthenticated() {
              return !!this.credentials;
            }
            get credentials() {
              return this._credentials;
            }
            setCredentials(t, e) {
              (this._credentials = t || null),
                t
                  ? (e ? localStorage : sessionStorage).setItem(eF, JSON.stringify(t))
                  : (sessionStorage.removeItem(eF), localStorage.removeItem(eF), sessionStorage.removeItem('token'));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            t
          );
        })(),
        iF = (() => {
          class t {
            constructor(t, e, n) {
              (this.credentialsService = t), (this.router = e), (this._snackBar = n);
            }
            login(t) {
              const e = { username: t.username, password: t.password, token: '123456' };
              return this.credentialsService.setCredentials(e, t.remember), fm(e);
            }
            logout() {
              return (
                this.credentialsService.setCredentials(),
                localStorage.removeItem('token'),
                localStorage.removeItem('userInfo'),
                localStorage.removeItem('userStatus'),
                localStorage.removeItem('uuid'),
                this._snackBar.open('Token Expired.', '', { duration: 3e3, panelClass: ['blue-snackbar'] }),
                this.router.navigate(['/login']),
                fm(!0)
              );
            }
            autoLogOut(t) {
              setTimeout(() => {
                this.logout();
              }, t);
            }
            getToken() {
              return localStorage.getItem('token');
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(nF), _i(iR), _i(kP));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            t
          );
        })();
      const sF = '/api/v1/program',
        rF = '/api/v1/questionnaire',
        oF = '/api/v1/employee',
        aF = '/api/v1/customer/',
        lF = '/api/v1/employee/';
      let cF = (() => {
        class t {
          constructor(t) {
            this.httpClient = t;
          }
          getAllCustomers() {
            return this.httpClient
              .get(
                '/api/v1/customer?include=supervisor&inlclude=programHistory&include=question&include=programHistory&limit=100',
                { observe: 'response' }
              )
              .pipe(
                E((t) => t),
                hS(() => 'Error in fetching customers.')
              );
          }
          editCustomer(t, e) {
            return this.httpClient.put(aF + e, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in editing the customer.')
            );
          }
          changePassword(t, e) {
            return this.httpClient.put(lF + e, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in updating the password.')
            );
          }
          editEmployee(t, e) {
            return this.httpClient.put(lF + e, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in editing the employee.')
            );
          }
          editQuestionnaire(t, e) {
            return this.httpClient.put('/api/v1/questionnaire/' + e, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in editing the form.')
            );
          }
          getAllEmployees() {
            return this.httpClient.get('/api/v1/employee?&limit=999', { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in fetching employees.')
            );
          }
          getEmployee(t) {
            return this.httpClient.get('/api/v1/employee/' + t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in fetching employee.')
            );
          }
          getCustomerBySearch() {
            const t = `${mT}/api/v1/customer`,
              e = {
                headers: new xm({
                  'Content-Type': 'application/json',
                  Accept: 'application/json',
                  'Access-Control-Allow-Headers': 'Content-Type',
                  Authorization:
                    'BearereyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImY2YWM2ZWZiLTg2YzgtNDU2My1iZTIyLWMyMjU0OTQyNDlkZCIsInVzZXJuYW1lIjoibGFsb28iLCJ1c2VyU3RhdHVzIjoiQURNSU4iLCJpYXQiOjE2MjkxMzQ5NzUsImV4cCI6MTYyOTEzODU3NX0.4D1Np-PSPmdLIgVrghvPBrEV9W9PF3KejwVjD8GK5JI',
                }),
              };
            return this.httpClient.get(t, e);
          }
          getSupervisors() {
            return this.httpClient
              .get('/api/v1/employee?where[status]=ACTIVATED&limit=999', { observe: 'response' })
              .pipe(
                E((t) => t),
                hS(() => 'Error in fetching supervisors.')
              );
          }
          setEmployeeStatus(t, e) {
            return this.httpClient.put('/api/v1/employee/' + t, { status: e }, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in deleting the user.')
            );
          }
          deleteProgram(t) {
            return this.httpClient.delete('/api/v1/program/' + t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in deleting the program.')
            );
          }
          deleteQuestionnaire(t) {
            return this.httpClient.delete(rF + '/' + t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in deleting the form.')
            );
          }
          deleteCustomer(t) {
            return this.httpClient.delete(aF + t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'e')
            );
          }
          getAllPrograms() {
            return this.httpClient.get(sF, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in fetching programs.')
            );
          }
          getAllQuestionnaire() {
            return this.httpClient.get(rF, { params: { include: 'employee', limit: '999' }, observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in fetching forms.')
            );
          }
          getMessages(t, e = 1) {
            return this.httpClient
              .get('/api/v1/message', {
                params: { 'where[telegramChatId]': t, 'order[createdAt]': 'desc', limit: '100', page: e },
                observe: 'response',
              })
              .pipe(
                E((t) => t),
                hS(() => 'Error in fetching programs.')
              );
          }
          addNewEmployee(t) {
            return this.httpClient.post(oF, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in adding new employee.')
            );
          }
          sendTelegramMessage(t, e) {
            return this.httpClient.post('/api/v1/proxy/telegram/message//' + e, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error while sending message to telegram.')
            );
          }
          addProgram(t) {
            return this.httpClient.post(sF, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in adding new program.')
            );
          }
          addQuestionnaire(t) {
            return this.httpClient.post(rF, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in adding new form.')
            );
          }
          login(t) {
            return this.httpClient.post('/api/v1/employee/login', t).pipe(
              E((e) => {
                if (e.accessToken) return localStorage.setItem('userInfo', JSON.stringify(t)), e.accessToken;
                console.log('error');
              })
            );
          }
          registerEmployee(t) {
            return (
              console.log('inservice', t),
              this.httpClient.post(oF, t, { observe: 'response' }).pipe(
                E((t) => t),
                hS(() => 'Error in registration process.')
              )
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Fm));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      const hF = new Jn('JWT_OPTIONS');
      let uF = (() => {
          class t {
            constructor(t = null) {
              this.tokenGetter = (t && t.tokenGetter) || function () {};
            }
            urlBase64Decode(t) {
              let e = t.replace(/-/g, '+').replace(/_/g, '/');
              switch (e.length % 4) {
                case 0:
                  break;
                case 2:
                  e += '==';
                  break;
                case 3:
                  e += '=';
                  break;
                default:
                  throw new Error('Illegal base64url string!');
              }
              return this.b64DecodeUnicode(e);
            }
            b64decode(t) {
              let e = '';
              if ((t = String(t).replace(/=+$/, '')).length % 4 == 1)
                throw new Error("'atob' failed: The string to be decoded is not correctly encoded.");
              for (
                let n, i, s = 0, r = 0;
                (i = t.charAt(r++));
                ~i && ((n = s % 4 ? 64 * n + i : i), s++ % 4)
                  ? (e += String.fromCharCode(255 & (n >> ((-2 * s) & 6))))
                  : 0
              )
                i = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.indexOf(i);
              return e;
            }
            b64DecodeUnicode(t) {
              return decodeURIComponent(
                Array.prototype.map
                  .call(this.b64decode(t), (t) => '%' + ('00' + t.charCodeAt(0).toString(16)).slice(-2))
                  .join('')
              );
            }
            decodeToken(t = this.tokenGetter()) {
              if (!t || '' === t) return null;
              const e = t.split('.');
              if (3 !== e.length)
                throw new Error(
                  "The inspected token doesn't appear to be a JWT. Check to make sure it has three parts and see https://jwt.io for more."
                );
              const n = this.urlBase64Decode(e[1]);
              if (!n) throw new Error('Cannot decode the token.');
              return JSON.parse(n);
            }
            getTokenExpirationDate(t = this.tokenGetter()) {
              let e;
              if (((e = this.decodeToken(t)), !e || !e.hasOwnProperty('exp'))) return null;
              const n = new Date(0);
              return n.setUTCSeconds(e.exp), n;
            }
            isTokenExpired(t = this.tokenGetter(), e) {
              if (!t || '' === t) return !0;
              const n = this.getTokenExpirationDate(t);
              return (e = e || 0), null !== n && !(n.valueOf() > new Date().valueOf() + 1e3 * e);
            }
            getAuthScheme(t, e) {
              return 'function' == typeof t ? t(e) : t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(hF));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        dF = (() => {
          class t {
            constructor() {
              (this.isLoading = !1), (this.size = 1);
            }
            ngOnInit() {}
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['app-loader']],
              inputs: { isLoading: 'isLoading', size: 'size', message: 'message' },
              decls: 8,
              vars: 4,
              consts: [
                [3, 'hidden'],
                ['mode', 'indeterminate', 3, 'strokeWidth', 'diameter'],
                [1, 'message'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Vo(2, 'mat-progress-spinner', 1),
                  Ca(3, '\n  '),
                  Fo(4, 'span', 2),
                  Ca(5),
                  No(),
                  Ca(6, '\n'),
                  No(),
                  Ca(7, '\n')),
                  2 & t &&
                    (Io('hidden', !e.isLoading),
                    tr(2),
                    Io('strokeWidth', 2)('diameter', 32 * e.size),
                    tr(3),
                    ka(e.message));
              },
              directives: [kO],
              styles: [
                '.mat-progress-spinner[_ngcontent-%COMP%]{display:inline-block;vertical-align:middle}.message[_ngcontent-%COMP%]{margin-left:.5em}',
              ],
            })),
            t
          );
        })();
      function pF(t, e) {
        1 & t &&
          (Fo(0, 'mat-error'),
          Ca(1, '\n                  '),
          Fo(2, 'span', 21),
          Ca(3, 'Username is required'),
          No(),
          Ca(4, '\n                '),
          No());
      }
      function mF(t, e) {
        1 & t &&
          (Fo(0, 'mat-error'),
          Ca(1, '\n                  '),
          Fo(2, 'span', 21),
          Ca(3, 'Password is required'),
          No(),
          Ca(4, '\n                '),
          No());
      }
      function fF(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div', 8),
            Ca(1, '\n        '),
            Fo(2, 'mat-card', 9),
            Ca(3, '\n          '),
            Fo(4, 'form', 10),
            Uo('ngSubmit', function () {
              return Fe(t), Xo().login();
            }),
            Ca(5, '\n            '),
            Fo(6, 'div', 11),
            Ca(7, 'Username or password incorrect.'),
            No(),
            Ca(8, '\n            '),
            Vo(9, 'br'),
            Ca(10, '\n            '),
            Fo(11, 'div', 12),
            Ca(12, '\n              '),
            Fo(13, 'mat-form-field', 13),
            Ca(14, '\n                '),
            Fo(15, 'mat-label'),
            Ca(16, 'Username'),
            No(),
            Ca(17, '\n                '),
            Vo(18, 'input', 14),
            ic(19, 'translate'),
            Ca(20, '\n                '),
            Do(21, pF, 5, 0, 'mat-error', 15),
            Ca(22, '\n              '),
            No(),
            Ca(23, '\n              '),
            Fo(24, 'mat-form-field', 16),
            Ca(25, '\n                '),
            Fo(26, 'mat-label'),
            Ca(27, 'Password'),
            No(),
            Ca(28, '\n                '),
            Vo(29, 'input', 17),
            ic(30, 'translate'),
            Ca(31, '\n                '),
            Fo(32, 'mat-icon', 18),
            Uo('click', function () {
              Fe(t);
              const e = Xo();
              return (e.hide = !e.hide);
            }),
            Ca(33),
            No(),
            Ca(34, '\n                '),
            Do(35, mF, 5, 0, 'mat-error', 15),
            Ca(36, '\n              '),
            No(),
            Ca(37, '\n              '),
            Ca(38, '\n              '),
            Vo(39, 'br'),
            Ca(40, '\n              '),
            Fo(41, 'button', 19),
            Ca(42, '\n                '),
            Vo(43, 'app-loader', 20),
            Ca(44, '\n                '),
            Fo(45, 'span', 21),
            Ca(46, 'Login'),
            No(),
            Ca(47, '\n              '),
            No(),
            Ca(48, '\n              '),
            Fo(49, 'span', 22),
            Ca(50, "Don't have an account?"),
            No(),
            Ca(51, '\n              '),
            Fo(52, 'button', 23),
            Uo('click', function () {
              Fe(t);
              const e = Xo();
              return (e.registerSession = !e.registerSession), (e.loginSession = !e.loginSession);
            }),
            Ca(53, '\n                '),
            Vo(54, 'app-loader', 20),
            Ca(55, '\n                '),
            Fo(56, 'span', 21),
            Ca(57, 'Register'),
            No(),
            Ca(58, '\n              '),
            No(),
            Ca(59, '\n            '),
            No(),
            Ca(60, '\n          '),
            No(),
            Ca(61, '\n        '),
            No(),
            Ca(62, '\n      '),
            No();
        }
        if (2 & t) {
          const t = Xo();
          tr(2),
            Io('@fadeIn', void 0),
            tr(2),
            Io('formGroup', t.loginForm),
            tr(2),
            Io('hidden', !t.error || t.isLoading),
            tr(7),
            Io('hideRequiredMarker', !0),
            tr(5),
            Io('placeholder', sc(19, 14, 'Username')),
            tr(3),
            Io('ngIf', t.loginForm.controls.username.invalid && t.loginForm.controls.username.touched),
            tr(3),
            Io('hideRequiredMarker', !0),
            tr(5),
            Io('placeholder', sc(30, 16, 'Password'))('type', t.hide ? 'password' : 'text'),
            tr(4),
            ka(t.hide ? 'visibility_off' : 'visibility'),
            tr(2),
            Io('ngIf', t.loginForm.controls.password.invalid && t.loginForm.controls.password.touched),
            tr(6),
            Io('disabled', t.loginForm.invalid || t.isLoading),
            tr(2),
            Io('isLoading', t.isLoading),
            tr(11),
            Io('isLoading', t.isLoading);
        }
      }
      function gF(t, e) {
        1 & t &&
          (Fo(0, 'mat-error'),
          Ca(1, '\n                  '),
          Fo(2, 'span', 21),
          Ca(3, 'Username is required'),
          No(),
          Ca(4, '\n                '),
          No());
      }
      function _F(t, e) {
        1 & t &&
          (Fo(0, 'mat-error'),
          Ca(1, '\n                  '),
          Fo(2, 'span', 21),
          Ca(3, 'Email is required'),
          No(),
          Ca(4, '\n                '),
          No());
      }
      function bF(t, e) {
        1 & t &&
          (Fo(0, 'mat-error'),
          Ca(1, '\n                  '),
          Fo(2, 'span', 21),
          Ca(3, 'Password is required'),
          No(),
          Ca(4, '\n                '),
          No());
      }
      function yF(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div', 8),
            Ca(1, '\n        '),
            Fo(2, 'mat-card', 9),
            Ca(3, '\n          '),
            Fo(4, 'form', 10),
            Uo('ngSubmit', function () {
              return Fe(t), Xo().register();
            }),
            Ca(5, '\n            '),
            Vo(6, 'br'),
            Ca(7, '\n            '),
            Fo(8, 'div', 12),
            Ca(9, '\n              '),
            Fo(10, 'mat-form-field', 13),
            Ca(11, '\n                '),
            Fo(12, 'mat-label'),
            Ca(13, 'Name'),
            No(),
            Ca(14, '\n                '),
            Vo(15, 'input', 24),
            ic(16, 'translate'),
            Ca(17, '\n                '),
            Do(18, gF, 5, 0, 'mat-error', 15),
            Ca(19, '\n              '),
            No(),
            Ca(20, '\n\n              '),
            Fo(21, 'mat-form-field', 13),
            Ca(22, '\n                '),
            Fo(23, 'mat-label'),
            Ca(24, 'Email'),
            No(),
            Ca(25, '\n                '),
            Vo(26, 'input', 25),
            ic(27, 'translate'),
            Ca(28, '\n                '),
            Do(29, _F, 5, 0, 'mat-error', 15),
            Ca(30, '\n              '),
            No(),
            Ca(31, '\n\n              '),
            Fo(32, 'mat-form-field', 13),
            Ca(33, '\n                '),
            Fo(34, 'mat-label'),
            Ca(35, 'Password'),
            No(),
            Ca(36, '\n                '),
            Vo(37, 'input', 26),
            ic(38, 'translate'),
            Ca(39, '\n                '),
            Do(40, bF, 5, 0, 'mat-error', 15),
            Ca(41, '\n              '),
            No(),
            Ca(42, '\n\n              '),
            Vo(43, 'br'),
            Ca(44, '\n              '),
            Fo(45, 'button', 19),
            Ca(46, '\n                '),
            Vo(47, 'app-loader', 20),
            Ca(48, '\n                '),
            Fo(49, 'span', 21),
            Ca(50, 'Register'),
            No(),
            Ca(51, '\n              '),
            No(),
            Ca(52, '\n              '),
            Fo(53, 'span', 22),
            Ca(54, 'Already have an account?'),
            No(),
            Ca(55, '\n              '),
            Fo(56, 'button', 23),
            Uo('click', function () {
              Fe(t);
              const e = Xo();
              return (e.registerSession = !e.registerSession), (e.loginSession = !e.loginSession);
            }),
            Ca(57, '\n                '),
            Vo(58, 'app-loader', 20),
            Ca(59, '\n                '),
            Fo(60, 'span', 21),
            Ca(61, 'Login'),
            No(),
            Ca(62, '\n              '),
            No(),
            Ca(63, '\n            '),
            No(),
            Ca(64, '\n          '),
            No(),
            Ca(65, '\n        '),
            No(),
            Ca(66, '\n      '),
            No();
        }
        if (2 & t) {
          const t = Xo();
          tr(2),
            Io('@fadeIn', void 0),
            tr(2),
            Io('formGroup', t.registerForm),
            tr(6),
            Io('hideRequiredMarker', !0),
            tr(5),
            Io('placeholder', sc(16, 14, 'Username')),
            tr(3),
            Io('ngIf', t.registerForm.controls.username.invalid && t.registerForm.controls.username.touched),
            tr(3),
            Io('hideRequiredMarker', !0),
            tr(5),
            Io('placeholder', sc(27, 16, 'Email')),
            tr(3),
            Io('ngIf', t.registerForm.controls.email.invalid && t.registerForm.controls.email.touched),
            tr(3),
            Io('hideRequiredMarker', !0),
            tr(5),
            Io('placeholder', sc(38, 18, 'Password')),
            tr(3),
            Io('ngIf', t.registerForm.controls.password.invalid && t.registerForm.controls.password.touched),
            tr(5),
            Io('disabled', t.registerForm.invalid || t.isLoading),
            tr(2),
            Io('isLoading', t.isLoading),
            tr(11),
            Io('isLoading', t.isLoading);
        }
      }
      new DR('Login');
      let vF = class {
        constructor(t, e, n, i, s, r, o) {
          (this.router = t),
            (this.route = e),
            (this.formBuilder = n),
            (this.authenticationService = i),
            (this.quoteService = s),
            (this.httpClient = r),
            (this._snackBar = o),
            (this.version = pT),
            (this.hide = !0),
            (this.isLoading = !1),
            (this.durationInSeconds = 5),
            (this.tokenExpiry = 36e5),
            (this.registerSession = !1),
            (this.loginSession = !0),
            this.createForm(),
            this.createRegisterForm();
        }
        ngOnInit() {}
        login() {
          const t = new uF();
          this.quoteService
            .login(this.loginForm.value)
            .pipe(
              pS(() => {
                this.loginForm.markAsPristine(), (this.isLoading = !1);
              }),
              $R(this)
            )
            .subscribe(
              (e) => {
                localStorage.setItem('token', e);
                const n = t.decodeToken(e);
                console.log('decode token', n),
                  localStorage.setItem('userStatus', n.userStatus),
                  localStorage.setItem('uuid', n.id),
                  this.authenticationService.autoLogOut(this.tokenExpiry),
                  this.authenticationService.login(this.loginForm.value),
                  this._snackBar.open('Login Successful.', '', {
                    duration: 3e3,
                    verticalPosition: 'top',
                    panelClass: ['blue-snackbar'],
                  }),
                  this.router.navigate([this.route.snapshot.queryParams.redirect || '/'], { replaceUrl: !0 }),
                  (this.isLoading = !1);
              },
              (t) => {
                (this.isLoading = !1),
                  (404 !== t.status && 401 !== t.status) ||
                    this._snackBar.open('Login failed. Check your credentials.', '', {
                      duration: 3e3,
                      panelClass: ['blue-snackbar'],
                    });
              }
            );
        }
        register() {
          this.quoteService
            .registerEmployee(this.registerForm.value)
            .pipe(
              pS(() => {
                this.registerForm.markAsPristine(), (this.isLoading = !1);
              }),
              $R(this)
            )
            .subscribe(
              (t) => {
                console.log(t),
                  this._snackBar.open(
                    'Registration Successful! Your account is being verified and it will be activated soon.',
                    '',
                    { duration: 1e4, verticalPosition: 'top', panelClass: ['blue-snackbar'] }
                  ),
                  (this.loginSession = !this.loginSession),
                  (this.registerSession = !this.registerSession);
              },
              (t) => {
                (this.isLoading = !1),
                  (404 !== t.status && 401 !== t.status) ||
                    this._snackBar.open('Registration failed.', '', { duration: 3e3, panelClass: ['blue-snackbar'] });
              }
            );
        }
        createForm() {
          this.loginForm = this.formBuilder.group({ username: ['', Ud.required], password: ['', Ud.required] });
        }
        createRegisterForm() {
          this.registerForm = this.formBuilder.group({
            username: ['', Ud.required],
            email: ['', Ud.required],
            password: ['', Ud.required],
          });
        }
      };
      (vF.ɵfac = function (t) {
        return new (t || vF)(Ro(iR), Ro(FD), Ro(mm), Ro(iF), Ro(cF), Ro(Fm), Ro(kP));
      }),
        (vF.ɵcmp = Wt({
          type: vF,
          selectors: [['app-login']],
          decls: 29,
          vars: 2,
          consts: [
            [1, 'mat-typography', 'container-fluid'],
            [1, 'row'],
            [1, 'col-6', 'pl-0', 'pr-0', 'd-none', 'd-lg-block'],
            [1, 'login-img-wrapper'],
            [1, 'login-text'],
            [1, 'text-uppercase', 'text-quote'],
            [1, 'col-sm-12', 'col-lg-6', 'col-md-6', 'login-col-wrapper'],
            ['class', 'login-container ff-14', 4, 'ngIf'],
            [1, 'login-container', 'ff-14'],
            [1, 'login-box'],
            ['novalidate', '', 3, 'formGroup', 'ngSubmit'],
            ['translate', '', 1, 'login-error', 3, 'hidden'],
            ['fxLayout', 'column', 1, 'login-fields'],
            ['appearance', 'outline', 1, 'w-100', 3, 'hideRequiredMarker'],
            [
              'type',
              'text',
              'matInput',
              '',
              'formControlName',
              'username',
              'autocomplete',
              'username',
              'required',
              '',
              3,
              'placeholder',
            ],
            [4, 'ngIf'],
            ['appearance', 'outline', 3, 'hideRequiredMarker'],
            [
              'type',
              'password',
              'matInput',
              '',
              'formControlName',
              'password',
              'autocomplete',
              'current-password',
              'required',
              '',
              3,
              'placeholder',
              'type',
            ],
            ['matSuffix', '', 1, 'cursor-pointer', 3, 'click'],
            ['mat-raised-button', '', 'color', 'primary', 'type', 'submit', 3, 'disabled'],
            [1, 'inline-loader', 3, 'isLoading'],
            ['translate', ''],
            [1, 'text-center'],
            ['mat-raised-button', '', 'color', 'primary', 'type', 'button', 3, 'click'],
            ['type', 'text', 'matInput', '', 'formControlName', 'username', 'required', '', 3, 'placeholder'],
            ['type', 'text', 'matInput', '', 'formControlName', 'email', 'required', '', 3, 'placeholder'],
            ['type', 'password', 'matInput', '', 'formControlName', 'password', 'required', '', 3, 'placeholder'],
          ],
          template: function (t, e) {
            1 & t &&
              (Fo(0, 'div', 0),
              Ca(1, '\n  '),
              Fo(2, 'div', 1),
              Ca(3, '\n    '),
              Fo(4, 'div', 2),
              Ca(5, '\n      '),
              Fo(6, 'div', 3),
              Ca(7, '\n        '),
              Fo(8, 'div', 4),
              Ca(9, '\n          '),
              Fo(10, 'header'),
              Ca(11, '\n            '),
              Fo(12, 'h2', 5),
              Ca(13, '#makeithappen'),
              No(),
              Ca(14, '\n          '),
              No(),
              Ca(15, '\n        '),
              No(),
              Ca(16, '\n      '),
              No(),
              Ca(17, '\n    '),
              No(),
              Ca(18, '\n    '),
              Fo(19, 'div', 6),
              Ca(20, '\n      '),
              Do(21, fF, 63, 18, 'div', 7),
              Ca(22, '\n\n      '),
              Do(23, yF, 67, 20, 'div', 7),
              Ca(24, '\n    '),
              No(),
              Ca(25, '\n  '),
              No(),
              Ca(26, '\n  '),
              Ca(27, '\n'),
              No(),
              Ca(28, '\n')),
              2 & t && (tr(21), Io('ngIf', e.loginSession), tr(2), Io('ngIf', e.registerSession));
          },
          directives: [Ru, KC, Yp, pp, em, mg, tL, _C, aC, tS, zd, dp, lm, hm, TS, uC, $C, dF, iC],
          pipes: [fg],
          styles: [
            '[_nghost-%COMP%]{display:flex;flex:1;background-color:#f5f5f5}.inline-loader[_ngcontent-%COMP%]{display:inline-block}.version[_ngcontent-%COMP%]{margin:0}.login-container[_ngcontent-%COMP%], .mat-form-field[_ngcontent-%COMP%]{width:100%;height:100%;display:flex;justify-content:center;align-items:center;flex-direction:column}.login-fields[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:not(:last-child){margin-bottom:8px}.login-error[_ngcontent-%COMP%]{color:#f44336}.login-box[_ngcontent-%COMP%]{width:400px}.login-img-wrapper[_ngcontent-%COMP%]{background:url(https://cdn.shopify.com/s/files/1/0269/8733/1655/files/influencer_collage2_1500x.jpg?v=1587474617);height:100vh;width:100%;background-position:50%;background-repeat:no-repeat;background-attachment:fixed;background-size:cover;background-color:#999;position:relative}.login-img-wrapper[_ngcontent-%COMP%]:before{background:#00000080;position:absolute;content:"";height:100%;width:100%;left:0;top:0}  .mat-form-field-wrapper{width:100%!important}@media (min-width: 320px) and (max-width: 480px){.login-col-wrapper[_ngcontent-%COMP%]{margin-top:50%;margin-bottom:50%}}.text-quote[_ngcontent-%COMP%]{color:#fff;letter-spacing:5px;position:absolute;top:50%;left:30%}',
          ],
          data: {
            animation: [
              yg('fadeIn', [
                Sg(':enter', [xg({ opacity: 0 }), vg('.7s ease-out', xg({ opacity: '1' }))]),
                Sg(':leave', [xg({ opacity: 1 }), vg('.7s ease-out', xg({ opacity: '0' }))]),
              ]),
            ],
          },
        })),
        (vF = JL([HR(), tF('design:paramtypes', [iR, FD, mm, iF, cF, Fm, kP])], vF));
      const wF = [{ path: 'login', component: vF, data: { title: 'Login' } }];
      let xF = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [], imports: [[bR.forChild(wF)], bR] })),
            t
          );
        })(),
        CF = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu, pm, gg, YL, UL, uT, GL, xF]] })),
            t
          );
        })();
      const kF = new DR('AuthenticationGuard');
      let SF = (() => {
        class t {
          constructor(t, e) {
            (this.router = t), (this.credentialsService = e);
          }
          canActivate(t, e) {
            return (
              !!this.credentialsService.isAuthenticated() ||
              (kF.debug('Not authenticated, redirecting and adding redirect url...'),
              this.router.navigate(['/login'], { queryParams: { redirect: e.url }, replaceUrl: !0 }),
              !1)
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(iR), _i(nF));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      function EF(t, e) {
        if ((1 & t && Vo(0, 'div', 9), 2 & t)) {
          const t = Xo();
          ca('height', t.pbThickness, 'px')('color', t.pbColor),
            ha('ngx-position-absolute', t.loaderId !== t.defaultConfig.masterLoaderId)(
              'loading-foreground',
              t.showForeground
            )('foreground-closing', t.foregroundClosing)('fast-closing', t.foregroundClosing && t.fastFadeOut),
            Io('ngClass', 'ngx-progress-bar-' + t.pbDirection);
        }
      }
      function OF(t, e) {
        if ((1 & t && Vo(0, 'img', 10), 2 & t)) {
          const t = Xo();
          ca('width', t.logoSize, 'px')('height', t.logoSize, 'px')('top', t.logoTop),
            Io('ngClass', t.logoPosition)('src', t.trustedLogoUrl, ss);
        }
      }
      function PF(t, e) {
        1 & t && Vo(0, 'div');
      }
      function AF(t, e) {
        if ((1 & t && (Fo(0, 'div'), Ca(1, '\n      '), Do(2, PF, 1, 0, 'div', 11), Ca(3, '\n    '), No()), 2 & t)) {
          const t = Xo();
          ua(t.fgSpinnerClass), tr(2), Io('ngForOf', t.fgDivs);
        }
      }
      function TF(t, e) {
        1 & t && jo(0);
      }
      function DF(t, e) {
        if ((1 & t && (Ca(0, '\n      '), Do(1, TF, 1, 0, 'ng-container', 12), Ca(2, '\n    ')), 2 & t)) {
          const t = Xo();
          tr(1), Io('ngTemplateOutlet', t.fgsTemplate);
        }
      }
      function MF(t, e) {
        1 & t && Vo(0, 'div');
      }
      function RF(t, e) {
        if ((1 & t && (Fo(0, 'div'), Ca(1, '\n    '), Do(2, MF, 1, 0, 'div', 11), Ca(3, '\n  '), No()), 2 & t)) {
          const t = Xo();
          ua(t.bgSpinnerClass), tr(2), Io('ngForOf', t.bgDivs);
        }
      }
      function IF(t, e) {
        1 & t && jo(0);
      }
      function LF(t, e) {
        if ((1 & t && (Ca(0, '\n    '), Do(1, IF, 1, 0, 'ng-container', 12), Ca(2, '\n  ')), 2 & t)) {
          const t = Xo();
          tr(1), Io('ngTemplateOutlet', t.bgsTemplate);
        }
      }
      var FF = (() => (
          (function (t) {
            (t.ballScaleMultiple = 'ball-scale-multiple'),
              (t.ballSpin = 'ball-spin'),
              (t.ballSpinClockwise = 'ball-spin-clockwise'),
              (t.ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating'),
              (t.ballSpinFadeRotating = 'ball-spin-fade-rotating'),
              (t.chasingDots = 'chasing-dots'),
              (t.circle = 'circle'),
              (t.cubeGrid = 'cube-grid'),
              (t.doubleBounce = 'double-bounce'),
              (t.fadingCircle = 'fading-circle'),
              (t.foldingCube = 'folding-cube'),
              (t.pulse = 'pulse'),
              (t.rectangleBounce = 'rectangle-bounce'),
              (t.rectangleBounceParty = 'rectangle-bounce-party'),
              (t.rectangleBouncePulseOut = 'rectangle-bounce-pulse-out'),
              (t.rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid'),
              (t.rotatingPlane = 'rotating-plane'),
              (t.squareJellyBox = 'square-jelly-box'),
              (t.squareLoader = 'square-loader'),
              (t.threeBounce = 'three-bounce'),
              (t.threeStrings = 'three-strings'),
              (t.wanderingCubes = 'wandering-cubes');
          })(FF || (FF = {})),
          FF
        ))(),
        NF = (() => (
          (function (t) {
            (t.bottomCenter = 'bottom-center'),
              (t.bottomLeft = 'bottom-left'),
              (t.bottomRight = 'bottom-right'),
              (t.centerCenter = 'center-center'),
              (t.centerLeft = 'center-left'),
              (t.centerRight = 'center-right'),
              (t.topCenter = 'top-center'),
              (t.topLeft = 'top-left'),
              (t.topRight = 'top-right');
          })(NF || (NF = {})),
          NF
        ))(),
        VF = (() => (
          (function (t) {
            (t.leftToRight = 'ltr'), (t.rightToLeft = 'rtl');
          })(VF || (VF = {})),
          VF
        ))();
      const BF = {},
        zF = !1,
        jF = !0,
        HF = {
          'ball-scale-multiple': { divs: 3, class: 'sk-ball-scale-multiple' },
          'ball-spin': { divs: 8, class: 'sk-ball-spin' },
          'ball-spin-clockwise': { divs: 8, class: 'sk-ball-spin-clockwise' },
          'ball-spin-clockwise-fade-rotating': { divs: 8, class: 'sk-ball-spin-clockwise-fade-rotating' },
          'ball-spin-fade-rotating': { divs: 8, class: 'sk-ball-spin-fade-rotating' },
          'chasing-dots': { divs: 2, class: 'sk-chasing-dots' },
          circle: { divs: 12, class: 'sk-circle' },
          'cube-grid': { divs: 9, class: 'sk-cube-grid' },
          'double-bounce': { divs: 2, class: 'sk-double-bounce' },
          'fading-circle': { divs: 12, class: 'sk-fading-circle' },
          'folding-cube': { divs: 4, class: 'sk-folding-cube' },
          pulse: { divs: 1, class: 'sk-pulse' },
          'rectangle-bounce': { divs: 5, class: 'sk-rectangle-bounce' },
          'rectangle-bounce-party': { divs: 5, class: 'sk-rectangle-bounce-party' },
          'rectangle-bounce-pulse-out': { divs: 5, class: 'sk-rectangle-bounce-pulse-out' },
          'rectangle-bounce-pulse-out-rapid': { divs: 5, class: 'sk-rectangle-bounce-pulse-out-rapid' },
          'rotating-plane': { divs: 1, class: 'sk-rotating-plane' },
          'square-jelly-box': { divs: 2, class: 'sk-square-jelly-box' },
          'square-loader': { divs: 1, class: 'sk-square-loader' },
          'three-bounce': { divs: 3, class: 'sk-three-bounce' },
          'three-strings': { divs: 3, class: 'sk-three-strings' },
          'wandering-cubes': { divs: 2, class: 'sk-wandering-cubes' },
        },
        $F = {
          bgsColor: '#00ACC1',
          bgsOpacity: 0.5,
          bgsPosition: NF.bottomRight,
          bgsSize: 60,
          bgsType: FF.ballSpinClockwise,
          blur: 5,
          delay: 0,
          fastFadeOut: !1,
          fgsColor: '#00ACC1',
          fgsPosition: NF.centerCenter,
          fgsSize: 60,
          fgsType: FF.ballSpinClockwise,
          gap: 24,
          logoPosition: NF.centerCenter,
          logoSize: 120,
          logoUrl: '',
          masterLoaderId: 'master',
          overlayBorderRadius: '0',
          overlayColor: 'rgba(40, 40, 40, 0.8)',
          pbColor: '#00ACC1',
          pbDirection: VF.leftToRight,
          pbThickness: 3,
          hasProgressBar: !0,
          text: '',
          textColor: '#FFFFFF',
          textPosition: NF.centerCenter,
          maxTime: -1,
          minTime: 300,
        },
        qF = new Jn('ngxUiLoaderCustom.config');
      let WF = (() => {
          class t {
            constructor(t) {
              (this.config = t),
                (this.defaultConfig = Object.assign({}, $F)),
                this.config &&
                  (this.config.minTime && this.config.minTime < 0 && (this.config.minTime = 0),
                  (this.defaultConfig = Object.assign(Object.assign({}, this.defaultConfig), this.config))),
                (this.loaders = {}),
                (this.showForeground = new qP({ loaderId: '', isShow: !1 })),
                (this.showForeground$ = this.showForeground.asObservable()),
                (this.showBackground = new qP({ loaderId: '', isShow: !1 })),
                (this.showBackground$ = this.showBackground.asObservable()),
                (this.fgClosing = new qP({ loaderId: '', isShow: !1 })),
                (this.foregroundClosing$ = this.fgClosing.asObservable()),
                (this.bgClosing = new qP({ loaderId: '', isShow: !1 })),
                (this.backgroundClosing$ = this.bgClosing.asObservable());
            }
            bindLoaderData(t) {
              const e = t === this.defaultConfig.masterLoaderId;
              if (this.loaders[t]) {
                if (this.loaders[t].isBound) throw new Error(`[ngx-ui-loader] - loaderId "${t}" is duplicated.`);
                (this.loaders[t].isBound = !0),
                  (this.loaders[t].isMaster = e),
                  this.hasRunningTask(jF, t)
                    ? this.showForeground.next({ loaderId: t, isShow: !0 })
                    : this.hasRunningTask(zF, t) && this.showBackground.next({ loaderId: t, isShow: !0 });
              } else this.createLoaderData(t, e, !0);
            }
            destroyLoaderData(t) {
              this.stopAllLoader(t), delete this.loaders[t];
            }
            getDefaultConfig() {
              return Object.assign({}, this.defaultConfig);
            }
            getLoaders() {
              return JSON.parse(JSON.stringify(this.loaders));
            }
            getLoader(t) {
              return this.loaders[(t = t || this.defaultConfig.masterLoaderId)]
                ? JSON.parse(JSON.stringify(this.loaders[t]))
                : null;
            }
            startLoader(t, e = 'fg-default', n) {
              this.readyToStart(t, e, !0, n) &&
                (this.loaders[t].tasks[e].isOtherRunning ||
                  (this.hasRunningTask(zF, t) &&
                    (this.backgroundCloseout(t), this.showBackground.next({ loaderId: t, isShow: !1 })),
                  this.showForeground.next({ loaderId: t, isShow: !0 })));
            }
            start(t = 'fg-default', e) {
              this.startLoader(this.defaultConfig.masterLoaderId, t, e);
            }
            startBackgroundLoader(t, e = 'bg-default', n) {
              this.readyToStart(t, e, !1, n) &&
                (this.hasRunningTask(jF, t) ||
                  this.loaders[t].tasks[e].isOtherRunning ||
                  this.showBackground.next({ loaderId: t, isShow: !0 }));
            }
            startBackground(t = 'bg-default', e) {
              this.startBackgroundLoader(this.defaultConfig.masterLoaderId, t, e);
            }
            stopLoader(t, e = 'fg-default') {
              this.readyToStop(t, e) &&
                (this.hasRunningTask(jF, t) ||
                  (this.foregroundCloseout(t),
                  this.showForeground.next({ loaderId: t, isShow: !1 }),
                  this.hasRunningTask(zF, t) &&
                    setTimeout(
                      () => {
                        this.hasRunningTask(zF, t) && this.showBackground.next({ loaderId: t, isShow: !0 });
                      },
                      this.defaultConfig.fastFadeOut ? 300 : 500
                    )));
            }
            stop(t = 'fg-default') {
              this.stopLoader(this.defaultConfig.masterLoaderId, t);
            }
            stopBackgroundLoader(t, e = 'bg-default') {
              this.readyToStop(t, e) &&
                (this.hasRunningTask(jF, t) ||
                  this.hasRunningTask(zF, t) ||
                  (this.backgroundCloseout(t), this.showBackground.next({ loaderId: t, isShow: !1 })));
            }
            stopBackground(t = 'bg-default') {
              this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, t);
            }
            stopAllLoader(t) {
              this.loaders[t]
                ? (this.hasRunningTask(jF, t)
                    ? (this.foregroundCloseout(t), this.showForeground.next({ loaderId: t, isShow: !1 }))
                    : this.hasRunningTask(zF, t) &&
                      (this.backgroundCloseout(t), this.showBackground.next({ loaderId: t, isShow: !1 })),
                  this.clearAllTimers(this.loaders[t].tasks),
                  (this.loaders[t].tasks = {}))
                : console.warn(`[ngx-ui-loader] - loaderId "${t}" does not exist.`);
            }
            stopAll() {
              this.stopAllLoader(this.defaultConfig.masterLoaderId);
            }
            hasRunningTask(t, e, n) {
              if (this.loaders[e]) {
                const i = this.loaders[e].tasks;
                return n
                  ? !!i[n] && !!i[n].startAt
                  : Object.keys(i).some((e) => !!i[e].startAt && i[e].isForeground === t);
              }
              return !1;
            }
            createLoaderData(t, e, n) {
              this.loaders[t] || (this.loaders[t] = { loaderId: t, tasks: {}, isMaster: e, isBound: n });
            }
            foregroundCloseout(t) {
              this.fgClosing.next({ loaderId: t, isShow: !0 }),
                setTimeout(
                  () => {
                    this.fgClosing.next({ loaderId: t, isShow: !1 });
                  },
                  this.defaultConfig.fastFadeOut ? 601 : 1001
                );
            }
            backgroundCloseout(t) {
              this.bgClosing.next({ loaderId: t, isShow: !0 }),
                setTimeout(
                  () => {
                    this.bgClosing.next({ loaderId: t, isShow: !1 });
                  },
                  this.defaultConfig.fastFadeOut ? 601 : 1001
                );
            }
            clearTimers(t) {
              clearTimeout(t.delayTimer), clearTimeout(t.maxTimer), clearTimeout(t.minTimer);
            }
            clearAllTimers(t) {
              Object.keys(t).map((e) => {
                this.clearTimers(t[e]);
              });
            }
            readyToStart(t, e, n, i = BF) {
              this.createLoaderData(t, void 0, !1);
              const s = this.hasRunningTask(n, t);
              if (this.loaders[t].tasks[e]) {
                if (this.loaders[t].tasks[e].isForeground !== n)
                  throw new Error(`[ngx-ui-loader] - taskId "${e}" is duplicated.`);
              } else
                this.loaders[t].tasks[e] = {
                  taskId: e,
                  isForeground: n,
                  minTime: i.minTime >= 0 ? i.minTime : this.defaultConfig.minTime,
                  maxTime: i.maxTime ? i.maxTime : this.defaultConfig.maxTime,
                  delay: i.delay >= 0 ? i.delay : this.defaultConfig.delay,
                };
              return (
                !this.setDelayTimer(this.loaders[t].tasks[e], t) &&
                ((this.loaders[t].tasks[e] = Object.assign(Object.assign({}, this.loaders[t].tasks[e]), {
                  isOtherRunning: s,
                  startAt: Date.now(),
                })),
                this.setMaxTimer(this.loaders[t].tasks[e], t),
                !!this.loaders[t].isBound)
              );
            }
            readyToStop(t, e) {
              if (!this.loaders[t]) return console.warn(`[ngx-ui-loader] - loaderId "${t}" does not exist.`), !1;
              const n = this.loaders[t].tasks[e];
              return !(
                !n ||
                (n.isDelayed
                  ? (this.clearTimers(n), delete this.loaders[t].tasks[e], 1)
                  : this.setMinTimer(n, t) || (this.clearTimers(n), delete this.loaders[t].tasks[e], 0))
              );
            }
            setDelayTimer(t, e) {
              if (t.delay > 0) {
                if (t.isDelayed) return !0;
                if (!t.delayTimer)
                  return (
                    (t.isDelayed = !0),
                    (t.delayTimer = setTimeout(() => {
                      (t.isDelayed = !1),
                        t.isForeground ? this.startLoader(e, t.taskId) : this.startBackgroundLoader(e, t.taskId);
                    }, t.delay)),
                    !0
                  );
              }
              return !1;
            }
            setMaxTimer(t, e) {
              t.maxTime > t.minTime &&
                (clearTimeout(t.maxTimer),
                (t.maxTimer = setTimeout(() => {
                  t.isForeground ? this.stopLoader(e, t.taskId) : this.stopBackgroundLoader(e, t.taskId);
                }, t.maxTime)));
            }
            setMinTimer(t, e) {
              const n = Date.now();
              return (
                !!(t.startAt && t.startAt + t.minTime > n) &&
                ((t.minTimer = setTimeout(() => {
                  t.isForeground ? this.stopLoader(e, t.taskId) : this.stopBackgroundLoader(e, t.taskId);
                }, t.startAt + t.minTime - n)),
                !0)
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(qF, 8));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(qF, 8));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        UF = (() => {
          class t {
            constructor(t, e, n) {
              (this.domSanitizer = t),
                (this.changeDetectorRef = e),
                (this.ngxService = n),
                (this.initialized = !1),
                (this.defaultConfig = this.ngxService.getDefaultConfig()),
                (this.bgsColor = this.defaultConfig.bgsColor),
                (this.bgsOpacity = this.defaultConfig.bgsOpacity),
                (this.bgsPosition = this.defaultConfig.bgsPosition),
                (this.bgsSize = this.defaultConfig.bgsSize),
                (this.bgsType = this.defaultConfig.bgsType),
                (this.fastFadeOut = this.defaultConfig.fastFadeOut),
                (this.fgsColor = this.defaultConfig.fgsColor),
                (this.fgsPosition = this.defaultConfig.fgsPosition),
                (this.fgsSize = this.defaultConfig.fgsSize),
                (this.fgsType = this.defaultConfig.fgsType),
                (this.gap = this.defaultConfig.gap),
                (this.loaderId = this.defaultConfig.masterLoaderId),
                (this.logoPosition = this.defaultConfig.logoPosition),
                (this.logoSize = this.defaultConfig.logoSize),
                (this.logoUrl = this.defaultConfig.logoUrl),
                (this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius),
                (this.overlayColor = this.defaultConfig.overlayColor),
                (this.pbColor = this.defaultConfig.pbColor),
                (this.pbDirection = this.defaultConfig.pbDirection),
                (this.pbThickness = this.defaultConfig.pbThickness),
                (this.hasProgressBar = this.defaultConfig.hasProgressBar),
                (this.text = this.defaultConfig.text),
                (this.textColor = this.defaultConfig.textColor),
                (this.textPosition = this.defaultConfig.textPosition);
            }
            ngOnInit() {
              this.initializeSpinners(),
                this.ngxService.bindLoaderData(this.loaderId),
                this.determinePositions(),
                (this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl)),
                (this.showForegroundWatcher = this.ngxService.showForeground$
                  .pipe(_m((t) => this.loaderId === t.loaderId))
                  .subscribe((t) => {
                    (this.showForeground = t.isShow), this.changeDetectorRef.markForCheck();
                  })),
                (this.showBackgroundWatcher = this.ngxService.showBackground$
                  .pipe(_m((t) => this.loaderId === t.loaderId))
                  .subscribe((t) => {
                    (this.showBackground = t.isShow), this.changeDetectorRef.markForCheck();
                  })),
                (this.foregroundClosingWatcher = this.ngxService.foregroundClosing$
                  .pipe(_m((t) => this.loaderId === t.loaderId))
                  .subscribe((t) => {
                    (this.foregroundClosing = t.isShow), this.changeDetectorRef.markForCheck();
                  })),
                (this.backgroundClosingWatcher = this.ngxService.backgroundClosing$
                  .pipe(_m((t) => this.loaderId === t.loaderId))
                  .subscribe((t) => {
                    (this.backgroundClosing = t.isShow), this.changeDetectorRef.markForCheck();
                  })),
                (this.initialized = !0);
            }
            ngOnChanges(t) {
              if (!this.initialized) return;
              const e = t.logoUrl;
              (t.fgsType || t.bgsType) && this.initializeSpinners(),
                this.determinePositions(),
                e && (this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl));
            }
            ngOnDestroy() {
              this.ngxService.destroyLoaderData(this.loaderId),
                this.showForegroundWatcher && this.showForegroundWatcher.unsubscribe(),
                this.showBackgroundWatcher && this.showBackgroundWatcher.unsubscribe(),
                this.foregroundClosingWatcher && this.foregroundClosingWatcher.unsubscribe(),
                this.backgroundClosingWatcher && this.backgroundClosingWatcher.unsubscribe();
            }
            initializeSpinners() {
              (this.fgDivs = Array(HF[this.fgsType].divs).fill(1)),
                (this.fgSpinnerClass = HF[this.fgsType].class),
                (this.bgDivs = Array(HF[this.bgsType].divs).fill(1)),
                (this.bgSpinnerClass = HF[this.bgsType].class);
            }
            determinePositions() {
              (this.logoTop = 'initial'),
                (this.spinnerTop = 'initial'),
                (this.textTop = 'initial'),
                this.logoPosition.startsWith('center')
                  ? (this.logoTop = '50%')
                  : this.logoPosition.startsWith('top') && (this.logoTop = '30px'),
                this.fgsPosition.startsWith('center')
                  ? (this.spinnerTop = '50%')
                  : this.fgsPosition.startsWith('top') && (this.spinnerTop = '30px'),
                this.textPosition.startsWith('center')
                  ? (this.textTop = '50%')
                  : this.textPosition.startsWith('top') && (this.textTop = '30px'),
                this.fgsPosition === NF.centerCenter
                  ? this.logoUrl && this.logoPosition === NF.centerCenter
                    ? this.text && this.textPosition === NF.centerCenter
                      ? ((this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(
                          `calc(50% - ${this.fgsSize / 2}px - 12px - ${this.gap}px)`
                        )),
                        (this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(
                          `calc(50% + ${this.logoSize / 2}px - 12px)`
                        )),
                        (this.textTop = this.domSanitizer.bypassSecurityTrustStyle(
                          `calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${this.fgsSize / 2}px)`
                        )))
                      : ((this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(
                          `calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`
                        )),
                        (this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(
                          `calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`
                        )))
                    : this.text &&
                      this.textPosition === NF.centerCenter &&
                      ((this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(
                        `calc(50% - 12px - ${this.gap / 2}px)`
                      )),
                      (this.textTop = this.domSanitizer.bypassSecurityTrustStyle(
                        `calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`
                      )))
                  : this.logoUrl &&
                    this.logoPosition === NF.centerCenter &&
                    this.text &&
                    this.textPosition === NF.centerCenter &&
                    ((this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(
                      `calc(50% - 12px - ${this.gap / 2}px)`
                    )),
                    (this.textTop = this.domSanitizer.bypassSecurityTrustStyle(
                      `calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`
                    )));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Ed), Ro(kl), Ro(WF));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['ngx-ui-loader']],
              inputs: {
                bgsColor: 'bgsColor',
                bgsOpacity: 'bgsOpacity',
                bgsPosition: 'bgsPosition',
                bgsSize: 'bgsSize',
                bgsType: 'bgsType',
                fgsColor: 'fgsColor',
                fgsPosition: 'fgsPosition',
                fgsSize: 'fgsSize',
                fgsType: 'fgsType',
                gap: 'gap',
                loaderId: 'loaderId',
                logoPosition: 'logoPosition',
                logoSize: 'logoSize',
                logoUrl: 'logoUrl',
                overlayBorderRadius: 'overlayBorderRadius',
                overlayColor: 'overlayColor',
                pbColor: 'pbColor',
                pbDirection: 'pbDirection',
                pbThickness: 'pbThickness',
                hasProgressBar: 'hasProgressBar',
                text: 'text',
                textColor: 'textColor',
                textPosition: 'textPosition',
                bgsTemplate: 'bgsTemplate',
                fgsTemplate: 'fgsTemplate',
              },
              features: [ue],
              decls: 38,
              vars: 50,
              consts: [
                [
                  'class',
                  'ngx-progress-bar',
                  3,
                  'ngx-position-absolute',
                  'ngClass',
                  'height',
                  'color',
                  'loading-foreground',
                  'foreground-closing',
                  'fast-closing',
                  4,
                  'ngIf',
                ],
                [1, 'ngx-overlay'],
                ['class', 'ngx-loading-logo', 3, 'ngClass', 'src', 'width', 'height', 'top', 4, 'ngIf'],
                [1, 'ngx-foreground-spinner', 3, 'ngClass'],
                [3, 'class', 4, 'ngIf', 'ngIfElse'],
                ['foregroundTemplate', ''],
                [1, 'ngx-loading-text', 3, 'ngClass'],
                [1, 'ngx-background-spinner', 3, 'ngClass'],
                ['backgroundTemplate', ''],
                [1, 'ngx-progress-bar', 3, 'ngClass'],
                [1, 'ngx-loading-logo', 3, 'ngClass', 'src'],
                [4, 'ngFor', 'ngForOf'],
                [4, 'ngTemplateOutlet'],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (Ca(0, '\n'),
                    Do(1, EF, 1, 13, 'div', 0),
                    Ca(2, '\n'),
                    Ca(3, '\n\n'),
                    Ca(4, '\n'),
                    Fo(5, 'div', 1),
                    Ca(6, '\n  '),
                    Ca(7, '\n  '),
                    Do(8, OF, 1, 8, 'img', 2),
                    Ca(9, '\n  '),
                    Ca(10, '\n\n  '),
                    Ca(11, '\n  '),
                    Fo(12, 'div', 3),
                    Ca(13, '\n    '),
                    Do(14, AF, 4, 3, 'div', 4),
                    Ca(15, '\n    '),
                    Do(16, DF, 3, 1, 'ng-template', null, 5, Pc),
                    Ca(18, '\n  '),
                    No(),
                    Ca(19, '\n  '),
                    Ca(20, '\n\n  '),
                    Ca(21, '\n  '),
                    Fo(22, 'div', 6),
                    Ca(23),
                    No(),
                    Ca(24, '\n  '),
                    Ca(25, '\n'),
                    No(),
                    Ca(26, '\n'),
                    Ca(27, '\n\n'),
                    Ca(28, '\n'),
                    Fo(29, 'div', 7),
                    Ca(30, '\n  '),
                    Do(31, RF, 4, 3, 'div', 4),
                    Ca(32, '\n  '),
                    Do(33, LF, 3, 1, 'ng-template', null, 8, Pc),
                    Ca(35, '\n'),
                    No(),
                    Ca(36, '\n'),
                    Ca(37, '\n')),
                  2 & t)
                ) {
                  const t = Mo(17),
                    n = Mo(34);
                  tr(1),
                    Io('ngIf', e.hasProgressBar),
                    tr(4),
                    ca('background-color', e.overlayColor)('border-radius', e.overlayBorderRadius),
                    ha('ngx-position-absolute', e.loaderId !== e.defaultConfig.masterLoaderId)(
                      'loading-foreground',
                      e.showForeground
                    )('foreground-closing', e.foregroundClosing)('fast-closing', e.foregroundClosing && e.fastFadeOut),
                    tr(3),
                    Io('ngIf', e.logoUrl),
                    tr(4),
                    ca('color', e.fgsColor)('width', e.fgsSize, 'px')('height', e.fgsSize, 'px')('top', e.spinnerTop),
                    Io('ngClass', e.fgsPosition),
                    tr(2),
                    Io('ngIf', !e.fgsTemplate)('ngIfElse', t),
                    tr(8),
                    ca('top', e.textTop)('color', e.textColor),
                    Io('ngClass', e.textPosition),
                    tr(1),
                    ka(e.text),
                    tr(6),
                    ca('width', e.bgsSize, 'px')('height', e.bgsSize, 'px')('color', e.bgsColor)(
                      'opacity',
                      e.bgsOpacity
                    ),
                    ha('ngx-position-absolute', e.loaderId !== e.defaultConfig.masterLoaderId)(
                      'loading-background',
                      e.showBackground
                    )('background-closing', e.backgroundClosing)('fast-closing', e.backgroundClosing && e.fastFadeOut),
                    Io('ngClass', e.bgsPosition),
                    tr(2),
                    Io('ngIf', !e.bgsTemplate)('ngIfElse', n);
                }
              },
              directives: [Ru, Au, Du, zu],
              styles: [
                '.ngx-progress-bar[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:3px;z-index:99999!important;display:none;color:#00acc1;overflow:hidden}.ngx-progress-bar.foreground-closing[_ngcontent-%COMP%], .ngx-progress-bar.loading-foreground[_ngcontent-%COMP%]{display:block}.ngx-progress-bar.foreground-closing[_ngcontent-%COMP%]{opacity:0!important;transition:opacity .5s ease-out .5s}.ngx-progress-bar.fast-closing[_ngcontent-%COMP%]{transition:opacity .3s ease-out .3s!important}.ngx-progress-bar[_ngcontent-%COMP%]:after, .ngx-progress-bar[_ngcontent-%COMP%]:before{background-color:currentColor;content:"";display:block;width:100%;height:100%;position:absolute;top:0}.ngx-progress-bar-ltr[_ngcontent-%COMP%]:before{transform:translate3d(-100%,0,0)}.ngx-progress-bar-ltr[_ngcontent-%COMP%]:after{animation:progressBar-slide-ltr 12s ease-out 0s 1 normal;transform:translate3d(-5%,0,0)}.ngx-progress-bar-rtl[_ngcontent-%COMP%]:before{transform:translate3d(100%,0,0)}.ngx-progress-bar-rtl[_ngcontent-%COMP%]:after{animation:progressBar-slide-rtl 12s ease-out 0s 1 normal;transform:translate3d(5%,0,0)}.foreground-closing.ngx-progress-bar-ltr[_ngcontent-%COMP%]:before{animation:progressBar-slide-complete-ltr 1s ease-out 0s 1;transform:translateZ(0)}.fast-closing.ngx-progress-bar-ltr[_ngcontent-%COMP%]:before{animation:progressBar-slide-complete-ltr .6s ease-out 0s 1!important}.foreground-closing.ngx-progress-bar-rtl[_ngcontent-%COMP%]:before{animation:progressBar-slide-complete-rtl 1s ease-out 0s 1;transform:translateZ(0)}.fast-closing.ngx-progress-bar-rtl[_ngcontent-%COMP%]:before{animation:progressBar-slide-complete-rtl .6s ease-out 0s 1!important}@keyframes progressBar-slide-ltr{0%{transform:translate3d(-100%,0,0)}to{transform:translate3d(-5%,0,0)}}@keyframes progressBar-slide-rtl{0%{transform:translate3d(100%,0,0)}to{transform:translate3d(5%,0,0)}}@keyframes progressBar-slide-complete-ltr{0%{transform:translate3d(-75%,0,0)}50%{transform:translateZ(0)}}@keyframes progressBar-slide-complete-rtl{0%{transform:translate3d(75%,0,0)}50%{transform:translateZ(0)}}.ngx-overlay[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;z-index:99998!important;background-color:rgba(40,40,40,.8);cursor:progress;display:none}.ngx-overlay.foreground-closing[_ngcontent-%COMP%], .ngx-overlay.loading-foreground[_ngcontent-%COMP%]{display:block}.ngx-overlay.foreground-closing[_ngcontent-%COMP%]{opacity:0!important;transition:opacity .5s ease-out .5s}.ngx-overlay.fast-closing[_ngcontent-%COMP%]{transition:opacity .3s ease-out .3s!important}.ngx-overlay[_ngcontent-%COMP%] > .ngx-foreground-spinner[_ngcontent-%COMP%]{position:fixed;width:60px;height:60px;margin:0;color:#00acc1}.ngx-overlay[_ngcontent-%COMP%] > .ngx-loading-logo[_ngcontent-%COMP%]{position:fixed;margin:0;width:120px;height:120px}.ngx-overlay[_ngcontent-%COMP%] > .ngx-loading-text[_ngcontent-%COMP%]{position:fixed;margin:0;font-family:sans-serif;font-weight:400;font-size:1.2em;color:#fff}.ngx-background-spinner[_ngcontent-%COMP%]{position:fixed;z-index:99997!important;width:60px;height:60px;margin:0;color:#00acc1;opacity:.6;display:none}.ngx-background-spinner.background-closing[_ngcontent-%COMP%], .ngx-background-spinner.loading-background[_ngcontent-%COMP%]{display:block}.ngx-background-spinner.background-closing[_ngcontent-%COMP%]{opacity:0!important;transition:opacity .7s ease-out}.ngx-background-spinner.fast-closing[_ngcontent-%COMP%]{transition:opacity .4s ease-out!important}.ngx-position-absolute[_ngcontent-%COMP%], .ngx-position-absolute[_ngcontent-%COMP%] > .ngx-foreground-spinner[_ngcontent-%COMP%], .ngx-position-absolute[_ngcontent-%COMP%] > .ngx-loading-logo[_ngcontent-%COMP%], .ngx-position-absolute[_ngcontent-%COMP%] > .ngx-loading-text[_ngcontent-%COMP%]{position:absolute!important}.ngx-position-absolute.ngx-progress-bar[_ngcontent-%COMP%]{z-index:99996!important}.ngx-position-absolute.ngx-overlay[_ngcontent-%COMP%]{z-index:99995!important}.ngx-position-absolute.ngx-background-spinner[_ngcontent-%COMP%], .ngx-position-absolute[_ngcontent-%COMP%]   .sk-square-jelly-box[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{z-index:99994!important}.top-left[_ngcontent-%COMP%]{top:30px;left:30px}.top-center[_ngcontent-%COMP%]{top:30px;left:50%;transform:translateX(-50%)}.top-right[_ngcontent-%COMP%]{top:30px;right:30px}.center-left[_ngcontent-%COMP%]{top:50%;left:30px;transform:translateY(-50%)}.center-center[_ngcontent-%COMP%]{top:50%;left:50%;transform:translate(-50%,-50%)}.center-right[_ngcontent-%COMP%]{top:50%;right:30px;transform:translateY(-50%)}.bottom-left[_ngcontent-%COMP%]{bottom:30px;left:30px}.bottom-center[_ngcontent-%COMP%]{bottom:30px;left:50%;transform:translateX(-50%)}.bottom-right[_ngcontent-%COMP%]{bottom:30px;right:30px}.sk-ball-scale-multiple[_ngcontent-%COMP%], .sk-ball-scale-multiple[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-ball-scale-multiple[_ngcontent-%COMP%]{width:100%;height:100%;font-size:0}.sk-ball-scale-multiple[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;position:absolute;top:0;left:0;width:100%;height:100%;border-radius:100%;opacity:0;animation:ball-scale-multiple 1s linear 0s infinite}.sk-ball-scale-multiple[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){animation-delay:.2s}.sk-ball-scale-multiple[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){animation-delay:.4s}@keyframes ball-scale-multiple{0%{opacity:0;transform:scale(0)}5%{opacity:.75}to{opacity:0;transform:scale(1)}}.sk-ball-spin[_ngcontent-%COMP%], .sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-ball-spin[_ngcontent-%COMP%]{width:100%;height:100%;font-size:0}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;position:absolute;top:50%;left:50%;width:25%;height:25%;margin-top:-12.5%;margin-left:-12.5%;border-radius:100%;animation:ball-spin-clockwise 1s ease-in-out infinite}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{top:5%;left:50%;animation-delay:-1.125s}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){top:18.1801948466%;left:81.8198051534%;animation-delay:-1.25s}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){top:50%;left:95%;animation-delay:-1.375s}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){top:81.8198051534%;left:81.8198051534%;animation-delay:-1.5s}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){top:94.9999999966%;left:50.0000000005%;animation-delay:-1.625s}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6){top:81.8198046966%;left:18.1801949248%;animation-delay:-1.75s}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7){top:49.9999750815%;left:5.0000051215%;animation-delay:-1.875s}.sk-ball-spin[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8){top:18.179464974%;left:18.1803700518%;animation-delay:-2s}@keyframes ball-spin{0%,to{opacity:1;transform:scale(1)}20%{opacity:1}80%{opacity:0;transform:scale(0)}}.sk-ball-spin-clockwise[_ngcontent-%COMP%], .sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-ball-spin-clockwise[_ngcontent-%COMP%]{width:100%;height:100%;font-size:0}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;position:absolute;top:50%;left:50%;width:25%;height:25%;margin-top:-12.5%;margin-left:-12.5%;border-radius:100%;animation:ball-spin-clockwise 1s ease-in-out infinite}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{top:5%;left:50%;animation-delay:-.875s}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){top:18.1801948466%;left:81.8198051534%;animation-delay:-.75s}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){top:50%;left:95%;animation-delay:-.625s}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){top:81.8198051534%;left:81.8198051534%;animation-delay:-.5s}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){top:94.9999999966%;left:50.0000000005%;animation-delay:-.375s}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6){top:81.8198046966%;left:18.1801949248%;animation-delay:-.25s}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7){top:49.9999750815%;left:5.0000051215%;animation-delay:-.125s}.sk-ball-spin-clockwise[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8){top:18.179464974%;left:18.1803700518%;animation-delay:0s}@keyframes ball-spin-clockwise{0%,to{opacity:1;transform:scale(1)}20%{opacity:1}80%{opacity:0;transform:scale(0)}}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%], .sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%]{font-size:0;width:100%;height:100%;animation:ball-spin-clockwise-fade-rotating-rotate 6s linear infinite}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;position:absolute;top:50%;left:50%;width:25%;height:25%;margin-top:-12.5%;margin-left:-12.5%;border-radius:100%;animation:ball-spin-clockwise-fade-rotating 1s linear infinite}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{top:5%;left:50%;animation-delay:-.875s}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){top:18.1801948466%;left:81.8198051534%;animation-delay:-.75s}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){top:50%;left:95%;animation-delay:-.625s}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){top:81.8198051534%;left:81.8198051534%;animation-delay:-.5s}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){top:94.9999999966%;left:50.0000000005%;animation-delay:-.375s}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6){top:81.8198046966%;left:18.1801949248%;animation-delay:-.25s}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7){top:49.9999750815%;left:5.0000051215%;animation-delay:-.125s}.sk-ball-spin-clockwise-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8){top:18.179464974%;left:18.1803700518%;animation-delay:0s}@keyframes ball-spin-clockwise-fade-rotating-rotate{to{transform:rotate(-1turn)}}@keyframes ball-spin-clockwise-fade-rotating{50%{opacity:.25;transform:scale(.5)}to{opacity:1;transform:scale(1)}}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%], .sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%]{width:100%;height:100%;font-size:0;animation:ball-spin-fade-rotate 6s linear infinite}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;position:absolute;top:50%;left:50%;width:25%;height:25%;margin-top:-12.5%;margin-left:-12.5%;border-radius:100%;animation:ball-spin-fade 1s linear infinite}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{top:5%;left:50%;animation-delay:-1.125s}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){top:18.1801948466%;left:81.8198051534%;animation-delay:-1.25s}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){top:50%;left:95%;animation-delay:-1.375s}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){top:81.8198051534%;left:81.8198051534%;animation-delay:-1.5s}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){top:94.9999999966%;left:50.0000000005%;animation-delay:-1.625s}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6){top:81.8198046966%;left:18.1801949248%;animation-delay:-1.75s}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7){top:49.9999750815%;left:5.0000051215%;animation-delay:-1.875s}.sk-ball-spin-fade-rotating[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8){top:18.179464974%;left:18.1803700518%;animation-delay:-2s}@keyframes ball-spin-fade-rotate{to{transform:rotate(1turn)}}@keyframes ball-spin-fade{0%,to{opacity:1;transform:scale(1)}50%{opacity:.25;transform:scale(.5)}}.sk-chasing-dots[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;position:absolute;text-align:center;animation:sk-chasingDots-rotate 2s linear infinite}.sk-chasing-dots[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:60%;height:60%;display:inline-block;position:absolute;top:0;background-color:currentColor;border-radius:100%;animation:sk-chasingDots-bounce 2s ease-in-out infinite}.sk-chasing-dots[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){top:auto;bottom:0;animation-delay:-1s}@keyframes sk-chasingDots-rotate{to{transform:rotate(1turn)}}@keyframes sk-chasingDots-bounce{0%,to{transform:scale(0)}50%{transform:scale(1)}}.sk-circle[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;position:relative}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;left:0;top:0}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:before{content:"";display:block;margin:0 auto;width:15%;height:15%;background-color:currentColor;border-radius:100%;animation:sk-circle-bounceDelay 1.2s ease-in-out infinite both}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){transform:rotate(30deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){transform:rotate(60deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){transform:rotate(90deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){transform:rotate(120deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6){transform:rotate(150deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7){transform:rotate(180deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8){transform:rotate(210deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(9){transform:rotate(240deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(10){transform:rotate(270deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(11){transform:rotate(300deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(12){transform:rotate(330deg)}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2):before{animation-delay:-1.1s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3):before{animation-delay:-1s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4):before{animation-delay:-.9s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5):before{animation-delay:-.8s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6):before{animation-delay:-.7s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7):before{animation-delay:-.6s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8):before{animation-delay:-.5s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(9):before{animation-delay:-.4s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(10):before{animation-delay:-.3s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(11):before{animation-delay:-.2s}.sk-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(12):before{animation-delay:-.1s}@keyframes sk-circle-bounceDelay{0%,80%,to{transform:scale(0)}40%{transform:scale(1)}}.sk-cube-grid[_ngcontent-%COMP%]{width:100%;height:100%;margin:auto}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:33%;height:33%;background-color:currentColor;float:left;animation:sk-cubeGrid-scaleDelay 1.3s ease-in-out infinite}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{animation-delay:.2s}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){animation-delay:.3s}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){animation-delay:.4s}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){animation-delay:.1s}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){animation-delay:.2s}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6){animation-delay:.3s}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7){animation-delay:0s}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8){animation-delay:.1s}.sk-cube-grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(9){animation-delay:.2s}@keyframes sk-cubeGrid-scaleDelay{0%,70%,to{transform:scaleX(1)}35%{transform:scale3D(0,0,1)}}.sk-double-bounce[_ngcontent-%COMP%]{width:100%;height:100%;position:relative;margin:auto}.sk-double-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:100%;height:100%;border-radius:50%;background-color:currentColor;opacity:.6;position:absolute;top:0;left:0;animation:sk-doubleBounce-bounce 2s ease-in-out infinite}.sk-double-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){animation-delay:-1s}@keyframes sk-doubleBounce-bounce{0%,to{transform:scale(0)}50%{transform:scale(1)}}.sk-fading-circle[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;position:relative}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:before{content:"";display:block;margin:0 auto;width:15%;height:15%;background-color:currentColor;border-radius:100%;animation:sk-fadingCircle-FadeDelay 1.2s ease-in-out infinite both}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){transform:rotate(30deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){transform:rotate(60deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){transform:rotate(90deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){transform:rotate(120deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6){transform:rotate(150deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7){transform:rotate(180deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8){transform:rotate(210deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(9){transform:rotate(240deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(10){transform:rotate(270deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(11){transform:rotate(300deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(12){transform:rotate(330deg)}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2):before{animation-delay:-1.1s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3):before{animation-delay:-1s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4):before{animation-delay:-.9s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5):before{animation-delay:-.8s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(6):before{animation-delay:-.7s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(7):before{animation-delay:-.6s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(8):before{animation-delay:-.5s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(9):before{animation-delay:-.4s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(10):before{animation-delay:-.3s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(11):before{animation-delay:-.2s}.sk-fading-circle[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(12):before{animation-delay:-.1s}@keyframes sk-fadingCircle-FadeDelay{0%,39%,to{opacity:0}40%{opacity:1}}.sk-folding-cube[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;position:relative;transform:rotate(45deg)}.sk-folding-cube[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{float:left;width:50%;height:50%;position:relative;transform:scale(1.1)}.sk-folding-cube[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:before{content:"";position:absolute;top:0;left:0;width:100%;height:100%;background-color:currentColor;animation:sk-foldingCube-angle 2.4s linear infinite both;transform-origin:100% 100%}.sk-folding-cube[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){transform:scale(1.1) rotate(90deg)}.sk-folding-cube[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){transform:scale(1.1) rotate(270deg)}.sk-folding-cube[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){transform:scale(1.1) rotate(180deg)}.sk-folding-cube[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2):before{animation-delay:.3s}.sk-folding-cube[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3):before{animation-delay:.9s}.sk-folding-cube[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4):before{animation-delay:.6s}@keyframes sk-foldingCube-angle{0%,10%{transform:perspective(140px) rotateX(-180deg);opacity:0}25%,75%{transform:perspective(140px) rotateX(0deg);opacity:1}90%,to{transform:perspective(140px) rotateY(180deg);opacity:0}}.sk-pulse[_ngcontent-%COMP%]{width:100%;height:100%;margin:auto}.sk-pulse[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:100%;height:100%;background-color:currentColor;border-radius:100%;animation:sk-pulse-scaleOut 1s ease-in-out infinite}@keyframes sk-pulse-scaleOut{0%{transform:scale(0)}to{transform:scale(1);opacity:0}}.sk-rectangle-bounce[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;text-align:center;font-size:0}.sk-rectangle-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{background-color:currentColor;height:100%;width:10%;margin:0 5%;display:inline-block;animation:sk-rectangleBounce-stretchDelay 1.2s ease-in-out infinite}.sk-rectangle-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){animation-delay:-1.1s}.sk-rectangle-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){animation-delay:-1s}.sk-rectangle-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){animation-delay:-.9s}.sk-rectangle-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){animation-delay:-.8s}@keyframes sk-rectangleBounce-stretchDelay{0%,40%,to{transform:scaleY(.4)}20%{transform:scaleY(1)}}.sk-rectangle-bounce-party[_ngcontent-%COMP%], .sk-rectangle-bounce-party[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-rectangle-bounce-party[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;text-align:center;font-size:0}.sk-rectangle-bounce-party[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;width:10%;height:100%;margin:0 5%;border-radius:0;animation-name:rectangle-bounce-party;animation-iteration-count:infinite}.sk-rectangle-bounce-party[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{animation-duration:.43s;animation-delay:-.23s}.sk-rectangle-bounce-party[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){animation-duration:.62s;animation-delay:-.32s}.sk-rectangle-bounce-party[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){animation-duration:.43s;animation-delay:-.44s}.sk-rectangle-bounce-party[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){animation-duration:.8s;animation-delay:-.31s}.sk-rectangle-bounce-party[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){animation-duration:.74s;animation-delay:-.24s}@keyframes rectangle-bounce-party{0%{transform:scaleY(1)}50%{transform:scaleY(.4)}to{transform:scaleY(1)}}.sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%], .sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;text-align:center;font-size:0}.sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;width:10%;height:100%;margin:0 5%;border-radius:0;animation:rectangle-bounce-pulse-out .9s cubic-bezier(.85,.25,.37,.85) infinite}.sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){animation-delay:-.9s}.sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2), .sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){animation-delay:-.7s}.sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .sk-rectangle-bounce-pulse-out[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){animation-delay:-.5s}@keyframes rectangle-bounce-pulse-out{0%{transform:scaley(1)}50%{transform:scaley(.4)}to{transform:scaley(1)}}.sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%], .sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;text-align:center;font-size:0}.sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;width:10%;height:100%;margin:0 5%;border-radius:0;animation:rectangle-bounce-pulse-out-rapid .9s cubic-bezier(.11,.49,.38,.78) infinite}.sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){animation-delay:-.9s}.sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2), .sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(4){animation-delay:-.65s}.sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .sk-rectangle-bounce-pulse-out-rapid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(5){animation-delay:-.4s}@keyframes rectangle-bounce-pulse-out-rapid{0%{transform:scaley(1)}80%{transform:scaley(.4)}90%{transform:scaley(1)}}.sk-rotating-plane[_ngcontent-%COMP%]{width:100%;height:100%;text-align:center;margin:auto}.sk-rotating-plane[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:100%;height:100%;background-color:currentColor;animation:sk-rotatePlane 1.2s ease-in-out infinite}@keyframes sk-rotatePlane{0%{transform:perspective(120px) rotateX(0deg) rotateY(0deg)}50%{transform:perspective(120px) rotateX(-180.1deg) rotateY(0deg)}to{transform:perspective(120px) rotateX(-180deg) rotateY(-179.9deg)}}.sk-square-jelly-box[_ngcontent-%COMP%], .sk-square-jelly-box[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-square-jelly-box[_ngcontent-%COMP%]{width:100%;height:100%;font-size:0}.sk-square-jelly-box[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid}.sk-square-jelly-box[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child, .sk-square-jelly-box[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){position:absolute;left:0;width:100%}.sk-square-jelly-box[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{top:-25%;z-index:99997;height:100%;border-radius:10%;animation:square-jelly-box-animate .6s linear -.1s infinite}.sk-square-jelly-box[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){bottom:-9%;height:10%;background:#000;border-radius:50%;opacity:.2;animation:square-jelly-box-shadow .6s linear -.1s infinite}@keyframes square-jelly-box-animate{17%{border-bottom-right-radius:10%}25%{transform:translateY(25%) rotate(22.5deg)}50%{border-bottom-right-radius:100%;transform:translateY(50%) scaleY(.9) rotate(45deg)}75%{transform:translateY(25%) rotate(67.5deg)}to{transform:translateY(0) rotate(90deg)}}@keyframes square-jelly-box-shadow{50%{transform:scaleX(1.25)}}.sk-square-loader[_ngcontent-%COMP%], .sk-square-loader[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:relative;box-sizing:border-box}.sk-square-loader[_ngcontent-%COMP%]{font-size:0;width:100%;height:100%}.sk-square-loader[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{display:inline-block;float:none;background-color:currentColor;border:0 solid;width:100%;height:100%;background:transparent;border-width:3px;border-radius:0;animation:square-loader 2s ease infinite}.sk-square-loader[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:after{display:inline-block;width:100%;vertical-align:top;content:"";background-color:currentColor;animation:square-loader-inner 2s ease-in infinite}@keyframes square-loader{0%{transform:rotate(0deg)}25%{transform:rotate(180deg)}50%{transform:rotate(180deg)}75%{transform:rotate(1turn)}to{transform:rotate(1turn)}}@keyframes square-loader-inner{0%{height:0}25%{height:0}50%{height:100%}75%{height:100%}to{height:0}}.sk-three-bounce[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;text-align:center}.sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{margin-top:35%;width:30%;height:30%;background-color:currentColor;border-radius:100%;display:inline-block;animation:sk-threeBounce-bounceDelay 1.4s ease-in-out infinite both}.bottom-center[_ngcontent-%COMP%] > .sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%], .bottom-left[_ngcontent-%COMP%] > .sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%], .bottom-right[_ngcontent-%COMP%] > .sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{margin-top:70%!important}.top-center[_ngcontent-%COMP%] > .sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%], .top-left[_ngcontent-%COMP%] > .sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%], .top-right[_ngcontent-%COMP%] > .sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{margin-top:0!important}.sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{animation-delay:-.32s}.sk-three-bounce[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){animation-delay:-.16s}@keyframes sk-threeBounce-bounceDelay{0%,80%,to{transform:scale(0)}40%{transform:scale(1)}}.sk-three-strings[_ngcontent-%COMP%], .sk-three-strings[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{width:100%;height:100%}.sk-three-strings[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{position:absolute;box-sizing:border-box;border-radius:50%}.sk-three-strings[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:first-child{left:0;top:0;animation:sk-threeStrings-rotateOne 1s linear infinite;border-bottom:3px solid}.sk-three-strings[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){right:0;top:0;animation:sk-threeStrings-rotateTwo 1s linear infinite;border-right:3px solid}.sk-three-strings[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(3){right:0;bottom:0;animation:sk-threeStrings-rotateThree 1s linear infinite;border-top:3px solid}@keyframes sk-threeStrings-rotateOne{0%{transform:rotateX(35deg) rotateY(-45deg) rotate(0deg)}to{transform:rotateX(35deg) rotateY(-45deg) rotate(1turn)}}@keyframes sk-threeStrings-rotateTwo{0%{transform:rotateX(50deg) rotateY(10deg) rotate(0deg)}to{transform:rotateX(50deg) rotateY(10deg) rotate(1turn)}}@keyframes sk-threeStrings-rotateThree{0%{transform:rotateX(35deg) rotateY(55deg) rotate(0deg)}to{transform:rotateX(35deg) rotateY(55deg) rotate(1turn)}}.sk-wandering-cubes[_ngcontent-%COMP%]{margin:auto;width:100%;height:100%;position:relative;text-align:center}.sk-wandering-cubes[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{background-color:currentColor;width:25%;height:25%;position:absolute;top:0;left:0;animation:sk-wanderingCubes-cubeMove 1.8s ease-in-out infinite}.sk-wandering-cubes[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]:nth-child(2){animation-delay:-.9s}@keyframes sk-wanderingCubes-cubeMove{25%{transform:translateX(290%) rotate(-90deg) scale(.5)}50%{transform:translateX(290%) translateY(290%) rotate(-179deg)}50.1%{transform:translateX(290%) translateY(290%) rotate(-180deg)}75%{transform:translateX(0) translateY(290%) rotate(-270deg) scale(.5)}to{transform:rotate(-1turn)}}',
              ],
              changeDetection: 0,
            })),
            t
          );
        })(),
        YF = (() => {
          class t {
            static forRoot(e) {
              return { ngModule: t, providers: [{ provide: qF, useValue: e }] };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })();
      new Jn('ngxUiLoaderRouterCustom.config'), new Jn('ngxUiLoaderHttpCustom.config');
      var GF = n(12);
      class QF {
        call(t, e) {
          return e.subscribe(new KF(t));
        }
      }
      class KF extends LE {
        constructor(t) {
          super(t), (this.hasFirst = !1), (this.observables = []), (this.subscriptions = []);
        }
        _next(t) {
          this.observables.push(t);
        }
        _complete() {
          const t = this.observables,
            e = t.length;
          if (0 === e) this.destination.complete();
          else {
            for (let n = 0; n < e && !this.hasFirst; n++) {
              const e = NE(this, t[n], void 0, n);
              this.subscriptions && this.subscriptions.push(e), this.add(e);
            }
            this.observables = null;
          }
        }
        notifyNext(t, e, n) {
          if (!this.hasFirst) {
            this.hasFirst = !0;
            for (let t = 0; t < this.subscriptions.length; t++)
              if (t !== n) {
                let e = this.subscriptions[t];
                e.unsubscribe(), this.remove(e);
              }
            this.subscriptions = null;
          }
          this.destination.next(e);
        }
      }
      function XF(...t) {
        const e = t[t.length - 1];
        return 'function' == typeof e && t.pop(), $(t, void 0).lift(new ZF(e));
      }
      class ZF {
        constructor(t) {
          this.resultSelector = t;
        }
        call(t, e) {
          return e.subscribe(new JF(t, this.resultSelector));
        }
      }
      class JF extends m {
        constructor(t, e, n = Object.create(null)) {
          super(t),
            (this.resultSelector = e),
            (this.iterators = []),
            (this.active = 0),
            (this.resultSelector = 'function' == typeof e ? e : void 0);
        }
        _next(t) {
          const e = this.iterators;
          l(t)
            ? e.push(new eN(t))
            : e.push('function' == typeof t[T] ? new tN(t[T]()) : new nN(this.destination, this, t));
        }
        _complete() {
          const t = this.iterators,
            e = t.length;
          if ((this.unsubscribe(), 0 !== e)) {
            this.active = e;
            for (let n = 0; n < e; n++) {
              let e = t[n];
              e.stillUnsubscribed ? this.destination.add(e.subscribe()) : this.active--;
            }
          } else this.destination.complete();
        }
        notifyInactive() {
          this.active--, 0 === this.active && this.destination.complete();
        }
        checkIterators() {
          const t = this.iterators,
            e = t.length,
            n = this.destination;
          for (let r = 0; r < e; r++) {
            let e = t[r];
            if ('function' == typeof e.hasValue && !e.hasValue()) return;
          }
          let i = !1;
          const s = [];
          for (let r = 0; r < e; r++) {
            let e = t[r],
              o = e.next();
            if ((e.hasCompleted() && (i = !0), o.done)) return void n.complete();
            s.push(o.value);
          }
          this.resultSelector ? this._tryresultSelector(s) : n.next(s), i && n.complete();
        }
        _tryresultSelector(t) {
          let e;
          try {
            e = this.resultSelector.apply(this, t);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(e);
        }
      }
      class tN {
        constructor(t) {
          (this.iterator = t), (this.nextResult = t.next());
        }
        hasValue() {
          return !0;
        }
        next() {
          const t = this.nextResult;
          return (this.nextResult = this.iterator.next()), t;
        }
        hasCompleted() {
          const t = this.nextResult;
          return Boolean(t && t.done);
        }
      }
      class eN {
        constructor(t) {
          (this.array = t), (this.index = 0), (this.length = 0), (this.length = t.length);
        }
        [T]() {
          return this;
        }
        next(t) {
          const e = this.index++;
          return e < this.length ? { value: this.array[e], done: !1 } : { value: null, done: !0 };
        }
        hasValue() {
          return this.array.length > this.index;
        }
        hasCompleted() {
          return this.array.length === this.index;
        }
      }
      class nN extends N {
        constructor(t, e, n) {
          super(t),
            (this.parent = e),
            (this.observable = n),
            (this.stillUnsubscribed = !0),
            (this.buffer = []),
            (this.isComplete = !1);
        }
        [T]() {
          return this;
        }
        next() {
          const t = this.buffer;
          return 0 === t.length && this.isComplete ? { value: null, done: !0 } : { value: t.shift(), done: !1 };
        }
        hasValue() {
          return this.buffer.length > 0;
        }
        hasCompleted() {
          return 0 === this.buffer.length && this.isComplete;
        }
        notifyComplete() {
          this.buffer.length > 0 ? ((this.isComplete = !0), this.parent.notifyInactive()) : this.destination.complete();
        }
        notifyNext(t) {
          this.buffer.push(t), this.parent.checkIterators();
        }
        subscribe() {
          return V(this.observable, new F(this));
        }
      }
      function iN(...t) {
        return (e) => {
          let n;
          return 'function' == typeof t[t.length - 1] && (n = t.pop()), e.lift(new sN(t, n));
        };
      }
      class sN {
        constructor(t, e) {
          (this.observables = t), (this.project = e);
        }
        call(t, e) {
          return e.subscribe(new rN(t, this.observables, this.project));
        }
      }
      class rN extends LE {
        constructor(t, e, n) {
          super(t), (this.observables = e), (this.project = n), (this.toRespond = []);
          const i = e.length;
          this.values = new Array(i);
          for (let s = 0; s < i; s++) this.toRespond.push(s);
          for (let s = 0; s < i; s++) this.add(NE(this, e[s], void 0, s));
        }
        notifyNext(t, e, n) {
          this.values[n] = e;
          const i = this.toRespond;
          if (i.length > 0) {
            const t = i.indexOf(n);
            -1 !== t && i.splice(t, 1);
          }
        }
        notifyComplete() {}
        _next(t) {
          if (0 === this.toRespond.length) {
            const e = [t, ...this.values];
            this.project ? this._tryProject(e) : this.destination.next(e);
          }
        }
        _tryProject(t) {
          let e;
          try {
            e = this.project.apply(this, t);
          } catch (n) {
            return void this.destination.error(n);
          }
          this.destination.next(e);
        }
      }
      const oN = ['*'],
        aN = ['dialog'];
      function lN(t) {
        return null != t;
      }
      function cN(t) {
        return (t || document.body).getBoundingClientRect();
      }
      'undefined' == typeof Element ||
        Element.prototype.closest ||
        (Element.prototype.matches ||
          (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector),
        (Element.prototype.closest = function (t) {
          let e = this;
          if (!document.documentElement.contains(e)) return null;
          do {
            if (e.matches(t)) return e;
            e = e.parentElement || e.parentNode;
          } while (null !== e && 1 === e.nodeType);
          return null;
        }));
      const hN = { animation: !0, transitionTimerDelayMs: 5 };
      let uN = (() => {
        class t {
          constructor() {
            this.animation = hN.animation;
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵprov = pt({
            factory: function () {
              return new t();
            },
            token: t,
            providedIn: 'root',
          })),
          t
        );
      })();
      const dN = () => {},
        { transitionTimerDelayMs: pN } = hN,
        mN = new Map(),
        fN = (t, e, n, i) => {
          let s = i.context || {};
          const r = mN.get(e);
          if (r)
            switch (i.runningTransition) {
              case 'continue':
                return Zm;
              case 'stop':
                t.run(() => r.transition$.complete()), (s = Object.assign(r.context, s)), mN.delete(e);
            }
          const o = n(e, i.animation, s) || dN;
          if (!i.animation || 'none' === window.getComputedStyle(e).transitionProperty)
            return (
              t.run(() => o()),
              fm(void 0).pipe(
                (function (t) {
                  return (e) =>
                    new b((n) =>
                      e.subscribe(
                        (e) => t.run(() => n.next(e)),
                        (e) => t.run(() => n.error(e)),
                        () => t.run(() => n.complete())
                      )
                    );
                })(t)
              )
            );
          const a = new C(),
            c = new C(),
            h = a.pipe(
              (function (...t) {
                return (e) => of(e, fm(...t));
              })(!0)
            );
          mN.set(e, {
            transition$: a,
            complete: () => {
              c.next(), c.complete();
            },
            context: s,
          });
          const u = (function (t) {
            const { transitionDelay: e, transitionDuration: n } = window.getComputedStyle(t);
            return 1e3 * (parseFloat(e) + parseFloat(n));
          })(e);
          return (
            t.runOutsideAngular(() => {
              const n = sf(e, 'transitionend').pipe(
                Lw(h),
                _m(({ target: t }) => t === e)
              );
              (function (...t) {
                if (1 === t.length) {
                  if (!l(t[0])) return t[0];
                  t = t[0];
                }
                return $(t, void 0).lift(new QF());
              })(Mw(u + pN).pipe(Lw(h)), n, c)
                .pipe(Lw(h))
                .subscribe(() => {
                  mN.delete(e),
                    t.run(() => {
                      o(), a.next(), a.complete();
                    });
                });
            }),
            a.asObservable()
          );
        };
      let gN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        _N = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        bN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })(),
        yN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        vN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })();
      var wN = (() => (
        (function (t) {
          (t[(t.Tab = 9)] = 'Tab'),
            (t[(t.Enter = 13)] = 'Enter'),
            (t[(t.Escape = 27)] = 'Escape'),
            (t[(t.Space = 32)] = 'Space'),
            (t[(t.PageUp = 33)] = 'PageUp'),
            (t[(t.PageDown = 34)] = 'PageDown'),
            (t[(t.End = 35)] = 'End'),
            (t[(t.Home = 36)] = 'Home'),
            (t[(t.ArrowLeft = 37)] = 'ArrowLeft'),
            (t[(t.ArrowUp = 38)] = 'ArrowUp'),
            (t[(t.ArrowRight = 39)] = 'ArrowRight'),
            (t[(t.ArrowDown = 40)] = 'ArrowDown');
        })(wN || (wN = {})),
        wN
      ))();
      'undefined' != typeof navigator &&
        navigator.userAgent &&
        (/iPad|iPhone|iPod/.test(navigator.userAgent) ||
          (/Macintosh/.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2) ||
          /Android/.test(navigator.userAgent));
      const xN = [
        'a[href]',
        'button:not([disabled])',
        'input:not([disabled]):not([type="hidden"])',
        'select:not([disabled])',
        'textarea:not([disabled])',
        '[contenteditable]',
        '[tabindex]:not([tabindex="-1"])',
      ].join(', ');
      function CN(t) {
        const e = Array.from(t.querySelectorAll(xN)).filter((t) => -1 !== t.tabIndex);
        return [e[0], e[e.length - 1]];
      }
      new (class {
        getAllStyles(t) {
          return window.getComputedStyle(t);
        }
        getStyle(t, e) {
          return this.getAllStyles(t)[e];
        }
        isStaticPositioned(t) {
          return 'static' === (this.getStyle(t, 'position') || 'static');
        }
        offsetParent(t) {
          let e = t.offsetParent || document.documentElement;
          for (; e && e !== document.documentElement && this.isStaticPositioned(e); ) e = e.offsetParent;
          return e || document.documentElement;
        }
        position(t, e = !0) {
          let n,
            i = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };
          if ('fixed' === this.getStyle(t, 'position'))
            (n = t.getBoundingClientRect()),
              (n = { top: n.top, bottom: n.bottom, left: n.left, right: n.right, height: n.height, width: n.width });
          else {
            const e = this.offsetParent(t);
            (n = this.offset(t, !1)),
              e !== document.documentElement && (i = this.offset(e, !1)),
              (i.top += e.clientTop),
              (i.left += e.clientLeft);
          }
          return (
            (n.top -= i.top),
            (n.bottom -= i.top),
            (n.left -= i.left),
            (n.right -= i.left),
            e &&
              ((n.top = Math.round(n.top)),
              (n.bottom = Math.round(n.bottom)),
              (n.left = Math.round(n.left)),
              (n.right = Math.round(n.right))),
            n
          );
        }
        offset(t, e = !0) {
          const n = t.getBoundingClientRect(),
            i = window.pageYOffset - document.documentElement.clientTop,
            s = window.pageXOffset - document.documentElement.clientLeft;
          let r = {
            height: n.height || t.offsetHeight,
            width: n.width || t.offsetWidth,
            top: n.top + i,
            bottom: n.bottom + i,
            left: n.left + s,
            right: n.right + s,
          };
          return (
            e &&
              ((r.height = Math.round(r.height)),
              (r.width = Math.round(r.width)),
              (r.top = Math.round(r.top)),
              (r.bottom = Math.round(r.bottom)),
              (r.left = Math.round(r.left)),
              (r.right = Math.round(r.right))),
            r
          );
        }
        positionElements(t, e, n, i) {
          const [s = 'top', r = 'center'] = n.split('-'),
            o = i ? this.offset(t, !1) : this.position(t, !1),
            a = this.getAllStyles(e),
            l = parseFloat(a.marginTop),
            c = parseFloat(a.marginBottom),
            h = parseFloat(a.marginLeft),
            u = parseFloat(a.marginRight);
          let d = 0,
            p = 0;
          switch (s) {
            case 'top':
              d = o.top - (e.offsetHeight + l + c);
              break;
            case 'bottom':
              d = o.top + o.height;
              break;
            case 'left':
              p = o.left - (e.offsetWidth + h + u);
              break;
            case 'right':
              p = o.left + o.width;
          }
          switch (r) {
            case 'top':
              d = o.top;
              break;
            case 'bottom':
              d = o.top + o.height - e.offsetHeight;
              break;
            case 'left':
              p = o.left;
              break;
            case 'right':
              p = o.left + o.width - e.offsetWidth;
              break;
            case 'center':
              'top' === s || 'bottom' === s
                ? (p = o.left + o.width / 2 - e.offsetWidth / 2)
                : (d = o.top + o.height / 2 - e.offsetHeight / 2);
          }
          e.style.transform = `translate(${Math.round(p)}px, ${Math.round(d)}px)`;
          const m = e.getBoundingClientRect(),
            f = document.documentElement,
            g = window.innerHeight || f.clientHeight,
            _ = window.innerWidth || f.clientWidth;
          return m.left >= 0 && m.top >= 0 && m.right <= _ && m.bottom <= g;
        }
      })(),
        new Date(1882, 10, 12),
        new Date(2174, 10, 25);
      let kN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu, dm]] })),
            t
          );
        })(),
        SN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })(),
        EN = (() => {
          class t {
            constructor(t) {
              (this._ngbConfig = t), (this.backdrop = !0), (this.keyboard = !0);
            }
            get animation() {
              return void 0 === this._animation ? this._ngbConfig.animation : this._animation;
            }
            set animation(t) {
              this._animation = t;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(uN));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(uN));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })();
      class ON {
        constructor(t, e, n) {
          (this.nodes = t), (this.viewRef = e), (this.componentRef = n);
        }
      }
      const PN = () => {};
      let AN = (() => {
          class t {
            constructor(t) {
              this._document = t;
            }
            compensate() {
              const t = this._getWidth();
              return this._isPresent(t) ? this._adjustBody(t) : PN;
            }
            _adjustBody(t) {
              const e = this._document.body,
                n = e.style.paddingRight,
                i = parseFloat(window.getComputedStyle(e)['padding-right']);
              return (e.style['padding-right'] = `${i + t}px`), () => (e.style['padding-right'] = n);
            }
            _isPresent(t) {
              const e = this._document.body.getBoundingClientRect();
              return window.innerWidth - (e.left + e.right) >= t - 0.1 * t;
            }
            _getWidth() {
              const t = this._document.createElement('div');
              t.className = 'modal-scrollbar-measure';
              const e = this._document.body;
              e.appendChild(t);
              const n = t.getBoundingClientRect().width - t.clientWidth;
              return e.removeChild(t), n;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Th));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Th));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        TN = (() => {
          class t {
            constructor(t, e) {
              (this._el = t), (this._zone = e);
            }
            ngOnInit() {
              this._zone.onStable
                .asObservable()
                .pipe(pf(1))
                .subscribe(() => {
                  fN(
                    this._zone,
                    this._el.nativeElement,
                    (t, e) => {
                      e && cN(t), t.classList.add('show');
                    },
                    { animation: this.animation, runningTransition: 'continue' }
                  );
                });
            }
            hide() {
              return fN(this._zone, this._el.nativeElement, ({ classList: t }) => t.remove('show'), {
                animation: this.animation,
                runningTransition: 'stop',
              });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Xc));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['ngb-modal-backdrop']],
              hostAttrs: [2, 'z-index', '1050'],
              hostVars: 6,
              hostBindings: function (t, e) {
                2 & t &&
                  (ua('modal-backdrop' + (e.backdropClass ? ' ' + e.backdropClass : '')),
                  ha('show', !e.animation)('fade', e.animation));
              },
              inputs: { animation: 'animation', backdropClass: 'backdropClass' },
              decls: 0,
              vars: 0,
              template: function (t, e) {},
              encapsulation: 2,
            })),
            t
          );
        })();
      class DN {
        close(t) {}
        dismiss(t) {}
      }
      class MN {
        constructor(t, e, n, i) {
          (this._windowCmptRef = t),
            (this._contentRef = e),
            (this._backdropCmptRef = n),
            (this._beforeDismiss = i),
            (this._closed = new C()),
            (this._dismissed = new C()),
            (this._hidden = new C()),
            t.instance.dismissEvent.subscribe((t) => {
              this.dismiss(t);
            }),
            (this.result = new Promise((t, e) => {
              (this._resolve = t), (this._reject = e);
            })),
            this.result.then(null, () => {});
        }
        get componentInstance() {
          if (this._contentRef && this._contentRef.componentRef) return this._contentRef.componentRef.instance;
        }
        get closed() {
          return this._closed.asObservable().pipe(Lw(this._hidden));
        }
        get dismissed() {
          return this._dismissed.asObservable().pipe(Lw(this._hidden));
        }
        get hidden() {
          return this._hidden.asObservable();
        }
        get shown() {
          return this._windowCmptRef.instance.shown.asObservable();
        }
        close(t) {
          this._windowCmptRef && (this._closed.next(t), this._resolve(t), this._removeModalElements());
        }
        _dismiss(t) {
          this._dismissed.next(t), this._reject(t), this._removeModalElements();
        }
        dismiss(t) {
          if (this._windowCmptRef)
            if (this._beforeDismiss) {
              const e = this._beforeDismiss();
              e && e.then
                ? e.then(
                    (e) => {
                      !1 !== e && this._dismiss(t);
                    },
                    () => {}
                  )
                : !1 !== e && this._dismiss(t);
            } else this._dismiss(t);
        }
        _removeModalElements() {
          const t = this._windowCmptRef.instance.hide(),
            e = this._backdropCmptRef ? this._backdropCmptRef.instance.hide() : fm(void 0);
          t.subscribe(() => {
            const { nativeElement: t } = this._windowCmptRef.location;
            t.parentNode.removeChild(t),
              this._windowCmptRef.destroy(),
              this._contentRef && this._contentRef.viewRef && this._contentRef.viewRef.destroy(),
              (this._windowCmptRef = null),
              (this._contentRef = null);
          }),
            e.subscribe(() => {
              if (this._backdropCmptRef) {
                const { nativeElement: t } = this._backdropCmptRef.location;
                t.parentNode.removeChild(t), this._backdropCmptRef.destroy(), (this._backdropCmptRef = null);
              }
            }),
            XF(t, e).subscribe(() => {
              this._hidden.next(), this._hidden.complete();
            });
        }
      }
      var RN = (() => (
        (function (t) {
          (t[(t.BACKDROP_CLICK = 0)] = 'BACKDROP_CLICK'), (t[(t.ESC = 1)] = 'ESC');
        })(RN || (RN = {})),
        RN
      ))();
      let IN = (() => {
          class t {
            constructor(t, e, n) {
              (this._document = t),
                (this._elRef = e),
                (this._zone = n),
                (this._closed$ = new C()),
                (this._elWithFocus = null),
                (this.backdrop = !0),
                (this.keyboard = !0),
                (this.dismissEvent = new cc()),
                (this.shown = new C()),
                (this.hidden = new C());
            }
            dismiss(t) {
              this.dismissEvent.emit(t);
            }
            ngOnInit() {
              (this._elWithFocus = this._document.activeElement),
                this._zone.onStable
                  .asObservable()
                  .pipe(pf(1))
                  .subscribe(() => {
                    this._show();
                  });
            }
            ngOnDestroy() {
              this._disableEventHandling();
            }
            hide() {
              const { nativeElement: t } = this._elRef,
                e = { animation: this.animation, runningTransition: 'stop' },
                n = XF(
                  fN(this._zone, t, () => t.classList.remove('show'), e),
                  fN(this._zone, this._dialogEl.nativeElement, () => {}, e)
                );
              return (
                n.subscribe(() => {
                  this.hidden.next(), this.hidden.complete();
                }),
                this._disableEventHandling(),
                this._restoreFocus(),
                n
              );
            }
            _show() {
              const t = { animation: this.animation, runningTransition: 'continue' };
              XF(
                fN(
                  this._zone,
                  this._elRef.nativeElement,
                  (t, e) => {
                    e && cN(t), t.classList.add('show');
                  },
                  t
                ),
                fN(this._zone, this._dialogEl.nativeElement, () => {}, t)
              ).subscribe(() => {
                this.shown.next(), this.shown.complete();
              }),
                this._enableEventHandling(),
                this._setFocus();
            }
            _enableEventHandling() {
              const { nativeElement: t } = this._elRef;
              this._zone.runOutsideAngular(() => {
                sf(t, 'keydown')
                  .pipe(
                    Lw(this._closed$),
                    _m((t) => t.which === wN.Escape)
                  )
                  .subscribe((t) => {
                    this.keyboard
                      ? requestAnimationFrame(() => {
                          t.defaultPrevented || this._zone.run(() => this.dismiss(RN.ESC));
                        })
                      : 'static' === this.backdrop && this._bumpBackdrop();
                  });
                let e = !1;
                sf(this._dialogEl.nativeElement, 'mousedown')
                  .pipe(
                    Lw(this._closed$),
                    gf(() => (e = !1)),
                    cf(() => sf(t, 'mouseup').pipe(Lw(this._closed$), pf(1))),
                    _m(({ target: e }) => t === e)
                  )
                  .subscribe(() => {
                    e = !0;
                  }),
                  sf(t, 'click')
                    .pipe(Lw(this._closed$))
                    .subscribe(({ target: n }) => {
                      t === n &&
                        ('static' === this.backdrop
                          ? this._bumpBackdrop()
                          : !0 !== this.backdrop || e || this._zone.run(() => this.dismiss(RN.BACKDROP_CLICK))),
                        (e = !1);
                    });
              });
            }
            _disableEventHandling() {
              this._closed$.next();
            }
            _setFocus() {
              const { nativeElement: t } = this._elRef;
              if (!t.contains(document.activeElement)) {
                const e = t.querySelector('[ngbAutofocus]'),
                  n = CN(t)[0];
                (e || n || t).focus();
              }
            }
            _restoreFocus() {
              const t = this._document.body,
                e = this._elWithFocus;
              let n;
              (n = e && e.focus && t.contains(e) ? e : t),
                this._zone.runOutsideAngular(() => {
                  setTimeout(() => n.focus()), (this._elWithFocus = null);
                });
            }
            _bumpBackdrop() {
              'static' === this.backdrop &&
                fN(
                  this._zone,
                  this._elRef.nativeElement,
                  ({ classList: t }) => (t.add('modal-static'), () => t.remove('modal-static')),
                  { animation: this.animation, runningTransition: 'continue' }
                );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Th), Ro(Za), Ro(Xc));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['ngb-modal-window']],
              viewQuery: function (t, e) {
                if ((1 & t && xc(aN, 3), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e._dialogEl = t.first);
                }
              },
              hostAttrs: ['role', 'dialog', 'tabindex', '-1'],
              hostVars: 7,
              hostBindings: function (t, e) {
                2 & t &&
                  (Ao('aria-modal', !0)('aria-labelledby', e.ariaLabelledBy)('aria-describedby', e.ariaDescribedBy),
                  ua('modal d-block' + (e.windowClass ? ' ' + e.windowClass : '')),
                  ha('fade', e.animation));
              },
              inputs: {
                backdrop: 'backdrop',
                keyboard: 'keyboard',
                animation: 'animation',
                ariaLabelledBy: 'ariaLabelledBy',
                ariaDescribedBy: 'ariaDescribedBy',
                centered: 'centered',
                scrollable: 'scrollable',
                size: 'size',
                windowClass: 'windowClass',
                modalDialogClass: 'modalDialogClass',
              },
              outputs: { dismissEvent: 'dismiss' },
              ngContentSelectors: oN,
              decls: 8,
              vars: 2,
              consts: [
                ['role', 'document'],
                ['dialog', ''],
                [1, 'modal-content'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Jo(),
                  Ca(0, '\n    '),
                  Fo(1, 'div', 0, 1),
                  Ca(3, '\n        '),
                  Fo(4, 'div', 2),
                  ta(5),
                  No(),
                  Ca(6, '\n    '),
                  No(),
                  Ca(7, '\n    ')),
                  2 & t &&
                    (tr(1),
                    ua(
                      'modal-dialog' +
                        (e.size ? ' modal-' + e.size : '') +
                        (e.centered ? ' modal-dialog-centered' : '') +
                        (e.scrollable ? ' modal-dialog-scrollable' : '') +
                        (e.modalDialogClass ? ' ' + e.modalDialogClass : '')
                    ));
              },
              styles: [
                'ngb-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}',
              ],
              encapsulation: 2,
            })),
            t
          );
        })(),
        LN = (() => {
          class t {
            constructor(t, e, n, i, s, r) {
              (this._applicationRef = t),
                (this._injector = e),
                (this._document = n),
                (this._scrollBar = i),
                (this._rendererFactory = s),
                (this._ngZone = r),
                (this._activeWindowCmptHasChanged = new C()),
                (this._ariaHiddenValues = new Map()),
                (this._backdropAttributes = ['animation', 'backdropClass']),
                (this._modalRefs = []),
                (this._windowAttributes = [
                  'animation',
                  'ariaLabelledBy',
                  'ariaDescribedBy',
                  'backdrop',
                  'centered',
                  'keyboard',
                  'scrollable',
                  'size',
                  'windowClass',
                  'modalDialogClass',
                ]),
                (this._windowCmpts = []),
                (this._activeInstances = new cc()),
                this._activeWindowCmptHasChanged.subscribe(() => {
                  if (this._windowCmpts.length) {
                    const t = this._windowCmpts[this._windowCmpts.length - 1];
                    ((t, e, n, i = !1) => {
                      this._ngZone.runOutsideAngular(() => {
                        const t = sf(e, 'focusin').pipe(
                          Lw(n),
                          E((t) => t.target)
                        );
                        sf(e, 'keydown')
                          .pipe(
                            Lw(n),
                            _m((t) => t.which === wN.Tab),
                            iN(t)
                          )
                          .subscribe(([t, n]) => {
                            const [i, s] = CN(e);
                            (n !== i && n !== e) || !t.shiftKey || (s.focus(), t.preventDefault()),
                              n !== s || t.shiftKey || (i.focus(), t.preventDefault());
                          }),
                          i &&
                            sf(e, 'click')
                              .pipe(
                                Lw(n),
                                iN(t),
                                E((t) => t[1])
                              )
                              .subscribe((t) => t.focus());
                      });
                    })(0, t.location.nativeElement, this._activeWindowCmptHasChanged),
                      this._revertAriaHidden(),
                      this._setAriaHidden(t.location.nativeElement);
                  }
                });
            }
            open(t, e, n, i) {
              const s =
                  i.container instanceof HTMLElement
                    ? i.container
                    : lN(i.container)
                    ? this._document.querySelector(i.container)
                    : this._document.body,
                r = this._rendererFactory.createRenderer(null, null),
                o = this._scrollBar.compensate(),
                a = () => {
                  this._modalRefs.length ||
                    (r.removeClass(this._document.body, 'modal-open'), this._revertAriaHidden());
                };
              if (!s)
                throw new Error(`The specified modal container "${i.container || 'body'}" was not found in the DOM.`);
              const l = new DN(),
                c = this._getContentRef(t, i.injector || e, n, l, i);
              let h = !1 !== i.backdrop ? this._attachBackdrop(t, s) : void 0,
                u = this._attachWindowComponent(t, s, c),
                d = new MN(u, c, h, i.beforeDismiss);
              return (
                this._registerModalRef(d),
                this._registerWindowCmpt(u),
                d.result.then(o, o),
                d.result.then(a, a),
                (l.close = (t) => {
                  d.close(t);
                }),
                (l.dismiss = (t) => {
                  d.dismiss(t);
                }),
                this._applyWindowOptions(u.instance, i),
                1 === this._modalRefs.length && r.addClass(this._document.body, 'modal-open'),
                h && h.instance && (this._applyBackdropOptions(h.instance, i), h.changeDetectorRef.detectChanges()),
                u.changeDetectorRef.detectChanges(),
                d
              );
            }
            get activeInstances() {
              return this._activeInstances;
            }
            dismissAll(t) {
              this._modalRefs.forEach((e) => e.dismiss(t));
            }
            hasOpenModals() {
              return this._modalRefs.length > 0;
            }
            _attachBackdrop(t, e) {
              let n = t.resolveComponentFactory(TN).create(this._injector);
              return this._applicationRef.attachView(n.hostView), e.appendChild(n.location.nativeElement), n;
            }
            _attachWindowComponent(t, e, n) {
              let i = t.resolveComponentFactory(IN).create(this._injector, n.nodes);
              return this._applicationRef.attachView(i.hostView), e.appendChild(i.location.nativeElement), i;
            }
            _applyWindowOptions(t, e) {
              this._windowAttributes.forEach((n) => {
                lN(e[n]) && (t[n] = e[n]);
              });
            }
            _applyBackdropOptions(t, e) {
              this._backdropAttributes.forEach((n) => {
                lN(e[n]) && (t[n] = e[n]);
              });
            }
            _getContentRef(t, e, n, i, s) {
              return n
                ? n instanceof Tl
                  ? this._createFromTemplateRef(n, i)
                  : 'string' == typeof n
                  ? this._createFromString(n)
                  : this._createFromComponent(t, e, n, i, s)
                : new ON([]);
            }
            _createFromTemplateRef(t, e) {
              const n = t.createEmbeddedView({
                $implicit: e,
                close(t) {
                  e.close(t);
                },
                dismiss(t) {
                  e.dismiss(t);
                },
              });
              return this._applicationRef.attachView(n), new ON([n.rootNodes], n);
            }
            _createFromString(t) {
              const e = this._document.createTextNode(`${t}`);
              return new ON([[e]]);
            }
            _createFromComponent(t, e, n, i, s) {
              const r = t.resolveComponentFactory(n),
                o = mo.create({ providers: [{ provide: DN, useValue: i }], parent: e }),
                a = r.create(o),
                l = a.location.nativeElement;
              return (
                s.scrollable && l.classList.add('component-host-scrollable'),
                this._applicationRef.attachView(a.hostView),
                new ON([[l]], a.hostView, a)
              );
            }
            _setAriaHidden(t) {
              const e = t.parentElement;
              e &&
                t !== this._document.body &&
                (Array.from(e.children).forEach((e) => {
                  e !== t &&
                    'SCRIPT' !== e.nodeName &&
                    (this._ariaHiddenValues.set(e, e.getAttribute('aria-hidden')),
                    e.setAttribute('aria-hidden', 'true'));
                }),
                this._setAriaHidden(e));
            }
            _revertAriaHidden() {
              this._ariaHiddenValues.forEach((t, e) => {
                t ? e.setAttribute('aria-hidden', t) : e.removeAttribute('aria-hidden');
              }),
                this._ariaHiddenValues.clear();
            }
            _registerModalRef(t) {
              const e = () => {
                const e = this._modalRefs.indexOf(t);
                e > -1 && (this._modalRefs.splice(e, 1), this._activeInstances.emit(this._modalRefs));
              };
              this._modalRefs.push(t), this._activeInstances.emit(this._modalRefs), t.result.then(e, e);
            }
            _registerWindowCmpt(t) {
              this._windowCmpts.push(t),
                this._activeWindowCmptHasChanged.next(),
                t.onDestroy(() => {
                  const e = this._windowCmpts.indexOf(t);
                  e > -1 && (this._windowCmpts.splice(e, 1), this._activeWindowCmptHasChanged.next());
                });
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(bh), _i(mo), _i(Th), _i(AN), _i(tl), _i(Xc));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(bh), _i(Xr), _i(Th), _i(AN), _i(tl), _i(Xc));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        FN = (() => {
          class t {
            constructor(t, e, n, i) {
              (this._moduleCFR = t), (this._injector = e), (this._modalStack = n), (this._config = i);
            }
            open(t, e = {}) {
              const n = Object.assign(
                Object.assign(Object.assign({}, this._config), { animation: this._config.animation }),
                e
              );
              return this._modalStack.open(this._moduleCFR, this._injector, t, n);
            }
            get activeInstances() {
              return this._modalStack.activeInstances;
            }
            dismissAll(t) {
              this._modalStack.dismissAll(t);
            }
            hasOpenModals() {
              return this._modalStack.hasOpenModals();
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Ga), _i(mo), _i(LN), _i(EN));
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t(_i(Ga), _i(Xr), _i(LN), _i(EN));
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        NN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [FN] })),
            t
          );
        })(),
        VN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        BN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        zN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        jN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        HN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        $N = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        qN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu]] })),
            t
          );
        })(),
        WN = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({})),
            t
          );
        })();
      new Jn('live announcer delay', {
        providedIn: 'root',
        factory: function () {
          return 100;
        },
      });
      let UN = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[Gu]] })),
          t
        );
      })();
      const YN = [gN, _N, bN, yN, vN, kN, SN, NN, VN, BN, zN, jN, HN, $N, qN, WN, UN];
      let GN = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [YN, gN, _N, bN, yN, vN, kN, SN, NN, VN, BN, zN, jN, HN, $N, qN, WN, UN] })),
          t
        );
      })();
      const QN =
        'undefined' == typeof window
          ? function (t) {
              return t();
            }
          : window.requestAnimationFrame;
      function KN(t, e, n) {
        const i = n || ((t) => Array.prototype.slice.call(t));
        let s = !1,
          r = [];
        return function (...n) {
          (r = i(n)),
            s ||
              ((s = !0),
              QN.call(window, () => {
                (s = !1), t.apply(e, r);
              }));
        };
      }
      const XN = (t) => ('start' === t ? 'left' : 'end' === t ? 'right' : 'center'),
        ZN = (t, e, n) => ('start' === t ? e : 'end' === t ? n : (e + n) / 2);
      function JN() {}
      const tV = (function () {
        let t = 0;
        return function () {
          return t++;
        };
      })();
      function eV(t) {
        return null == t;
      }
      function nV(t) {
        if (Array.isArray && Array.isArray(t)) return !0;
        const e = Object.prototype.toString.call(t);
        return '[object' === e.substr(0, 7) && 'Array]' === e.substr(-6);
      }
      function iV(t) {
        return null !== t && '[object Object]' === Object.prototype.toString.call(t);
      }
      const sV = (t) => ('number' == typeof t || t instanceof Number) && isFinite(+t);
      function rV(t, e) {
        return sV(t) ? t : e;
      }
      function oV(t, e) {
        return void 0 === t ? e : t;
      }
      const aV = (t, e) => ('string' == typeof t && t.endsWith('%') ? (parseFloat(t) / 100) * e : +t);
      function lV(t, e, n) {
        if (t && 'function' == typeof t.call) return t.apply(n, e);
      }
      function cV(t, e, n, i) {
        let s, r, o;
        if (nV(t))
          if (((r = t.length), i)) for (s = r - 1; s >= 0; s--) e.call(n, t[s], s);
          else for (s = 0; s < r; s++) e.call(n, t[s], s);
        else if (iV(t)) for (o = Object.keys(t), r = o.length, s = 0; s < r; s++) e.call(n, t[o[s]], o[s]);
      }
      function hV(t, e) {
        let n, i, s, r;
        if (!t || !e || t.length !== e.length) return !1;
        for (n = 0, i = t.length; n < i; ++n)
          if (((s = t[n]), (r = e[n]), s.datasetIndex !== r.datasetIndex || s.index !== r.index)) return !1;
        return !0;
      }
      function uV(t) {
        if (nV(t)) return t.map(uV);
        if (iV(t)) {
          const e = Object.create(null),
            n = Object.keys(t),
            i = n.length;
          let s = 0;
          for (; s < i; ++s) e[n[s]] = uV(t[n[s]]);
          return e;
        }
        return t;
      }
      function dV(t) {
        return -1 === ['__proto__', 'prototype', 'constructor'].indexOf(t);
      }
      function pV(t, e, n, i) {
        if (!dV(t)) return;
        const s = e[t],
          r = n[t];
        iV(s) && iV(r) ? mV(s, r, i) : (e[t] = uV(r));
      }
      function mV(t, e, n) {
        const i = nV(e) ? e : [e],
          s = i.length;
        if (!iV(t)) return t;
        const r = (n = n || {}).merger || pV;
        for (let o = 0; o < s; ++o) {
          if (!iV((e = i[o]))) continue;
          const s = Object.keys(e);
          for (let i = 0, o = s.length; i < o; ++i) r(s[i], t, e, n);
        }
        return t;
      }
      function fV(t, e) {
        return mV(t, e, { merger: gV });
      }
      function gV(t, e, n) {
        if (!dV(t)) return;
        const i = e[t],
          s = n[t];
        iV(i) && iV(s) ? fV(i, s) : Object.prototype.hasOwnProperty.call(e, t) || (e[t] = uV(s));
      }
      function _V(t, e) {
        const n = t.indexOf('.', e);
        return -1 === n ? t.length : n;
      }
      function bV(t, e) {
        if ('' === e) return t;
        let n = 0,
          i = _V(e, n);
        for (; t && i > n; ) (t = t[e.substr(n, i - n)]), (n = i + 1), (i = _V(e, n));
        return t;
      }
      function yV(t) {
        return t.charAt(0).toUpperCase() + t.slice(1);
      }
      const vV = (t) => void 0 !== t,
        wV = (t) => 'function' == typeof t,
        xV = Math.PI,
        CV = 2 * xV,
        kV = CV + xV,
        SV = Number.POSITIVE_INFINITY,
        EV = xV / 180,
        OV = xV / 2,
        PV = xV / 4,
        AV = (2 * xV) / 3,
        TV = Math.log10,
        DV = Math.sign;
      function MV(t) {
        const e = Math.round(t);
        t = IV(t, e, t / 1e3) ? e : t;
        const n = Math.pow(10, Math.floor(TV(t))),
          i = t / n;
        return (i <= 1 ? 1 : i <= 2 ? 2 : i <= 5 ? 5 : 10) * n;
      }
      function RV(t) {
        return !isNaN(parseFloat(t)) && isFinite(t);
      }
      function IV(t, e, n) {
        return Math.abs(t - e) < n;
      }
      function LV(t, e, n) {
        let i, s, r;
        for (i = 0, s = t.length; i < s; i++)
          (r = t[i][n]), isNaN(r) || ((e.min = Math.min(e.min, r)), (e.max = Math.max(e.max, r)));
      }
      function FV(t) {
        return t * (xV / 180);
      }
      function NV(t) {
        return t * (180 / xV);
      }
      function VV(t) {
        if (!sV(t)) return;
        let e = 1,
          n = 0;
        for (; Math.round(t * e) / e !== t; ) (e *= 10), n++;
        return n;
      }
      function BV(t, e) {
        return Math.sqrt(Math.pow(e.x - t.x, 2) + Math.pow(e.y - t.y, 2));
      }
      function zV(t, e) {
        return ((t - e + kV) % CV) - xV;
      }
      function jV(t) {
        return ((t % CV) + CV) % CV;
      }
      function HV(t, e, n, i) {
        const s = jV(t),
          r = jV(e),
          o = jV(n),
          a = jV(r - s),
          l = jV(o - s),
          c = jV(s - r),
          h = jV(s - o);
        return s === r || s === o || (i && r === o) || (a > l && c < h);
      }
      function $V(t, e, n) {
        return Math.max(e, Math.min(n, t));
      }
      const qV = (t) => 0 === t || 1 === t,
        WV = (t, e, n) => -Math.pow(2, 10 * (t -= 1)) * Math.sin(((t - e) * CV) / n),
        UV = (t, e, n) => Math.pow(2, -10 * t) * Math.sin(((t - e) * CV) / n) + 1,
        YV = {
          linear: (t) => t,
          easeInQuad: (t) => t * t,
          easeOutQuad: (t) => -t * (t - 2),
          easeInOutQuad: (t) => ((t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1)),
          easeInCubic: (t) => t * t * t,
          easeOutCubic: (t) => (t -= 1) * t * t + 1,
          easeInOutCubic: (t) => ((t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2)),
          easeInQuart: (t) => t * t * t * t,
          easeOutQuart: (t) => -((t -= 1) * t * t * t - 1),
          easeInOutQuart: (t) => ((t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2)),
          easeInQuint: (t) => t * t * t * t * t,
          easeOutQuint: (t) => (t -= 1) * t * t * t * t + 1,
          easeInOutQuint: (t) => ((t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2)),
          easeInSine: (t) => 1 - Math.cos(t * OV),
          easeOutSine: (t) => Math.sin(t * OV),
          easeInOutSine: (t) => -0.5 * (Math.cos(xV * t) - 1),
          easeInExpo: (t) => (0 === t ? 0 : Math.pow(2, 10 * (t - 1))),
          easeOutExpo: (t) => (1 === t ? 1 : 1 - Math.pow(2, -10 * t)),
          easeInOutExpo: (t) =>
            qV(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (2 * t - 1)) : 0.5 * (2 - Math.pow(2, -10 * (2 * t - 1))),
          easeInCirc: (t) => (t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1)),
          easeOutCirc: (t) => Math.sqrt(1 - (t -= 1) * t),
          easeInOutCirc: (t) =>
            (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),
          easeInElastic: (t) => (qV(t) ? t : WV(t, 0.075, 0.3)),
          easeOutElastic: (t) => (qV(t) ? t : UV(t, 0.075, 0.3)),
          easeInOutElastic(t) {
            const e = 0.1125;
            return qV(t) ? t : t < 0.5 ? 0.5 * WV(2 * t, e, 0.45) : 0.5 + 0.5 * UV(2 * t - 1, e, 0.45);
          },
          easeInBack(t) {
            const e = 1.70158;
            return t * t * ((e + 1) * t - e);
          },
          easeOutBack(t) {
            const e = 1.70158;
            return (t -= 1) * t * ((e + 1) * t + e) + 1;
          },
          easeInOutBack(t) {
            let e = 1.70158;
            return (t /= 0.5) < 1
              ? t * t * ((1 + (e *= 1.525)) * t - e) * 0.5
              : 0.5 * ((t -= 2) * t * ((1 + (e *= 1.525)) * t + e) + 2);
          },
          easeInBounce: (t) => 1 - YV.easeOutBounce(1 - t),
          easeOutBounce(t) {
            const e = 7.5625,
              n = 2.75;
            return t < 1 / n
              ? e * t * t
              : t < 2 / n
              ? e * (t -= 1.5 / n) * t + 0.75
              : t < 2.5 / n
              ? e * (t -= 2.25 / n) * t + 0.9375
              : e * (t -= 2.625 / n) * t + 0.984375;
          },
          easeInOutBounce: (t) => (t < 0.5 ? 0.5 * YV.easeInBounce(2 * t) : 0.5 * YV.easeOutBounce(2 * t - 1) + 0.5),
        },
        GV = {
          0: 0,
          1: 1,
          2: 2,
          3: 3,
          4: 4,
          5: 5,
          6: 6,
          7: 7,
          8: 8,
          9: 9,
          A: 10,
          B: 11,
          C: 12,
          D: 13,
          E: 14,
          F: 15,
          a: 10,
          b: 11,
          c: 12,
          d: 13,
          e: 14,
          f: 15,
        },
        QV = '0123456789ABCDEF',
        KV = (t) => QV[15 & t],
        XV = (t) => QV[(240 & t) >> 4] + QV[15 & t],
        ZV = (t) => (240 & t) >> 4 == (15 & t);
      function JV(t) {
        return (t + 0.5) | 0;
      }
      const tB = (t, e, n) => Math.max(Math.min(t, n), e);
      function eB(t) {
        return tB(JV(2.55 * t), 0, 255);
      }
      function nB(t) {
        return tB(JV(255 * t), 0, 255);
      }
      function iB(t) {
        return tB(JV(t / 2.55) / 100, 0, 1);
      }
      function sB(t) {
        return tB(JV(100 * t), 0, 100);
      }
      const rB = /^rgba?\(\s*([-+.\d]+)(%)?[\s,]+([-+.e\d]+)(%)?[\s,]+([-+.e\d]+)(%)?(?:[\s,/]+([-+.e\d]+)(%)?)?\s*\)$/,
        oB =
          /^(hsla?|hwb|hsv)\(\s*([-+.e\d]+)(?:deg)?[\s,]+([-+.e\d]+)%[\s,]+([-+.e\d]+)%(?:[\s,]+([-+.e\d]+)(%)?)?\s*\)$/;
      function aB(t, e, n) {
        const i = e * Math.min(n, 1 - n),
          s = (e, s = (e + t / 30) % 12) => n - i * Math.max(Math.min(s - 3, 9 - s, 1), -1);
        return [s(0), s(8), s(4)];
      }
      function lB(t, e, n) {
        const i = (i, s = (i + t / 60) % 6) => n - n * e * Math.max(Math.min(s, 4 - s, 1), 0);
        return [i(5), i(3), i(1)];
      }
      function cB(t, e, n) {
        const i = aB(t, 1, 0.5);
        let s;
        for (e + n > 1 && ((s = 1 / (e + n)), (e *= s), (n *= s)), s = 0; s < 3; s++) (i[s] *= 1 - e - n), (i[s] += e);
        return i;
      }
      function hB(t) {
        const e = t.r / 255,
          n = t.g / 255,
          i = t.b / 255,
          s = Math.max(e, n, i),
          r = Math.min(e, n, i),
          o = (s + r) / 2;
        let a, l, c;
        return (
          s !== r &&
            ((c = s - r),
            (l = o > 0.5 ? c / (2 - s - r) : c / (s + r)),
            (a = s === e ? (n - i) / c + (n < i ? 6 : 0) : s === n ? (i - e) / c + 2 : (e - n) / c + 4),
            (a = 60 * a + 0.5)),
          [0 | a, l || 0, o]
        );
      }
      function uB(t, e, n, i) {
        return (Array.isArray(e) ? t(e[0], e[1], e[2]) : t(e, n, i)).map(nB);
      }
      function dB(t, e, n) {
        return uB(aB, t, e, n);
      }
      function pB(t) {
        return ((t % 360) + 360) % 360;
      }
      const mB = {
          x: 'dark',
          Z: 'light',
          Y: 're',
          X: 'blu',
          W: 'gr',
          V: 'medium',
          U: 'slate',
          A: 'ee',
          T: 'ol',
          S: 'or',
          B: 'ra',
          C: 'lateg',
          D: 'ights',
          R: 'in',
          Q: 'turquois',
          E: 'hi',
          P: 'ro',
          O: 'al',
          N: 'le',
          M: 'de',
          L: 'yello',
          F: 'en',
          K: 'ch',
          G: 'arks',
          H: 'ea',
          I: 'ightg',
          J: 'wh',
        },
        fB = {
          OiceXe: 'f0f8ff',
          antiquewEte: 'faebd7',
          aqua: 'ffff',
          aquamarRe: '7fffd4',
          azuY: 'f0ffff',
          beige: 'f5f5dc',
          bisque: 'ffe4c4',
          black: '0',
          blanKedOmond: 'ffebcd',
          Xe: 'ff',
          XeviTet: '8a2be2',
          bPwn: 'a52a2a',
          burlywood: 'deb887',
          caMtXe: '5f9ea0',
          KartYuse: '7fff00',
          KocTate: 'd2691e',
          cSO: 'ff7f50',
          cSnflowerXe: '6495ed',
          cSnsilk: 'fff8dc',
          crimson: 'dc143c',
          cyan: 'ffff',
          xXe: '8b',
          xcyan: '8b8b',
          xgTMnPd: 'b8860b',
          xWay: 'a9a9a9',
          xgYF: '6400',
          xgYy: 'a9a9a9',
          xkhaki: 'bdb76b',
          xmagFta: '8b008b',
          xTivegYF: '556b2f',
          xSange: 'ff8c00',
          xScEd: '9932cc',
          xYd: '8b0000',
          xsOmon: 'e9967a',
          xsHgYF: '8fbc8f',
          xUXe: '483d8b',
          xUWay: '2f4f4f',
          xUgYy: '2f4f4f',
          xQe: 'ced1',
          xviTet: '9400d3',
          dAppRk: 'ff1493',
          dApskyXe: 'bfff',
          dimWay: '696969',
          dimgYy: '696969',
          dodgerXe: '1e90ff',
          fiYbrick: 'b22222',
          flSOwEte: 'fffaf0',
          foYstWAn: '228b22',
          fuKsia: 'ff00ff',
          gaRsbSo: 'dcdcdc',
          ghostwEte: 'f8f8ff',
          gTd: 'ffd700',
          gTMnPd: 'daa520',
          Way: '808080',
          gYF: '8000',
          gYFLw: 'adff2f',
          gYy: '808080',
          honeyMw: 'f0fff0',
          hotpRk: 'ff69b4',
          RdianYd: 'cd5c5c',
          Rdigo: '4b0082',
          ivSy: 'fffff0',
          khaki: 'f0e68c',
          lavFMr: 'e6e6fa',
          lavFMrXsh: 'fff0f5',
          lawngYF: '7cfc00',
          NmoncEffon: 'fffacd',
          ZXe: 'add8e6',
          ZcSO: 'f08080',
          Zcyan: 'e0ffff',
          ZgTMnPdLw: 'fafad2',
          ZWay: 'd3d3d3',
          ZgYF: '90ee90',
          ZgYy: 'd3d3d3',
          ZpRk: 'ffb6c1',
          ZsOmon: 'ffa07a',
          ZsHgYF: '20b2aa',
          ZskyXe: '87cefa',
          ZUWay: '778899',
          ZUgYy: '778899',
          ZstAlXe: 'b0c4de',
          ZLw: 'ffffe0',
          lime: 'ff00',
          limegYF: '32cd32',
          lRF: 'faf0e6',
          magFta: 'ff00ff',
          maPon: '800000',
          VaquamarRe: '66cdaa',
          VXe: 'cd',
          VScEd: 'ba55d3',
          VpurpN: '9370db',
          VsHgYF: '3cb371',
          VUXe: '7b68ee',
          VsprRggYF: 'fa9a',
          VQe: '48d1cc',
          VviTetYd: 'c71585',
          midnightXe: '191970',
          mRtcYam: 'f5fffa',
          mistyPse: 'ffe4e1',
          moccasR: 'ffe4b5',
          navajowEte: 'ffdead',
          navy: '80',
          Tdlace: 'fdf5e6',
          Tive: '808000',
          TivedBb: '6b8e23',
          Sange: 'ffa500',
          SangeYd: 'ff4500',
          ScEd: 'da70d6',
          pOegTMnPd: 'eee8aa',
          pOegYF: '98fb98',
          pOeQe: 'afeeee',
          pOeviTetYd: 'db7093',
          papayawEp: 'ffefd5',
          pHKpuff: 'ffdab9',
          peru: 'cd853f',
          pRk: 'ffc0cb',
          plum: 'dda0dd',
          powMrXe: 'b0e0e6',
          purpN: '800080',
          YbeccapurpN: '663399',
          Yd: 'ff0000',
          Psybrown: 'bc8f8f',
          PyOXe: '4169e1',
          saddNbPwn: '8b4513',
          sOmon: 'fa8072',
          sandybPwn: 'f4a460',
          sHgYF: '2e8b57',
          sHshell: 'fff5ee',
          siFna: 'a0522d',
          silver: 'c0c0c0',
          skyXe: '87ceeb',
          UXe: '6a5acd',
          UWay: '708090',
          UgYy: '708090',
          snow: 'fffafa',
          sprRggYF: 'ff7f',
          stAlXe: '4682b4',
          tan: 'd2b48c',
          teO: '8080',
          tEstN: 'd8bfd8',
          tomato: 'ff6347',
          Qe: '40e0d0',
          viTet: 'ee82ee',
          JHt: 'f5deb3',
          wEte: 'ffffff',
          wEtesmoke: 'f5f5f5',
          Lw: 'ffff00',
          LwgYF: '9acd32',
        };
      let gB;
      function _B(t, e, n) {
        if (t) {
          let i = hB(t);
          (i[e] = Math.max(0, Math.min(i[e] + i[e] * n, 0 === e ? 360 : 1))),
            (i = dB(i)),
            (t.r = i[0]),
            (t.g = i[1]),
            (t.b = i[2]);
        }
      }
      function bB(t, e) {
        return t ? Object.assign(e || {}, t) : t;
      }
      function yB(t) {
        var e = { r: 0, g: 0, b: 0, a: 255 };
        return (
          Array.isArray(t)
            ? t.length >= 3 && ((e = { r: t[0], g: t[1], b: t[2], a: 255 }), t.length > 3 && (e.a = nB(t[3])))
            : ((e = bB(t, { r: 0, g: 0, b: 0, a: 1 })).a = nB(e.a)),
          e
        );
      }
      class vB {
        constructor(t) {
          if (t instanceof vB) return t;
          const e = typeof t;
          let n;
          var i, s, r;
          'object' === e
            ? (n = yB(t))
            : 'string' === e &&
              ((r = (i = t).length),
              '#' === i[0] &&
                (4 === r || 5 === r
                  ? (s = {
                      r: 255 & (17 * GV[i[1]]),
                      g: 255 & (17 * GV[i[2]]),
                      b: 255 & (17 * GV[i[3]]),
                      a: 5 === r ? 17 * GV[i[4]] : 255,
                    })
                  : (7 !== r && 9 !== r) ||
                    (s = {
                      r: (GV[i[1]] << 4) | GV[i[2]],
                      g: (GV[i[3]] << 4) | GV[i[4]],
                      b: (GV[i[5]] << 4) | GV[i[6]],
                      a: 9 === r ? (GV[i[7]] << 4) | GV[i[8]] : 255,
                    })),
              (n =
                s ||
                (function (t) {
                  gB ||
                    ((gB = (function () {
                      const t = {},
                        e = Object.keys(fB),
                        n = Object.keys(mB);
                      let i, s, r, o, a;
                      for (i = 0; i < e.length; i++) {
                        for (o = a = e[i], s = 0; s < n.length; s++) (r = n[s]), (a = a.replace(r, mB[r]));
                        (r = parseInt(fB[o], 16)), (t[a] = [(r >> 16) & 255, (r >> 8) & 255, 255 & r]);
                      }
                      return t;
                    })()),
                    (gB.transparent = [0, 0, 0, 0]));
                  const e = gB[t.toLowerCase()];
                  return e && { r: e[0], g: e[1], b: e[2], a: 4 === e.length ? e[3] : 255 };
                })(t) ||
                (function (t) {
                  return 'r' === t.charAt(0)
                    ? (function (t) {
                        const e = rB.exec(t);
                        let n,
                          i,
                          s,
                          r = 255;
                        if (e) {
                          if (e[7] !== n) {
                            const t = +e[7];
                            r = 255 & (e[8] ? eB(t) : 255 * t);
                          }
                          return (
                            (n = +e[1]),
                            (i = +e[3]),
                            (s = +e[5]),
                            (n = 255 & (e[2] ? eB(n) : n)),
                            (i = 255 & (e[4] ? eB(i) : i)),
                            (s = 255 & (e[6] ? eB(s) : s)),
                            { r: n, g: i, b: s, a: r }
                          );
                        }
                      })(t)
                    : (function (t) {
                        const e = oB.exec(t);
                        let n,
                          i = 255;
                        if (!e) return;
                        e[5] !== n && (i = e[6] ? eB(+e[5]) : nB(+e[5]));
                        const s = pB(+e[2]),
                          r = +e[3] / 100,
                          o = +e[4] / 100;
                        return (
                          (n =
                            'hwb' === e[1]
                              ? (function (t, e, n) {
                                  return uB(cB, t, e, n);
                                })(s, r, o)
                              : 'hsv' === e[1]
                              ? (function (t, e, n) {
                                  return uB(lB, t, e, n);
                                })(s, r, o)
                              : dB(s, r, o)),
                          { r: n[0], g: n[1], b: n[2], a: i }
                        );
                      })(t);
                })(t))),
            (this._rgb = n),
            (this._valid = !!n);
        }
        get valid() {
          return this._valid;
        }
        get rgb() {
          var t = bB(this._rgb);
          return t && (t.a = iB(t.a)), t;
        }
        set rgb(t) {
          this._rgb = yB(t);
        }
        rgbString() {
          return this._valid
            ? (t = this._rgb) &&
                (t.a < 255 ? `rgba(${t.r}, ${t.g}, ${t.b}, ${iB(t.a)})` : `rgb(${t.r}, ${t.g}, ${t.b})`)
            : this._rgb;
          var t;
        }
        hexString() {
          return this._valid
            ? ((e = (function (t) {
                return ZV(t.r) && ZV(t.g) && ZV(t.b) && ZV(t.a);
              })((t = this._rgb))
                ? KV
                : XV),
              t ? '#' + e(t.r) + e(t.g) + e(t.b) + (t.a < 255 ? e(t.a) : '') : t)
            : this._rgb;
          var t, e;
        }
        hslString() {
          return this._valid
            ? (function (t) {
                if (!t) return;
                const e = hB(t),
                  n = e[0],
                  i = sB(e[1]),
                  s = sB(e[2]);
                return t.a < 255 ? `hsla(${n}, ${i}%, ${s}%, ${iB(t.a)})` : `hsl(${n}, ${i}%, ${s}%)`;
              })(this._rgb)
            : this._rgb;
        }
        mix(t, e) {
          const n = this;
          if (t) {
            const i = n.rgb,
              s = t.rgb;
            let r;
            const o = e === r ? 0.5 : e,
              a = 2 * o - 1,
              l = i.a - s.a,
              c = ((a * l == -1 ? a : (a + l) / (1 + a * l)) + 1) / 2;
            (r = 1 - c),
              (i.r = 255 & (c * i.r + r * s.r + 0.5)),
              (i.g = 255 & (c * i.g + r * s.g + 0.5)),
              (i.b = 255 & (c * i.b + r * s.b + 0.5)),
              (i.a = o * i.a + (1 - o) * s.a),
              (n.rgb = i);
          }
          return n;
        }
        clone() {
          return new vB(this.rgb);
        }
        alpha(t) {
          return (this._rgb.a = nB(t)), this;
        }
        clearer(t) {
          return (this._rgb.a *= 1 - t), this;
        }
        greyscale() {
          const t = this._rgb,
            e = JV(0.3 * t.r + 0.59 * t.g + 0.11 * t.b);
          return (t.r = t.g = t.b = e), this;
        }
        opaquer(t) {
          return (this._rgb.a *= 1 + t), this;
        }
        negate() {
          const t = this._rgb;
          return (t.r = 255 - t.r), (t.g = 255 - t.g), (t.b = 255 - t.b), this;
        }
        lighten(t) {
          return _B(this._rgb, 2, t), this;
        }
        darken(t) {
          return _B(this._rgb, 2, -t), this;
        }
        saturate(t) {
          return _B(this._rgb, 1, t), this;
        }
        desaturate(t) {
          return _B(this._rgb, 1, -t), this;
        }
        rotate(t) {
          return (
            (function (t, e) {
              var n = hB(t);
              (n[0] = pB(n[0] + e)), (n = dB(n)), (t.r = n[0]), (t.g = n[1]), (t.b = n[2]);
            })(this._rgb, t),
            this
          );
        }
      }
      function wB(t) {
        return new vB(t);
      }
      const xB = (t) => t instanceof CanvasGradient || t instanceof CanvasPattern;
      function CB(t) {
        return xB(t) ? t : wB(t);
      }
      function kB(t) {
        return xB(t) ? t : wB(t).saturate(0.5).darken(0.1).hexString();
      }
      const SB = Object.create(null),
        EB = Object.create(null);
      function OB(t, e) {
        if (!e) return t;
        const n = e.split('.');
        for (let i = 0, s = n.length; i < s; ++i) {
          const e = n[i];
          t = t[e] || (t[e] = Object.create(null));
        }
        return t;
      }
      function PB(t, e, n) {
        return 'string' == typeof e ? mV(OB(t, e), n) : mV(OB(t, ''), e);
      }
      var AB = new (class {
        constructor(t) {
          (this.animation = void 0),
            (this.backgroundColor = 'rgba(0,0,0,0.1)'),
            (this.borderColor = 'rgba(0,0,0,0.1)'),
            (this.color = '#666'),
            (this.datasets = {}),
            (this.devicePixelRatio = (t) => t.chart.platform.getDevicePixelRatio()),
            (this.elements = {}),
            (this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove']),
            (this.font = {
              family: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
              size: 12,
              style: 'normal',
              lineHeight: 1.2,
              weight: null,
            }),
            (this.hover = {}),
            (this.hoverBackgroundColor = (t, e) => kB(e.backgroundColor)),
            (this.hoverBorderColor = (t, e) => kB(e.borderColor)),
            (this.hoverColor = (t, e) => kB(e.color)),
            (this.indexAxis = 'x'),
            (this.interaction = { mode: 'nearest', intersect: !0 }),
            (this.maintainAspectRatio = !0),
            (this.onHover = null),
            (this.onClick = null),
            (this.parsing = !0),
            (this.plugins = {}),
            (this.responsive = !0),
            (this.scale = void 0),
            (this.scales = {}),
            (this.showLine = !0),
            this.describe(t);
        }
        set(t, e) {
          return PB(this, t, e);
        }
        get(t) {
          return OB(this, t);
        }
        describe(t, e) {
          return PB(EB, t, e);
        }
        override(t, e) {
          return PB(SB, t, e);
        }
        route(t, e, n, i) {
          const s = OB(this, t),
            r = OB(this, n),
            o = '_' + e;
          Object.defineProperties(s, {
            [o]: { value: s[e], writable: !0 },
            [e]: {
              enumerable: !0,
              get() {
                const t = this[o],
                  e = r[i];
                return iV(t) ? Object.assign({}, e, t) : oV(t, e);
              },
              set(t) {
                this[o] = t;
              },
            },
          });
        }
      })({
        _scriptable: (t) => !t.startsWith('on'),
        _indexable: (t) => 'events' !== t,
        hover: { _fallback: 'interaction' },
        interaction: { _scriptable: !1, _indexable: !1 },
      });
      function TB(t, e, n, i, s) {
        let r = e[s];
        return r || ((r = e[s] = t.measureText(s).width), n.push(s)), r > i && (i = r), i;
      }
      function DB(t, e, n, i) {
        let s = ((i = i || {}).data = i.data || {}),
          r = (i.garbageCollect = i.garbageCollect || []);
        i.font !== e && ((s = i.data = {}), (r = i.garbageCollect = []), (i.font = e)), t.save(), (t.font = e);
        let o = 0;
        const a = n.length;
        let l, c, h, u, d;
        for (l = 0; l < a; l++)
          if (((u = n[l]), null != u && !0 !== nV(u))) o = TB(t, s, r, o, u);
          else if (nV(u))
            for (c = 0, h = u.length; c < h; c++) (d = u[c]), null == d || nV(d) || (o = TB(t, s, r, o, d));
        t.restore();
        const p = r.length / 2;
        if (p > n.length) {
          for (l = 0; l < p; l++) delete s[r[l]];
          r.splice(0, p);
        }
        return o;
      }
      function MB(t, e, n) {
        const i = t.currentDevicePixelRatio,
          s = 0 !== n ? Math.max(n / 2, 0.5) : 0;
        return Math.round((e - s) * i) / i + s;
      }
      function RB(t, e) {
        (e = e || t.getContext('2d')).save(), e.resetTransform(), e.clearRect(0, 0, t.width, t.height), e.restore();
      }
      function IB(t, e, n, i) {
        let s, r, o, a, l;
        const c = e.pointStyle,
          h = e.rotation,
          u = e.radius;
        let d = (h || 0) * EV;
        if (
          c &&
          'object' == typeof c &&
          ((s = c.toString()), '[object HTMLImageElement]' === s || '[object HTMLCanvasElement]' === s)
        )
          return (
            t.save(),
            t.translate(n, i),
            t.rotate(d),
            t.drawImage(c, -c.width / 2, -c.height / 2, c.width, c.height),
            void t.restore()
          );
        if (!(isNaN(u) || u <= 0)) {
          switch ((t.beginPath(), c)) {
            default:
              t.arc(n, i, u, 0, CV), t.closePath();
              break;
            case 'triangle':
              t.moveTo(n + Math.sin(d) * u, i - Math.cos(d) * u),
                (d += AV),
                t.lineTo(n + Math.sin(d) * u, i - Math.cos(d) * u),
                (d += AV),
                t.lineTo(n + Math.sin(d) * u, i - Math.cos(d) * u),
                t.closePath();
              break;
            case 'rectRounded':
              (l = 0.516 * u),
                (a = u - l),
                (r = Math.cos(d + PV) * a),
                (o = Math.sin(d + PV) * a),
                t.arc(n - r, i - o, l, d - xV, d - OV),
                t.arc(n + o, i - r, l, d - OV, d),
                t.arc(n + r, i + o, l, d, d + OV),
                t.arc(n - o, i + r, l, d + OV, d + xV),
                t.closePath();
              break;
            case 'rect':
              if (!h) {
                (a = Math.SQRT1_2 * u), t.rect(n - a, i - a, 2 * a, 2 * a);
                break;
              }
              d += PV;
            case 'rectRot':
              (r = Math.cos(d) * u),
                (o = Math.sin(d) * u),
                t.moveTo(n - r, i - o),
                t.lineTo(n + o, i - r),
                t.lineTo(n + r, i + o),
                t.lineTo(n - o, i + r),
                t.closePath();
              break;
            case 'crossRot':
              d += PV;
            case 'cross':
              (r = Math.cos(d) * u),
                (o = Math.sin(d) * u),
                t.moveTo(n - r, i - o),
                t.lineTo(n + r, i + o),
                t.moveTo(n + o, i - r),
                t.lineTo(n - o, i + r);
              break;
            case 'star':
              (r = Math.cos(d) * u),
                (o = Math.sin(d) * u),
                t.moveTo(n - r, i - o),
                t.lineTo(n + r, i + o),
                t.moveTo(n + o, i - r),
                t.lineTo(n - o, i + r),
                (d += PV),
                (r = Math.cos(d) * u),
                (o = Math.sin(d) * u),
                t.moveTo(n - r, i - o),
                t.lineTo(n + r, i + o),
                t.moveTo(n + o, i - r),
                t.lineTo(n - o, i + r);
              break;
            case 'line':
              (r = Math.cos(d) * u), (o = Math.sin(d) * u), t.moveTo(n - r, i - o), t.lineTo(n + r, i + o);
              break;
            case 'dash':
              t.moveTo(n, i), t.lineTo(n + Math.cos(d) * u, i + Math.sin(d) * u);
          }
          t.fill(), e.borderWidth > 0 && t.stroke();
        }
      }
      function LB(t, e, n) {
        return (n = n || 0.5), t && e && t.x > e.left - n && t.x < e.right + n && t.y > e.top - n && t.y < e.bottom + n;
      }
      function FB(t, e) {
        t.save(), t.beginPath(), t.rect(e.left, e.top, e.right - e.left, e.bottom - e.top), t.clip();
      }
      function NB(t) {
        t.restore();
      }
      function VB(t, e, n, i, s) {
        if (!e) return t.lineTo(n.x, n.y);
        if ('middle' === s) {
          const i = (e.x + n.x) / 2;
          t.lineTo(i, e.y), t.lineTo(i, n.y);
        } else ('after' === s) != !!i ? t.lineTo(e.x, n.y) : t.lineTo(n.x, e.y);
        t.lineTo(n.x, n.y);
      }
      function BB(t, e, n, i) {
        if (!e) return t.lineTo(n.x, n.y);
        t.bezierCurveTo(i ? e.cp1x : e.cp2x, i ? e.cp1y : e.cp2y, i ? n.cp2x : n.cp1x, i ? n.cp2y : n.cp1y, n.x, n.y);
      }
      function zB(t, e, n, i, s, r = {}) {
        const o = nV(e) ? e : [e],
          a = r.strokeWidth > 0 && '' !== r.strokeColor;
        let l, c;
        for (
          t.save(),
            t.font = s.string,
            (function (t, e) {
              e.translation && t.translate(e.translation[0], e.translation[1]),
                eV(e.rotation) || t.rotate(e.rotation),
                e.color && (t.fillStyle = e.color),
                e.textAlign && (t.textAlign = e.textAlign),
                e.textBaseline && (t.textBaseline = e.textBaseline);
            })(t, r),
            l = 0;
          l < o.length;
          ++l
        )
          (c = o[l]),
            a &&
              (r.strokeColor && (t.strokeStyle = r.strokeColor),
              eV(r.strokeWidth) || (t.lineWidth = r.strokeWidth),
              t.strokeText(c, n, i, r.maxWidth)),
            t.fillText(c, n, i, r.maxWidth),
            jB(t, n, i, c, r),
            (i += s.lineHeight);
        t.restore();
      }
      function jB(t, e, n, i, s) {
        if (s.strikethrough || s.underline) {
          const r = t.measureText(i),
            o = e - r.actualBoundingBoxLeft,
            a = e + r.actualBoundingBoxRight,
            l = n - r.actualBoundingBoxAscent,
            c = n + r.actualBoundingBoxDescent,
            h = s.strikethrough ? (l + c) / 2 : c;
          (t.strokeStyle = t.fillStyle),
            t.beginPath(),
            (t.lineWidth = s.decorationWidth || 2),
            t.moveTo(o, h),
            t.lineTo(a, h),
            t.stroke();
        }
      }
      function HB(t, e) {
        const { x: n, y: i, w: s, h: r, radius: o } = e;
        t.arc(n + o.topLeft, i + o.topLeft, o.topLeft, -OV, xV, !0),
          t.lineTo(n, i + r - o.bottomLeft),
          t.arc(n + o.bottomLeft, i + r - o.bottomLeft, o.bottomLeft, xV, OV, !0),
          t.lineTo(n + s - o.bottomRight, i + r),
          t.arc(n + s - o.bottomRight, i + r - o.bottomRight, o.bottomRight, OV, 0, !0),
          t.lineTo(n + s, i + o.topRight),
          t.arc(n + s - o.topRight, i + o.topRight, o.topRight, 0, -OV, !0),
          t.lineTo(n + o.topLeft, i);
      }
      const $B = new RegExp(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/),
        qB = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);
      function WB(t, e) {
        const n = ('' + t).match($B);
        if (!n || 'normal' === n[1]) return 1.2 * e;
        switch (((t = +n[2]), n[3])) {
          case 'px':
            return t;
          case '%':
            t /= 100;
        }
        return e * t;
      }
      function UB(t, e) {
        const n = {},
          i = iV(e),
          s = i ? Object.keys(e) : e,
          r = iV(t) ? (i ? (n) => oV(t[n], t[e[n]]) : (e) => t[e]) : () => t;
        for (const o of s) n[o] = +r(o) || 0;
        return n;
      }
      function YB(t) {
        return UB(t, { top: 'y', right: 'x', bottom: 'y', left: 'x' });
      }
      function GB(t) {
        return UB(t, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);
      }
      function QB(t) {
        const e = YB(t);
        return (e.width = e.left + e.right), (e.height = e.top + e.bottom), e;
      }
      function KB(t, e) {
        let n = oV((t = t || {}).size, (e = e || AB.font).size);
        'string' == typeof n && (n = parseInt(n, 10));
        let i = oV(t.style, e.style);
        i && !('' + i).match(qB) && (console.warn('Invalid font style specified: "' + i + '"'), (i = ''));
        const s = {
          family: oV(t.family, e.family),
          lineHeight: WB(oV(t.lineHeight, e.lineHeight), n),
          size: n,
          style: i,
          weight: oV(t.weight, e.weight),
          string: '',
        };
        return (
          (s.string = (function (t) {
            return !t || eV(t.size) || eV(t.family)
              ? null
              : (t.style ? t.style + ' ' : '') + (t.weight ? t.weight + ' ' : '') + t.size + 'px ' + t.family;
          })(s)),
          s
        );
      }
      function XB(t, e, n, i) {
        let s,
          r,
          o,
          a = !0;
        for (s = 0, r = t.length; s < r; ++s)
          if (
            ((o = t[s]),
            void 0 !== o &&
              (void 0 !== e && 'function' == typeof o && ((o = o(e)), (a = !1)),
              void 0 !== n && nV(o) && ((o = o[n % o.length]), (a = !1)),
              void 0 !== o))
          )
            return i && !a && (i.cacheable = !1), o;
      }
      function ZB(t, e, n) {
        n = n || ((n) => t[n] < e);
        let i,
          s = t.length - 1,
          r = 0;
        for (; s - r > 1; ) (i = (r + s) >> 1), n(i) ? (r = i) : (s = i);
        return { lo: r, hi: s };
      }
      const JB = (t, e, n) => ZB(t, n, (i) => t[i][e] < n),
        tz = (t, e, n) => ZB(t, n, (i) => t[i][e] >= n),
        ez = ['push', 'pop', 'shift', 'splice', 'unshift'];
      function nz(t, e) {
        const n = t._chartjs;
        if (!n) return;
        const i = n.listeners,
          s = i.indexOf(e);
        -1 !== s && i.splice(s, 1),
          i.length > 0 ||
            (ez.forEach((e) => {
              delete t[e];
            }),
            delete t._chartjs);
      }
      function iz(t) {
        const e = new Set();
        let n, i;
        for (n = 0, i = t.length; n < i; ++n) e.add(t[n]);
        return e.size === i ? t : Array.from(e);
      }
      function sz(t, e = [''], n = t, i, s = () => t[0]) {
        vV(i) || (i = fz('_fallback', t));
        const r = {
          [Symbol.toStringTag]: 'Object',
          _cacheable: !0,
          _scopes: t,
          _rootScopes: n,
          _fallback: i,
          _getTarget: s,
          override: (s) => sz([s, ...t], e, n, i),
        };
        return new Proxy(r, {
          deleteProperty: (e, n) => (delete e[n], delete e._keys, delete t[0][n], !0),
          get: (n, i) =>
            cz(n, i, () =>
              (function (t, e, n, i) {
                let s;
                for (const r of e) if (((s = fz(az(r, t), n)), vV(s))) return lz(t, s) ? pz(n, i, t, s) : s;
              })(i, e, t, n)
            ),
          getOwnPropertyDescriptor: (t, e) => Reflect.getOwnPropertyDescriptor(t._scopes[0], e),
          getPrototypeOf: () => Reflect.getPrototypeOf(t[0]),
          has: (t, e) => gz(t).includes(e),
          ownKeys: (t) => gz(t),
          set: (t, e, n) => (((t._storage || (t._storage = s()))[e] = n), delete t[e], delete t._keys, !0),
        });
      }
      function rz(t, e, n, i) {
        const s = {
          _cacheable: !1,
          _proxy: t,
          _context: e,
          _subProxy: n,
          _stack: new Set(),
          _descriptors: oz(t, i),
          setContext: (e) => rz(t, e, n, i),
          override: (s) => rz(t.override(s), e, n, i),
        };
        return new Proxy(s, {
          deleteProperty: (e, n) => (delete e[n], delete t[n], !0),
          get: (t, e, n) =>
            cz(t, e, () =>
              (function (t, e, n) {
                const { _proxy: i, _context: s, _subProxy: r, _descriptors: o } = t;
                let a = i[e];
                return (
                  wV(a) &&
                    o.isScriptable(e) &&
                    (a = (function (t, e, n, i) {
                      const { _proxy: s, _context: r, _subProxy: o, _stack: a } = n;
                      if (a.has(t)) throw new Error('Recursion detected: ' + Array.from(a).join('->') + '->' + t);
                      return a.add(t), (e = e(r, o || i)), a.delete(t), iV(e) && (e = pz(s._scopes, s, t, e)), e;
                    })(e, a, t, n)),
                  nV(a) &&
                    a.length &&
                    (a = (function (t, e, n, i) {
                      const { _proxy: s, _context: r, _subProxy: o, _descriptors: a } = n;
                      if (vV(r.index) && i(t)) e = e[r.index % e.length];
                      else if (iV(e[0])) {
                        const n = e,
                          i = s._scopes.filter((t) => t !== n);
                        e = [];
                        for (const l of n) {
                          const n = pz(i, s, t, l);
                          e.push(rz(n, r, o && o[t], a));
                        }
                      }
                      return e;
                    })(e, a, t, o.isIndexable)),
                  lz(e, a) && (a = rz(a, s, r && r[e], o)),
                  a
                );
              })(t, e, n)
            ),
          getOwnPropertyDescriptor: (e, n) =>
            e._descriptors.allKeys
              ? Reflect.has(t, n)
                ? { enumerable: !0, configurable: !0 }
                : void 0
              : Reflect.getOwnPropertyDescriptor(t, n),
          getPrototypeOf: () => Reflect.getPrototypeOf(t),
          has: (e, n) => Reflect.has(t, n),
          ownKeys: () => Reflect.ownKeys(t),
          set: (e, n, i) => ((t[n] = i), delete e[n], !0),
        });
      }
      function oz(t, e = { scriptable: !0, indexable: !0 }) {
        const { _scriptable: n = e.scriptable, _indexable: i = e.indexable, _allKeys: s = e.allKeys } = t;
        return {
          allKeys: s,
          scriptable: n,
          indexable: i,
          isScriptable: wV(n) ? n : () => n,
          isIndexable: wV(i) ? i : () => i,
        };
      }
      const az = (t, e) => (t ? t + yV(e) : e),
        lz = (t, e) => iV(e) && 'adapters' !== t;
      function cz(t, e, n) {
        let i = t[e];
        return vV(i) || ((i = n()), vV(i) && (t[e] = i)), i;
      }
      function hz(t, e, n) {
        return wV(t) ? t(e, n) : t;
      }
      const uz = (t, e) => (!0 === t ? e : 'string' == typeof t ? bV(e, t) : void 0);
      function dz(t, e, n, i) {
        for (const s of e) {
          const e = uz(n, s);
          if (e) {
            t.add(e);
            const s = hz(e._fallback, n, e);
            if (vV(s) && s !== n && s !== i) return s;
          } else if (!1 === e && vV(i) && n !== i) return null;
        }
        return !1;
      }
      function pz(t, e, n, i) {
        const s = e._rootScopes,
          r = hz(e._fallback, n, i),
          o = [...t, ...s],
          a = new Set();
        a.add(i);
        let l = mz(a, o, n, r || n);
        return (
          null !== l &&
          (!vV(r) || r === n || ((l = mz(a, o, r, l)), null !== l)) &&
          sz(Array.from(a), [''], s, r, () =>
            (function (t, e, n) {
              const i = t._getTarget();
              e in i || (i[e] = {});
              const s = i[e];
              return nV(s) && iV(n) ? n : s;
            })(e, n, i)
          )
        );
      }
      function mz(t, e, n, i) {
        for (; n; ) n = dz(t, e, n, i);
        return n;
      }
      function fz(t, e) {
        for (const n of e) {
          if (!n) continue;
          const e = n[t];
          if (vV(e)) return e;
        }
      }
      function gz(t) {
        let e = t._keys;
        return (
          e ||
            (e = t._keys =
              (function (t) {
                const e = new Set();
                for (const n of t) for (const t of Object.keys(n).filter((t) => !t.startsWith('_'))) e.add(t);
                return Array.from(e);
              })(t._scopes)),
          e
        );
      }
      const _z = Number.EPSILON || 1e-14,
        bz = (t, e) => e < t.length && !t[e].skip && t[e],
        yz = (t) => ('x' === t ? 'y' : 'x');
      function vz(t, e, n, i) {
        const s = t.skip ? e : t,
          r = e,
          o = n.skip ? e : n,
          a = BV(r, s),
          l = BV(o, r);
        let c = a / (a + l),
          h = l / (a + l);
        (c = isNaN(c) ? 0 : c), (h = isNaN(h) ? 0 : h);
        const u = i * c,
          d = i * h;
        return {
          previous: { x: r.x - u * (o.x - s.x), y: r.y - u * (o.y - s.y) },
          next: { x: r.x + d * (o.x - s.x), y: r.y + d * (o.y - s.y) },
        };
      }
      function wz(t, e, n) {
        return Math.max(Math.min(t, n), e);
      }
      function xz() {
        return 'undefined' != typeof window && 'undefined' != typeof document;
      }
      function Cz(t) {
        let e = t.parentNode;
        return e && '[object ShadowRoot]' === e.toString() && (e = e.host), e;
      }
      function kz(t, e, n) {
        let i;
        return (
          'string' == typeof t
            ? ((i = parseInt(t, 10)), -1 !== t.indexOf('%') && (i = (i / 100) * e.parentNode[n]))
            : (i = t),
          i
        );
      }
      const Sz = (t) => window.getComputedStyle(t, null),
        Ez = ['top', 'right', 'bottom', 'left'];
      function Oz(t, e, n) {
        const i = {};
        n = n ? '-' + n : '';
        for (let s = 0; s < 4; s++) {
          const r = Ez[s];
          i[r] = parseFloat(t[e + '-' + r + n]) || 0;
        }
        return (i.width = i.left + i.right), (i.height = i.top + i.bottom), i;
      }
      function Pz(t, e) {
        const { canvas: n, currentDevicePixelRatio: i } = e,
          s = Sz(n),
          r = 'border-box' === s.boxSizing,
          o = Oz(s, 'padding'),
          a = Oz(s, 'border', 'width'),
          {
            x: l,
            y: c,
            box: h,
          } = (function (t, e) {
            const n = t.native || t,
              i = n.touches,
              s = i && i.length ? i[0] : n,
              { offsetX: r, offsetY: o } = s;
            let a,
              l,
              c = !1;
            if (((t, e, n) => (t > 0 || e > 0) && (!n || !n.shadowRoot))(r, o, n.target)) (a = r), (l = o);
            else {
              const t = e.getBoundingClientRect();
              (a = s.clientX - t.left), (l = s.clientY - t.top), (c = !0);
            }
            return { x: a, y: l, box: c };
          })(t, n),
          u = o.left + (h && a.left),
          d = o.top + (h && a.top);
        let { width: p, height: m } = e;
        return (
          r && ((p -= o.width + a.width), (m -= o.height + a.height)),
          { x: Math.round((((l - u) / p) * n.width) / i), y: Math.round((((c - d) / m) * n.height) / i) }
        );
      }
      const Az = (t) => Math.round(10 * t) / 10;
      function Tz(t, e, n) {
        const i = e || 1,
          s = Math.floor(t.height * i),
          r = Math.floor(t.width * i);
        (t.height = s / i), (t.width = r / i);
        const o = t.canvas;
        return (
          o.style &&
            (n || (!o.style.height && !o.style.width)) &&
            ((o.style.height = `${t.height}px`), (o.style.width = `${t.width}px`)),
          (t.currentDevicePixelRatio !== i || o.height !== s || o.width !== r) &&
            ((t.currentDevicePixelRatio = i), (o.height = s), (o.width = r), t.ctx.setTransform(i, 0, 0, i, 0, 0), !0)
        );
      }
      const Dz = (function () {
        let t = !1;
        try {
          const e = {
            get passive() {
              return (t = !0), !1;
            },
          };
          window.addEventListener('test', null, e), window.removeEventListener('test', null, e);
        } catch (e) {}
        return t;
      })();
      function Mz(t, e) {
        const n = (function (t, e) {
            return Sz(t).getPropertyValue(e);
          })(t, e),
          i = n && n.match(/^(\d+)(\.\d+)?px$/);
        return i ? +i[1] : void 0;
      }
      function Rz(t, e, n, i) {
        return { x: t.x + n * (e.x - t.x), y: t.y + n * (e.y - t.y) };
      }
      function Iz(t, e, n, i) {
        return {
          x: t.x + n * (e.x - t.x),
          y: 'middle' === i ? (n < 0.5 ? t.y : e.y) : 'after' === i ? (n < 1 ? t.y : e.y) : n > 0 ? e.y : t.y,
        };
      }
      function Lz(t, e, n, i) {
        const s = { x: t.cp2x, y: t.cp2y },
          r = { x: e.cp1x, y: e.cp1y },
          o = Rz(t, s, n),
          a = Rz(s, r, n),
          l = Rz(r, e, n),
          c = Rz(o, a, n),
          h = Rz(a, l, n);
        return Rz(c, h, n);
      }
      const Fz = new Map();
      function Nz(t, e, n) {
        return (function (t, e) {
          e = e || {};
          const n = t + JSON.stringify(e);
          let i = Fz.get(n);
          return i || ((i = new Intl.NumberFormat(t, e)), Fz.set(n, i)), i;
        })(e, n).format(t);
      }
      function Vz(t, e, n) {
        return t
          ? (function (t, e) {
              return {
                x: (n) => t + t + e - n,
                setWidth(t) {
                  e = t;
                },
                textAlign: (t) => ('center' === t ? t : 'right' === t ? 'left' : 'right'),
                xPlus: (t, e) => t - e,
                leftForLtr: (t, e) => t - e,
              };
            })(e, n)
          : { x: (t) => t, setWidth(t) {}, textAlign: (t) => t, xPlus: (t, e) => t + e, leftForLtr: (t, e) => t };
      }
      function Bz(t, e) {
        let n, i;
        ('ltr' !== e && 'rtl' !== e) ||
          ((n = t.canvas.style),
          (i = [n.getPropertyValue('direction'), n.getPropertyPriority('direction')]),
          n.setProperty('direction', e, 'important'),
          (t.prevTextDirection = i));
      }
      function zz(t, e) {
        void 0 !== e && (delete t.prevTextDirection, t.canvas.style.setProperty('direction', e[0], e[1]));
      }
      function jz(t) {
        return 'angle' === t
          ? { between: HV, compare: zV, normalize: jV }
          : {
              between: (t, e, n) => t >= Math.min(e, n) && t <= Math.max(n, e),
              compare: (t, e) => t - e,
              normalize: (t) => t,
            };
      }
      function Hz({ start: t, end: e, count: n, loop: i, style: s }) {
        return { start: t % n, end: e % n, loop: i && (e - t + 1) % n == 0, style: s };
      }
      function $z(t, e, n) {
        if (!n) return [t];
        const { property: i, start: s, end: r } = n,
          o = e.length,
          { compare: a, between: l, normalize: c } = jz(i),
          {
            start: h,
            end: u,
            loop: d,
            style: p,
          } = (function (t, e, n) {
            const { property: i, start: s, end: r } = n,
              { between: o, normalize: a } = jz(i),
              l = e.length;
            let c,
              h,
              { start: u, end: d, loop: p } = t;
            if (p) {
              for (u += l, d += l, c = 0, h = l; c < h && o(a(e[u % l][i]), s, r); ++c) u--, d--;
              (u %= l), (d %= l);
            }
            return d < u && (d += l), { start: u, end: d, loop: p, style: t.style };
          })(t, e, n),
          m = [];
        let f,
          g,
          _,
          b = !1,
          y = null;
        for (let v = h, w = h; v <= u; ++v)
          (g = e[v % o]),
            g.skip ||
              ((f = c(g[i])),
              f !== _ &&
                ((b = l(f, s, r)),
                null === y && (b || (l(s, _, f) && 0 !== a(s, _))) && (y = 0 === a(f, s) ? v : w),
                null !== y &&
                  (!b || 0 === a(r, f) || l(r, _, f)) &&
                  (m.push(Hz({ start: y, end: v, loop: d, count: o, style: p })), (y = null)),
                (w = v),
                (_ = f)));
        return null !== y && m.push(Hz({ start: y, end: u, loop: d, count: o, style: p })), m;
      }
      function qz(t, e) {
        const n = [],
          i = t.segments;
        for (let s = 0; s < i.length; s++) {
          const r = $z(i[s], t.points, e);
          r.length && n.push(...r);
        }
        return n;
      }
      function Wz(t) {
        return {
          backgroundColor: t.backgroundColor,
          borderCapStyle: t.borderCapStyle,
          borderDash: t.borderDash,
          borderDashOffset: t.borderDashOffset,
          borderJoinStyle: t.borderJoinStyle,
          borderWidth: t.borderWidth,
          borderColor: t.borderColor,
        };
      }
      function Uz(t, e) {
        return e && JSON.stringify(t) !== JSON.stringify(e);
      }
      var Yz = new (class {
        constructor() {
          (this._request = null), (this._charts = new Map()), (this._running = !1), (this._lastDate = void 0);
        }
        _notify(t, e, n, i) {
          const s = e.duration;
          e.listeners[i].forEach((i) =>
            i({ chart: t, initial: e.initial, numSteps: s, currentStep: Math.min(n - e.start, s) })
          );
        }
        _refresh() {
          const t = this;
          t._request ||
            ((t._running = !0),
            (t._request = QN.call(window, () => {
              t._update(), (t._request = null), t._running && t._refresh();
            })));
        }
        _update(t = Date.now()) {
          const e = this;
          let n = 0;
          e._charts.forEach((i, s) => {
            if (!i.running || !i.items.length) return;
            const r = i.items;
            let o,
              a = r.length - 1,
              l = !1;
            for (; a >= 0; --a)
              (o = r[a]),
                o._active
                  ? (o._total > i.duration && (i.duration = o._total), o.tick(t), (l = !0))
                  : ((r[a] = r[r.length - 1]), r.pop());
            l && (s.draw(), e._notify(s, i, t, 'progress')),
              r.length || ((i.running = !1), e._notify(s, i, t, 'complete'), (i.initial = !1)),
              (n += r.length);
          }),
            (e._lastDate = t),
            0 === n && (e._running = !1);
        }
        _getAnims(t) {
          const e = this._charts;
          let n = e.get(t);
          return (
            n ||
              ((n = { running: !1, initial: !0, items: [], listeners: { complete: [], progress: [] } }), e.set(t, n)),
            n
          );
        }
        listen(t, e, n) {
          this._getAnims(t).listeners[e].push(n);
        }
        add(t, e) {
          e && e.length && this._getAnims(t).items.push(...e);
        }
        has(t) {
          return this._getAnims(t).items.length > 0;
        }
        start(t) {
          const e = this._charts.get(t);
          e &&
            ((e.running = !0),
            (e.start = Date.now()),
            (e.duration = e.items.reduce((t, e) => Math.max(t, e._duration), 0)),
            this._refresh());
        }
        running(t) {
          if (!this._running) return !1;
          const e = this._charts.get(t);
          return !!(e && e.running && e.items.length);
        }
        stop(t) {
          const e = this._charts.get(t);
          if (!e || !e.items.length) return;
          const n = e.items;
          let i = n.length - 1;
          for (; i >= 0; --i) n[i].cancel();
          (e.items = []), this._notify(t, e, Date.now(), 'complete');
        }
        remove(t) {
          return this._charts.delete(t);
        }
      })();
      const Gz = 'transparent',
        Qz = {
          boolean: (t, e, n) => (n > 0.5 ? e : t),
          color(t, e, n) {
            const i = CB(t || Gz),
              s = i.valid && CB(e || Gz);
            return s && s.valid ? s.mix(i, n).hexString() : e;
          },
          number: (t, e, n) => t + (e - t) * n,
        };
      class Kz {
        constructor(t, e, n, i) {
          const s = e[n];
          i = XB([t.to, i, s, t.from]);
          const r = XB([t.from, s, i]);
          (this._active = !0),
            (this._fn = t.fn || Qz[t.type || typeof r]),
            (this._easing = YV[t.easing] || YV.linear),
            (this._start = Math.floor(Date.now() + (t.delay || 0))),
            (this._duration = this._total = Math.floor(t.duration)),
            (this._loop = !!t.loop),
            (this._target = e),
            (this._prop = n),
            (this._from = r),
            (this._to = i),
            (this._promises = void 0);
        }
        active() {
          return this._active;
        }
        update(t, e, n) {
          const i = this;
          if (i._active) {
            i._notify(!1);
            const s = i._target[i._prop],
              r = n - i._start,
              o = i._duration - r;
            (i._start = n),
              (i._duration = Math.floor(Math.max(o, t.duration))),
              (i._total += r),
              (i._loop = !!t.loop),
              (i._to = XB([t.to, e, s, t.from])),
              (i._from = XB([t.from, s, e]));
          }
        }
        cancel() {
          const t = this;
          t._active && (t.tick(Date.now()), (t._active = !1), t._notify(!1));
        }
        tick(t) {
          const e = this,
            n = t - e._start,
            i = e._duration,
            s = e._prop,
            r = e._from,
            o = e._loop,
            a = e._to;
          let l;
          if (((e._active = r !== a && (o || n < i)), !e._active)) return (e._target[s] = a), void e._notify(!0);
          n < 0
            ? (e._target[s] = r)
            : ((l = (n / i) % 2),
              (l = o && l > 1 ? 2 - l : l),
              (l = e._easing(Math.min(1, Math.max(0, l)))),
              (e._target[s] = e._fn(r, a, l)));
        }
        wait() {
          const t = this._promises || (this._promises = []);
          return new Promise((e, n) => {
            t.push({ res: e, rej: n });
          });
        }
        _notify(t) {
          const e = t ? 'res' : 'rej',
            n = this._promises || [];
          for (let i = 0; i < n.length; i++) n[i][e]();
        }
      }
      AB.set('animation', {
        delay: void 0,
        duration: 1e3,
        easing: 'easeOutQuart',
        fn: void 0,
        from: void 0,
        loop: void 0,
        to: void 0,
        type: void 0,
      });
      const Xz = Object.keys(AB.animation);
      AB.describe('animation', {
        _fallback: !1,
        _indexable: !1,
        _scriptable: (t) => 'onProgress' !== t && 'onComplete' !== t && 'fn' !== t,
      }),
        AB.set('animations', {
          colors: { type: 'color', properties: ['color', 'borderColor', 'backgroundColor'] },
          numbers: { type: 'number', properties: ['x', 'y', 'borderWidth', 'radius', 'tension'] },
        }),
        AB.describe('animations', { _fallback: 'animation' }),
        AB.set('transitions', {
          active: { animation: { duration: 400 } },
          resize: { animation: { duration: 0 } },
          show: { animations: { colors: { from: 'transparent' }, visible: { type: 'boolean', duration: 0 } } },
          hide: {
            animations: {
              colors: { to: 'transparent' },
              visible: { type: 'boolean', easing: 'linear', fn: (t) => 0 | t },
            },
          },
        });
      class Zz {
        constructor(t, e) {
          (this._chart = t), (this._properties = new Map()), this.configure(e);
        }
        configure(t) {
          if (!iV(t)) return;
          const e = this._properties;
          Object.getOwnPropertyNames(t).forEach((n) => {
            const i = t[n];
            if (!iV(i)) return;
            const s = {};
            for (const t of Xz) s[t] = i[t];
            ((nV(i.properties) && i.properties) || [n]).forEach((t) => {
              (t !== n && e.has(t)) || e.set(t, s);
            });
          });
        }
        _animateOptions(t, e) {
          const n = e.options,
            i = (function (t, e) {
              if (!e) return;
              let n = t.options;
              if (n) return n.$shared && (t.options = n = Object.assign({}, n, { $shared: !1, $animations: {} })), n;
              t.options = e;
            })(t, n);
          if (!i) return [];
          const s = this._createAnimations(i, n);
          return (
            n.$shared &&
              (function (t, e) {
                const n = [],
                  i = Object.keys(e);
                for (let s = 0; s < i.length; s++) {
                  const e = t[i[s]];
                  e && e.active() && n.push(e.wait());
                }
                return Promise.all(n);
              })(t.options.$animations, n).then(
                () => {
                  t.options = n;
                },
                () => {}
              ),
            s
          );
        }
        _createAnimations(t, e) {
          const n = this._properties,
            i = [],
            s = t.$animations || (t.$animations = {}),
            r = Object.keys(e),
            o = Date.now();
          let a;
          for (a = r.length - 1; a >= 0; --a) {
            const l = r[a];
            if ('$' === l.charAt(0)) continue;
            if ('options' === l) {
              i.push(...this._animateOptions(t, e));
              continue;
            }
            const c = e[l];
            let h = s[l];
            const u = n.get(l);
            if (h) {
              if (u && h.active()) {
                h.update(u, c, o);
                continue;
              }
              h.cancel();
            }
            u && u.duration ? ((s[l] = h = new Kz(u, t, l, c)), i.push(h)) : (t[l] = c);
          }
          return i;
        }
        update(t, e) {
          if (0 === this._properties.size) return void Object.assign(t, e);
          const n = this._createAnimations(t, e);
          return n.length ? (Yz.add(this._chart, n), !0) : void 0;
        }
      }
      function Jz(t, e) {
        const n = (t && t.options) || {},
          i = n.reverse,
          s = void 0 === n.min ? e : 0,
          r = void 0 === n.max ? e : 0;
        return { start: i ? r : s, end: i ? s : r };
      }
      function tj(t, e) {
        const n = [],
          i = t._getSortedDatasetMetas(e);
        let s, r;
        for (s = 0, r = i.length; s < r; ++s) n.push(i[s].index);
        return n;
      }
      function ej(t, e, n, i) {
        const s = t.keys,
          r = 'single' === i.mode;
        let o, a, l, c;
        if (null !== e) {
          for (o = 0, a = s.length; o < a; ++o) {
            if (((l = +s[o]), l === n)) {
              if (i.all) continue;
              break;
            }
            (c = t.values[l]), sV(c) && (r || 0 === e || DV(e) === DV(c)) && (e += c);
          }
          return e;
        }
      }
      function nj(t, e) {
        const n = t && t.options.stacked;
        return n || (void 0 === n && void 0 !== e.stack);
      }
      function ij(t, e, n) {
        const i = t[e] || (t[e] = {});
        return i[n] || (i[n] = {});
      }
      function sj(t, e, n) {
        for (const i of e.getMatchingVisibleMetas('bar').reverse()) {
          const e = t[i.index];
          if ((n && e > 0) || (!n && e < 0)) return i.index;
        }
        return null;
      }
      function rj(t, e) {
        const { chart: n, _cachedMeta: i } = t,
          s = n._stacks || (n._stacks = {}),
          { iScale: r, vScale: o, index: a } = i,
          l = r.axis,
          c = o.axis,
          h = (function (t, e, n) {
            return `${t.id}.${e.id}.${n.stack || n.type}`;
          })(r, o, i),
          u = e.length;
        let d;
        for (let p = 0; p < u; ++p) {
          const t = e[p],
            { [l]: n, [c]: i } = t;
          (d = (t._stacks || (t._stacks = {}))[c] = ij(s, h, n)),
            (d[a] = i),
            (d._top = sj(d, o, !0)),
            (d._bottom = sj(d, o, !1));
        }
      }
      function oj(t, e) {
        const n = t.scales;
        return Object.keys(n)
          .filter((t) => n[t].axis === e)
          .shift();
      }
      function aj(t, e) {
        const n = t.controller.index,
          i = t.vScale && t.vScale.axis;
        if (i) {
          e = e || t._parsed;
          for (const t of e) {
            const e = t._stacks;
            if (!e || void 0 === e[i] || void 0 === e[i][n]) return;
            delete e[i][n];
          }
        }
      }
      const lj = (t) => 'reset' === t || 'none' === t,
        cj = (t, e) => (e ? t : Object.assign({}, t));
      let hj = (() => {
        class t {
          constructor(t, e) {
            (this.chart = t),
              (this._ctx = t.ctx),
              (this.index = e),
              (this._cachedDataOpts = {}),
              (this._cachedMeta = this.getMeta()),
              (this._type = this._cachedMeta.type),
              (this.options = void 0),
              (this._parsing = !1),
              (this._data = void 0),
              (this._objectData = void 0),
              (this._sharedOptions = void 0),
              (this._drawStart = void 0),
              (this._drawCount = void 0),
              (this.enableOptionSharing = !1),
              (this.$context = void 0),
              (this._syncList = []),
              this.initialize();
          }
          initialize() {
            const t = this,
              e = t._cachedMeta;
            t.configure(), t.linkScales(), (e._stacked = nj(e.vScale, e)), t.addElements();
          }
          updateIndex(t) {
            this.index !== t && aj(this._cachedMeta), (this.index = t);
          }
          linkScales() {
            const t = this,
              e = t.chart,
              n = t._cachedMeta,
              i = t.getDataset(),
              s = (t, e, n, i) => ('x' === t ? e : 'r' === t ? i : n),
              r = (n.xAxisID = oV(i.xAxisID, oj(e, 'x'))),
              o = (n.yAxisID = oV(i.yAxisID, oj(e, 'y'))),
              a = (n.rAxisID = oV(i.rAxisID, oj(e, 'r'))),
              l = n.indexAxis,
              c = (n.iAxisID = s(l, r, o, a)),
              h = (n.vAxisID = s(l, o, r, a));
            (n.xScale = t.getScaleForId(r)),
              (n.yScale = t.getScaleForId(o)),
              (n.rScale = t.getScaleForId(a)),
              (n.iScale = t.getScaleForId(c)),
              (n.vScale = t.getScaleForId(h));
          }
          getDataset() {
            return this.chart.data.datasets[this.index];
          }
          getMeta() {
            return this.chart.getDatasetMeta(this.index);
          }
          getScaleForId(t) {
            return this.chart.scales[t];
          }
          _getOtherScale(t) {
            const e = this._cachedMeta;
            return t === e.iScale ? e.vScale : e.iScale;
          }
          reset() {
            this._update('reset');
          }
          _destroy() {
            const t = this._cachedMeta;
            this._data && nz(this._data, this), t._stacked && aj(t);
          }
          _dataCheck() {
            const t = this,
              e = t.getDataset(),
              n = e.data || (e.data = []),
              i = t._data;
            if (iV(n))
              t._data = (function (t) {
                const e = Object.keys(t),
                  n = new Array(e.length);
                let i, s, r;
                for (i = 0, s = e.length; i < s; ++i) (r = e[i]), (n[i] = { x: r, y: t[r] });
                return n;
              })(n);
            else if (i !== n) {
              if (i) {
                nz(i, t);
                const e = t._cachedMeta;
                aj(e), (e._parsed = []);
              }
              n &&
                Object.isExtensible(n) &&
                ((r = t),
                (s = n)._chartjs
                  ? s._chartjs.listeners.push(r)
                  : (Object.defineProperty(s, '_chartjs', {
                      configurable: !0,
                      enumerable: !1,
                      value: { listeners: [r] },
                    }),
                    ez.forEach((t) => {
                      const e = '_onData' + yV(t),
                        n = s[t];
                      Object.defineProperty(s, t, {
                        configurable: !0,
                        enumerable: !1,
                        value(...t) {
                          const i = n.apply(this, t);
                          return (
                            s._chartjs.listeners.forEach((n) => {
                              'function' == typeof n[e] && n[e](...t);
                            }),
                            i
                          );
                        },
                      });
                    }))),
                (t._syncList = []),
                (t._data = n);
            }
            var s, r;
          }
          addElements() {
            const t = this,
              e = t._cachedMeta;
            t._dataCheck(), t.datasetElementType && (e.dataset = new t.datasetElementType());
          }
          buildOrUpdateElements(t) {
            const e = this,
              n = e._cachedMeta,
              i = e.getDataset();
            let s = !1;
            e._dataCheck();
            const r = n._stacked;
            (n._stacked = nj(n.vScale, n)),
              n.stack !== i.stack && ((s = !0), aj(n), (n.stack = i.stack)),
              e._resyncElements(t),
              (s || r !== n._stacked) && rj(e, n._parsed);
          }
          configure() {
            const t = this,
              e = t.chart.config,
              n = e.datasetScopeKeys(t._type),
              i = e.getOptionScopes(t.getDataset(), n, !0);
            (t.options = e.createResolver(i, t.getContext())), (t._parsing = t.options.parsing);
          }
          parse(t, e) {
            const n = this,
              { _cachedMeta: i, _data: s } = n,
              { iScale: r, _stacked: o } = i,
              a = r.axis;
            let l,
              c,
              h,
              u = (0 === t && e === s.length) || i._sorted,
              d = t > 0 && i._parsed[t - 1];
            if (!1 === n._parsing) (i._parsed = s), (i._sorted = !0), (h = s);
            else {
              h = nV(s[t])
                ? n.parseArrayData(i, s, t, e)
                : iV(s[t])
                ? n.parseObjectData(i, s, t, e)
                : n.parsePrimitiveData(i, s, t, e);
              const r = () => null === c[a] || (d && c[a] < d[a]);
              for (l = 0; l < e; ++l) (i._parsed[l + t] = c = h[l]), u && (r() && (u = !1), (d = c));
              i._sorted = u;
            }
            o && rj(n, h);
          }
          parsePrimitiveData(t, e, n, i) {
            const { iScale: s, vScale: r } = t,
              o = s.axis,
              a = r.axis,
              l = s.getLabels(),
              c = s === r,
              h = new Array(i);
            let u, d, p;
            for (u = 0, d = i; u < d; ++u) (p = u + n), (h[u] = { [o]: c || s.parse(l[p], p), [a]: r.parse(e[p], p) });
            return h;
          }
          parseArrayData(t, e, n, i) {
            const { xScale: s, yScale: r } = t,
              o = new Array(i);
            let a, l, c, h;
            for (a = 0, l = i; a < l; ++a)
              (c = a + n), (h = e[c]), (o[a] = { x: s.parse(h[0], c), y: r.parse(h[1], c) });
            return o;
          }
          parseObjectData(t, e, n, i) {
            const { xScale: s, yScale: r } = t,
              { xAxisKey: o = 'x', yAxisKey: a = 'y' } = this._parsing,
              l = new Array(i);
            let c, h, u, d;
            for (c = 0, h = i; c < h; ++c)
              (u = c + n), (d = e[u]), (l[c] = { x: s.parse(bV(d, o), u), y: r.parse(bV(d, a), u) });
            return l;
          }
          getParsed(t) {
            return this._cachedMeta._parsed[t];
          }
          getDataElement(t) {
            return this._cachedMeta.data[t];
          }
          applyStack(t, e, n) {
            const i = this._cachedMeta,
              s = e[t.axis];
            return ej({ keys: tj(this.chart, !0), values: e._stacks[t.axis] }, s, i.index, { mode: n });
          }
          updateRangeFromParsed(t, e, n, i) {
            const s = n[e.axis];
            let r = null === s ? NaN : s;
            const o = i && n._stacks[e.axis];
            i &&
              o &&
              ((i.values = o),
              (t.min = Math.min(t.min, r)),
              (t.max = Math.max(t.max, r)),
              (r = ej(i, s, this._cachedMeta.index, { all: !0 }))),
              (t.min = Math.min(t.min, r)),
              (t.max = Math.max(t.max, r));
          }
          getMinMax(t, e) {
            const n = this,
              i = n._cachedMeta,
              s = i._parsed,
              r = i._sorted && t === i.iScale,
              o = s.length,
              a = n._getOtherScale(t),
              l = e && i._stacked && { keys: tj(n.chart, !0), values: null },
              c = { min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY },
              { min: h, max: u } = (function (t) {
                const { min: e, max: n, minDefined: i, maxDefined: s } = t.getUserBounds();
                return { min: i ? e : Number.NEGATIVE_INFINITY, max: s ? n : Number.POSITIVE_INFINITY };
              })(a);
            let d, p, m, f;
            function g() {
              return (m = s[d]), (p = m[t.axis]), (f = m[a.axis]), !sV(p) || h > f || u < f;
            }
            for (d = 0; d < o && (g() || (n.updateRangeFromParsed(c, t, m, l), !r)); ++d);
            if (r)
              for (d = o - 1; d >= 0; --d)
                if (!g()) {
                  n.updateRangeFromParsed(c, t, m, l);
                  break;
                }
            return c;
          }
          getAllParsedValues(t) {
            const e = this._cachedMeta._parsed,
              n = [];
            let i, s, r;
            for (i = 0, s = e.length; i < s; ++i) (r = e[i][t.axis]), sV(r) && n.push(r);
            return n;
          }
          getMaxOverflow() {
            return !1;
          }
          getLabelAndValue(t) {
            const e = this._cachedMeta,
              n = e.iScale,
              i = e.vScale,
              s = this.getParsed(t);
            return {
              label: n ? '' + n.getLabelForValue(s[n.axis]) : '',
              value: i ? '' + i.getLabelForValue(s[i.axis]) : '',
            };
          }
          _update(t) {
            const e = this,
              n = e._cachedMeta;
            e.configure(),
              (e._cachedDataOpts = {}),
              e.update(t || 'default'),
              (n._clip = (function (t) {
                let e, n, i, s;
                return (
                  iV(t) ? ((e = t.top), (n = t.right), (i = t.bottom), (s = t.left)) : (e = n = i = s = t),
                  { top: e, right: n, bottom: i, left: s, disabled: !1 === t }
                );
              })(
                oV(
                  e.options.clip,
                  (function (t, e, n) {
                    if (!1 === n) return !1;
                    const i = Jz(t, n),
                      s = Jz(e, n);
                    return { top: s.end, right: i.end, bottom: s.start, left: i.start };
                  })(n.xScale, n.yScale, e.getMaxOverflow())
                )
              ));
          }
          update(t) {}
          draw() {
            const t = this,
              e = t._ctx,
              n = t._cachedMeta,
              i = n.data || [],
              s = t.chart.chartArea,
              r = [],
              o = t._drawStart || 0,
              a = t._drawCount || i.length - o;
            let l;
            for (n.dataset && n.dataset.draw(e, s, o, a), l = o; l < o + a; ++l) {
              const t = i[l];
              t.hidden || (t.active ? r.push(t) : t.draw(e, s));
            }
            for (l = 0; l < r.length; ++l) r[l].draw(e, s);
          }
          getStyle(t, e) {
            const n = e ? 'active' : 'default';
            return void 0 === t && this._cachedMeta.dataset
              ? this.resolveDatasetElementOptions(n)
              : this.resolveDataElementOptions(t || 0, n);
          }
          getContext(t, e, n) {
            const i = this,
              s = i.getDataset();
            let r;
            if (t >= 0 && t < i._cachedMeta.data.length) {
              const e = i._cachedMeta.data[t];
              (r =
                e.$context ||
                (e.$context = (function (t, e, n) {
                  return Object.assign(Object.create(t), {
                    active: !1,
                    dataIndex: e,
                    parsed: void 0,
                    raw: void 0,
                    element: n,
                    index: e,
                    mode: 'default',
                    type: 'data',
                  });
                })(i.getContext(), t, e))),
                (r.parsed = i.getParsed(t)),
                (r.raw = s.data[t]),
                (r.index = r.dataIndex = t);
            } else
              (r =
                i.$context ||
                (i.$context = (function (t, e) {
                  return Object.assign(Object.create(t), {
                    active: !1,
                    dataset: void 0,
                    datasetIndex: e,
                    index: e,
                    mode: 'default',
                    type: 'dataset',
                  });
                })(i.chart.getContext(), i.index))),
                (r.dataset = s),
                (r.index = r.datasetIndex = i.index);
            return (r.active = !!e), (r.mode = n), r;
          }
          resolveDatasetElementOptions(t) {
            return this._resolveElementOptions(this.datasetElementType.id, t);
          }
          resolveDataElementOptions(t, e) {
            return this._resolveElementOptions(this.dataElementType.id, e, t);
          }
          _resolveElementOptions(t, e = 'default', n) {
            const i = this,
              s = 'active' === e,
              r = i._cachedDataOpts,
              o = t + '-' + e,
              a = r[o],
              l = i.enableOptionSharing && vV(n);
            if (a) return cj(a, l);
            const c = i.chart.config,
              h = c.datasetElementScopeKeys(i._type, t),
              u = s ? [`${t}Hover`, 'hover', t, ''] : [t, ''],
              d = c.getOptionScopes(i.getDataset(), h),
              p = Object.keys(AB.elements[t]),
              m = c.resolveNamedOptions(d, p, () => i.getContext(n, s), u);
            return m.$shared && ((m.$shared = l), (r[o] = Object.freeze(cj(m, l)))), m;
          }
          _resolveAnimations(t, e, n) {
            const i = this,
              s = i.chart,
              r = i._cachedDataOpts,
              o = `animation-${e}`,
              a = r[o];
            if (a) return a;
            let l;
            if (!1 !== s.options.animation) {
              const s = i.chart.config,
                r = s.datasetAnimationScopeKeys(i._type, e),
                o = s.getOptionScopes(i.getDataset(), r);
              l = s.createResolver(o, i.getContext(t, n, e));
            }
            const c = new Zz(s, l && l.animations);
            return l && l._cacheable && (r[o] = Object.freeze(c)), c;
          }
          getSharedOptions(t) {
            if (t.$shared) return this._sharedOptions || (this._sharedOptions = Object.assign({}, t));
          }
          includeOptions(t, e) {
            return !e || lj(t) || this.chart._animationsDisabled;
          }
          updateElement(t, e, n, i) {
            lj(i) ? Object.assign(t, n) : this._resolveAnimations(e, i).update(t, n);
          }
          updateSharedOptions(t, e, n) {
            t && !lj(e) && this._resolveAnimations(void 0, e).update(t, n);
          }
          _setStyle(t, e, n, i) {
            t.active = i;
            const s = this.getStyle(e, i);
            this._resolveAnimations(e, n, i).update(t, { options: (!i && this.getSharedOptions(s)) || s });
          }
          removeHoverStyle(t, e, n) {
            this._setStyle(t, n, 'active', !1);
          }
          setHoverStyle(t, e, n) {
            this._setStyle(t, n, 'active', !0);
          }
          _removeDatasetHoverStyle() {
            const t = this._cachedMeta.dataset;
            t && this._setStyle(t, void 0, 'active', !1);
          }
          _setDatasetHoverStyle() {
            const t = this._cachedMeta.dataset;
            t && this._setStyle(t, void 0, 'active', !0);
          }
          _resyncElements(t) {
            const e = this,
              n = e._data,
              i = e._cachedMeta.data;
            for (const [a, l, c] of e._syncList) e[a](l, c);
            e._syncList = [];
            const s = i.length,
              r = n.length,
              o = Math.min(r, s);
            o && e.parse(0, o), r > s ? e._insertElements(s, r - s, t) : r < s && e._removeElements(r, s - r);
          }
          _insertElements(t, e, n = !0) {
            const i = this,
              s = i._cachedMeta,
              r = s.data,
              o = t + e;
            let a;
            const l = (t) => {
              for (t.length += e, a = t.length - 1; a >= o; a--) t[a] = t[a - e];
            };
            for (l(r), a = t; a < o; ++a) r[a] = new i.dataElementType();
            i._parsing && l(s._parsed), i.parse(t, e), n && i.updateElements(r, t, e, 'reset');
          }
          updateElements(t, e, n, i) {}
          _removeElements(t, e) {
            const n = this._cachedMeta;
            if (this._parsing) {
              const i = n._parsed.splice(t, e);
              n._stacked && aj(n, i);
            }
            n.data.splice(t, e);
          }
          _onDataPush() {
            const t = arguments.length;
            this._syncList.push(['_insertElements', this.getDataset().data.length - t, t]);
          }
          _onDataPop() {
            this._syncList.push(['_removeElements', this._cachedMeta.data.length - 1, 1]);
          }
          _onDataShift() {
            this._syncList.push(['_removeElements', 0, 1]);
          }
          _onDataSplice(t, e) {
            this._syncList.push(['_removeElements', t, e]),
              this._syncList.push(['_insertElements', t, arguments.length - 2]);
          }
          _onDataUnshift() {
            this._syncList.push(['_insertElements', 0, arguments.length]);
          }
        }
        return (t.defaults = {}), t;
      })();
      function uj(t) {
        const e = (function (t) {
          if (!t._cache.$bar) {
            const e = t.getMatchingVisibleMetas('bar');
            let n = [];
            for (let i = 0, s = e.length; i < s; i++) n = n.concat(e[i].controller.getAllParsedValues(t));
            t._cache.$bar = iz(n.sort((t, e) => t - e));
          }
          return t._cache.$bar;
        })(t);
        let n,
          i,
          s,
          r,
          o = t._length;
        const a = () => {
          32767 !== s && -32768 !== s && (vV(r) && (o = Math.min(o, Math.abs(s - r) || o)), (r = s));
        };
        for (n = 0, i = e.length; n < i; ++n) (s = t.getPixelForValue(e[n])), a();
        for (r = void 0, n = 0, i = t.ticks.length; n < i; ++n) (s = t.getPixelForTick(n)), a();
        return o;
      }
      function dj(t, e, n, i) {
        return (
          nV(t)
            ? (function (t, e, n, i) {
                const s = n.parse(t[0], i),
                  r = n.parse(t[1], i),
                  o = Math.min(s, r),
                  a = Math.max(s, r);
                let l = o,
                  c = a;
                Math.abs(o) > Math.abs(a) && ((l = a), (c = o)),
                  (e[n.axis] = c),
                  (e._custom = { barStart: l, barEnd: c, start: s, end: r, min: o, max: a });
              })(t, e, n, i)
            : (e[n.axis] = n.parse(t, i)),
          e
        );
      }
      function pj(t, e, n, i) {
        const s = t.iScale,
          r = t.vScale,
          o = s.getLabels(),
          a = s === r,
          l = [];
        let c, h, u, d;
        for (c = n, h = n + i; c < h; ++c)
          (d = e[c]), (u = {}), (u[s.axis] = a || s.parse(o[c], c)), l.push(dj(d, u, r, c));
        return l;
      }
      function mj(t) {
        return t && void 0 !== t.barStart && void 0 !== t.barEnd;
      }
      function fj(t, e, n, i) {
        let s = e.borderSkipped;
        const r = {};
        if (!s) return void (t.borderSkipped = r);
        const {
          start: o,
          end: a,
          reverse: l,
          top: c,
          bottom: h,
        } = (function (t) {
          let e, n, i, s, r;
          return (
            t.horizontal
              ? ((e = t.base > t.x), (n = 'left'), (i = 'right'))
              : ((e = t.base < t.y), (n = 'bottom'), (i = 'top')),
            e ? ((s = 'end'), (r = 'start')) : ((s = 'start'), (r = 'end')),
            { start: n, end: i, reverse: e, top: s, bottom: r }
          );
        })(t);
        'middle' === s &&
          n &&
          ((t.enableBorderRadius = !0),
          (n._top || 0) === i ? (s = c) : (n._bottom || 0) === i ? (s = h) : ((r[gj(h, o, a, l)] = !0), (s = c))),
          (r[gj(s, o, a, l)] = !0),
          (t.borderSkipped = r);
      }
      function gj(t, e, n, i) {
        var s, r, o;
        return i ? ((o = n), (t = _j((t = (s = t) === (r = e) ? o : s === o ? r : s), n, e))) : (t = _j(t, e, n)), t;
      }
      function _j(t, e, n) {
        return 'start' === t ? e : 'end' === t ? n : t;
      }
      (hj.prototype.datasetElementType = null), (hj.prototype.dataElementType = null);
      let bj = (() => {
          class t extends hj {
            parsePrimitiveData(t, e, n, i) {
              return pj(t, e, n, i);
            }
            parseArrayData(t, e, n, i) {
              return pj(t, e, n, i);
            }
            parseObjectData(t, e, n, i) {
              const { iScale: s, vScale: r } = t,
                { xAxisKey: o = 'x', yAxisKey: a = 'y' } = this._parsing,
                l = 'x' === s.axis ? o : a,
                c = 'x' === r.axis ? o : a,
                h = [];
              let u, d, p, m;
              for (u = n, d = n + i; u < d; ++u)
                (m = e[u]), (p = {}), (p[s.axis] = s.parse(bV(m, l), u)), h.push(dj(bV(m, c), p, r, u));
              return h;
            }
            updateRangeFromParsed(t, e, n, i) {
              super.updateRangeFromParsed(t, e, n, i);
              const s = n._custom;
              s &&
                e === this._cachedMeta.vScale &&
                ((t.min = Math.min(t.min, s.min)), (t.max = Math.max(t.max, s.max)));
            }
            getMaxOverflow() {
              return 0;
            }
            getLabelAndValue(t) {
              const e = this._cachedMeta,
                { iScale: n, vScale: i } = e,
                s = this.getParsed(t),
                r = s._custom,
                o = mj(r) ? '[' + r.start + ', ' + r.end + ']' : '' + i.getLabelForValue(s[i.axis]);
              return { label: '' + n.getLabelForValue(s[n.axis]), value: o };
            }
            initialize() {
              const t = this;
              (t.enableOptionSharing = !0), super.initialize(), (t._cachedMeta.stack = t.getDataset().stack);
            }
            update(t) {
              const e = this._cachedMeta;
              this.updateElements(e.data, 0, e.data.length, t);
            }
            updateElements(t, e, n, i) {
              const s = this,
                r = 'reset' === i,
                {
                  index: o,
                  _cachedMeta: { vScale: a },
                } = s,
                l = a.getBasePixel(),
                c = a.isHorizontal(),
                h = s._getRuler(),
                u = s.resolveDataElementOptions(e, i),
                d = s.getSharedOptions(u),
                p = s.includeOptions(i, d);
              s.updateSharedOptions(d, i, u);
              for (let m = e; m < e + n; m++) {
                const e = s.getParsed(m),
                  n = r || eV(e[a.axis]) ? { base: l, head: l } : s._calculateBarValuePixels(m),
                  u = s._calculateBarIndexPixels(m, h),
                  f = (e._stacks || {})[a.axis],
                  g = {
                    horizontal: c,
                    base: n.base,
                    enableBorderRadius: !f || mj(e._custom) || o === f._top || o === f._bottom,
                    x: c ? n.head : u.center,
                    y: c ? u.center : n.head,
                    height: c ? u.size : Math.abs(n.size),
                    width: c ? Math.abs(n.size) : u.size,
                  };
                p && (g.options = d || s.resolveDataElementOptions(m, t[m].active ? 'active' : i)),
                  fj(g, g.options || t[m].options, f, o),
                  s.updateElement(t[m], m, g, i);
              }
            }
            _getStacks(t, e) {
              const n = this._cachedMeta.iScale,
                i = n.getMatchingVisibleMetas(this._type),
                s = n.options.stacked,
                r = i.length,
                o = [];
              let a, l;
              for (a = 0; a < r; ++a)
                if (((l = i[a]), l.controller.options.grouped)) {
                  if (void 0 !== e) {
                    const t = l.controller.getParsed(e)[l.controller._cachedMeta.vScale.axis];
                    if (eV(t) || isNaN(t)) continue;
                  }
                  if (
                    ((!1 === s || -1 === o.indexOf(l.stack) || (void 0 === s && void 0 === l.stack)) && o.push(l.stack),
                    l.index === t)
                  )
                    break;
                }
              return o.length || o.push(void 0), o;
            }
            _getStackCount(t) {
              return this._getStacks(void 0, t).length;
            }
            _getStackIndex(t, e, n) {
              const i = this._getStacks(t, n),
                s = void 0 !== e ? i.indexOf(e) : -1;
              return -1 === s ? i.length - 1 : s;
            }
            _getRuler() {
              const t = this,
                e = t.options,
                n = t._cachedMeta,
                i = n.iScale,
                s = [];
              let r, o;
              for (r = 0, o = n.data.length; r < o; ++r) s.push(i.getPixelForValue(t.getParsed(r)[i.axis], r));
              const a = e.barThickness;
              return {
                min: a || uj(i),
                pixels: s,
                start: i._startPixel,
                end: i._endPixel,
                stackCount: t._getStackCount(),
                scale: i,
                grouped: e.grouped,
                ratio: a ? 1 : e.categoryPercentage * e.barPercentage,
              };
            }
            _calculateBarValuePixels(t) {
              const e = this,
                {
                  _cachedMeta: { vScale: n, _stacked: i },
                  options: { base: s, minBarLength: r },
                } = e,
                o = s || 0,
                a = e.getParsed(t),
                l = a._custom,
                c = mj(l);
              let h,
                u,
                d = a[n.axis],
                p = 0,
                m = i ? e.applyStack(n, a, i) : d;
              m !== d && ((p = m - d), (m = d)),
                c &&
                  ((d = l.barStart),
                  (m = l.barEnd - l.barStart),
                  0 !== d && DV(d) !== DV(l.barEnd) && (p = 0),
                  (p += d));
              const f = eV(s) || c ? p : s;
              let g = n.getPixelForValue(f);
              if (
                ((h = e.chart.getDataVisibility(t) ? n.getPixelForValue(p + m) : g),
                (u = h - g),
                Math.abs(u) < r &&
                  ((u =
                    (function (t, e, n) {
                      return 0 !== t ? DV(t) : (e.isHorizontal() ? 1 : -1) * (e.min >= n ? 1 : -1);
                    })(u, n, o) * r),
                  d === o && (g -= u / 2),
                  (h = g + u)),
                g === n.getPixelForValue(o))
              ) {
                const t = (DV(u) * n.getLineWidthForValue(o)) / 2;
                (g += t), (u -= t);
              }
              return { size: u, base: g, head: h, center: h + u / 2 };
            }
            _calculateBarIndexPixels(t, e) {
              const n = this,
                i = e.scale,
                s = n.options,
                r = s.skipNull,
                o = oV(s.maxBarThickness, 1 / 0);
              let a, l;
              if (e.grouped) {
                const i = r ? n._getStackCount(t) : e.stackCount,
                  c =
                    'flex' === s.barThickness
                      ? (function (t, e, n, i) {
                          const s = e.pixels,
                            r = s[t];
                          let o = t > 0 ? s[t - 1] : null,
                            a = t < s.length - 1 ? s[t + 1] : null;
                          const l = n.categoryPercentage;
                          null === o && (o = r - (null === a ? e.end - e.start : a - r)), null === a && (a = r + r - o);
                          const c = r - ((r - Math.min(o, a)) / 2) * l;
                          return { chunk: ((Math.abs(a - o) / 2) * l) / i, ratio: n.barPercentage, start: c };
                        })(t, e, s, i)
                      : (function (t, e, n, i) {
                          const s = n.barThickness;
                          let r, o;
                          return (
                            eV(s)
                              ? ((r = e.min * n.categoryPercentage), (o = n.barPercentage))
                              : ((r = s * i), (o = 1)),
                            { chunk: r / i, ratio: o, start: e.pixels[t] - r / 2 }
                          );
                        })(t, e, s, i),
                  h = n._getStackIndex(n.index, n._cachedMeta.stack, r ? t : void 0);
                (a = c.start + c.chunk * h + c.chunk / 2), (l = Math.min(o, c.chunk * c.ratio));
              } else (a = i.getPixelForValue(n.getParsed(t)[i.axis], t)), (l = Math.min(o, e.min * e.ratio));
              return { base: a - l / 2, head: a + l / 2, center: a, size: l };
            }
            draw() {
              const t = this,
                e = t._cachedMeta,
                n = e.vScale,
                i = e.data,
                s = i.length;
              let r = 0;
              for (; r < s; ++r) null !== t.getParsed(r)[n.axis] && i[r].draw(t._ctx);
            }
          }
          return (
            (t.id = 'bar'),
            (t.defaults = {
              datasetElementType: !1,
              dataElementType: 'bar',
              categoryPercentage: 0.8,
              barPercentage: 0.9,
              grouped: !0,
              animations: { numbers: { type: 'number', properties: ['x', 'y', 'base', 'width', 'height'] } },
            }),
            (t.overrides = {
              interaction: { mode: 'index' },
              scales: {
                _index_: { type: 'category', offset: !0, grid: { offset: !0 } },
                _value_: { type: 'linear', beginAtZero: !0 },
              },
            }),
            t
          );
        })(),
        yj = (() => {
          class t extends hj {
            initialize() {
              (this.enableOptionSharing = !0), super.initialize();
            }
            parseObjectData(t, e, n, i) {
              const { xScale: s, yScale: r } = t,
                { xAxisKey: o = 'x', yAxisKey: a = 'y' } = this._parsing,
                l = [];
              let c, h, u;
              for (c = n, h = n + i; c < h; ++c)
                (u = e[c]), l.push({ x: s.parse(bV(u, o), c), y: r.parse(bV(u, a), c), _custom: u && u.r && +u.r });
              return l;
            }
            getMaxOverflow() {
              const { data: t, _parsed: e } = this._cachedMeta;
              let n = 0;
              for (let i = t.length - 1; i >= 0; --i) n = Math.max(n, t[i].size() / 2, e[i]._custom);
              return n > 0 && n;
            }
            getLabelAndValue(t) {
              const e = this._cachedMeta,
                { xScale: n, yScale: i } = e,
                s = this.getParsed(t),
                r = n.getLabelForValue(s.x),
                o = i.getLabelForValue(s.y),
                a = s._custom;
              return { label: e.label, value: '(' + r + ', ' + o + (a ? ', ' + a : '') + ')' };
            }
            update(t) {
              const e = this._cachedMeta.data;
              this.updateElements(e, 0, e.length, t);
            }
            updateElements(t, e, n, i) {
              const s = this,
                r = 'reset' === i,
                { iScale: o, vScale: a } = s._cachedMeta,
                l = s.resolveDataElementOptions(e, i),
                c = s.getSharedOptions(l),
                h = s.includeOptions(i, c),
                u = o.axis,
                d = a.axis;
              for (let p = e; p < e + n; p++) {
                const e = t[p],
                  n = !r && s.getParsed(p),
                  l = {},
                  c = (l[u] = r ? o.getPixelForDecimal(0.5) : o.getPixelForValue(n[u])),
                  m = (l[d] = r ? a.getBasePixel() : a.getPixelForValue(n[d]));
                (l.skip = isNaN(c) || isNaN(m)),
                  h &&
                    ((l.options = s.resolveDataElementOptions(p, e.active ? 'active' : i)),
                    r && (l.options.radius = 0)),
                  s.updateElement(e, p, l, i);
              }
              s.updateSharedOptions(c, i, l);
            }
            resolveDataElementOptions(t, e) {
              const n = this.getParsed(t);
              let i = super.resolveDataElementOptions(t, e);
              i.$shared && (i = Object.assign({}, i, { $shared: !1 }));
              const s = i.radius;
              return 'active' !== e && (i.radius = 0), (i.radius += oV(n && n._custom, s)), i;
            }
          }
          return (
            (t.id = 'bubble'),
            (t.defaults = {
              datasetElementType: !1,
              dataElementType: 'point',
              animations: { numbers: { type: 'number', properties: ['x', 'y', 'borderWidth', 'radius'] } },
            }),
            (t.overrides = {
              scales: { x: { type: 'linear' }, y: { type: 'linear' } },
              plugins: { tooltip: { callbacks: { title: () => '' } } },
            }),
            t
          );
        })(),
        vj = (() => {
          class t extends hj {
            constructor(t, e) {
              super(t, e),
                (this.enableOptionSharing = !0),
                (this.innerRadius = void 0),
                (this.outerRadius = void 0),
                (this.offsetX = void 0),
                (this.offsetY = void 0);
            }
            linkScales() {}
            parse(t, e) {
              const n = this.getDataset().data,
                i = this._cachedMeta;
              let s, r;
              for (s = t, r = t + e; s < r; ++s) i._parsed[s] = +n[s];
            }
            _getRotation() {
              return FV(this.options.rotation - 90);
            }
            _getCircumference() {
              return FV(this.options.circumference);
            }
            _getRotationExtents() {
              let t = CV,
                e = -CV;
              const n = this;
              for (let i = 0; i < n.chart.data.datasets.length; ++i)
                if (n.chart.isDatasetVisible(i)) {
                  const s = n.chart.getDatasetMeta(i).controller,
                    r = s._getRotation(),
                    o = s._getCircumference();
                  (t = Math.min(t, r)), (e = Math.max(e, r + o));
                }
              return { rotation: t, circumference: e - t };
            }
            update(t) {
              const e = this,
                n = e.chart,
                { chartArea: i } = n,
                s = e._cachedMeta,
                r = s.data,
                o = e.getMaxBorderWidth() + e.getMaxOffset(r) + e.options.spacing,
                a = Math.max((Math.min(i.width, i.height) - o) / 2, 0),
                l = Math.min(
                  ((h = a), 'string' == typeof (c = e.options.cutout) && c.endsWith('%') ? parseFloat(c) / 100 : c / h),
                  1
                );
              var c, h;
              const u = e._getRingWeight(e.index),
                { circumference: d, rotation: p } = e._getRotationExtents(),
                {
                  ratioX: m,
                  ratioY: f,
                  offsetX: g,
                  offsetY: _,
                } = (function (t, e, n) {
                  let i = 1,
                    s = 1,
                    r = 0,
                    o = 0;
                  if (e < CV) {
                    const a = t,
                      l = a + e,
                      c = Math.cos(a),
                      h = Math.sin(a),
                      u = Math.cos(l),
                      d = Math.sin(l),
                      p = (t, e, i) => (HV(t, a, l, !0) ? 1 : Math.max(e, e * n, i, i * n)),
                      m = (t, e, i) => (HV(t, a, l, !0) ? -1 : Math.min(e, e * n, i, i * n)),
                      f = p(0, c, u),
                      g = p(OV, h, d),
                      _ = m(xV, c, u),
                      b = m(xV + OV, h, d);
                    (i = (f - _) / 2), (s = (g - b) / 2), (r = -(f + _) / 2), (o = -(g + b) / 2);
                  }
                  return { ratioX: i, ratioY: s, offsetX: r, offsetY: o };
                })(p, d, l),
                b = Math.max(Math.min((i.width - o) / m, (i.height - o) / f) / 2, 0),
                y = aV(e.options.radius, b),
                v = (y - Math.max(y * l, 0)) / e._getVisibleDatasetWeightTotal();
              (e.offsetX = g * y),
                (e.offsetY = _ * y),
                (s.total = e.calculateTotal()),
                (e.outerRadius = y - v * e._getRingWeightOffset(e.index)),
                (e.innerRadius = Math.max(e.outerRadius - v * u, 0)),
                e.updateElements(r, 0, r.length, t);
            }
            _circumference(t, e) {
              const n = this,
                i = n.options,
                s = n._cachedMeta,
                r = n._getCircumference();
              return (e && i.animation.animateRotate) ||
                !this.chart.getDataVisibility(t) ||
                null === s._parsed[t] ||
                s.data[t].hidden
                ? 0
                : n.calculateCircumference((s._parsed[t] * r) / CV);
            }
            updateElements(t, e, n, i) {
              const s = this,
                r = 'reset' === i,
                o = s.chart,
                a = o.chartArea,
                l = (a.left + a.right) / 2,
                c = (a.top + a.bottom) / 2,
                h = r && o.options.animation.animateScale,
                u = h ? 0 : s.innerRadius,
                d = h ? 0 : s.outerRadius,
                p = s.resolveDataElementOptions(e, i),
                m = s.getSharedOptions(p),
                f = s.includeOptions(i, m);
              let g,
                _ = s._getRotation();
              for (g = 0; g < e; ++g) _ += s._circumference(g, r);
              for (g = e; g < e + n; ++g) {
                const e = s._circumference(g, r),
                  n = t[g],
                  o = {
                    x: l + s.offsetX,
                    y: c + s.offsetY,
                    startAngle: _,
                    endAngle: _ + e,
                    circumference: e,
                    outerRadius: d,
                    innerRadius: u,
                  };
                f && (o.options = m || s.resolveDataElementOptions(g, n.active ? 'active' : i)),
                  (_ += e),
                  s.updateElement(n, g, o, i);
              }
              s.updateSharedOptions(m, i, p);
            }
            calculateTotal() {
              const t = this._cachedMeta,
                e = t.data;
              let n,
                i = 0;
              for (n = 0; n < e.length; n++) {
                const s = t._parsed[n];
                null === s || isNaN(s) || !this.chart.getDataVisibility(n) || e[n].hidden || (i += Math.abs(s));
              }
              return i;
            }
            calculateCircumference(t) {
              const e = this._cachedMeta.total;
              return e > 0 && !isNaN(t) ? CV * (Math.abs(t) / e) : 0;
            }
            getLabelAndValue(t) {
              const e = this.chart,
                n = e.data.labels || [],
                i = Nz(this._cachedMeta._parsed[t], e.options.locale);
              return { label: n[t] || '', value: i };
            }
            getMaxBorderWidth(t) {
              const e = this;
              let n = 0;
              const i = e.chart;
              let s, r, o, a, l;
              if (!t)
                for (s = 0, r = i.data.datasets.length; s < r; ++s)
                  if (i.isDatasetVisible(s)) {
                    (o = i.getDatasetMeta(s)), (t = o.data), (a = o.controller), a !== e && a.configure();
                    break;
                  }
              if (!t) return 0;
              for (s = 0, r = t.length; s < r; ++s)
                (l = a.resolveDataElementOptions(s)),
                  'inner' !== l.borderAlign && (n = Math.max(n, l.borderWidth || 0, l.hoverBorderWidth || 0));
              return n;
            }
            getMaxOffset(t) {
              let e = 0;
              for (let n = 0, i = t.length; n < i; ++n) {
                const t = this.resolveDataElementOptions(n);
                e = Math.max(e, t.offset || 0, t.hoverOffset || 0);
              }
              return e;
            }
            _getRingWeightOffset(t) {
              let e = 0;
              for (let n = 0; n < t; ++n) this.chart.isDatasetVisible(n) && (e += this._getRingWeight(n));
              return e;
            }
            _getRingWeight(t) {
              return Math.max(oV(this.chart.data.datasets[t].weight, 1), 0);
            }
            _getVisibleDatasetWeightTotal() {
              return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;
            }
          }
          return (
            (t.id = 'doughnut'),
            (t.defaults = {
              datasetElementType: !1,
              dataElementType: 'arc',
              animation: { animateRotate: !0, animateScale: !1 },
              animations: {
                numbers: {
                  type: 'number',
                  properties: [
                    'circumference',
                    'endAngle',
                    'innerRadius',
                    'outerRadius',
                    'startAngle',
                    'x',
                    'y',
                    'offset',
                    'borderWidth',
                    'spacing',
                  ],
                },
              },
              cutout: '50%',
              rotation: 0,
              circumference: 360,
              radius: '100%',
              spacing: 0,
              indexAxis: 'r',
            }),
            (t.descriptors = { _scriptable: (t) => 'spacing' !== t, _indexable: (t) => 'spacing' !== t }),
            (t.overrides = {
              aspectRatio: 1,
              plugins: {
                legend: {
                  labels: {
                    generateLabels(t) {
                      const e = t.data;
                      if (e.labels.length && e.datasets.length) {
                        const {
                          labels: { pointStyle: n },
                        } = t.legend.options;
                        return e.labels.map((e, i) => {
                          const s = t.getDatasetMeta(0).controller.getStyle(i);
                          return {
                            text: e,
                            fillStyle: s.backgroundColor,
                            strokeStyle: s.borderColor,
                            lineWidth: s.borderWidth,
                            pointStyle: n,
                            hidden: !t.getDataVisibility(i),
                            index: i,
                          };
                        });
                      }
                      return [];
                    },
                  },
                  onClick(t, e, n) {
                    n.chart.toggleDataVisibility(e.index), n.chart.update();
                  },
                },
                tooltip: {
                  callbacks: {
                    title: () => '',
                    label(t) {
                      let e = t.label;
                      const n = ': ' + t.formattedValue;
                      return nV(e) ? ((e = e.slice()), (e[0] += n)) : (e += n), e;
                    },
                  },
                },
              },
            }),
            t
          );
        })(),
        wj = (() => {
          class t extends hj {
            initialize() {
              (this.enableOptionSharing = !0), super.initialize();
            }
            update(t) {
              const e = this,
                n = e._cachedMeta,
                { dataset: i, data: s = [], _dataset: r } = n,
                o = e.chart._animationsDisabled;
              let { start: a, count: l } = (function (t, e, n) {
                const i = e.length;
                let s = 0,
                  r = i;
                if (t._sorted) {
                  const { iScale: o, _parsed: a } = t,
                    l = o.axis,
                    { min: c, max: h, minDefined: u, maxDefined: d } = o.getUserBounds();
                  u && (s = $V(Math.min(JB(a, o.axis, c).lo, n ? i : JB(e, l, o.getPixelForValue(c)).lo), 0, i - 1)),
                    (r = d
                      ? $V(Math.max(JB(a, o.axis, h).hi + 1, n ? 0 : JB(e, l, o.getPixelForValue(h)).hi + 1), s, i) - s
                      : i - s);
                }
                return { start: s, count: r };
              })(n, s, o);
              (e._drawStart = a),
                (e._drawCount = l),
                (function (t) {
                  const { xScale: e, yScale: n, _scaleRanges: i } = t,
                    s = { xmin: e.min, xmax: e.max, ymin: n.min, ymax: n.max };
                  if (!i) return (t._scaleRanges = s), !0;
                  const r = i.xmin !== e.min || i.xmax !== e.max || i.ymin !== n.min || i.ymax !== n.max;
                  return Object.assign(i, s), r;
                })(n) && ((a = 0), (l = s.length)),
                (i._datasetIndex = e.index),
                (i._decimated = !!r._decimated),
                (i.points = s);
              const c = e.resolveDatasetElementOptions(t);
              e.options.showLine || (c.borderWidth = 0),
                (c.segment = e.options.segment),
                e.updateElement(i, void 0, { animated: !o, options: c }, t),
                e.updateElements(s, a, l, t);
            }
            updateElements(t, e, n, i) {
              const s = this,
                r = 'reset' === i,
                { iScale: o, vScale: a, _stacked: l } = s._cachedMeta,
                c = s.resolveDataElementOptions(e, i),
                h = s.getSharedOptions(c),
                u = s.includeOptions(i, h),
                d = o.axis,
                p = a.axis,
                m = s.options.spanGaps,
                f = RV(m) ? m : Number.POSITIVE_INFINITY,
                g = s.chart._animationsDisabled || r || 'none' === i;
              let _ = e > 0 && s.getParsed(e - 1);
              for (let b = e; b < e + n; ++b) {
                const e = t[b],
                  n = s.getParsed(b),
                  c = g ? e : {},
                  m = eV(n[p]),
                  y = (c[d] = o.getPixelForValue(n[d], b)),
                  v = (c[p] = r || m ? a.getBasePixel() : a.getPixelForValue(l ? s.applyStack(a, n, l) : n[p], b));
                (c.skip = isNaN(y) || isNaN(v) || m),
                  (c.stop = b > 0 && n[d] - _[d] > f),
                  (c.parsed = n),
                  u && (c.options = h || s.resolveDataElementOptions(b, e.active ? 'active' : i)),
                  g || s.updateElement(e, b, c, i),
                  (_ = n);
              }
              s.updateSharedOptions(h, i, c);
            }
            getMaxOverflow() {
              const t = this,
                e = t._cachedMeta,
                n = e.dataset,
                i = (n.options && n.options.borderWidth) || 0,
                s = e.data || [];
              if (!s.length) return i;
              const r = s[0].size(t.resolveDataElementOptions(0)),
                o = s[s.length - 1].size(t.resolveDataElementOptions(s.length - 1));
              return Math.max(i, r, o) / 2;
            }
            draw() {
              const t = this._cachedMeta;
              t.dataset.updateControlPoints(this.chart.chartArea, t.iScale.axis), super.draw();
            }
          }
          return (
            (t.id = 'line'),
            (t.defaults = { datasetElementType: 'line', dataElementType: 'point', showLine: !0, spanGaps: !1 }),
            (t.overrides = { scales: { _index_: { type: 'category' }, _value_: { type: 'linear' } } }),
            t
          );
        })(),
        xj = (() => {
          class t extends hj {
            constructor(t, e) {
              super(t, e), (this.innerRadius = void 0), (this.outerRadius = void 0);
            }
            getLabelAndValue(t) {
              const e = this.chart,
                n = e.data.labels || [],
                i = Nz(this._cachedMeta._parsed[t].r, e.options.locale);
              return { label: n[t] || '', value: i };
            }
            update(t) {
              const e = this._cachedMeta.data;
              this._updateRadius(), this.updateElements(e, 0, e.length, t);
            }
            _updateRadius() {
              const t = this,
                e = t.chart,
                n = e.chartArea,
                i = e.options,
                s = Math.min(n.right - n.left, n.bottom - n.top),
                r = Math.max(s / 2, 0),
                o =
                  (r - Math.max(i.cutoutPercentage ? (r / 100) * i.cutoutPercentage : 1, 0)) /
                  e.getVisibleDatasetCount();
              (t.outerRadius = r - o * t.index), (t.innerRadius = t.outerRadius - o);
            }
            updateElements(t, e, n, i) {
              const s = this,
                r = 'reset' === i,
                o = s.chart,
                a = s.getDataset(),
                l = o.options.animation,
                c = s._cachedMeta.rScale,
                h = c.xCenter,
                u = c.yCenter,
                d = c.getIndexAngle(0) - 0.5 * xV;
              let p,
                m = d;
              const f = 360 / s.countVisibleElements();
              for (p = 0; p < e; ++p) m += s._computeAngle(p, i, f);
              for (p = e; p < e + n; p++) {
                const e = t[p];
                let n = m,
                  g = m + s._computeAngle(p, i, f),
                  _ = o.getDataVisibility(p) ? c.getDistanceFromCenterForValue(a.data[p]) : 0;
                (m = g), r && (l.animateScale && (_ = 0), l.animateRotate && (n = g = d));
                const b = {
                  x: h,
                  y: u,
                  innerRadius: 0,
                  outerRadius: _,
                  startAngle: n,
                  endAngle: g,
                  options: s.resolveDataElementOptions(p, e.active ? 'active' : i),
                };
                s.updateElement(e, p, b, i);
              }
            }
            countVisibleElements() {
              const t = this.getDataset();
              let e = 0;
              return (
                this._cachedMeta.data.forEach((n, i) => {
                  !isNaN(t.data[i]) && this.chart.getDataVisibility(i) && e++;
                }),
                e
              );
            }
            _computeAngle(t, e, n) {
              return this.chart.getDataVisibility(t) ? FV(this.resolveDataElementOptions(t, e).angle || n) : 0;
            }
          }
          return (
            (t.id = 'polarArea'),
            (t.defaults = {
              dataElementType: 'arc',
              animation: { animateRotate: !0, animateScale: !0 },
              animations: {
                numbers: {
                  type: 'number',
                  properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'],
                },
              },
              indexAxis: 'r',
              startAngle: 0,
            }),
            (t.overrides = {
              aspectRatio: 1,
              plugins: {
                legend: {
                  labels: {
                    generateLabels(t) {
                      const e = t.data;
                      if (e.labels.length && e.datasets.length) {
                        const {
                          labels: { pointStyle: n },
                        } = t.legend.options;
                        return e.labels.map((e, i) => {
                          const s = t.getDatasetMeta(0).controller.getStyle(i);
                          return {
                            text: e,
                            fillStyle: s.backgroundColor,
                            strokeStyle: s.borderColor,
                            lineWidth: s.borderWidth,
                            pointStyle: n,
                            hidden: !t.getDataVisibility(i),
                            index: i,
                          };
                        });
                      }
                      return [];
                    },
                  },
                  onClick(t, e, n) {
                    n.chart.toggleDataVisibility(e.index), n.chart.update();
                  },
                },
                tooltip: {
                  callbacks: {
                    title: () => '',
                    label: (t) => t.chart.data.labels[t.dataIndex] + ': ' + t.formattedValue,
                  },
                },
              },
              scales: {
                r: {
                  type: 'radialLinear',
                  angleLines: { display: !1 },
                  beginAtZero: !0,
                  grid: { circular: !0 },
                  pointLabels: { display: !1 },
                  startAngle: 0,
                },
              },
            }),
            t
          );
        })(),
        Cj = (() => {
          class t extends vj {}
          return (t.id = 'pie'), (t.defaults = { cutout: 0, rotation: 0, circumference: 360, radius: '100%' }), t;
        })(),
        kj = (() => {
          class t extends hj {
            getLabelAndValue(t) {
              const e = this._cachedMeta.vScale,
                n = this.getParsed(t);
              return { label: e.getLabels()[t], value: '' + e.getLabelForValue(n[e.axis]) };
            }
            update(t) {
              const e = this,
                n = e._cachedMeta,
                i = n.dataset,
                s = n.data || [],
                r = n.iScale.getLabels();
              if (((i.points = s), 'resize' !== t)) {
                const n = e.resolveDatasetElementOptions(t);
                e.options.showLine || (n.borderWidth = 0),
                  e.updateElement(i, void 0, { _loop: !0, _fullLoop: r.length === s.length, options: n }, t);
              }
              e.updateElements(s, 0, s.length, t);
            }
            updateElements(t, e, n, i) {
              const s = this,
                r = s.getDataset(),
                o = s._cachedMeta.rScale,
                a = 'reset' === i;
              for (let l = e; l < e + n; l++) {
                const e = t[l],
                  n = s.resolveDataElementOptions(l, e.active ? 'active' : i),
                  c = o.getPointPositionForValue(l, r.data[l]),
                  h = a ? o.xCenter : c.x,
                  u = a ? o.yCenter : c.y,
                  d = { x: h, y: u, angle: c.angle, skip: isNaN(h) || isNaN(u), options: n };
                s.updateElement(e, l, d, i);
              }
            }
          }
          return (
            (t.id = 'radar'),
            (t.defaults = {
              datasetElementType: 'line',
              dataElementType: 'point',
              indexAxis: 'r',
              showLine: !0,
              elements: { line: { fill: 'start' } },
            }),
            (t.overrides = { aspectRatio: 1, scales: { r: { type: 'radialLinear' } } }),
            t
          );
        })(),
        Sj = (() => {
          class t extends wj {}
          return (
            (t.id = 'scatter'),
            (t.defaults = { showLine: !1, fill: !1 }),
            (t.overrides = {
              interaction: { mode: 'point' },
              plugins: {
                tooltip: {
                  callbacks: { title: () => '', label: (t) => '(' + t.label + ', ' + t.formattedValue + ')' },
                },
              },
              scales: { x: { type: 'linear' }, y: { type: 'linear' } },
            }),
            t
          );
        })();
      function Ej() {
        throw new Error('This method is not implemented: Check that a complete date adapter is provided.');
      }
      var Oj = {
        _date: (() => {
          class t {
            constructor(t) {
              this.options = t || {};
            }
            formats() {
              return Ej();
            }
            parse(t, e) {
              return Ej();
            }
            format(t, e) {
              return Ej();
            }
            add(t, e, n) {
              return Ej();
            }
            diff(t, e, n) {
              return Ej();
            }
            startOf(t, e, n) {
              return Ej();
            }
            endOf(t, e) {
              return Ej();
            }
          }
          return (
            (t.override = function (e) {
              Object.assign(t.prototype, e);
            }),
            t
          );
        })(),
      };
      function Pj(t, e) {
        return 'native' in t ? { x: t.x, y: t.y } : Pz(t, e);
      }
      function Aj(t, e, n, i) {
        const { controller: s, data: r, _sorted: o } = t,
          a = s._cachedMeta.iScale;
        if (a && e === a.axis && o && r.length) {
          const t = a._reversePixels ? tz : JB;
          if (!i) return t(r, e, n);
          if (s._sharedOptions) {
            const i = r[0],
              s = 'function' == typeof i.getRange && i.getRange(e);
            if (s) {
              const i = t(r, e, n - s),
                o = t(r, e, n + s);
              return { lo: i.lo, hi: o.hi };
            }
          }
        }
        return { lo: 0, hi: r.length - 1 };
      }
      function Tj(t, e, n, i, s) {
        const r = t.getSortedVisibleDatasetMetas(),
          o = n[e];
        for (let a = 0, l = r.length; a < l; ++a) {
          const { index: t, data: n } = r[a],
            { lo: l, hi: c } = Aj(r[a], e, o, s);
          for (let e = l; e <= c; ++e) {
            const s = n[e];
            s.skip || i(s, t, e);
          }
        }
      }
      function Dj(t, e, n, i) {
        const s = [];
        return LB(e, t.chartArea, t._minPadding)
          ? (Tj(
              t,
              n,
              e,
              function (t, n, r) {
                t.inRange(e.x, e.y, i) && s.push({ element: t, datasetIndex: n, index: r });
              },
              !0
            ),
            s)
          : s;
      }
      function Mj(t, e, n, i, s) {
        const r = (function (t) {
          const e = -1 !== t.indexOf('x'),
            n = -1 !== t.indexOf('y');
          return function (t, i) {
            const s = e ? Math.abs(t.x - i.x) : 0,
              r = n ? Math.abs(t.y - i.y) : 0;
            return Math.sqrt(Math.pow(s, 2) + Math.pow(r, 2));
          };
        })(n);
        let o = Number.POSITIVE_INFINITY,
          a = [];
        return LB(e, t.chartArea, t._minPadding)
          ? (Tj(t, n, e, function (n, l, c) {
              if (i && !n.inRange(e.x, e.y, s)) return;
              const h = n.getCenterPoint(s);
              if (!LB(h, t.chartArea, t._minPadding) && !n.inRange(e.x, e.y, s)) return;
              const u = r(e, h);
              u < o
                ? ((a = [{ element: n, datasetIndex: l, index: c }]), (o = u))
                : u === o && a.push({ element: n, datasetIndex: l, index: c });
            }),
            a)
          : a;
      }
      function Rj(t, e, n, i) {
        const s = Pj(e, t),
          r = [],
          o = n.axis,
          a = 'x' === o ? 'inXRange' : 'inYRange';
        let l = !1;
        return (
          (function (t, e) {
            const n = t.getSortedVisibleDatasetMetas();
            let i, s, r;
            for (let o = 0, a = n.length; o < a; ++o) {
              ({ index: i, data: s } = n[o]);
              for (let t = 0, n = s.length; t < n; ++t) (r = s[t]), r.skip || e(r, i, t);
            }
          })(t, (t, e, n) => {
            t[a](s[o], i) && r.push({ element: t, datasetIndex: e, index: n }), t.inRange(s.x, s.y, i) && (l = !0);
          }),
          n.intersect && !l ? [] : r
        );
      }
      var Ij = {
        modes: {
          index(t, e, n, i) {
            const s = Pj(e, t),
              r = n.axis || 'x',
              o = n.intersect ? Dj(t, s, r, i) : Mj(t, s, r, !1, i),
              a = [];
            return o.length
              ? (t.getSortedVisibleDatasetMetas().forEach((t) => {
                  const e = o[0].index,
                    n = t.data[e];
                  n && !n.skip && a.push({ element: n, datasetIndex: t.index, index: e });
                }),
                a)
              : [];
          },
          dataset(t, e, n, i) {
            const s = Pj(e, t),
              r = n.axis || 'xy';
            let o = n.intersect ? Dj(t, s, r, i) : Mj(t, s, r, !1, i);
            if (o.length > 0) {
              const e = o[0].datasetIndex,
                n = t.getDatasetMeta(e).data;
              o = [];
              for (let t = 0; t < n.length; ++t) o.push({ element: n[t], datasetIndex: e, index: t });
            }
            return o;
          },
          point: (t, e, n, i) => Dj(t, Pj(e, t), n.axis || 'xy', i),
          nearest: (t, e, n, i) => Mj(t, Pj(e, t), n.axis || 'xy', n.intersect, i),
          x: (t, e, n, i) => ((n.axis = 'x'), Rj(t, e, n, i)),
          y: (t, e, n, i) => ((n.axis = 'y'), Rj(t, e, n, i)),
        },
      };
      const Lj = ['left', 'top', 'right', 'bottom'];
      function Fj(t, e) {
        return t.filter((t) => t.pos === e);
      }
      function Nj(t, e) {
        return t.filter((t) => -1 === Lj.indexOf(t.pos) && t.box.axis === e);
      }
      function Vj(t, e) {
        return t.sort((t, n) => {
          const i = e ? n : t,
            s = e ? t : n;
          return i.weight === s.weight ? i.index - s.index : i.weight - s.weight;
        });
      }
      function Bj(t, e, n, i) {
        return Math.max(t[n], e[n]) + Math.max(t[i], e[i]);
      }
      function zj(t, e) {
        (t.top = Math.max(t.top, e.top)),
          (t.left = Math.max(t.left, e.left)),
          (t.bottom = Math.max(t.bottom, e.bottom)),
          (t.right = Math.max(t.right, e.right));
      }
      function jj(t, e, n, i) {
        const { pos: s, box: r } = n,
          o = t.maxPadding;
        if (!iV(s)) {
          n.size && (t[s] -= n.size);
          const e = i[n.stack] || { size: 0, count: 1 };
          (e.size = Math.max(e.size, n.horizontal ? r.height : r.width)), (n.size = e.size / e.count), (t[s] += n.size);
        }
        r.getPadding && zj(o, r.getPadding());
        const a = Math.max(0, e.outerWidth - Bj(o, t, 'left', 'right')),
          l = Math.max(0, e.outerHeight - Bj(o, t, 'top', 'bottom')),
          c = a !== t.w,
          h = l !== t.h;
        return (t.w = a), (t.h = l), n.horizontal ? { same: c, other: h } : { same: h, other: c };
      }
      function Hj(t, e) {
        const n = e.maxPadding;
        return (function (t) {
          const i = { left: 0, top: 0, right: 0, bottom: 0 };
          return (
            t.forEach((t) => {
              i[t] = Math.max(e[t], n[t]);
            }),
            i
          );
        })(t ? ['left', 'right'] : ['top', 'bottom']);
      }
      function $j(t, e, n, i) {
        const s = [];
        let r, o, a, l, c, h;
        for (r = 0, o = t.length, c = 0; r < o; ++r) {
          (a = t[r]), (l = a.box), l.update(a.width || e.w, a.height || e.h, Hj(a.horizontal, e));
          const { same: o, other: u } = jj(e, n, a, i);
          (c |= o && s.length), (h = h || u), l.fullSize || s.push(a);
        }
        return (c && $j(s, e, n, i)) || h;
      }
      function qj(t, e, n, i, s) {
        (t.top = n), (t.left = e), (t.right = e + i), (t.bottom = n + s), (t.width = i), (t.height = s);
      }
      function Wj(t, e, n, i) {
        const s = n.padding;
        let { x: r, y: o } = e;
        for (const a of t) {
          const t = a.box,
            l = i[a.stack] || { count: 1, placed: 0, weight: 1 },
            c = a.stackWeight / l.weight || 1;
          if (a.horizontal) {
            const i = e.w * c,
              r = l.size || t.height;
            vV(l.start) && (o = l.start),
              t.fullSize ? qj(t, s.left, o, n.outerWidth - s.right - s.left, r) : qj(t, e.left + l.placed, o, i, r),
              (l.start = o),
              (l.placed += i),
              (o = t.bottom);
          } else {
            const i = e.h * c,
              o = l.size || t.width;
            vV(l.start) && (r = l.start),
              t.fullSize ? qj(t, r, s.top, o, n.outerHeight - s.bottom - s.top) : qj(t, r, e.top + l.placed, o, i),
              (l.start = r),
              (l.placed += i),
              (r = t.right);
          }
        }
        (e.x = r), (e.y = o);
      }
      AB.set('layout', { padding: { top: 0, right: 0, bottom: 0, left: 0 } });
      var Uj = {
        addBox(t, e) {
          t.boxes || (t.boxes = []),
            (e.fullSize = e.fullSize || !1),
            (e.position = e.position || 'top'),
            (e.weight = e.weight || 0),
            (e._layers =
              e._layers ||
              function () {
                return [
                  {
                    z: 0,
                    draw(t) {
                      e.draw(t);
                    },
                  },
                ];
              }),
            t.boxes.push(e);
        },
        removeBox(t, e) {
          const n = t.boxes ? t.boxes.indexOf(e) : -1;
          -1 !== n && t.boxes.splice(n, 1);
        },
        configure(t, e, n) {
          (e.fullSize = n.fullSize), (e.position = n.position), (e.weight = n.weight);
        },
        update(t, e, n, i) {
          if (!t) return;
          const s = QB(t.options.layout.padding),
            r = Math.max(e - s.width, 0),
            o = Math.max(n - s.height, 0),
            a = (function (t) {
              const e = (function (t) {
                  const e = [];
                  let n, i, s, r, o, a;
                  for (n = 0, i = (t || []).length; n < i; ++n)
                    (s = t[n]),
                      ({
                        position: r,
                        options: { stack: o, stackWeight: a = 1 },
                      } = s),
                      e.push({
                        index: n,
                        box: s,
                        pos: r,
                        horizontal: s.isHorizontal(),
                        weight: s.weight,
                        stack: o && r + o,
                        stackWeight: a,
                      });
                  return e;
                })(t),
                n = Vj(
                  e.filter((t) => t.box.fullSize),
                  !0
                ),
                i = Vj(Fj(e, 'left'), !0),
                s = Vj(Fj(e, 'right')),
                r = Vj(Fj(e, 'top'), !0),
                o = Vj(Fj(e, 'bottom')),
                a = Nj(e, 'x'),
                l = Nj(e, 'y');
              return {
                fullSize: n,
                leftAndTop: i.concat(r),
                rightAndBottom: s.concat(l).concat(o).concat(a),
                chartArea: Fj(e, 'chartArea'),
                vertical: i.concat(s).concat(l),
                horizontal: r.concat(o).concat(a),
              };
            })(t.boxes),
            l = a.vertical,
            c = a.horizontal;
          cV(t.boxes, (t) => {
            'function' == typeof t.beforeLayout && t.beforeLayout();
          });
          const h = l.reduce((t, e) => (e.box.options && !1 === e.box.options.display ? t : t + 1), 0) || 1,
            u = Object.freeze({
              outerWidth: e,
              outerHeight: n,
              padding: s,
              availableWidth: r,
              availableHeight: o,
              vBoxMaxWidth: r / 2 / h,
              hBoxMaxHeight: o / 2,
            }),
            d = Object.assign({}, s);
          zj(d, QB(i));
          const p = Object.assign({ maxPadding: d, w: r, h: o, x: s.left, y: s.top }, s),
            m = (function (t, e) {
              const n = (function (t) {
                  const e = {};
                  for (const n of t) {
                    const { stack: t, pos: i, stackWeight: s } = n;
                    if (!t || !Lj.includes(i)) continue;
                    const r = e[t] || (e[t] = { count: 0, placed: 0, weight: 0, size: 0 });
                    r.count++, (r.weight += s);
                  }
                  return e;
                })(t),
                { vBoxMaxWidth: i, hBoxMaxHeight: s } = e;
              let r, o, a;
              for (r = 0, o = t.length; r < o; ++r) {
                a = t[r];
                const { fullSize: o } = a.box,
                  l = n[a.stack],
                  c = l && a.stackWeight / l.weight;
                a.horizontal
                  ? ((a.width = c ? c * i : o && e.availableWidth), (a.height = s))
                  : ((a.width = i), (a.height = c ? c * s : o && e.availableHeight));
              }
              return n;
            })(l.concat(c), u);
          $j(a.fullSize, p, u, m),
            $j(l, p, u, m),
            $j(c, p, u, m) && $j(l, p, u, m),
            (function (t) {
              const e = t.maxPadding;
              function n(n) {
                const i = Math.max(e[n] - t[n], 0);
                return (t[n] += i), i;
              }
              (t.y += n('top')), (t.x += n('left')), n('right'), n('bottom');
            })(p),
            Wj(a.leftAndTop, p, u, m),
            (p.x += p.w),
            (p.y += p.h),
            Wj(a.rightAndBottom, p, u, m),
            (t.chartArea = {
              left: p.left,
              top: p.top,
              right: p.left + p.w,
              bottom: p.top + p.h,
              height: p.h,
              width: p.w,
            }),
            cV(a.chartArea, (e) => {
              const n = e.box;
              Object.assign(n, t.chartArea), n.update(p.w, p.h);
            });
        },
      };
      class Yj {
        acquireContext(t, e) {}
        releaseContext(t) {
          return !1;
        }
        addEventListener(t, e, n) {}
        removeEventListener(t, e, n) {}
        getDevicePixelRatio() {
          return 1;
        }
        getMaximumSize(t, e, n, i) {
          return (
            (e = Math.max(0, e || t.width)),
            (n = n || t.height),
            { width: e, height: Math.max(0, i ? Math.floor(e / i) : n) }
          );
        }
        isAttached(t) {
          return !0;
        }
      }
      class Gj extends Yj {
        acquireContext(t) {
          return (t && t.getContext && t.getContext('2d')) || null;
        }
      }
      const Qj = {
          touchstart: 'mousedown',
          touchmove: 'mousemove',
          touchend: 'mouseup',
          pointerenter: 'mouseenter',
          pointerdown: 'mousedown',
          pointermove: 'mousemove',
          pointerup: 'mouseup',
          pointerleave: 'mouseout',
          pointerout: 'mouseout',
        },
        Kj = (t) => null === t || '' === t,
        Xj = !!Dz && { passive: !0 };
      function Zj(t, e, n) {
        t.canvas.removeEventListener(e, n, Xj);
      }
      function Jj(t, e, n) {
        const i = t.canvas,
          s = (i && Cz(i)) || i,
          r = new MutationObserver((t) => {
            const e = Cz(s);
            t.forEach((t) => {
              for (let i = 0; i < t.addedNodes.length; i++) {
                const r = t.addedNodes[i];
                (r !== s && r !== e) || n(t.target);
              }
            });
          });
        return r.observe(document, { childList: !0, subtree: !0 }), r;
      }
      function tH(t, e, n) {
        const i = t.canvas,
          s = i && Cz(i);
        if (!s) return;
        const r = new MutationObserver((t) => {
          t.forEach((t) => {
            for (let e = 0; e < t.removedNodes.length; e++)
              if (t.removedNodes[e] === i) {
                n();
                break;
              }
          });
        });
        return r.observe(s, { childList: !0 }), r;
      }
      const eH = new Map();
      let nH = 0;
      function iH() {
        const t = window.devicePixelRatio;
        t !== nH &&
          ((nH = t),
          eH.forEach((e, n) => {
            n.currentDevicePixelRatio !== t && e();
          }));
      }
      function sH(t, e, n) {
        const i = t.canvas,
          s = i && Cz(i);
        if (!s) return;
        const r = KN((t, e) => {
            const i = s.clientWidth;
            n(t, e), i < s.clientWidth && n();
          }, window),
          o = new ResizeObserver((t) => {
            const e = t[0],
              n = e.contentRect.width,
              i = e.contentRect.height;
            (0 === n && 0 === i) || r(n, i);
          });
        return (
          o.observe(s),
          (function (t, e) {
            eH.size || window.addEventListener('resize', iH), eH.set(t, e);
          })(t, r),
          o
        );
      }
      function rH(t, e, n) {
        n && n.disconnect(),
          'resize' === e &&
            (function (t) {
              eH.delete(t), eH.size || window.removeEventListener('resize', iH);
            })(t);
      }
      function oH(t, e, n) {
        const i = t.canvas,
          s = KN(
            (e) => {
              null !== t.ctx &&
                n(
                  (function (t, e) {
                    const n = Qj[t.type] || t.type,
                      { x: i, y: s } = Pz(t, e);
                    return { type: n, chart: e, native: t, x: void 0 !== i ? i : null, y: void 0 !== s ? s : null };
                  })(e, t)
                );
            },
            t,
            (t) => {
              const e = t[0];
              return [e, e.offsetX, e.offsetY];
            }
          );
        return (
          (function (t, e, n) {
            t.addEventListener(e, n, Xj);
          })(i, e, s),
          s
        );
      }
      class aH extends Yj {
        acquireContext(t, e) {
          const n = t && t.getContext && t.getContext('2d');
          return n && n.canvas === t
            ? ((function (t, e) {
                const n = t.style,
                  i = t.getAttribute('height'),
                  s = t.getAttribute('width');
                if (
                  ((t.$chartjs = {
                    initial: { height: i, width: s, style: { display: n.display, height: n.height, width: n.width } },
                  }),
                  (n.display = n.display || 'block'),
                  (n.boxSizing = n.boxSizing || 'border-box'),
                  Kj(s))
                ) {
                  const e = Mz(t, 'width');
                  void 0 !== e && (t.width = e);
                }
                if (Kj(i))
                  if ('' === t.style.height) t.height = t.width / (e || 2);
                  else {
                    const e = Mz(t, 'height');
                    void 0 !== e && (t.height = e);
                  }
              })(t, e),
              n)
            : null;
        }
        releaseContext(t) {
          const e = t.canvas;
          if (!e.$chartjs) return !1;
          const n = e.$chartjs.initial;
          ['height', 'width'].forEach((t) => {
            const i = n[t];
            eV(i) ? e.removeAttribute(t) : e.setAttribute(t, i);
          });
          const i = n.style || {};
          return (
            Object.keys(i).forEach((t) => {
              e.style[t] = i[t];
            }),
            (e.width = e.width),
            delete e.$chartjs,
            !0
          );
        }
        addEventListener(t, e, n) {
          this.removeEventListener(t, e),
            ((t.$proxies || (t.$proxies = {}))[e] = ({ attach: Jj, detach: tH, resize: sH }[e] || oH)(t, e, n));
        }
        removeEventListener(t, e) {
          const n = t.$proxies || (t.$proxies = {}),
            i = n[e];
          i && (({ attach: rH, detach: rH, resize: rH }[e] || Zj)(t, e, i), (n[e] = void 0));
        }
        getDevicePixelRatio() {
          return window.devicePixelRatio;
        }
        getMaximumSize(t, e, n, i) {
          return (function (t, e, n, i) {
            const s = Sz(t),
              r = Oz(s, 'margin'),
              o = kz(s.maxWidth, t, 'clientWidth') || SV,
              a = kz(s.maxHeight, t, 'clientHeight') || SV,
              l = (function (t, e, n) {
                let i, s;
                if (void 0 === e || void 0 === n) {
                  const r = Cz(t);
                  if (r) {
                    const t = r.getBoundingClientRect(),
                      o = Sz(r),
                      a = Oz(o, 'border', 'width'),
                      l = Oz(o, 'padding');
                    (e = t.width - l.width - a.width),
                      (n = t.height - l.height - a.height),
                      (i = kz(o.maxWidth, r, 'clientWidth')),
                      (s = kz(o.maxHeight, r, 'clientHeight'));
                  } else (e = t.clientWidth), (n = t.clientHeight);
                }
                return { width: e, height: n, maxWidth: i || SV, maxHeight: s || SV };
              })(t, e, n);
            let { width: c, height: h } = l;
            if ('content-box' === s.boxSizing) {
              const t = Oz(s, 'border', 'width'),
                e = Oz(s, 'padding');
              (c -= e.width + t.width), (h -= e.height + t.height);
            }
            return (
              (c = Math.max(0, c - r.width)),
              (h = Math.max(0, i ? Math.floor(c / i) : h - r.height)),
              (c = Az(Math.min(c, o, l.maxWidth))),
              (h = Az(Math.min(h, a, l.maxHeight))),
              c && !h && (h = Az(c / 2)),
              { width: c, height: h }
            );
          })(t, e, n, i);
        }
        isAttached(t) {
          const e = Cz(t);
          return !(!e || !e.isConnected);
        }
      }
      class lH {
        constructor() {
          (this.x = void 0),
            (this.y = void 0),
            (this.active = !1),
            (this.options = void 0),
            (this.$animations = void 0);
        }
        tooltipPosition(t) {
          const { x: e, y: n } = this.getProps(['x', 'y'], t);
          return { x: e, y: n };
        }
        hasValue() {
          return RV(this.x) && RV(this.y);
        }
        getProps(t, e) {
          const n = this,
            i = this.$animations;
          if (!e || !i) return n;
          const s = {};
          return (
            t.forEach((t) => {
              s[t] = i[t] && i[t].active() ? i[t]._to : n[t];
            }),
            s
          );
        }
      }
      (lH.defaults = {}), (lH.defaultRoutes = void 0);
      const cH = {
        values: (t) => (nV(t) ? t : '' + t),
        numeric(t, e, n) {
          if (0 === t) return '0';
          const i = this.chart.options.locale;
          let s,
            r = t;
          if (n.length > 1) {
            const e = Math.max(Math.abs(n[0].value), Math.abs(n[n.length - 1].value));
            (e < 1e-4 || e > 1e15) && (s = 'scientific'),
              (r = (function (t, e) {
                let n = e.length > 3 ? e[2].value - e[1].value : e[1].value - e[0].value;
                return Math.abs(n) >= 1 && t !== Math.floor(t) && (n = t - Math.floor(t)), n;
              })(t, n));
          }
          const o = TV(Math.abs(r)),
            a = Math.max(Math.min(-1 * Math.floor(o), 20), 0),
            l = { notation: s, minimumFractionDigits: a, maximumFractionDigits: a };
          return Object.assign(l, this.options.ticks.format), Nz(t, i, l);
        },
        logarithmic(t, e, n) {
          if (0 === t) return '0';
          const i = t / Math.pow(10, Math.floor(TV(t)));
          return 1 === i || 2 === i || 5 === i ? cH.numeric.call(this, t, e, n) : '';
        },
      };
      var hH = { formatters: cH };
      function uH(t, e, n, i, s) {
        const r = oV(i, 0),
          o = Math.min(oV(s, t.length), t.length);
        let a,
          l,
          c,
          h = 0;
        for (n = Math.ceil(n), s && ((a = s - i), (n = a / Math.floor(a / n))), c = r; c < 0; )
          h++, (c = Math.round(r + h * n));
        for (l = Math.max(r, 0); l < o; l++) l === c && (e.push(t[l]), h++, (c = Math.round(r + h * n)));
      }
      AB.set('scale', {
        display: !0,
        offset: !1,
        reverse: !1,
        beginAtZero: !1,
        bounds: 'ticks',
        grace: 0,
        grid: {
          display: !0,
          lineWidth: 1,
          drawBorder: !0,
          drawOnChartArea: !0,
          drawTicks: !0,
          tickLength: 8,
          tickWidth: (t, e) => e.lineWidth,
          tickColor: (t, e) => e.color,
          offset: !1,
          borderDash: [],
          borderDashOffset: 0,
          borderWidth: 1,
        },
        title: { display: !1, text: '', padding: { top: 4, bottom: 4 } },
        ticks: {
          minRotation: 0,
          maxRotation: 50,
          mirror: !1,
          textStrokeWidth: 0,
          textStrokeColor: '',
          padding: 3,
          display: !0,
          autoSkip: !0,
          autoSkipPadding: 3,
          labelOffset: 0,
          callback: hH.formatters.values,
          minor: {},
          major: {},
          align: 'center',
          crossAlign: 'near',
          showLabelBackdrop: !1,
          backdropColor: 'rgba(255, 255, 255, 0.75)',
          backdropPadding: 2,
        },
      }),
        AB.route('scale.ticks', 'color', '', 'color'),
        AB.route('scale.grid', 'color', '', 'borderColor'),
        AB.route('scale.grid', 'borderColor', '', 'borderColor'),
        AB.route('scale.title', 'color', '', 'color'),
        AB.describe('scale', {
          _fallback: !1,
          _scriptable: (t) => !t.startsWith('before') && !t.startsWith('after') && 'callback' !== t && 'parser' !== t,
          _indexable: (t) => 'borderDash' !== t && 'tickBorderDash' !== t,
        }),
        AB.describe('scales', { _fallback: 'scale' }),
        AB.describe('scale.ticks', {
          _scriptable: (t) => 'backdropPadding' !== t && 'callback' !== t,
          _indexable: (t) => 'backdropPadding' !== t,
        });
      const dH = (t, e, n) => ('top' === e || 'left' === e ? t[e] + n : t[e] - n);
      function pH(t, e) {
        const n = [],
          i = t.length / e,
          s = t.length;
        let r = 0;
        for (; r < s; r += i) n.push(t[Math.floor(r)]);
        return n;
      }
      function mH(t, e, n) {
        const i = t.ticks.length,
          s = Math.min(e, i - 1),
          r = t._startPixel,
          o = t._endPixel,
          a = 1e-6;
        let l,
          c = t.getPixelForTick(s);
        if (
          !(
            n &&
            ((l =
              1 === i
                ? Math.max(c - r, o - c)
                : 0 === e
                ? (t.getPixelForTick(1) - c) / 2
                : (c - t.getPixelForTick(s - 1)) / 2),
            (c += s < e ? l : -l),
            c < r - a || c > o + a)
          )
        )
          return c;
      }
      function fH(t) {
        return t.drawTicks ? t.tickLength : 0;
      }
      function gH(t, e) {
        if (!t.display) return 0;
        const n = KB(t.font, e),
          i = QB(t.padding);
        return (nV(t.text) ? t.text.length : 1) * n.lineHeight + i.height;
      }
      function _H(t, e, n) {
        let i = XN(t);
        return (
          ((n && 'right' !== e) || (!n && 'right' === e)) &&
            (i = ((t) => ('left' === t ? 'right' : 'right' === t ? 'left' : t))(i)),
          i
        );
      }
      class bH extends lH {
        constructor(t) {
          super(),
            (this.id = t.id),
            (this.type = t.type),
            (this.options = void 0),
            (this.ctx = t.ctx),
            (this.chart = t.chart),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this._margins = { left: 0, right: 0, top: 0, bottom: 0 }),
            (this.maxWidth = void 0),
            (this.maxHeight = void 0),
            (this.paddingTop = void 0),
            (this.paddingBottom = void 0),
            (this.paddingLeft = void 0),
            (this.paddingRight = void 0),
            (this.axis = void 0),
            (this.labelRotation = void 0),
            (this.min = void 0),
            (this.max = void 0),
            (this._range = void 0),
            (this.ticks = []),
            (this._gridLineItems = null),
            (this._labelItems = null),
            (this._labelSizes = null),
            (this._length = 0),
            (this._maxLength = 0),
            (this._longestTextCache = {}),
            (this._startPixel = void 0),
            (this._endPixel = void 0),
            (this._reversePixels = !1),
            (this._userMax = void 0),
            (this._userMin = void 0),
            (this._suggestedMax = void 0),
            (this._suggestedMin = void 0),
            (this._ticksLength = 0),
            (this._borderValue = 0),
            (this._cache = {}),
            (this._dataLimitsCached = !1),
            (this.$context = void 0);
        }
        init(t) {
          const e = this;
          (e.options = t.setContext(e.getContext())),
            (e.axis = t.axis),
            (e._userMin = e.parse(t.min)),
            (e._userMax = e.parse(t.max)),
            (e._suggestedMin = e.parse(t.suggestedMin)),
            (e._suggestedMax = e.parse(t.suggestedMax));
        }
        parse(t, e) {
          return t;
        }
        getUserBounds() {
          let { _userMin: t, _userMax: e, _suggestedMin: n, _suggestedMax: i } = this;
          return (
            (t = rV(t, Number.POSITIVE_INFINITY)),
            (e = rV(e, Number.NEGATIVE_INFINITY)),
            (n = rV(n, Number.POSITIVE_INFINITY)),
            (i = rV(i, Number.NEGATIVE_INFINITY)),
            { min: rV(t, n), max: rV(e, i), minDefined: sV(t), maxDefined: sV(e) }
          );
        }
        getMinMax(t) {
          const e = this;
          let n,
            { min: i, max: s, minDefined: r, maxDefined: o } = e.getUserBounds();
          if (r && o) return { min: i, max: s };
          const a = e.getMatchingVisibleMetas();
          for (let l = 0, c = a.length; l < c; ++l)
            (n = a[l].controller.getMinMax(e, t)), r || (i = Math.min(i, n.min)), o || (s = Math.max(s, n.max));
          return { min: rV(i, rV(s, i)), max: rV(s, rV(i, s)) };
        }
        getPadding() {
          const t = this;
          return {
            left: t.paddingLeft || 0,
            top: t.paddingTop || 0,
            right: t.paddingRight || 0,
            bottom: t.paddingBottom || 0,
          };
        }
        getTicks() {
          return this.ticks;
        }
        getLabels() {
          const t = this.chart.data;
          return this.options.labels || (this.isHorizontal() ? t.xLabels : t.yLabels) || t.labels || [];
        }
        beforeLayout() {
          (this._cache = {}), (this._dataLimitsCached = !1);
        }
        beforeUpdate() {
          lV(this.options.beforeUpdate, [this]);
        }
        update(t, e, n) {
          const i = this,
            s = i.options.ticks,
            r = s.sampleSize;
          i.beforeUpdate(),
            (i.maxWidth = t),
            (i.maxHeight = e),
            (i._margins = n = Object.assign({ left: 0, right: 0, top: 0, bottom: 0 }, n)),
            (i.ticks = null),
            (i._labelSizes = null),
            (i._gridLineItems = null),
            (i._labelItems = null),
            i.beforeSetDimensions(),
            i.setDimensions(),
            i.afterSetDimensions(),
            (i._maxLength = i.isHorizontal() ? i.width + n.left + n.right : i.height + n.top + n.bottom),
            i._dataLimitsCached ||
              (i.beforeDataLimits(),
              i.determineDataLimits(),
              i.afterDataLimits(),
              (i._range = (function (t, e) {
                const { min: n, max: i } = t;
                return { min: n - Math.abs(aV(e, n)), max: i + aV(e, i) };
              })(i, i.options.grace)),
              (i._dataLimitsCached = !0)),
            i.beforeBuildTicks(),
            (i.ticks = i.buildTicks() || []),
            i.afterBuildTicks();
          const o = r < i.ticks.length;
          i._convertTicksToLabels(o ? pH(i.ticks, r) : i.ticks),
            i.configure(),
            i.beforeCalculateLabelRotation(),
            i.calculateLabelRotation(),
            i.afterCalculateLabelRotation(),
            s.display &&
              (s.autoSkip || 'auto' === s.source) &&
              ((i.ticks = (function (t, e) {
                const n = t.options.ticks,
                  i =
                    n.maxTicksLimit ||
                    (function (t) {
                      const e = t.options.offset,
                        n = t._tickSize();
                      return Math.floor(Math.min(t._length / n + (e ? 0 : 1), t._maxLength / n));
                    })(t),
                  s = n.major.enabled
                    ? (function (t) {
                        const e = [];
                        let n, i;
                        for (n = 0, i = t.length; n < i; n++) t[n].major && e.push(n);
                        return e;
                      })(e)
                    : [],
                  r = s.length,
                  o = s[0],
                  a = s[r - 1],
                  l = [];
                if (r > i)
                  return (
                    (function (t, e, n, i) {
                      let s,
                        r = 0,
                        o = n[0];
                      for (i = Math.ceil(i), s = 0; s < t.length; s++) s === o && (e.push(t[s]), r++, (o = n[r * i]));
                    })(e, l, s, r / i),
                    l
                  );
                const c = (function (t, e, n) {
                  const i = (function (t) {
                      const e = t.length;
                      let n, i;
                      if (e < 2) return !1;
                      for (i = t[0], n = 1; n < e; ++n) if (t[n] - t[n - 1] !== i) return !1;
                      return i;
                    })(t),
                    s = e.length / n;
                  if (!i) return Math.max(s, 1);
                  const r = (function (t) {
                    const e = [],
                      n = Math.sqrt(t);
                    let i;
                    for (i = 1; i < n; i++) t % i == 0 && (e.push(i), e.push(t / i));
                    return n === (0 | n) && e.push(n), e.sort((t, e) => t - e).pop(), e;
                  })(i);
                  for (let o = 0, a = r.length - 1; o < a; o++) {
                    const t = r[o];
                    if (t > s) return t;
                  }
                  return Math.max(s, 1);
                })(s, e, i);
                if (r > 0) {
                  let t, n;
                  const i = r > 1 ? Math.round((a - o) / (r - 1)) : null;
                  for (uH(e, l, c, eV(i) ? 0 : o - i, o), t = 0, n = r - 1; t < n; t++) uH(e, l, c, s[t], s[t + 1]);
                  return uH(e, l, c, a, eV(i) ? e.length : a + i), l;
                }
                return uH(e, l, c), l;
              })(i, i.ticks)),
              (i._labelSizes = null)),
            o && i._convertTicksToLabels(i.ticks),
            i.beforeFit(),
            i.fit(),
            i.afterFit(),
            i.afterUpdate();
        }
        configure() {
          const t = this;
          let e,
            n,
            i = t.options.reverse;
          t.isHorizontal() ? ((e = t.left), (n = t.right)) : ((e = t.top), (n = t.bottom), (i = !i)),
            (t._startPixel = e),
            (t._endPixel = n),
            (t._reversePixels = i),
            (t._length = n - e),
            (t._alignToPixels = t.options.alignToPixels);
        }
        afterUpdate() {
          lV(this.options.afterUpdate, [this]);
        }
        beforeSetDimensions() {
          lV(this.options.beforeSetDimensions, [this]);
        }
        setDimensions() {
          const t = this;
          t.isHorizontal()
            ? ((t.width = t.maxWidth), (t.left = 0), (t.right = t.width))
            : ((t.height = t.maxHeight), (t.top = 0), (t.bottom = t.height)),
            (t.paddingLeft = 0),
            (t.paddingTop = 0),
            (t.paddingRight = 0),
            (t.paddingBottom = 0);
        }
        afterSetDimensions() {
          lV(this.options.afterSetDimensions, [this]);
        }
        _callHooks(t) {
          const e = this;
          e.chart.notifyPlugins(t, e.getContext()), lV(e.options[t], [e]);
        }
        beforeDataLimits() {
          this._callHooks('beforeDataLimits');
        }
        determineDataLimits() {}
        afterDataLimits() {
          this._callHooks('afterDataLimits');
        }
        beforeBuildTicks() {
          this._callHooks('beforeBuildTicks');
        }
        buildTicks() {
          return [];
        }
        afterBuildTicks() {
          this._callHooks('afterBuildTicks');
        }
        beforeTickToLabelConversion() {
          lV(this.options.beforeTickToLabelConversion, [this]);
        }
        generateTickLabels(t) {
          const e = this,
            n = e.options.ticks;
          let i, s, r;
          for (i = 0, s = t.length; i < s; i++) (r = t[i]), (r.label = lV(n.callback, [r.value, i, t], e));
        }
        afterTickToLabelConversion() {
          lV(this.options.afterTickToLabelConversion, [this]);
        }
        beforeCalculateLabelRotation() {
          lV(this.options.beforeCalculateLabelRotation, [this]);
        }
        calculateLabelRotation() {
          const t = this,
            e = t.options,
            n = e.ticks,
            i = t.ticks.length,
            s = n.minRotation || 0,
            r = n.maxRotation;
          let o,
            a,
            l,
            c = s;
          if (!t._isVisible() || !n.display || s >= r || i <= 1 || !t.isHorizontal()) return void (t.labelRotation = s);
          const h = t._getLabelSizes(),
            u = h.widest.width,
            d = h.highest.height,
            p = $V(t.chart.width - u, 0, t.maxWidth);
          (o = e.offset ? t.maxWidth / i : p / (i - 1)),
            u + 6 > o &&
              ((o = p / (i - (e.offset ? 0.5 : 1))),
              (a = t.maxHeight - fH(e.grid) - n.padding - gH(e.title, t.chart.options.font)),
              (l = Math.sqrt(u * u + d * d)),
              (c = NV(
                Math.min(
                  Math.asin($V((h.highest.height + 6) / o, -1, 1)),
                  Math.asin($V(a / l, -1, 1)) - Math.asin($V(d / l, -1, 1))
                )
              )),
              (c = Math.max(s, Math.min(r, c)))),
            (t.labelRotation = c);
        }
        afterCalculateLabelRotation() {
          lV(this.options.afterCalculateLabelRotation, [this]);
        }
        beforeFit() {
          lV(this.options.beforeFit, [this]);
        }
        fit() {
          const t = this,
            e = { width: 0, height: 0 },
            {
              chart: n,
              options: { ticks: i, title: s, grid: r },
            } = t,
            o = t._isVisible(),
            a = t.isHorizontal();
          if (o) {
            const o = gH(s, n.options.font);
            if (
              (a ? ((e.width = t.maxWidth), (e.height = fH(r) + o)) : ((e.height = t.maxHeight), (e.width = fH(r) + o)),
              i.display && t.ticks.length)
            ) {
              const { first: n, last: s, widest: r, highest: o } = t._getLabelSizes(),
                l = 2 * i.padding,
                c = FV(t.labelRotation),
                h = Math.cos(c),
                u = Math.sin(c);
              a
                ? (e.height = Math.min(t.maxHeight, e.height + (i.mirror ? 0 : u * r.width + h * o.height) + l))
                : (e.width = Math.min(t.maxWidth, e.width + (i.mirror ? 0 : h * r.width + u * o.height) + l)),
                t._calculatePadding(n, s, u, h);
            }
          }
          t._handleMargins(),
            a
              ? ((t.width = t._length = n.width - t._margins.left - t._margins.right), (t.height = e.height))
              : ((t.width = e.width), (t.height = t._length = n.height - t._margins.top - t._margins.bottom));
        }
        _calculatePadding(t, e, n, i) {
          const s = this,
            {
              ticks: { align: r, padding: o },
              position: a,
            } = s.options,
            l = 0 !== s.labelRotation,
            c = 'top' !== a && 'x' === s.axis;
          if (s.isHorizontal()) {
            const a = s.getPixelForTick(0) - s.left,
              h = s.right - s.getPixelForTick(s.ticks.length - 1);
            let u = 0,
              d = 0;
            l
              ? c
                ? ((u = i * t.width), (d = n * e.height))
                : ((u = n * t.height), (d = i * e.width))
              : 'start' === r
              ? (d = e.width)
              : 'end' === r
              ? (u = t.width)
              : ((u = t.width / 2), (d = e.width / 2)),
              (s.paddingLeft = Math.max(((u - a + o) * s.width) / (s.width - a), 0)),
              (s.paddingRight = Math.max(((d - h + o) * s.width) / (s.width - h), 0));
          } else {
            let n = e.height / 2,
              i = t.height / 2;
            'start' === r ? ((n = 0), (i = t.height)) : 'end' === r && ((n = e.height), (i = 0)),
              (s.paddingTop = n + o),
              (s.paddingBottom = i + o);
          }
        }
        _handleMargins() {
          const t = this;
          t._margins &&
            ((t._margins.left = Math.max(t.paddingLeft, t._margins.left)),
            (t._margins.top = Math.max(t.paddingTop, t._margins.top)),
            (t._margins.right = Math.max(t.paddingRight, t._margins.right)),
            (t._margins.bottom = Math.max(t.paddingBottom, t._margins.bottom)));
        }
        afterFit() {
          lV(this.options.afterFit, [this]);
        }
        isHorizontal() {
          const { axis: t, position: e } = this.options;
          return 'top' === e || 'bottom' === e || 'x' === t;
        }
        isFullSize() {
          return this.options.fullSize;
        }
        _convertTicksToLabels(t) {
          const e = this;
          let n, i;
          for (e.beforeTickToLabelConversion(), e.generateTickLabels(t), n = 0, i = t.length; n < i; n++)
            eV(t[n].label) && (t.splice(n, 1), i--, n--);
          e.afterTickToLabelConversion();
        }
        _getLabelSizes() {
          const t = this;
          let e = t._labelSizes;
          if (!e) {
            const n = t.options.ticks.sampleSize;
            let i = t.ticks;
            n < i.length && (i = pH(i, n)), (t._labelSizes = e = t._computeLabelSizes(i, i.length));
          }
          return e;
        }
        _computeLabelSizes(t, e) {
          const { ctx: n, _longestTextCache: i } = this,
            s = [],
            r = [];
          let o,
            a,
            l,
            c,
            h,
            u,
            d,
            p,
            m,
            f,
            g,
            _ = 0,
            b = 0;
          for (o = 0; o < e; ++o) {
            if (
              ((c = t[o].label),
              (h = this._resolveTickFontOptions(o)),
              (n.font = u = h.string),
              (d = i[u] = i[u] || { data: {}, gc: [] }),
              (p = h.lineHeight),
              (m = f = 0),
              eV(c) || nV(c))
            ) {
              if (nV(c))
                for (a = 0, l = c.length; a < l; ++a)
                  (g = c[a]), eV(g) || nV(g) || ((m = TB(n, d.data, d.gc, m, g)), (f += p));
            } else (m = TB(n, d.data, d.gc, m, c)), (f = p);
            s.push(m), r.push(f), (_ = Math.max(m, _)), (b = Math.max(f, b));
          }
          !(function (t, e) {
            cV(t, (t) => {
              const n = t.gc,
                i = n.length / 2;
              let s;
              if (i > e) {
                for (s = 0; s < i; ++s) delete t.data[n[s]];
                n.splice(0, i);
              }
            });
          })(i, e);
          const y = s.indexOf(_),
            v = r.indexOf(b),
            w = (t) => ({ width: s[t] || 0, height: r[t] || 0 });
          return { first: w(0), last: w(e - 1), widest: w(y), highest: w(v), widths: s, heights: r };
        }
        getLabelForValue(t) {
          return t;
        }
        getPixelForValue(t, e) {
          return NaN;
        }
        getValueForPixel(t) {}
        getPixelForTick(t) {
          const e = this.ticks;
          return t < 0 || t > e.length - 1 ? null : this.getPixelForValue(e[t].value);
        }
        getPixelForDecimal(t) {
          const e = this;
          e._reversePixels && (t = 1 - t);
          const n = e._startPixel + t * e._length;
          return $V(e._alignToPixels ? MB(e.chart, n, 0) : n, -32768, 32767);
        }
        getDecimalForPixel(t) {
          const e = (t - this._startPixel) / this._length;
          return this._reversePixels ? 1 - e : e;
        }
        getBasePixel() {
          return this.getPixelForValue(this.getBaseValue());
        }
        getBaseValue() {
          const { min: t, max: e } = this;
          return t < 0 && e < 0 ? e : t > 0 && e > 0 ? t : 0;
        }
        getContext(t) {
          const e = this,
            n = e.ticks || [];
          if (t >= 0 && t < n.length) {
            const i = n[t];
            return (
              i.$context ||
              (i.$context = (function (t, e, n) {
                return Object.assign(Object.create(t), { tick: n, index: e, type: 'tick' });
              })(e.getContext(), t, i))
            );
          }
          return (
            e.$context ||
            (e.$context =
              ((i = e.chart.getContext()), (s = e), Object.assign(Object.create(i), { scale: s, type: 'scale' })))
          );
          var i, s;
        }
        _tickSize() {
          const t = this,
            e = t.options.ticks,
            n = FV(t.labelRotation),
            i = Math.abs(Math.cos(n)),
            s = Math.abs(Math.sin(n)),
            r = t._getLabelSizes(),
            o = e.autoSkipPadding || 0,
            a = r ? r.widest.width + o : 0,
            l = r ? r.highest.height + o : 0;
          return t.isHorizontal() ? (l * i > a * s ? a / i : l / s) : l * s < a * i ? l / i : a / s;
        }
        _isVisible() {
          const t = this.options.display;
          return 'auto' !== t ? !!t : this.getMatchingVisibleMetas().length > 0;
        }
        _computeGridLineItems(t) {
          const e = this,
            n = e.axis,
            i = e.chart,
            s = e.options,
            { grid: r, position: o } = s,
            a = r.offset,
            l = e.isHorizontal(),
            c = e.ticks.length + (a ? 1 : 0),
            h = fH(r),
            u = [],
            d = r.setContext(e.getContext()),
            p = d.drawBorder ? d.borderWidth : 0,
            m = p / 2,
            f = function (t) {
              return MB(i, t, p);
            };
          let g, _, b, y, v, w, x, C, k, S, E, O;
          if ('top' === o) (g = f(e.bottom)), (w = e.bottom - h), (C = g - m), (S = f(t.top) + m), (O = t.bottom);
          else if ('bottom' === o) (g = f(e.top)), (S = t.top), (O = f(t.bottom) - m), (w = g + m), (C = e.top + h);
          else if ('left' === o) (g = f(e.right)), (v = e.right - h), (x = g - m), (k = f(t.left) + m), (E = t.right);
          else if ('right' === o) (g = f(e.left)), (k = t.left), (E = f(t.right) - m), (v = g + m), (x = e.left + h);
          else if ('x' === n) {
            if ('center' === o) g = f((t.top + t.bottom) / 2 + 0.5);
            else if (iV(o)) {
              const t = Object.keys(o)[0];
              g = f(e.chart.scales[t].getPixelForValue(o[t]));
            }
            (S = t.top), (O = t.bottom), (w = g + m), (C = w + h);
          } else if ('y' === n) {
            if ('center' === o) g = f((t.left + t.right) / 2);
            else if (iV(o)) {
              const t = Object.keys(o)[0];
              g = f(e.chart.scales[t].getPixelForValue(o[t]));
            }
            (v = g - m), (x = v - h), (k = t.left), (E = t.right);
          }
          const P = oV(s.ticks.maxTicksLimit, c),
            A = Math.max(1, Math.ceil(c / P));
          for (_ = 0; _ < c; _ += A) {
            const t = r.setContext(e.getContext(_)),
              n = t.lineWidth,
              s = t.color,
              o = r.borderDash || [],
              c = t.borderDashOffset,
              h = t.tickWidth,
              d = t.tickColor,
              p = t.tickBorderDash || [],
              m = t.tickBorderDashOffset;
            (b = mH(e, _, a)),
              void 0 !== b &&
                ((y = MB(i, b, n)),
                l ? (v = x = k = E = y) : (w = C = S = O = y),
                u.push({
                  tx1: v,
                  ty1: w,
                  tx2: x,
                  ty2: C,
                  x1: k,
                  y1: S,
                  x2: E,
                  y2: O,
                  width: n,
                  color: s,
                  borderDash: o,
                  borderDashOffset: c,
                  tickWidth: h,
                  tickColor: d,
                  tickBorderDash: p,
                  tickBorderDashOffset: m,
                }));
          }
          return (e._ticksLength = c), (e._borderValue = g), u;
        }
        _computeLabelItems(t) {
          const e = this,
            n = e.axis,
            i = e.options,
            { position: s, ticks: r } = i,
            o = e.isHorizontal(),
            a = e.ticks,
            { align: l, crossAlign: c, padding: h, mirror: u } = r,
            d = fH(i.grid),
            p = d + h,
            m = u ? -h : p,
            f = -FV(e.labelRotation),
            g = [];
          let _,
            b,
            y,
            v,
            w,
            x,
            C,
            k,
            S,
            E,
            O,
            P,
            A = 'middle';
          if ('top' === s) (x = e.bottom - m), (C = e._getXAxisLabelAlignment());
          else if ('bottom' === s) (x = e.top + m), (C = e._getXAxisLabelAlignment());
          else if ('left' === s) {
            const t = e._getYAxisLabelAlignment(d);
            (C = t.textAlign), (w = t.x);
          } else if ('right' === s) {
            const t = e._getYAxisLabelAlignment(d);
            (C = t.textAlign), (w = t.x);
          } else if ('x' === n) {
            if ('center' === s) x = (t.top + t.bottom) / 2 + p;
            else if (iV(s)) {
              const t = Object.keys(s)[0];
              x = e.chart.scales[t].getPixelForValue(s[t]) + p;
            }
            C = e._getXAxisLabelAlignment();
          } else if ('y' === n) {
            if ('center' === s) w = (t.left + t.right) / 2 - p;
            else if (iV(s)) {
              const t = Object.keys(s)[0];
              w = e.chart.scales[t].getPixelForValue(s[t]);
            }
            C = e._getYAxisLabelAlignment(d).textAlign;
          }
          'y' === n && ('start' === l ? (A = 'top') : 'end' === l && (A = 'bottom'));
          const T = e._getLabelSizes();
          for (_ = 0, b = a.length; _ < b; ++_) {
            (y = a[_]), (v = y.label);
            const t = r.setContext(e.getContext(_));
            (k = e.getPixelForTick(_) + r.labelOffset),
              (S = e._resolveTickFontOptions(_)),
              (E = S.lineHeight),
              (O = nV(v) ? v.length : 1);
            const n = O / 2,
              i = t.color,
              l = t.textStrokeColor,
              h = t.textStrokeWidth;
            let d;
            if (
              (o
                ? ((w = k),
                  (P =
                    'top' === s
                      ? 'near' === c || 0 !== f
                        ? -O * E + E / 2
                        : 'center' === c
                        ? -T.highest.height / 2 - n * E + E
                        : E / 2 - T.highest.height
                      : 'near' === c || 0 !== f
                      ? E / 2
                      : 'center' === c
                      ? T.highest.height / 2 - n * E
                      : T.highest.height - O * E),
                  u && (P *= -1))
                : ((x = k), (P = ((1 - O) * E) / 2)),
              t.showLabelBackdrop)
            ) {
              const e = QB(t.backdropPadding),
                n = T.heights[_],
                i = T.widths[_];
              let s = x + P - e.top,
                r = w - e.left;
              switch (A) {
                case 'middle':
                  s -= n / 2;
                  break;
                case 'bottom':
                  s -= n;
              }
              switch (C) {
                case 'center':
                  r -= i / 2;
                  break;
                case 'right':
                  r -= i;
              }
              d = { left: r, top: s, width: i + e.width, height: n + e.height, color: t.backdropColor };
            }
            g.push({
              rotation: f,
              label: v,
              font: S,
              color: i,
              strokeColor: l,
              strokeWidth: h,
              textOffset: P,
              textAlign: C,
              textBaseline: A,
              translation: [w, x],
              backdrop: d,
            });
          }
          return g;
        }
        _getXAxisLabelAlignment() {
          const { position: t, ticks: e } = this.options;
          if (-FV(this.labelRotation)) return 'top' === t ? 'left' : 'right';
          let n = 'center';
          return 'start' === e.align ? (n = 'left') : 'end' === e.align && (n = 'right'), n;
        }
        _getYAxisLabelAlignment(t) {
          const e = this,
            {
              position: n,
              ticks: { crossAlign: i, mirror: s, padding: r },
            } = e.options,
            o = t + r,
            a = e._getLabelSizes().widest.width;
          let l, c;
          return (
            'left' === n
              ? s
                ? ((l = 'left'), (c = e.right + r))
                : ((c = e.right - o),
                  'near' === i
                    ? (l = 'right')
                    : 'center' === i
                    ? ((l = 'center'), (c -= a / 2))
                    : ((l = 'left'), (c = e.left)))
              : 'right' === n
              ? s
                ? ((l = 'right'), (c = e.left + r))
                : ((c = e.left + o),
                  'near' === i
                    ? (l = 'left')
                    : 'center' === i
                    ? ((l = 'center'), (c += a / 2))
                    : ((l = 'right'), (c = e.right)))
              : (l = 'right'),
            { textAlign: l, x: c }
          );
        }
        _computeLabelArea() {
          const t = this;
          if (t.options.ticks.mirror) return;
          const e = t.chart,
            n = t.options.position;
          return 'left' === n || 'right' === n
            ? { top: 0, left: t.left, bottom: e.height, right: t.right }
            : 'top' === n || 'bottom' === n
            ? { top: t.top, left: 0, bottom: t.bottom, right: e.width }
            : void 0;
        }
        drawBackground() {
          const {
            ctx: t,
            options: { backgroundColor: e },
            left: n,
            top: i,
            width: s,
            height: r,
          } = this;
          e && (t.save(), (t.fillStyle = e), t.fillRect(n, i, s, r), t.restore());
        }
        getLineWidthForValue(t) {
          const e = this,
            n = e.options.grid;
          if (!e._isVisible() || !n.display) return 0;
          const i = e.ticks.findIndex((e) => e.value === t);
          return i >= 0 ? n.setContext(e.getContext(i)).lineWidth : 0;
        }
        drawGrid(t) {
          const e = this,
            n = e.options.grid,
            i = e.ctx,
            s = e._gridLineItems || (e._gridLineItems = e._computeGridLineItems(t));
          let r, o;
          const a = (t, e, n) => {
            n.width &&
              n.color &&
              (i.save(),
              (i.lineWidth = n.width),
              (i.strokeStyle = n.color),
              i.setLineDash(n.borderDash || []),
              (i.lineDashOffset = n.borderDashOffset),
              i.beginPath(),
              i.moveTo(t.x, t.y),
              i.lineTo(e.x, e.y),
              i.stroke(),
              i.restore());
          };
          if (n.display)
            for (r = 0, o = s.length; r < o; ++r) {
              const t = s[r];
              n.drawOnChartArea && a({ x: t.x1, y: t.y1 }, { x: t.x2, y: t.y2 }, t),
                n.drawTicks &&
                  a(
                    { x: t.tx1, y: t.ty1 },
                    { x: t.tx2, y: t.ty2 },
                    {
                      color: t.tickColor,
                      width: t.tickWidth,
                      borderDash: t.tickBorderDash,
                      borderDashOffset: t.tickBorderDashOffset,
                    }
                  );
            }
        }
        drawBorder() {
          const t = this,
            {
              chart: e,
              ctx: n,
              options: { grid: i },
            } = t,
            s = i.setContext(t.getContext()),
            r = i.drawBorder ? s.borderWidth : 0;
          if (!r) return;
          const o = i.setContext(t.getContext(0)).lineWidth,
            a = t._borderValue;
          let l, c, h, u;
          t.isHorizontal()
            ? ((l = MB(e, t.left, r) - r / 2), (c = MB(e, t.right, o) + o / 2), (h = u = a))
            : ((h = MB(e, t.top, r) - r / 2), (u = MB(e, t.bottom, o) + o / 2), (l = c = a)),
            n.save(),
            (n.lineWidth = s.borderWidth),
            (n.strokeStyle = s.borderColor),
            n.beginPath(),
            n.moveTo(l, h),
            n.lineTo(c, u),
            n.stroke(),
            n.restore();
        }
        drawLabels(t) {
          const e = this;
          if (!e.options.ticks.display) return;
          const n = e.ctx,
            i = e._computeLabelArea();
          i && FB(n, i);
          const s = e._labelItems || (e._labelItems = e._computeLabelItems(t));
          let r, o;
          for (r = 0, o = s.length; r < o; ++r) {
            const t = s[r],
              e = t.font,
              i = t.label;
            t.backdrop &&
              ((n.fillStyle = t.backdrop.color),
              n.fillRect(t.backdrop.left, t.backdrop.top, t.backdrop.width, t.backdrop.height)),
              zB(n, i, 0, t.textOffset, e, t);
          }
          i && NB(n);
        }
        drawTitle() {
          const {
            ctx: t,
            options: { position: e, title: n, reverse: i },
          } = this;
          if (!n.display) return;
          const s = KB(n.font),
            r = QB(n.padding),
            o = n.align;
          let a = s.lineHeight / 2;
          'bottom' === e || 'center' === e || iV(e)
            ? ((a += r.bottom), nV(n.text) && (a += s.lineHeight * (n.text.length - 1)))
            : (a += r.top);
          const {
            titleX: l,
            titleY: c,
            maxWidth: h,
            rotation: u,
          } = (function (t, e, n, i) {
            const { top: s, left: r, bottom: o, right: a, chart: l } = t,
              { chartArea: c, scales: h } = l;
            let u,
              d,
              p,
              m = 0;
            const f = o - s,
              g = a - r;
            if (t.isHorizontal()) {
              if (((d = ZN(i, r, a)), iV(n))) {
                const t = Object.keys(n)[0];
                p = h[t].getPixelForValue(n[t]) + f - e;
              } else p = 'center' === n ? (c.bottom + c.top) / 2 + f - e : dH(t, n, e);
              u = a - r;
            } else {
              if (iV(n)) {
                const t = Object.keys(n)[0];
                d = h[t].getPixelForValue(n[t]) - g + e;
              } else d = 'center' === n ? (c.left + c.right) / 2 - g + e : dH(t, n, e);
              (p = ZN(i, o, s)), (m = 'left' === n ? -OV : OV);
            }
            return { titleX: d, titleY: p, maxWidth: u, rotation: m };
          })(this, a, e, o);
          zB(t, n.text, 0, 0, s, {
            color: n.color,
            maxWidth: h,
            rotation: u,
            textAlign: _H(o, e, i),
            textBaseline: 'middle',
            translation: [l, c],
          });
        }
        draw(t) {
          const e = this;
          e._isVisible() && (e.drawBackground(), e.drawGrid(t), e.drawBorder(), e.drawTitle(), e.drawLabels(t));
        }
        _layers() {
          const t = this,
            e = t.options,
            n = (e.ticks && e.ticks.z) || 0,
            i = oV(e.grid && e.grid.z, -1);
          return t._isVisible() && t.draw === bH.prototype.draw
            ? [
                {
                  z: i,
                  draw(e) {
                    t.drawBackground(), t.drawGrid(e), t.drawTitle();
                  },
                },
                {
                  z: i + 1,
                  draw() {
                    t.drawBorder();
                  },
                },
                {
                  z: n,
                  draw(e) {
                    t.drawLabels(e);
                  },
                },
              ]
            : [
                {
                  z: n,
                  draw(e) {
                    t.draw(e);
                  },
                },
              ];
        }
        getMatchingVisibleMetas(t) {
          const e = this,
            n = e.chart.getSortedVisibleDatasetMetas(),
            i = e.axis + 'AxisID',
            s = [];
          let r, o;
          for (r = 0, o = n.length; r < o; ++r) {
            const o = n[r];
            o[i] !== e.id || (t && o.type !== t) || s.push(o);
          }
          return s;
        }
        _resolveTickFontOptions(t) {
          return KB(this.options.ticks.setContext(this.getContext(t)).font);
        }
        _maxDigits() {
          const t = this,
            e = t._resolveTickFontOptions(0).lineHeight;
          return (t.isHorizontal() ? t.width : t.height) / e;
        }
      }
      class yH {
        constructor(t, e, n) {
          (this.type = t), (this.scope = e), (this.override = n), (this.items = Object.create(null));
        }
        isForType(t) {
          return Object.prototype.isPrototypeOf.call(this.type.prototype, t.prototype);
        }
        register(t) {
          const e = this,
            n = Object.getPrototypeOf(t);
          let i;
          (function (t) {
            return 'id' in t && 'defaults' in t;
          })(n) && (i = e.register(n));
          const s = e.items,
            r = t.id,
            o = e.scope + '.' + r;
          if (!r) throw new Error('class does not have id: ' + t);
          return (
            r in s ||
              ((s[r] = t),
              (function (t, e, n) {
                const i = mV(Object.create(null), [n ? AB.get(n) : {}, AB.get(e), t.defaults]);
                AB.set(e, i),
                  t.defaultRoutes &&
                    (function (t, e) {
                      Object.keys(e).forEach((n) => {
                        const i = n.split('.'),
                          s = i.pop(),
                          r = [t].concat(i).join('.'),
                          o = e[n].split('.'),
                          a = o.pop(),
                          l = o.join('.');
                        AB.route(r, s, l, a);
                      });
                    })(e, t.defaultRoutes),
                  t.descriptors && AB.describe(e, t.descriptors);
              })(t, o, i),
              e.override && AB.override(t.id, t.overrides)),
            o
          );
        }
        get(t) {
          return this.items[t];
        }
        unregister(t) {
          const e = this.items,
            n = t.id,
            i = this.scope;
          n in e && delete e[n], i && n in AB[i] && (delete AB[i][n], this.override && delete SB[n]);
        }
      }
      var vH = new (class {
        constructor() {
          (this.controllers = new yH(hj, 'datasets', !0)),
            (this.elements = new yH(lH, 'elements')),
            (this.plugins = new yH(Object, 'plugins')),
            (this.scales = new yH(bH, 'scales')),
            (this._typedRegistries = [this.controllers, this.scales, this.elements]);
        }
        add(...t) {
          this._each('register', t);
        }
        remove(...t) {
          this._each('unregister', t);
        }
        addControllers(...t) {
          this._each('register', t, this.controllers);
        }
        addElements(...t) {
          this._each('register', t, this.elements);
        }
        addPlugins(...t) {
          this._each('register', t, this.plugins);
        }
        addScales(...t) {
          this._each('register', t, this.scales);
        }
        getController(t) {
          return this._get(t, this.controllers, 'controller');
        }
        getElement(t) {
          return this._get(t, this.elements, 'element');
        }
        getPlugin(t) {
          return this._get(t, this.plugins, 'plugin');
        }
        getScale(t) {
          return this._get(t, this.scales, 'scale');
        }
        removeControllers(...t) {
          this._each('unregister', t, this.controllers);
        }
        removeElements(...t) {
          this._each('unregister', t, this.elements);
        }
        removePlugins(...t) {
          this._each('unregister', t, this.plugins);
        }
        removeScales(...t) {
          this._each('unregister', t, this.scales);
        }
        _each(t, e, n) {
          const i = this;
          [...e].forEach((e) => {
            const s = n || i._getRegistryForType(e);
            n || s.isForType(e) || (s === i.plugins && e.id)
              ? i._exec(t, s, e)
              : cV(e, (e) => {
                  const s = n || i._getRegistryForType(e);
                  i._exec(t, s, e);
                });
          });
        }
        _exec(t, e, n) {
          const i = yV(t);
          lV(n['before' + i], [], n), e[t](n), lV(n['after' + i], [], n);
        }
        _getRegistryForType(t) {
          for (let e = 0; e < this._typedRegistries.length; e++) {
            const n = this._typedRegistries[e];
            if (n.isForType(t)) return n;
          }
          return this.plugins;
        }
        _get(t, e, n) {
          const i = e.get(t);
          if (void 0 === i) throw new Error('"' + t + '" is not a registered ' + n + '.');
          return i;
        }
      })();
      class wH {
        constructor() {
          this._init = [];
        }
        notify(t, e, n, i) {
          const s = this;
          'beforeInit' === e && ((s._init = s._createDescriptors(t, !0)), s._notify(s._init, t, 'install'));
          const r = i ? s._descriptors(t).filter(i) : s._descriptors(t),
            o = s._notify(r, t, e, n);
          return 'destroy' === e && (s._notify(r, t, 'stop'), s._notify(s._init, t, 'uninstall')), o;
        }
        _notify(t, e, n, i) {
          i = i || {};
          for (const s of t) {
            const t = s.plugin;
            if (!1 === lV(t[n], [e, i, s.options], t) && i.cancelable) return !1;
          }
          return !0;
        }
        invalidate() {
          eV(this._cache) || ((this._oldCache = this._cache), (this._cache = void 0));
        }
        _descriptors(t) {
          if (this._cache) return this._cache;
          const e = (this._cache = this._createDescriptors(t));
          return this._notifyStateChanges(t), e;
        }
        _createDescriptors(t, e) {
          const n = t && t.config,
            i = oV(n.options && n.options.plugins, {}),
            s = (function (t) {
              const e = [],
                n = Object.keys(vH.plugins.items);
              for (let s = 0; s < n.length; s++) e.push(vH.getPlugin(n[s]));
              const i = t.plugins || [];
              for (let s = 0; s < i.length; s++) {
                const t = i[s];
                -1 === e.indexOf(t) && e.push(t);
              }
              return e;
            })(n);
          return !1 !== i || e
            ? (function (t, e, n, i) {
                const s = [],
                  r = t.getContext();
                for (let o = 0; o < e.length; o++) {
                  const a = e[o],
                    l = xH(n[a.id], i);
                  null !== l && s.push({ plugin: a, options: CH(t.config, a, l, r) });
                }
                return s;
              })(t, s, i, e)
            : [];
        }
        _notifyStateChanges(t) {
          const e = this._oldCache || [],
            n = this._cache,
            i = (t, e) => t.filter((t) => !e.some((e) => t.plugin.id === e.plugin.id));
          this._notify(i(e, n), t, 'stop'), this._notify(i(n, e), t, 'start');
        }
      }
      function xH(t, e) {
        return e || !1 !== t ? (!0 === t ? {} : t) : null;
      }
      function CH(t, e, n, i) {
        const s = t.pluginScopeKeys(e),
          r = t.getOptionScopes(n, s);
        return t.createResolver(r, i, [''], { scriptable: !1, indexable: !1, allKeys: !0 });
      }
      function kH(t, e) {
        return ((e.datasets || {})[t] || {}).indexAxis || e.indexAxis || (AB.datasets[t] || {}).indexAxis || 'x';
      }
      function SH(t, e) {
        return 'x' === t || 'y' === t
          ? t
          : e.axis ||
              ('top' === (n = e.position) || 'bottom' === n ? 'x' : 'left' === n || 'right' === n ? 'y' : void 0) ||
              t.charAt(0).toLowerCase();
        var n;
      }
      function EH(t) {
        const e = t.options || (t.options = {});
        (e.plugins = oV(e.plugins, {})),
          (e.scales = (function (t, e) {
            const n = SB[t.type] || { scales: {} },
              i = e.scales || {},
              s = kH(t.type, e),
              r = Object.create(null),
              o = Object.create(null);
            return (
              Object.keys(i).forEach((t) => {
                const e = i[t],
                  a = SH(t, e),
                  l = (function (t, e) {
                    return t === e ? '_index_' : '_value_';
                  })(a, s),
                  c = n.scales || {};
                (r[a] = r[a] || t), (o[t] = fV(Object.create(null), [{ axis: a }, e, c[a], c[l]]));
              }),
              t.data.datasets.forEach((n) => {
                const s = n.type || t.type,
                  a = n.indexAxis || kH(s, e),
                  l = (SB[s] || {}).scales || {};
                Object.keys(l).forEach((t) => {
                  const e = (function (t, e) {
                      let n = t;
                      return '_index_' === t ? (n = e) : '_value_' === t && (n = 'x' === e ? 'y' : 'x'), n;
                    })(t, a),
                    s = n[e + 'AxisID'] || r[e] || e;
                  (o[s] = o[s] || Object.create(null)), fV(o[s], [{ axis: e }, i[s], l[t]]);
                });
              }),
              Object.keys(o).forEach((t) => {
                const e = o[t];
                fV(e, [AB.scales[e.type], AB.scale]);
              }),
              o
            );
          })(t, e));
      }
      function OH(t) {
        return ((t = t || {}).datasets = t.datasets || []), (t.labels = t.labels || []), t;
      }
      const PH = new Map(),
        AH = new Set();
      function TH(t, e) {
        let n = PH.get(t);
        return n || ((n = e()), PH.set(t, n), AH.add(n)), n;
      }
      const DH = (t, e, n) => {
        const i = bV(e, n);
        void 0 !== i && t.add(i);
      };
      class MH {
        constructor(t) {
          (this._config = (function (t) {
            return ((t = t || {}).data = OH(t.data)), EH(t), t;
          })(t)),
            (this._scopeCache = new Map()),
            (this._resolverCache = new Map());
        }
        get platform() {
          return this._config.platform;
        }
        get type() {
          return this._config.type;
        }
        set type(t) {
          this._config.type = t;
        }
        get data() {
          return this._config.data;
        }
        set data(t) {
          this._config.data = OH(t);
        }
        get options() {
          return this._config.options;
        }
        set options(t) {
          this._config.options = t;
        }
        get plugins() {
          return this._config.plugins;
        }
        update() {
          const t = this._config;
          this.clearCache(), EH(t);
        }
        clearCache() {
          this._scopeCache.clear(), this._resolverCache.clear();
        }
        datasetScopeKeys(t) {
          return TH(t, () => [[`datasets.${t}`, '']]);
        }
        datasetAnimationScopeKeys(t, e) {
          return TH(`${t}.transition.${e}`, () => [
            [`datasets.${t}.transitions.${e}`, `transitions.${e}`],
            [`datasets.${t}`, ''],
          ]);
        }
        datasetElementScopeKeys(t, e) {
          return TH(`${t}-${e}`, () => [[`datasets.${t}.elements.${e}`, `datasets.${t}`, `elements.${e}`, '']]);
        }
        pluginScopeKeys(t) {
          const e = t.id;
          return TH(`${this.type}-plugin-${e}`, () => [[`plugins.${e}`, ...(t.additionalOptionScopes || [])]]);
        }
        _cachedScopes(t, e) {
          const n = this._scopeCache;
          let i = n.get(t);
          return (i && !e) || ((i = new Map()), n.set(t, i)), i;
        }
        getOptionScopes(t, e, n) {
          const { options: i, type: s } = this,
            r = this._cachedScopes(t, n),
            o = r.get(e);
          if (o) return o;
          const a = new Set();
          e.forEach((e) => {
            t && (a.add(t), e.forEach((e) => DH(a, t, e))),
              e.forEach((t) => DH(a, i, t)),
              e.forEach((t) => DH(a, SB[s] || {}, t)),
              e.forEach((t) => DH(a, AB, t)),
              e.forEach((t) => DH(a, EB, t));
          });
          const l = Array.from(a);
          return 0 === l.length && l.push(Object.create(null)), AH.has(e) && r.set(e, l), l;
        }
        chartOptionScopes() {
          const { options: t, type: e } = this;
          return [t, SB[e] || {}, AB.datasets[e] || {}, { type: e }, AB, EB];
        }
        resolveNamedOptions(t, e, n, i = ['']) {
          const s = { $shared: !0 },
            { resolver: r, subPrefixes: o } = RH(this._resolverCache, t, i);
          let a = r;
          (function (t, e) {
            const { isScriptable: n, isIndexable: i } = oz(t);
            for (const s of e) if ((n(s) && wV(t[s])) || (i(s) && nV(t[s]))) return !0;
            return !1;
          })(r, e) && ((s.$shared = !1), (a = rz(r, (n = wV(n) ? n() : n), this.createResolver(t, n, o))));
          for (const l of e) s[l] = a[l];
          return s;
        }
        createResolver(t, e, n = [''], i) {
          const { resolver: s } = RH(this._resolverCache, t, n);
          return iV(e) ? rz(s, e, void 0, i) : s;
        }
      }
      function RH(t, e, n) {
        let i = t.get(e);
        i || ((i = new Map()), t.set(e, i));
        const s = n.join();
        let r = i.get(s);
        return (
          r ||
            ((r = { resolver: sz(e, n), subPrefixes: n.filter((t) => !t.toLowerCase().includes('hover')) }),
            i.set(s, r)),
          r
        );
      }
      const IH = ['top', 'bottom', 'left', 'right', 'chartArea'];
      function LH(t, e) {
        return 'top' === t || 'bottom' === t || (-1 === IH.indexOf(t) && 'x' === e);
      }
      function FH(t, e) {
        return function (n, i) {
          return n[t] === i[t] ? n[e] - i[e] : n[t] - i[t];
        };
      }
      function NH(t) {
        const e = t.chart,
          n = e.options.animation;
        e.notifyPlugins('afterRender'), lV(n && n.onComplete, [t], e);
      }
      function VH(t) {
        const e = t.chart,
          n = e.options.animation;
        lV(n && n.onProgress, [t], e);
      }
      function BH(t) {
        return (
          xz() && 'string' == typeof t ? (t = document.getElementById(t)) : t && t.length && (t = t[0]),
          t && t.canvas && (t = t.canvas),
          t
        );
      }
      const zH = {},
        jH = (t) => {
          const e = BH(t);
          return Object.values(zH)
            .filter((t) => t.canvas === e)
            .pop();
        };
      class HH {
        constructor(t, e) {
          const n = this,
            i = (this.config = new MH(e)),
            s = BH(t),
            r = jH(s);
          if (r)
            throw new Error(
              "Canvas is already in use. Chart with ID '" +
                r.id +
                "' must be destroyed before the canvas can be reused."
            );
          const o = i.createResolver(i.chartOptionScopes(), n.getContext());
          this.platform = new (i.platform ||
            (function (t) {
              return !xz() || ('undefined' != typeof OffscreenCanvas && t instanceof OffscreenCanvas) ? Gj : aH;
            })(s))();
          const a = n.platform.acquireContext(s, o.aspectRatio),
            l = a && a.canvas,
            c = l && l.height,
            h = l && l.width;
          (this.id = tV()),
            (this.ctx = a),
            (this.canvas = l),
            (this.width = h),
            (this.height = c),
            (this._options = o),
            (this._aspectRatio = this.aspectRatio),
            (this._layers = []),
            (this._metasets = []),
            (this._stacks = void 0),
            (this.boxes = []),
            (this.currentDevicePixelRatio = void 0),
            (this.chartArea = void 0),
            (this._active = []),
            (this._lastEvent = void 0),
            (this._listeners = {}),
            (this._responsiveListeners = void 0),
            (this._sortedMetasets = []),
            (this.scales = {}),
            (this.scale = void 0),
            (this._plugins = new wH()),
            (this.$proxies = {}),
            (this._hiddenIndices = {}),
            (this.attached = !1),
            (this._animationsDisabled = void 0),
            (this.$context = void 0),
            (this._doResize = (function (t, e) {
              let n;
              return function () {
                return e ? (clearTimeout(n), (n = setTimeout(t, e))) : t(), e;
              };
            })(() => this.update('resize'), o.resizeDelay || 0)),
            (zH[n.id] = n),
            a && l
              ? (Yz.listen(n, 'complete', NH), Yz.listen(n, 'progress', VH), n._initialize(), n.attached && n.update())
              : console.error("Failed to create chart: can't acquire context from the given item");
        }
        get aspectRatio() {
          const {
            options: { aspectRatio: t, maintainAspectRatio: e },
            width: n,
            height: i,
            _aspectRatio: s,
          } = this;
          return eV(t) ? (e && s ? s : i ? n / i : null) : t;
        }
        get data() {
          return this.config.data;
        }
        set data(t) {
          this.config.data = t;
        }
        get options() {
          return this._options;
        }
        set options(t) {
          this.config.options = t;
        }
        _initialize() {
          const t = this;
          return (
            t.notifyPlugins('beforeInit'),
            t.options.responsive ? t.resize() : Tz(t, t.options.devicePixelRatio),
            t.bindEvents(),
            t.notifyPlugins('afterInit'),
            t
          );
        }
        clear() {
          return RB(this.canvas, this.ctx), this;
        }
        stop() {
          return Yz.stop(this), this;
        }
        resize(t, e) {
          Yz.running(this) ? (this._resizeBeforeDraw = { width: t, height: e }) : this._resize(t, e);
        }
        _resize(t, e) {
          const n = this,
            i = n.options,
            s = n.platform.getMaximumSize(n.canvas, t, e, i.maintainAspectRatio && n.aspectRatio),
            r = i.devicePixelRatio || n.platform.getDevicePixelRatio();
          (n.width = s.width),
            (n.height = s.height),
            (n._aspectRatio = n.aspectRatio),
            Tz(n, r, !0) &&
              (n.notifyPlugins('resize', { size: s }),
              lV(i.onResize, [n, s], n),
              n.attached && n._doResize() && n.render());
        }
        ensureScalesHaveIDs() {
          cV(this.options.scales || {}, (t, e) => {
            t.id = e;
          });
        }
        buildOrUpdateScales() {
          const t = this,
            e = t.options,
            n = e.scales,
            i = t.scales,
            s = Object.keys(i).reduce((t, e) => ((t[e] = !1), t), {});
          let r = [];
          n &&
            (r = r.concat(
              Object.keys(n).map((t) => {
                const e = n[t],
                  i = SH(t, e),
                  s = 'r' === i,
                  r = 'x' === i;
                return {
                  options: e,
                  dposition: s ? 'chartArea' : r ? 'bottom' : 'left',
                  dtype: s ? 'radialLinear' : r ? 'category' : 'linear',
                };
              })
            )),
            cV(r, (n) => {
              const r = n.options,
                o = r.id,
                a = SH(o, r),
                l = oV(r.type, n.dtype);
              (void 0 !== r.position && LH(r.position, a) === LH(n.dposition)) || (r.position = n.dposition),
                (s[o] = !0);
              let c = null;
              o in i && i[o].type === l
                ? (c = i[o])
                : ((c = new (vH.getScale(l))({ id: o, type: l, ctx: t.ctx, chart: t })), (i[c.id] = c)),
                c.init(r, e);
            }),
            cV(s, (t, e) => {
              t || delete i[e];
            }),
            cV(i, (e) => {
              Uj.configure(t, e, e.options), Uj.addBox(t, e);
            });
        }
        _updateMetasets() {
          const t = this,
            e = t._metasets,
            n = t.data.datasets.length,
            i = e.length;
          if ((e.sort((t, e) => t.index - e.index), i > n)) {
            for (let e = n; e < i; ++e) t._destroyDatasetMeta(e);
            e.splice(n, i - n);
          }
          t._sortedMetasets = e.slice(0).sort(FH('order', 'index'));
        }
        _removeUnreferencedMetasets() {
          const t = this,
            {
              _metasets: e,
              data: { datasets: n },
            } = t;
          e.length > n.length && delete t._stacks,
            e.forEach((e, i) => {
              0 === n.filter((t) => t === e._dataset).length && t._destroyDatasetMeta(i);
            });
        }
        buildOrUpdateControllers() {
          const t = this,
            e = [],
            n = t.data.datasets;
          let i, s;
          for (t._removeUnreferencedMetasets(), i = 0, s = n.length; i < s; i++) {
            const s = n[i];
            let r = t.getDatasetMeta(i);
            const o = s.type || t.config.type;
            if (
              (r.type && r.type !== o && (t._destroyDatasetMeta(i), (r = t.getDatasetMeta(i))),
              (r.type = o),
              (r.indexAxis = s.indexAxis || kH(o, t.options)),
              (r.order = s.order || 0),
              (r.index = i),
              (r.label = '' + s.label),
              (r.visible = t.isDatasetVisible(i)),
              r.controller)
            )
              r.controller.updateIndex(i), r.controller.linkScales();
            else {
              const n = vH.getController(o),
                { datasetElementType: s, dataElementType: a } = AB.datasets[o];
              Object.assign(n.prototype, {
                dataElementType: vH.getElement(a),
                datasetElementType: s && vH.getElement(s),
              }),
                (r.controller = new n(t, i)),
                e.push(r.controller);
            }
          }
          return t._updateMetasets(), e;
        }
        _resetElements() {
          const t = this;
          cV(
            t.data.datasets,
            (e, n) => {
              t.getDatasetMeta(n).controller.reset();
            },
            t
          );
        }
        reset() {
          this._resetElements(), this.notifyPlugins('reset');
        }
        update(t) {
          const e = this,
            n = e.config;
          n.update(),
            (e._options = n.createResolver(n.chartOptionScopes(), e.getContext())),
            cV(e.scales, (t) => {
              Uj.removeBox(e, t);
            });
          const i = (e._animationsDisabled = !e.options.animation);
          if (
            (e.ensureScalesHaveIDs(),
            e.buildOrUpdateScales(),
            (((t, e) => {
              if (t.size !== e.size) return !1;
              for (const n of t) if (!e.has(n)) return !1;
              return !0;
            })(new Set(Object.keys(e._listeners)), new Set(e.options.events)) &&
              !!this._responsiveListeners === e.options.responsive) ||
              (e.unbindEvents(), e.bindEvents()),
            e._plugins.invalidate(),
            !1 === e.notifyPlugins('beforeUpdate', { mode: t, cancelable: !0 }))
          )
            return;
          const s = e.buildOrUpdateControllers();
          e.notifyPlugins('beforeElementsUpdate');
          let r = 0;
          for (let o = 0, a = e.data.datasets.length; o < a; o++) {
            const { controller: t } = e.getDatasetMeta(o),
              n = !i && -1 === s.indexOf(t);
            t.buildOrUpdateElements(n), (r = Math.max(+t.getMaxOverflow(), r));
          }
          (e._minPadding = r),
            e._updateLayout(r),
            i ||
              cV(s, (t) => {
                t.reset();
              }),
            e._updateDatasets(t),
            e.notifyPlugins('afterUpdate', { mode: t }),
            e._layers.sort(FH('z', '_idx')),
            e._lastEvent && e._eventHandler(e._lastEvent, !0),
            e.render();
        }
        _updateLayout(t) {
          const e = this;
          if (!1 === e.notifyPlugins('beforeLayout', { cancelable: !0 })) return;
          Uj.update(e, e.width, e.height, t);
          const n = e.chartArea,
            i = n.width <= 0 || n.height <= 0;
          (e._layers = []),
            cV(
              e.boxes,
              (t) => {
                (i && 'chartArea' === t.position) || (t.configure && t.configure(), e._layers.push(...t._layers()));
              },
              e
            ),
            e._layers.forEach((t, e) => {
              t._idx = e;
            }),
            e.notifyPlugins('afterLayout');
        }
        _updateDatasets(t) {
          const e = this,
            n = 'function' == typeof t;
          if (!1 !== e.notifyPlugins('beforeDatasetsUpdate', { mode: t, cancelable: !0 })) {
            for (let i = 0, s = e.data.datasets.length; i < s; ++i) e._updateDataset(i, n ? t({ datasetIndex: i }) : t);
            e.notifyPlugins('afterDatasetsUpdate', { mode: t });
          }
        }
        _updateDataset(t, e) {
          const n = this,
            i = n.getDatasetMeta(t),
            s = { meta: i, index: t, mode: e, cancelable: !0 };
          !1 !== n.notifyPlugins('beforeDatasetUpdate', s) &&
            (i.controller._update(e), (s.cancelable = !1), n.notifyPlugins('afterDatasetUpdate', s));
        }
        render() {
          const t = this;
          !1 !== t.notifyPlugins('beforeRender', { cancelable: !0 }) &&
            (Yz.has(t) ? t.attached && !Yz.running(t) && Yz.start(t) : (t.draw(), NH({ chart: t })));
        }
        draw() {
          const t = this;
          let e;
          if (t._resizeBeforeDraw) {
            const { width: e, height: n } = t._resizeBeforeDraw;
            t._resize(e, n), (t._resizeBeforeDraw = null);
          }
          if ((t.clear(), t.width <= 0 || t.height <= 0)) return;
          if (!1 === t.notifyPlugins('beforeDraw', { cancelable: !0 })) return;
          const n = t._layers;
          for (e = 0; e < n.length && n[e].z <= 0; ++e) n[e].draw(t.chartArea);
          for (t._drawDatasets(); e < n.length; ++e) n[e].draw(t.chartArea);
          t.notifyPlugins('afterDraw');
        }
        _getSortedDatasetMetas(t) {
          const e = this._sortedMetasets,
            n = [];
          let i, s;
          for (i = 0, s = e.length; i < s; ++i) {
            const s = e[i];
            (t && !s.visible) || n.push(s);
          }
          return n;
        }
        getSortedVisibleDatasetMetas() {
          return this._getSortedDatasetMetas(!0);
        }
        _drawDatasets() {
          const t = this;
          if (!1 === t.notifyPlugins('beforeDatasetsDraw', { cancelable: !0 })) return;
          const e = t.getSortedVisibleDatasetMetas();
          for (let n = e.length - 1; n >= 0; --n) t._drawDataset(e[n]);
          t.notifyPlugins('afterDatasetsDraw');
        }
        _drawDataset(t) {
          const e = this,
            n = e.ctx,
            i = t._clip,
            s = !i.disabled,
            r = e.chartArea,
            o = { meta: t, index: t.index, cancelable: !0 };
          !1 !== e.notifyPlugins('beforeDatasetDraw', o) &&
            (s &&
              FB(n, {
                left: !1 === i.left ? 0 : r.left - i.left,
                right: !1 === i.right ? e.width : r.right + i.right,
                top: !1 === i.top ? 0 : r.top - i.top,
                bottom: !1 === i.bottom ? e.height : r.bottom + i.bottom,
              }),
            t.controller.draw(),
            s && NB(n),
            (o.cancelable = !1),
            e.notifyPlugins('afterDatasetDraw', o));
        }
        getElementsAtEventForMode(t, e, n, i) {
          const s = Ij.modes[e];
          return 'function' == typeof s ? s(this, t, n, i) : [];
        }
        getDatasetMeta(t) {
          const e = this.data.datasets[t],
            n = this._metasets;
          let i = n.filter((t) => t && t._dataset === e).pop();
          return (
            i ||
              ((i = {
                type: null,
                data: [],
                dataset: null,
                controller: null,
                hidden: null,
                xAxisID: null,
                yAxisID: null,
                order: (e && e.order) || 0,
                index: t,
                _dataset: e,
                _parsed: [],
                _sorted: !1,
              }),
              n.push(i)),
            i
          );
        }
        getContext() {
          return this.$context || (this.$context = { chart: this, type: 'chart' });
        }
        getVisibleDatasetCount() {
          return this.getSortedVisibleDatasetMetas().length;
        }
        isDatasetVisible(t) {
          const e = this.data.datasets[t];
          if (!e) return !1;
          const n = this.getDatasetMeta(t);
          return 'boolean' == typeof n.hidden ? !n.hidden : !e.hidden;
        }
        setDatasetVisibility(t, e) {
          this.getDatasetMeta(t).hidden = !e;
        }
        toggleDataVisibility(t) {
          this._hiddenIndices[t] = !this._hiddenIndices[t];
        }
        getDataVisibility(t) {
          return !this._hiddenIndices[t];
        }
        _updateVisibility(t, e, n) {
          const i = this,
            s = n ? 'show' : 'hide',
            r = i.getDatasetMeta(t),
            o = r.controller._resolveAnimations(void 0, s);
          vV(e)
            ? ((r.data[e].hidden = !n), i.update())
            : (i.setDatasetVisibility(t, n),
              o.update(r, { visible: n }),
              i.update((e) => (e.datasetIndex === t ? s : void 0)));
        }
        hide(t, e) {
          this._updateVisibility(t, e, !1);
        }
        show(t, e) {
          this._updateVisibility(t, e, !0);
        }
        _destroyDatasetMeta(t) {
          const e = this,
            n = e._metasets && e._metasets[t];
          n && n.controller && (n.controller._destroy(), delete e._metasets[t]);
        }
        destroy() {
          const t = this,
            { canvas: e, ctx: n } = t;
          let i, s;
          for (t.stop(), Yz.remove(t), i = 0, s = t.data.datasets.length; i < s; ++i) t._destroyDatasetMeta(i);
          t.config.clearCache(),
            e && (t.unbindEvents(), RB(e, n), t.platform.releaseContext(n), (t.canvas = null), (t.ctx = null)),
            t.notifyPlugins('destroy'),
            delete zH[t.id];
        }
        toBase64Image(...t) {
          return this.canvas.toDataURL(...t);
        }
        bindEvents() {
          this.bindUserEvents(), this.options.responsive ? this.bindResponsiveEvents() : (this.attached = !0);
        }
        bindUserEvents() {
          const t = this,
            e = t._listeners,
            n = t.platform,
            i = function (e, n, i) {
              (e.offsetX = n), (e.offsetY = i), t._eventHandler(e);
            };
          cV(t.options.events, (s) =>
            ((i, s) => {
              n.addEventListener(t, i, s), (e[i] = s);
            })(s, i)
          );
        }
        bindResponsiveEvents() {
          const t = this;
          t._responsiveListeners || (t._responsiveListeners = {});
          const e = t._responsiveListeners,
            n = t.platform,
            i = (i, s) => {
              n.addEventListener(t, i, s), (e[i] = s);
            },
            s = (i, s) => {
              e[i] && (n.removeEventListener(t, i, s), delete e[i]);
            },
            r = (e, n) => {
              t.canvas && t.resize(e, n);
            };
          let o;
          const a = () => {
            s('attach', a), (t.attached = !0), t.resize(), i('resize', r), i('detach', o);
          };
          (o = () => {
            (t.attached = !1), s('resize', r), i('attach', a);
          }),
            n.isAttached(t.canvas) ? a() : o();
        }
        unbindEvents() {
          const t = this;
          cV(t._listeners, (e, n) => {
            t.platform.removeEventListener(t, n, e);
          }),
            (t._listeners = {}),
            cV(t._responsiveListeners, (e, n) => {
              t.platform.removeEventListener(t, n, e);
            }),
            (t._responsiveListeners = void 0);
        }
        updateHoverStyle(t, e, n) {
          const i = n ? 'set' : 'remove';
          let s, r, o, a;
          for (
            'dataset' === e &&
              ((s = this.getDatasetMeta(t[0].datasetIndex)), s.controller['_' + i + 'DatasetHoverStyle']()),
              o = 0,
              a = t.length;
            o < a;
            ++o
          ) {
            r = t[o];
            const e = r && this.getDatasetMeta(r.datasetIndex).controller;
            e && e[i + 'HoverStyle'](r.element, r.datasetIndex, r.index);
          }
        }
        getActiveElements() {
          return this._active || [];
        }
        setActiveElements(t) {
          const e = this,
            n = e._active || [],
            i = t.map(({ datasetIndex: t, index: n }) => {
              const i = e.getDatasetMeta(t);
              if (!i) throw new Error('No dataset found at index ' + t);
              return { datasetIndex: t, element: i.data[n], index: n };
            });
          !hV(i, n) && ((e._active = i), e._updateHoverStyles(i, n));
        }
        notifyPlugins(t, e, n) {
          return this._plugins.notify(this, t, e, n);
        }
        _updateHoverStyles(t, e, n) {
          const i = this,
            s = i.options.hover,
            r = (t, e) => t.filter((t) => !e.some((e) => t.datasetIndex === e.datasetIndex && t.index === e.index)),
            o = r(e, t),
            a = n ? t : r(t, e);
          o.length && i.updateHoverStyle(o, s.mode, !1), a.length && s.mode && i.updateHoverStyle(a, s.mode, !0);
        }
        _eventHandler(t, e) {
          const n = this,
            i = { event: t, replay: e, cancelable: !0 },
            s = (e) => (e.options.events || this.options.events).includes(t.type);
          if (!1 === n.notifyPlugins('beforeEvent', i, s)) return;
          const r = n._handleEvent(t, e);
          return (i.cancelable = !1), n.notifyPlugins('afterEvent', i, s), (r || i.changed) && n.render(), n;
        }
        _handleEvent(t, e) {
          const n = this,
            { _active: i = [], options: s } = n,
            r = s.hover;
          let o = [],
            a = !1,
            l = null;
          return (
            'mouseout' !== t.type &&
              ((o = n.getElementsAtEventForMode(t, r.mode, r, e)), (l = 'click' === t.type ? n._lastEvent : t)),
            (n._lastEvent = null),
            LB(t, n.chartArea, n._minPadding) &&
              (lV(s.onHover, [t, o, n], n),
              ('mouseup' !== t.type && 'click' !== t.type && 'contextmenu' !== t.type) || lV(s.onClick, [t, o, n], n)),
            (a = !hV(o, i)),
            (a || e) && ((n._active = o), n._updateHoverStyles(o, i, e)),
            (n._lastEvent = l),
            a
          );
        }
      }
      const $H = () => cV(HH.instances, (t) => t._plugins.invalidate()),
        qH = !0;
      function WH(t, e, n) {
        const { startAngle: i, pixelMargin: s, x: r, y: o, outerRadius: a, innerRadius: l } = e;
        let c = s / a;
        t.beginPath(),
          t.arc(r, o, a, i - c, n + c),
          l > s ? ((c = s / l), t.arc(r, o, l, n + c, i - c, !0)) : t.arc(r, o, s, n + OV, i - OV),
          t.closePath(),
          t.clip();
      }
      function UH(t, e, n, i) {
        return { x: n + t * Math.cos(e), y: i + t * Math.sin(e) };
      }
      function YH(t, e, n, i, s) {
        const { x: r, y: o, startAngle: a, pixelMargin: l, innerRadius: c } = e,
          h = Math.max(e.outerRadius + i + n - l, 0),
          u = c > 0 ? c + i + n + l : 0;
        let d = 0;
        const p = s - a;
        if (i) {
          const t = ((c > 0 ? c - i : 0) + (h > 0 ? h - i : 0)) / 2;
          d = (p - (0 !== t ? (p * t) / (t + i) : p)) / 2;
        }
        const m = (p - Math.max(0.001, p * h - n / xV) / h) / 2,
          f = a + m + d,
          g = s - m - d,
          {
            outerStart: _,
            outerEnd: b,
            innerStart: y,
            innerEnd: v,
          } = (function (t, e, n, i) {
            const s = UB(t.options.borderRadius, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']),
              r = (n - e) / 2,
              o = Math.min(r, (i * e) / 2),
              a = (t) => {
                const e = ((n - Math.min(r, t)) * i) / 2;
                return $V(t, 0, Math.min(r, e));
              };
            return {
              outerStart: a(s.outerStart),
              outerEnd: a(s.outerEnd),
              innerStart: $V(s.innerStart, 0, o),
              innerEnd: $V(s.innerEnd, 0, o),
            };
          })(e, u, h, g - f),
          w = h - _,
          x = h - b,
          C = f + _ / w,
          k = g - b / x,
          S = u + y,
          E = u + v,
          O = f + y / S,
          P = g - v / E;
        if ((t.beginPath(), t.arc(r, o, h, C, k), b > 0)) {
          const e = UH(x, k, r, o);
          t.arc(e.x, e.y, b, k, g + OV);
        }
        const A = UH(E, g, r, o);
        if ((t.lineTo(A.x, A.y), v > 0)) {
          const e = UH(E, P, r, o);
          t.arc(e.x, e.y, v, g + OV, P + Math.PI);
        }
        if ((t.arc(r, o, u, g - v / u, f + y / u, !0), y > 0)) {
          const e = UH(S, O, r, o);
          t.arc(e.x, e.y, y, O + Math.PI, f - OV);
        }
        const T = UH(w, f, r, o);
        if ((t.lineTo(T.x, T.y), _ > 0)) {
          const e = UH(w, C, r, o);
          t.arc(e.x, e.y, _, f - OV, C);
        }
        t.closePath();
      }
      Object.defineProperties(HH, {
        defaults: { enumerable: qH, value: AB },
        instances: { enumerable: qH, value: zH },
        overrides: { enumerable: qH, value: SB },
        registry: { enumerable: qH, value: vH },
        version: { enumerable: qH, value: '3.5.0' },
        getChart: { enumerable: qH, value: jH },
        register: {
          enumerable: qH,
          value: (...t) => {
            vH.add(...t), $H();
          },
        },
        unregister: {
          enumerable: qH,
          value: (...t) => {
            vH.remove(...t), $H();
          },
        },
      });
      class GH extends lH {
        constructor(t) {
          super(),
            (this.options = void 0),
            (this.circumference = void 0),
            (this.startAngle = void 0),
            (this.endAngle = void 0),
            (this.innerRadius = void 0),
            (this.outerRadius = void 0),
            (this.pixelMargin = 0),
            (this.fullCircles = 0),
            t && Object.assign(this, t);
        }
        inRange(t, e, n) {
          const i = this.getProps(['x', 'y'], n),
            { angle: s, distance: r } = (function (t, e) {
              const n = e.x - t.x,
                i = e.y - t.y,
                s = Math.sqrt(n * n + i * i);
              let r = Math.atan2(i, n);
              return r < -0.5 * xV && (r += CV), { angle: r, distance: s };
            })(i, { x: t, y: e }),
            {
              startAngle: o,
              endAngle: a,
              innerRadius: l,
              outerRadius: c,
              circumference: h,
            } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], n),
            u = this.options.spacing / 2;
          return (h >= CV || HV(s, o, a)) && r >= l + u && r <= c + u;
        }
        getCenterPoint(t) {
          const {
              x: e,
              y: n,
              startAngle: i,
              endAngle: s,
              innerRadius: r,
              outerRadius: o,
            } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], t),
            { offset: a, spacing: l } = this.options,
            c = (i + s) / 2,
            h = (r + o + l + a) / 2;
          return { x: e + Math.cos(c) * h, y: n + Math.sin(c) * h };
        }
        tooltipPosition(t) {
          return this.getCenterPoint(t);
        }
        draw(t) {
          const e = this,
            { options: n, circumference: i } = e,
            s = (n.offset || 0) / 2,
            r = (n.spacing || 0) / 2;
          if (
            ((e.pixelMargin = 'inner' === n.borderAlign ? 0.33 : 0),
            (e.fullCircles = i > CV ? Math.floor(i / CV) : 0),
            0 === i || e.innerRadius < 0 || e.outerRadius < 0)
          )
            return;
          t.save();
          let o = 0;
          if (s) {
            o = s / 2;
            const n = (e.startAngle + e.endAngle) / 2;
            t.translate(Math.cos(n) * o, Math.sin(n) * o), e.circumference >= xV && (o = s);
          }
          (t.fillStyle = n.backgroundColor), (t.strokeStyle = n.borderColor);
          const a = (function (t, e, n, i) {
            const { fullCircles: s, startAngle: r, circumference: o } = e;
            let a = e.endAngle;
            if (s) {
              YH(t, e, n, i, r + CV);
              for (let e = 0; e < s; ++e) t.fill();
              isNaN(o) || ((a = r + (o % CV)), o % CV == 0 && (a += CV));
            }
            return YH(t, e, n, i, a), t.fill(), a;
          })(t, e, o, r);
          (function (t, e, n, i, s) {
            const { options: r } = e,
              o = 'inner' === r.borderAlign;
            r.borderWidth &&
              (o
                ? ((t.lineWidth = 2 * r.borderWidth), (t.lineJoin = 'round'))
                : ((t.lineWidth = r.borderWidth), (t.lineJoin = 'bevel')),
              e.fullCircles &&
                (function (t, e, n) {
                  const { x: i, y: s, startAngle: r, pixelMargin: o, fullCircles: a } = e,
                    l = Math.max(e.outerRadius - o, 0),
                    c = e.innerRadius + o;
                  let h;
                  for (n && WH(t, e, r + CV), t.beginPath(), t.arc(i, s, c, r + CV, r, !0), h = 0; h < a; ++h)
                    t.stroke();
                  for (t.beginPath(), t.arc(i, s, l, r, r + CV), h = 0; h < a; ++h) t.stroke();
                })(t, e, o),
              o && WH(t, e, s),
              YH(t, e, n, i, s),
              t.stroke());
          })(t, e, o, r, a),
            t.restore();
        }
      }
      function QH(t, e, n = e) {
        (t.lineCap = oV(n.borderCapStyle, e.borderCapStyle)),
          t.setLineDash(oV(n.borderDash, e.borderDash)),
          (t.lineDashOffset = oV(n.borderDashOffset, e.borderDashOffset)),
          (t.lineJoin = oV(n.borderJoinStyle, e.borderJoinStyle)),
          (t.lineWidth = oV(n.borderWidth, e.borderWidth)),
          (t.strokeStyle = oV(n.borderColor, e.borderColor));
      }
      function KH(t, e, n) {
        t.lineTo(n.x, n.y);
      }
      function XH(t, e, n = {}) {
        const i = t.length,
          { start: s = 0, end: r = i - 1 } = n,
          { start: o, end: a } = e,
          l = Math.max(s, o),
          c = Math.min(r, a);
        return {
          count: i,
          start: l,
          loop: e.loop,
          ilen: c < l && !((s < o && r < o) || (s > a && r > a)) ? i + c - l : c - l,
        };
      }
      function ZH(t, e, n, i) {
        const { points: s, options: r } = e,
          { count: o, start: a, loop: l, ilen: c } = XH(s, n, i),
          h = (function (t) {
            return t.stepped ? VB : t.tension || 'monotone' === t.cubicInterpolationMode ? BB : KH;
          })(r);
        let u,
          d,
          p,
          { move: m = !0, reverse: f } = i || {};
        for (u = 0; u <= c; ++u)
          (d = s[(a + (f ? c - u : u)) % o]),
            d.skip || (m ? (t.moveTo(d.x, d.y), (m = !1)) : h(t, p, d, f, r.stepped), (p = d));
        return l && ((d = s[(a + (f ? c : 0)) % o]), h(t, p, d, f, r.stepped)), !!l;
      }
      function JH(t, e, n, i) {
        const s = e.points,
          { count: r, start: o, ilen: a } = XH(s, n, i),
          { move: l = !0, reverse: c } = i || {};
        let h,
          u,
          d,
          p,
          m,
          f,
          g = 0,
          _ = 0;
        const b = (t) => (o + (c ? a - t : t)) % r,
          y = () => {
            p !== m && (t.lineTo(g, m), t.lineTo(g, p), t.lineTo(g, f));
          };
        for (l && ((u = s[b(0)]), t.moveTo(u.x, u.y)), h = 0; h <= a; ++h) {
          if (((u = s[b(h)]), u.skip)) continue;
          const e = u.x,
            n = u.y,
            i = 0 | e;
          i === d
            ? (n < p ? (p = n) : n > m && (m = n), (g = (_ * g + e) / ++_))
            : (y(), t.lineTo(e, n), (d = i), (_ = 0), (p = m = n)),
            (f = n);
        }
        y();
      }
      function t$(t) {
        const e = t.options;
        return t._decimated ||
          t._loop ||
          e.tension ||
          'monotone' === e.cubicInterpolationMode ||
          e.stepped ||
          (e.borderDash && e.borderDash.length)
          ? ZH
          : JH;
      }
      (GH.id = 'arc'),
        (GH.defaults = {
          borderAlign: 'center',
          borderColor: '#fff',
          borderRadius: 0,
          borderWidth: 2,
          offset: 0,
          spacing: 0,
          angle: void 0,
        }),
        (GH.defaultRoutes = { backgroundColor: 'backgroundColor' });
      const e$ = 'function' == typeof Path2D;
      let n$ = (() => {
        class t extends lH {
          constructor(t) {
            super(),
              (this.animated = !0),
              (this.options = void 0),
              (this._loop = void 0),
              (this._fullLoop = void 0),
              (this._path = void 0),
              (this._points = void 0),
              (this._segments = void 0),
              (this._decimated = !1),
              (this._pointsUpdated = !1),
              (this._datasetIndex = void 0),
              t && Object.assign(this, t);
          }
          updateControlPoints(t, e) {
            const n = this,
              i = n.options;
            (!i.tension && 'monotone' !== i.cubicInterpolationMode) ||
              i.stepped ||
              n._pointsUpdated ||
              ((function (t, e, n, i, s) {
                let r, o, a, l;
                if ((e.spanGaps && (t = t.filter((t) => !t.skip)), 'monotone' === e.cubicInterpolationMode))
                  !(function (t, e = 'x') {
                    const n = yz(e),
                      i = t.length,
                      s = Array(i).fill(0),
                      r = Array(i);
                    let o,
                      a,
                      l,
                      c = bz(t, 0);
                    for (o = 0; o < i; ++o)
                      if (((a = l), (l = c), (c = bz(t, o + 1)), l)) {
                        if (c) {
                          const t = c[e] - l[e];
                          s[o] = 0 !== t ? (c[n] - l[n]) / t : 0;
                        }
                        r[o] = a ? (c ? (DV(s[o - 1]) !== DV(s[o]) ? 0 : (s[o - 1] + s[o]) / 2) : s[o - 1]) : s[o];
                      }
                    !(function (t, e, n) {
                      const i = t.length;
                      let s,
                        r,
                        o,
                        a,
                        l,
                        c = bz(t, 0);
                      for (let h = 0; h < i - 1; ++h)
                        (l = c),
                          (c = bz(t, h + 1)),
                          l &&
                            c &&
                            (IV(e[h], 0, _z)
                              ? (n[h] = n[h + 1] = 0)
                              : ((s = n[h] / e[h]),
                                (r = n[h + 1] / e[h]),
                                (a = Math.pow(s, 2) + Math.pow(r, 2)),
                                a <= 9 || ((o = 3 / Math.sqrt(a)), (n[h] = s * o * e[h]), (n[h + 1] = r * o * e[h]))));
                    })(t, s, r),
                      (function (t, e, n = 'x') {
                        const i = yz(n),
                          s = t.length;
                        let r,
                          o,
                          a,
                          l = bz(t, 0);
                        for (let c = 0; c < s; ++c) {
                          if (((o = a), (a = l), (l = bz(t, c + 1)), !a)) continue;
                          const s = a[n],
                            h = a[i];
                          o && ((r = (s - o[n]) / 3), (a[`cp1${n}`] = s - r), (a[`cp1${i}`] = h - r * e[c])),
                            l && ((r = (l[n] - s) / 3), (a[`cp2${n}`] = s + r), (a[`cp2${i}`] = h + r * e[c]));
                        }
                      })(t, r, e);
                  })(t, s);
                else {
                  let n = i ? t[t.length - 1] : t[0];
                  for (r = 0, o = t.length; r < o; ++r)
                    (a = t[r]),
                      (l = vz(n, a, t[Math.min(r + 1, o - (i ? 0 : 1)) % o], e.tension)),
                      (a.cp1x = l.previous.x),
                      (a.cp1y = l.previous.y),
                      (a.cp2x = l.next.x),
                      (a.cp2y = l.next.y),
                      (n = a);
                }
                e.capBezierPoints &&
                  (function (t, e) {
                    let n,
                      i,
                      s,
                      r,
                      o,
                      a = LB(t[0], e);
                    for (n = 0, i = t.length; n < i; ++n)
                      (o = r),
                        (r = a),
                        (a = n < i - 1 && LB(t[n + 1], e)),
                        r &&
                          ((s = t[n]),
                          o && ((s.cp1x = wz(s.cp1x, e.left, e.right)), (s.cp1y = wz(s.cp1y, e.top, e.bottom))),
                          a && ((s.cp2x = wz(s.cp2x, e.left, e.right)), (s.cp2y = wz(s.cp2y, e.top, e.bottom))));
                  })(t, n);
              })(n._points, i, t, i.spanGaps ? n._loop : n._fullLoop, e),
              (n._pointsUpdated = !0));
          }
          set points(t) {
            const e = this;
            (e._points = t), delete e._segments, delete e._path, (e._pointsUpdated = !1);
          }
          get points() {
            return this._points;
          }
          get segments() {
            return (
              this._segments ||
              (this._segments = (function (t, e) {
                const n = t.points,
                  i = t.options.spanGaps,
                  s = n.length;
                if (!s) return [];
                const r = !!t._loop,
                  { start: o, end: a } = (function (t, e, n, i) {
                    let s = 0,
                      r = e - 1;
                    if (n && !i) for (; s < e && !t[s].skip; ) s++;
                    for (; s < e && t[s].skip; ) s++;
                    for (s %= e, n && (r += s); r > s && t[r % e].skip; ) r--;
                    return (r %= e), { start: s, end: r };
                  })(n, s, r, i);
                return (function (t, e, n, i) {
                  return i && i.setContext && n
                    ? (function (t, e, n, i) {
                        const s = Wz(t.options),
                          r = n.length,
                          o = [];
                        let a = e[0].start,
                          l = a;
                        for (const c of e) {
                          let e,
                            h = s,
                            u = n[a % r];
                          for (l = a + 1; l <= c.end; l++) {
                            const s = n[l % r];
                            (e = Wz(
                              i.setContext({
                                type: 'segment',
                                p0: u,
                                p1: s,
                                p0DataIndex: (l - 1) % r,
                                p1DataIndex: l % r,
                                datasetIndex: t._datasetIndex,
                              })
                            )),
                              Uz(e, h) &&
                                (o.push({ start: a, end: l - 1, loop: c.loop, style: h }), (h = e), (a = l - 1)),
                              (u = s),
                              (h = e);
                          }
                          a < l - 1 && (o.push({ start: a, end: l - 1, loop: c.loop, style: e }), (a = l - 1));
                        }
                        return o;
                      })(t, e, n, i)
                    : e;
                })(
                  t,
                  !0 === i
                    ? [{ start: o, end: a, loop: r }]
                    : (function (t, e, n, i) {
                        const s = t.length,
                          r = [];
                        let o,
                          a = e,
                          l = t[e];
                        for (o = e + 1; o <= n; ++o) {
                          const n = t[o % s];
                          n.skip || n.stop
                            ? l.skip ||
                              (r.push({ start: e % s, end: (o - 1) % s, loop: (i = !1) }), (e = a = n.stop ? o : null))
                            : ((a = o), l.skip && (e = o)),
                            (l = n);
                        }
                        return null !== a && r.push({ start: e % s, end: a % s, loop: i }), r;
                      })(n, o, a < o ? a + s : a, !!t._fullLoop && 0 === o && a === s - 1),
                  n,
                  e
                );
              })(this, this.options.segment))
            );
          }
          first() {
            const t = this.segments;
            return t.length && this.points[t[0].start];
          }
          last() {
            const t = this.segments,
              e = t.length;
            return e && this.points[t[e - 1].end];
          }
          interpolate(t, e) {
            const n = this,
              i = n.options,
              s = t[e],
              r = n.points,
              o = qz(n, { property: e, start: s, end: s });
            if (!o.length) return;
            const a = [],
              l = (function (t) {
                return t.stepped ? Iz : t.tension || 'monotone' === t.cubicInterpolationMode ? Lz : Rz;
              })(i);
            let c, h;
            for (c = 0, h = o.length; c < h; ++c) {
              const { start: n, end: h } = o[c],
                u = r[n],
                d = r[h];
              if (u === d) {
                a.push(u);
                continue;
              }
              const p = l(u, d, Math.abs((s - u[e]) / (d[e] - u[e])), i.stepped);
              (p[e] = t[e]), a.push(p);
            }
            return 1 === a.length ? a[0] : a;
          }
          pathSegment(t, e, n) {
            return t$(this)(t, this, e, n);
          }
          path(t, e, n) {
            const i = this,
              s = i.segments,
              r = t$(i);
            let o = i._loop;
            (e = e || 0), (n = n || i.points.length - e);
            for (const a of s) o &= r(t, i, a, { start: e, end: e + n - 1 });
            return !!o;
          }
          draw(t, e, n, i) {
            const s = this;
            (s.points || []).length &&
              (s.options || {}).borderWidth &&
              (t.save(),
              (function (t, e, n, i) {
                e$ && 1 === e.segments.length
                  ? (function (t, e, n, i) {
                      let s = e._path;
                      s || ((s = e._path = new Path2D()), e.path(s, n, i) && s.closePath()),
                        QH(t, e.options),
                        t.stroke(s);
                    })(t, e, n, i)
                  : (function (t, e, n, i) {
                      const { segments: s, options: r } = e,
                        o = t$(e);
                      for (const a of s)
                        QH(t, r, a.style),
                          t.beginPath(),
                          o(t, e, a, { start: n, end: n + i - 1 }) && t.closePath(),
                          t.stroke();
                    })(t, e, n, i);
              })(t, s, n, i),
              t.restore(),
              s.animated && ((s._pointsUpdated = !1), (s._path = void 0)));
          }
        }
        return (
          (t.id = 'line'),
          (t.defaults = {
            borderCapStyle: 'butt',
            borderDash: [],
            borderDashOffset: 0,
            borderJoinStyle: 'miter',
            borderWidth: 3,
            capBezierPoints: !0,
            cubicInterpolationMode: 'default',
            fill: !1,
            spanGaps: !1,
            stepped: !1,
            tension: 0,
          }),
          (t.defaultRoutes = { backgroundColor: 'backgroundColor', borderColor: 'borderColor' }),
          (t.descriptors = { _scriptable: !0, _indexable: (t) => 'borderDash' !== t && 'fill' !== t }),
          t
        );
      })();
      function i$(t, e, n, i) {
        const s = t.options,
          { [n]: r } = t.getProps([n], i);
        return Math.abs(e - r) < s.radius + s.hitRadius;
      }
      let s$ = (() => {
        class t extends lH {
          constructor(t) {
            super(),
              (this.options = void 0),
              (this.parsed = void 0),
              (this.skip = void 0),
              (this.stop = void 0),
              t && Object.assign(this, t);
          }
          inRange(t, e, n) {
            const i = this.options,
              { x: s, y: r } = this.getProps(['x', 'y'], n);
            return Math.pow(t - s, 2) + Math.pow(e - r, 2) < Math.pow(i.hitRadius + i.radius, 2);
          }
          inXRange(t, e) {
            return i$(this, t, 'x', e);
          }
          inYRange(t, e) {
            return i$(this, t, 'y', e);
          }
          getCenterPoint(t) {
            const { x: e, y: n } = this.getProps(['x', 'y'], t);
            return { x: e, y: n };
          }
          size(t) {
            let e = (t = t || this.options || {}).radius || 0;
            return (e = Math.max(e, (e && t.hoverRadius) || 0)), 2 * (e + ((e && t.borderWidth) || 0));
          }
          draw(t, e) {
            const n = this,
              i = n.options;
            n.skip ||
              i.radius < 0.1 ||
              !LB(n, e, n.size(i) / 2) ||
              ((t.strokeStyle = i.borderColor),
              (t.lineWidth = i.borderWidth),
              (t.fillStyle = i.backgroundColor),
              IB(t, i, n.x, n.y));
          }
          getRange() {
            const t = this.options || {};
            return t.radius + t.hitRadius;
          }
        }
        return (
          (t.id = 'point'),
          (t.defaults = {
            borderWidth: 1,
            hitRadius: 1,
            hoverBorderWidth: 1,
            hoverRadius: 4,
            pointStyle: 'circle',
            radius: 3,
            rotation: 0,
          }),
          (t.defaultRoutes = { backgroundColor: 'backgroundColor', borderColor: 'borderColor' }),
          t
        );
      })();
      function r$(t, e) {
        const { x: n, y: i, base: s, width: r, height: o } = t.getProps(['x', 'y', 'base', 'width', 'height'], e);
        let a, l, c, h, u;
        return (
          t.horizontal
            ? ((u = o / 2), (a = Math.min(n, s)), (l = Math.max(n, s)), (c = i - u), (h = i + u))
            : ((u = r / 2), (a = n - u), (l = n + u), (c = Math.min(i, s)), (h = Math.max(i, s))),
          { left: a, top: c, right: l, bottom: h }
        );
      }
      function o$(t, e, n, i) {
        return t ? 0 : $V(e, n, i);
      }
      function a$(t, e, n, i) {
        const s = null === e,
          r = null === n,
          o = t && !(s && r) && r$(t, i);
        return o && (s || (e >= o.left && e <= o.right)) && (r || (n >= o.top && n <= o.bottom));
      }
      function l$(t, e) {
        t.rect(e.x, e.y, e.w, e.h);
      }
      function c$(t, e, n = {}) {
        const i = t.x !== n.x ? -e : 0,
          s = t.y !== n.y ? -e : 0;
        return {
          x: t.x + i,
          y: t.y + s,
          w: t.w + ((t.x + t.w !== n.x + n.w ? e : 0) - i),
          h: t.h + ((t.y + t.h !== n.y + n.h ? e : 0) - s),
          radius: t.radius,
        };
      }
      class h$ extends lH {
        constructor(t) {
          super(),
            (this.options = void 0),
            (this.horizontal = void 0),
            (this.base = void 0),
            (this.width = void 0),
            (this.height = void 0),
            t && Object.assign(this, t);
        }
        draw(t) {
          const e = this.options,
            { inner: n, outer: i } = (function (t) {
              const e = r$(t),
                n = e.right - e.left,
                i = e.bottom - e.top,
                s = (function (t, e, n) {
                  const i = t.borderSkipped,
                    s = YB(t.options.borderWidth);
                  return {
                    t: o$(i.top, s.top, 0, n),
                    r: o$(i.right, s.right, 0, e),
                    b: o$(i.bottom, s.bottom, 0, n),
                    l: o$(i.left, s.left, 0, e),
                  };
                })(t, n / 2, i / 2),
                r = (function (t, e, n) {
                  const { enableBorderRadius: i } = t.getProps(['enableBorderRadius']),
                    s = t.options.borderRadius,
                    r = GB(s),
                    o = Math.min(e, n),
                    a = t.borderSkipped,
                    l = i || iV(s);
                  return {
                    topLeft: o$(!l || a.top || a.left, r.topLeft, 0, o),
                    topRight: o$(!l || a.top || a.right, r.topRight, 0, o),
                    bottomLeft: o$(!l || a.bottom || a.left, r.bottomLeft, 0, o),
                    bottomRight: o$(!l || a.bottom || a.right, r.bottomRight, 0, o),
                  };
                })(t, n / 2, i / 2);
              return {
                outer: { x: e.left, y: e.top, w: n, h: i, radius: r },
                inner: {
                  x: e.left + s.l,
                  y: e.top + s.t,
                  w: n - s.l - s.r,
                  h: i - s.t - s.b,
                  radius: {
                    topLeft: Math.max(0, r.topLeft - Math.max(s.t, s.l)),
                    topRight: Math.max(0, r.topRight - Math.max(s.t, s.r)),
                    bottomLeft: Math.max(0, r.bottomLeft - Math.max(s.b, s.l)),
                    bottomRight: Math.max(0, r.bottomRight - Math.max(s.b, s.r)),
                  },
                },
              };
            })(this),
            s = (r = i.radius).topLeft || r.topRight || r.bottomLeft || r.bottomRight ? HB : l$;
          var r;
          t.save(),
            (i.w === n.w && i.h === n.h) ||
              (t.beginPath(),
              s(t, c$(i, 0.33, n)),
              t.clip(),
              s(t, c$(n, -0.33, i)),
              (t.fillStyle = e.borderColor),
              t.fill('evenodd')),
            t.beginPath(),
            s(t, c$(n, 0.33, i)),
            (t.fillStyle = e.backgroundColor),
            t.fill(),
            t.restore();
        }
        inRange(t, e, n) {
          return a$(this, t, e, n);
        }
        inXRange(t, e) {
          return a$(this, t, null, e);
        }
        inYRange(t, e) {
          return a$(this, null, t, e);
        }
        getCenterPoint(t) {
          const { x: e, y: n, base: i, horizontal: s } = this.getProps(['x', 'y', 'base', 'horizontal'], t);
          return { x: s ? (e + i) / 2 : e, y: s ? n : (n + i) / 2 };
        }
        getRange(t) {
          return 'x' === t ? this.width / 2 : this.height / 2;
        }
      }
      function u$(t, e, n) {
        const i = (function (t) {
          const e = t.options,
            n = e.fill;
          let i = oV(n && n.target, n);
          return void 0 === i && (i = !!e.backgroundColor), !1 !== i && null !== i && (!0 === i ? 'origin' : i);
        })(t);
        if (iV(i)) return !isNaN(i.value) && i;
        let s = parseFloat(i);
        return sV(s) && Math.floor(s) === s
          ? (('-' !== i[0] && '+' !== i[0]) || (s = e + s), !(s === e || s < 0 || s >= n) && s)
          : ['origin', 'start', 'end', 'stack', 'shape'].indexOf(i) >= 0 && i;
      }
      (h$.id = 'bar'),
        (h$.defaults = {
          borderSkipped: 'start',
          borderWidth: 0,
          borderRadius: 0,
          enableBorderRadius: !0,
          pointStyle: void 0,
        }),
        (h$.defaultRoutes = { backgroundColor: 'backgroundColor', borderColor: 'borderColor' });
      class d$ {
        constructor(t) {
          (this.x = t.x), (this.y = t.y), (this.radius = t.radius);
        }
        pathSegment(t, e, n) {
          const { x: i, y: s, radius: r } = this;
          return t.arc(i, s, r, (e = e || { start: 0, end: CV }).end, e.start, !0), !n.bounds;
        }
        interpolate(t) {
          const { x: e, y: n, radius: i } = this,
            s = t.angle;
          return { x: e + Math.cos(s) * i, y: n + Math.sin(s) * i, angle: s };
        }
      }
      function p$(t, e, n) {
        for (; e > t; e--) {
          const t = n[e];
          if (!isNaN(t.x) && !isNaN(t.y)) break;
        }
        return e;
      }
      const m$ = (t) => 'line' === t.type && !t.hidden;
      function f$(t, e, n) {
        const i = [];
        for (let s = 0; s < n.length; s++) {
          const r = n[s],
            { first: o, last: a, point: l } = g$(r, e, 'x');
          if (!(!l || (o && a)))
            if (o) i.unshift(l);
            else if ((t.push(l), !a)) break;
        }
        t.push(...i);
      }
      function g$(t, e, n) {
        const i = t.interpolate(e, n);
        if (!i) return {};
        const s = i[n],
          r = t.segments,
          o = t.points;
        let a = !1,
          l = !1;
        for (let c = 0; c < r.length; c++) {
          const t = r[c],
            e = o[t.start][n],
            i = o[t.end][n];
          if (s >= e && s <= i) {
            (a = s === e), (l = s === i);
            break;
          }
        }
        return { first: a, last: l, point: i };
      }
      function _$(t, e) {
        let n = [],
          i = !1;
        return (
          nV(t)
            ? ((i = !0), (n = t))
            : (n = (function (t, e) {
                const { x: n = null, y: i = null } = t || {},
                  s = e.points,
                  r = [];
                return (
                  e.segments.forEach(({ start: t, end: e }) => {
                    e = p$(t, e, s);
                    const o = s[t],
                      a = s[e];
                    null !== i
                      ? (r.push({ x: o.x, y: i }), r.push({ x: a.x, y: i }))
                      : null !== n && (r.push({ x: n, y: o.y }), r.push({ x: n, y: a.y }));
                  }),
                  r
                );
              })(t, e)),
          n.length ? new n$({ points: n, options: { tension: 0 }, _loop: i, _fullLoop: i }) : null
        );
      }
      function b$(t, e, n) {
        let i = t[e].fill;
        const s = [e];
        let r;
        if (!n) return i;
        for (; !1 !== i && -1 === s.indexOf(i); ) {
          if (!sV(i)) return i;
          if (((r = t[i]), !r)) return !1;
          if (r.visible) return i;
          s.push(i), (i = r.fill);
        }
        return !1;
      }
      function y$(t, e, n) {
        t.beginPath(), e.path(t), t.lineTo(e.last().x, n), t.lineTo(e.first().x, n), t.closePath(), t.clip();
      }
      function v$(t, e, n, i) {
        if (i) return;
        let s = e[t],
          r = n[t];
        return 'angle' === t && ((s = jV(s)), (r = jV(r))), { property: t, start: s, end: r };
      }
      function w$(t, e, n, i) {
        return t && e ? i(t[n], e[n]) : t ? t[n] : e ? e[n] : 0;
      }
      function x$(t, e, n) {
        const { top: i, bottom: s } = e.chart.chartArea,
          { property: r, start: o, end: a } = n || {};
        'x' === r && (t.beginPath(), t.rect(o, i, a - o, s - i), t.clip());
      }
      function C$(t, e, n, i) {
        const s = e.interpolate(n, i);
        s && t.lineTo(s.x, s.y);
      }
      function k$(t, e) {
        const { line: n, target: i, property: s, color: r, scale: o } = e,
          a = (function (t, e, n) {
            const i = t.segments,
              s = t.points,
              r = e.points,
              o = [];
            for (const a of i) {
              let { start: t, end: i } = a;
              i = p$(t, i, s);
              const l = v$(n, s[t], s[i], a.loop);
              if (!e.segments) {
                o.push({ source: a, target: l, start: s[t], end: s[i] });
                continue;
              }
              const c = qz(e, l);
              for (const e of c) {
                const t = v$(n, r[e.start], r[e.end], e.loop),
                  i = $z(a, s, t);
                for (const s of i)
                  o.push({
                    source: s,
                    target: e,
                    start: { [n]: w$(l, t, 'start', Math.max) },
                    end: { [n]: w$(l, t, 'end', Math.min) },
                  });
              }
            }
            return o;
          })(n, i, s);
        for (const { source: l, target: c, start: h, end: u } of a) {
          const { style: { backgroundColor: e = r } = {} } = l,
            a = !0 !== i;
          t.save(), (t.fillStyle = e), x$(t, o, a && v$(s, h, u)), t.beginPath();
          const d = !!n.pathSegment(t, l);
          let p;
          if (a) {
            d ? t.closePath() : C$(t, i, u, s);
            const e = !!i.pathSegment(t, c, { move: d, reverse: !0 });
            (p = d && e), p || C$(t, i, h, s);
          }
          t.closePath(), t.fill(p ? 'evenodd' : 'nonzero'), t.restore();
        }
      }
      function S$(t, e, n) {
        const i = (function (t) {
            const { chart: e, fill: n, line: i } = t;
            if (sV(n))
              return (function (t, e) {
                const n = t.getDatasetMeta(e);
                return n && t.isDatasetVisible(e) ? n.dataset : null;
              })(e, n);
            if ('stack' === n)
              return (function (t) {
                const { chart: e, scale: n, index: i, line: s } = t,
                  r = [],
                  o = s.segments,
                  a = s.points,
                  l = (function (t, e) {
                    const n = [],
                      i = t.getSortedVisibleDatasetMetas();
                    for (let s = 0; s < i.length; s++) {
                      const t = i[s];
                      if (t.index === e) break;
                      m$(t) && n.unshift(t.dataset);
                    }
                    return n;
                  })(e, i);
                l.push(_$({ x: null, y: n.bottom }, s));
                for (let c = 0; c < o.length; c++) {
                  const t = o[c];
                  for (let e = t.start; e <= t.end; e++) f$(r, a[e], l);
                }
                return new n$({ points: r, options: {} });
              })(t);
            if ('shape' === n) return !0;
            const s = (function (t) {
              return (t.scale || {}).getPointPositionForValue
                ? (function (t) {
                    const { scale: e, fill: n } = t,
                      i = e.options,
                      s = e.getLabels().length,
                      r = [],
                      o = i.reverse ? e.max : e.min;
                    let a, l, c;
                    if (
                      ((c =
                        'start' === n
                          ? o
                          : 'end' === n
                          ? i.reverse
                            ? e.min
                            : e.max
                          : iV(n)
                          ? n.value
                          : e.getBaseValue()),
                      i.grid.circular)
                    )
                      return (
                        (l = e.getPointPositionForValue(0, o)),
                        new d$({ x: l.x, y: l.y, radius: e.getDistanceFromCenterForValue(c) })
                      );
                    for (a = 0; a < s; ++a) r.push(e.getPointPositionForValue(a, c));
                    return r;
                  })(t)
                : (function (t) {
                    const { scale: e = {}, fill: n } = t;
                    let i,
                      s = null;
                    return (
                      'start' === n
                        ? (s = e.bottom)
                        : 'end' === n
                        ? (s = e.top)
                        : iV(n)
                        ? (s = e.getPixelForValue(n.value))
                        : e.getBasePixel && (s = e.getBasePixel()),
                      sV(s) ? ((i = e.isHorizontal()), { x: i ? s : null, y: i ? null : s }) : null
                    );
                  })(t);
            })(t);
            return s instanceof d$ ? s : _$(s, i);
          })(e),
          { line: s, scale: r, axis: o } = e,
          a = s.options,
          l = a.fill,
          c = a.backgroundColor,
          { above: h = c, below: u = c } = l || {};
        i &&
          s.points.length &&
          (FB(t, n),
          (function (t, e) {
            const { line: n, target: i, above: s, below: r, area: o, scale: a } = e,
              l = n._loop ? 'angle' : e.axis;
            t.save(),
              'x' === l &&
                r !== s &&
                (y$(t, i, o.top),
                k$(t, { line: n, target: i, color: s, scale: a, property: l }),
                t.restore(),
                t.save(),
                y$(t, i, o.bottom)),
              k$(t, { line: n, target: i, color: r, scale: a, property: l }),
              t.restore();
          })(t, { line: s, target: i, above: h, below: u, area: n, scale: r, axis: o }),
          NB(t));
      }
      var E$ = {
        id: 'filler',
        afterDatasetsUpdate(t, e, n) {
          const i = (t.data.datasets || []).length,
            s = [];
          let r, o, a, l;
          for (o = 0; o < i; ++o)
            (r = t.getDatasetMeta(o)),
              (a = r.dataset),
              (l = null),
              a &&
                a.options &&
                a instanceof n$ &&
                (l = {
                  visible: t.isDatasetVisible(o),
                  index: o,
                  fill: u$(a, o, i),
                  chart: t,
                  axis: r.controller.options.indexAxis,
                  scale: r.vScale,
                  line: a,
                }),
              (r.$filler = l),
              s.push(l);
          for (o = 0; o < i; ++o) (l = s[o]), l && !1 !== l.fill && (l.fill = b$(s, o, n.propagate));
        },
        beforeDraw(t, e, n) {
          const i = 'beforeDraw' === n.drawTime,
            s = t.getSortedVisibleDatasetMetas(),
            r = t.chartArea;
          for (let o = s.length - 1; o >= 0; --o) {
            const e = s[o].$filler;
            e && (e.line.updateControlPoints(r, e.axis), i && S$(t.ctx, e, r));
          }
        },
        beforeDatasetsDraw(t, e, n) {
          if ('beforeDatasetsDraw' !== n.drawTime) return;
          const i = t.getSortedVisibleDatasetMetas();
          for (let s = i.length - 1; s >= 0; --s) {
            const e = i[s].$filler;
            e && S$(t.ctx, e, t.chartArea);
          }
        },
        beforeDatasetDraw(t, e, n) {
          const i = e.meta.$filler;
          i && !1 !== i.fill && 'beforeDatasetDraw' === n.drawTime && S$(t.ctx, i, t.chartArea);
        },
        defaults: { propagate: !0, drawTime: 'beforeDatasetDraw' },
      };
      const O$ = (t, e) => {
        let { boxHeight: n = e, boxWidth: i = e } = t;
        return (
          t.usePointStyle && ((n = Math.min(n, e)), (i = Math.min(i, e))),
          { boxWidth: i, boxHeight: n, itemHeight: Math.max(e, n) }
        );
      };
      class P$ extends lH {
        constructor(t) {
          super(),
            (this._added = !1),
            (this.legendHitBoxes = []),
            (this._hoveredItem = null),
            (this.doughnutMode = !1),
            (this.chart = t.chart),
            (this.options = t.options),
            (this.ctx = t.ctx),
            (this.legendItems = void 0),
            (this.columnSizes = void 0),
            (this.lineWidths = void 0),
            (this.maxHeight = void 0),
            (this.maxWidth = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.height = void 0),
            (this.width = void 0),
            (this._margins = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(t, e, n) {
          const i = this;
          (i.maxWidth = t), (i.maxHeight = e), (i._margins = n), i.setDimensions(), i.buildLabels(), i.fit();
        }
        setDimensions() {
          const t = this;
          t.isHorizontal()
            ? ((t.width = t.maxWidth), (t.left = t._margins.left), (t.right = t.width))
            : ((t.height = t.maxHeight), (t.top = t._margins.top), (t.bottom = t.height));
        }
        buildLabels() {
          const t = this,
            e = t.options.labels || {};
          let n = lV(e.generateLabels, [t.chart], t) || [];
          e.filter && (n = n.filter((n) => e.filter(n, t.chart.data))),
            e.sort && (n = n.sort((n, i) => e.sort(n, i, t.chart.data))),
            t.options.reverse && n.reverse(),
            (t.legendItems = n);
        }
        fit() {
          const t = this,
            { options: e, ctx: n } = t;
          if (!e.display) return void (t.width = t.height = 0);
          const i = e.labels,
            s = KB(i.font),
            r = s.size,
            o = t._computeTitleHeight(),
            { boxWidth: a, itemHeight: l } = O$(i, r);
          let c, h;
          (n.font = s.string),
            t.isHorizontal()
              ? ((c = t.maxWidth), (h = t._fitRows(o, r, a, l) + 10))
              : ((h = t.maxHeight), (c = t._fitCols(o, r, a, l) + 10)),
            (t.width = Math.min(c, e.maxWidth || t.maxWidth)),
            (t.height = Math.min(h, e.maxHeight || t.maxHeight));
        }
        _fitRows(t, e, n, i) {
          const s = this,
            {
              ctx: r,
              maxWidth: o,
              options: {
                labels: { padding: a },
              },
            } = s,
            l = (s.legendHitBoxes = []),
            c = (s.lineWidths = [0]),
            h = i + a;
          let u = t;
          (r.textAlign = 'left'), (r.textBaseline = 'middle');
          let d = -1,
            p = -h;
          return (
            s.legendItems.forEach((t, s) => {
              const m = n + e / 2 + r.measureText(t.text).width;
              (0 === s || c[c.length - 1] + m + 2 * a > o) &&
                ((u += h), (c[c.length - (s > 0 ? 0 : 1)] = 0), (p += h), d++),
                (l[s] = { left: 0, top: p, row: d, width: m, height: i }),
                (c[c.length - 1] += m + a);
            }),
            u
          );
        }
        _fitCols(t, e, n, i) {
          const s = this,
            {
              ctx: r,
              maxHeight: o,
              options: {
                labels: { padding: a },
              },
            } = s,
            l = (s.legendHitBoxes = []),
            c = (s.columnSizes = []),
            h = o - t;
          let u = a,
            d = 0,
            p = 0,
            m = 0,
            f = 0;
          return (
            s.legendItems.forEach((t, s) => {
              const o = n + e / 2 + r.measureText(t.text).width;
              s > 0 &&
                p + i + 2 * a > h &&
                ((u += d + a), c.push({ width: d, height: p }), (m += d + a), f++, (d = p = 0)),
                (l[s] = { left: m, top: p, col: f, width: o, height: i }),
                (d = Math.max(d, o)),
                (p += i + a);
            }),
            (u += d),
            c.push({ width: d, height: p }),
            u
          );
        }
        adjustHitBoxes() {
          const t = this;
          if (!t.options.display) return;
          const e = t._computeTitleHeight(),
            {
              legendHitBoxes: n,
              options: {
                align: i,
                labels: { padding: s },
                rtl: r,
              },
            } = t,
            o = Vz(r, t.left, t.width);
          if (this.isHorizontal()) {
            let r = 0,
              a = ZN(i, t.left + s, t.right - t.lineWidths[r]);
            for (const l of n)
              r !== l.row && ((r = l.row), (a = ZN(i, t.left + s, t.right - t.lineWidths[r]))),
                (l.top += t.top + e + s),
                (l.left = o.leftForLtr(o.x(a), l.width)),
                (a += l.width + s);
          } else {
            let r = 0,
              a = ZN(i, t.top + e + s, t.bottom - t.columnSizes[r].height);
            for (const l of n)
              l.col !== r && ((r = l.col), (a = ZN(i, t.top + e + s, t.bottom - t.columnSizes[r].height))),
                (l.top = a),
                (l.left += t.left + s),
                (l.left = o.leftForLtr(o.x(l.left), l.width)),
                (a += l.height + s);
          }
        }
        isHorizontal() {
          return 'top' === this.options.position || 'bottom' === this.options.position;
        }
        draw() {
          const t = this;
          if (t.options.display) {
            const e = t.ctx;
            FB(e, t), t._draw(), NB(e);
          }
        }
        _draw() {
          const t = this,
            { options: e, columnSizes: n, lineWidths: i, ctx: s } = t,
            { align: r, labels: o } = e,
            a = AB.color,
            l = Vz(e.rtl, t.left, t.width),
            c = KB(o.font),
            { color: h, padding: u } = o,
            d = c.size,
            p = d / 2;
          let m;
          t.drawTitle(),
            (s.textAlign = l.textAlign('left')),
            (s.textBaseline = 'middle'),
            (s.lineWidth = 0.5),
            (s.font = c.string);
          const { boxWidth: f, boxHeight: g, itemHeight: _ } = O$(o, d),
            b = t.isHorizontal(),
            y = this._computeTitleHeight();
          (m = b
            ? { x: ZN(r, t.left + u, t.right - i[0]), y: t.top + u + y, line: 0 }
            : { x: t.left + u, y: ZN(r, t.top + y + u, t.bottom - n[0].height), line: 0 }),
            Bz(t.ctx, e.textDirection);
          const v = _ + u;
          t.legendItems.forEach((w, x) => {
            (s.strokeStyle = w.fontColor || h), (s.fillStyle = w.fontColor || h);
            const C = s.measureText(w.text).width,
              k = l.textAlign(w.textAlign || (w.textAlign = o.textAlign)),
              S = f + p + C;
            let E = m.x,
              O = m.y;
            l.setWidth(t.width),
              b
                ? x > 0 &&
                  E + S + u > t.right &&
                  ((O = m.y += v), m.line++, (E = m.x = ZN(r, t.left + u, t.right - i[m.line])))
                : x > 0 &&
                  O + v > t.bottom &&
                  ((E = m.x = E + n[m.line].width + u),
                  m.line++,
                  (O = m.y = ZN(r, t.top + y + u, t.bottom - n[m.line].height))),
              (function (t, e, n) {
                if (isNaN(f) || f <= 0 || isNaN(g) || g < 0) return;
                s.save();
                const i = oV(n.lineWidth, 1);
                if (
                  ((s.fillStyle = oV(n.fillStyle, a)),
                  (s.lineCap = oV(n.lineCap, 'butt')),
                  (s.lineDashOffset = oV(n.lineDashOffset, 0)),
                  (s.lineJoin = oV(n.lineJoin, 'miter')),
                  (s.lineWidth = i),
                  (s.strokeStyle = oV(n.strokeStyle, a)),
                  s.setLineDash(oV(n.lineDash, [])),
                  o.usePointStyle)
                ) {
                  const r = {
                      radius: (f * Math.SQRT2) / 2,
                      pointStyle: n.pointStyle,
                      rotation: n.rotation,
                      borderWidth: i,
                    },
                    o = l.xPlus(t, f / 2);
                  IB(s, r, o, e + p);
                } else {
                  const r = e + Math.max((d - g) / 2, 0),
                    o = l.leftForLtr(t, f),
                    a = GB(n.borderRadius);
                  s.beginPath(),
                    Object.values(a).some((t) => 0 !== t)
                      ? HB(s, { x: o, y: r, w: f, h: g, radius: a })
                      : s.rect(o, r, f, g),
                    s.fill(),
                    0 !== i && s.stroke();
                }
                s.restore();
              })(l.x(E), O, w),
              (E = ((t, e, n, i) => (t === (i ? 'left' : 'right') ? n : 'center' === t ? (e + n) / 2 : e))(
                k,
                E + f + p,
                b ? E + S : t.right,
                e.rtl
              )),
              (function (t, e, n) {
                zB(s, n.text, t, e + _ / 2, c, { strikethrough: n.hidden, textAlign: l.textAlign(n.textAlign) });
              })(l.x(E), O, w),
              b ? (m.x += S + u) : (m.y += v);
          }),
            zz(t.ctx, e.textDirection);
        }
        drawTitle() {
          const t = this,
            e = t.options,
            n = e.title,
            i = KB(n.font),
            s = QB(n.padding);
          if (!n.display) return;
          const r = Vz(e.rtl, t.left, t.width),
            o = t.ctx,
            a = n.position,
            l = s.top + i.size / 2;
          let c,
            h = t.left,
            u = t.width;
          if (this.isHorizontal()) (u = Math.max(...t.lineWidths)), (c = t.top + l), (h = ZN(e.align, h, t.right - u));
          else {
            const n = t.columnSizes.reduce((t, e) => Math.max(t, e.height), 0);
            c = l + ZN(e.align, t.top, t.bottom - n - e.labels.padding - t._computeTitleHeight());
          }
          const d = ZN(a, h, h + u);
          (o.textAlign = r.textAlign(XN(a))),
            (o.textBaseline = 'middle'),
            (o.strokeStyle = n.color),
            (o.fillStyle = n.color),
            (o.font = i.string),
            zB(o, n.text, d, c, i);
        }
        _computeTitleHeight() {
          const t = this.options.title,
            e = KB(t.font),
            n = QB(t.padding);
          return t.display ? e.lineHeight + n.height : 0;
        }
        _getLegendItemAt(t, e) {
          const n = this;
          let i, s, r;
          if (t >= n.left && t <= n.right && e >= n.top && e <= n.bottom)
            for (r = n.legendHitBoxes, i = 0; i < r.length; ++i)
              if (((s = r[i]), t >= s.left && t <= s.left + s.width && e >= s.top && e <= s.top + s.height))
                return n.legendItems[i];
          return null;
        }
        handleEvent(t) {
          const e = this,
            n = e.options;
          if (
            !(function (t, e) {
              return (
                !('mousemove' !== t || (!e.onHover && !e.onLeave)) ||
                !(!e.onClick || ('click' !== t && 'mouseup' !== t))
              );
            })(t.type, n)
          )
            return;
          const i = e._getLegendItemAt(t.x, t.y);
          if ('mousemove' === t.type) {
            const o = e._hoveredItem,
              a = ((r = i), null !== (s = o) && null !== r && s.datasetIndex === r.datasetIndex && s.index === r.index);
            o && !a && lV(n.onLeave, [t, o, e], e), (e._hoveredItem = i), i && !a && lV(n.onHover, [t, i, e], e);
          } else i && lV(n.onClick, [t, i, e], e);
          var s, r;
        }
      }
      var A$ = {
        id: 'legend',
        _element: P$,
        start(t, e, n) {
          const i = (t.legend = new P$({ ctx: t.ctx, options: n, chart: t }));
          Uj.configure(t, i, n), Uj.addBox(t, i);
        },
        stop(t) {
          Uj.removeBox(t, t.legend), delete t.legend;
        },
        beforeUpdate(t, e, n) {
          const i = t.legend;
          Uj.configure(t, i, n), (i.options = n);
        },
        afterUpdate(t) {
          const e = t.legend;
          e.buildLabels(), e.adjustHitBoxes();
        },
        afterEvent(t, e) {
          e.replay || t.legend.handleEvent(e.event);
        },
        defaults: {
          display: !0,
          position: 'top',
          align: 'center',
          fullSize: !0,
          reverse: !1,
          weight: 1e3,
          onClick(t, e, n) {
            const i = e.datasetIndex,
              s = n.chart;
            s.isDatasetVisible(i) ? (s.hide(i), (e.hidden = !0)) : (s.show(i), (e.hidden = !1));
          },
          onHover: null,
          onLeave: null,
          labels: {
            color: (t) => t.chart.options.color,
            boxWidth: 40,
            padding: 10,
            generateLabels(t) {
              const e = t.data.datasets,
                {
                  labels: { usePointStyle: n, pointStyle: i, textAlign: s, color: r },
                } = t.legend.options;
              return t._getSortedDatasetMetas().map((t) => {
                const o = t.controller.getStyle(n ? 0 : void 0),
                  a = QB(o.borderWidth);
                return {
                  text: e[t.index].label,
                  fillStyle: o.backgroundColor,
                  fontColor: r,
                  hidden: !t.visible,
                  lineCap: o.borderCapStyle,
                  lineDash: o.borderDash,
                  lineDashOffset: o.borderDashOffset,
                  lineJoin: o.borderJoinStyle,
                  lineWidth: (a.width + a.height) / 4,
                  strokeStyle: o.borderColor,
                  pointStyle: i || o.pointStyle,
                  rotation: o.rotation,
                  textAlign: s || o.textAlign,
                  borderRadius: 0,
                  datasetIndex: t.index,
                };
              }, this);
            },
          },
          title: { color: (t) => t.chart.options.color, display: !1, position: 'center', text: '' },
        },
        descriptors: {
          _scriptable: (t) => !t.startsWith('on'),
          labels: { _scriptable: (t) => !['generateLabels', 'filter', 'sort'].includes(t) },
        },
      };
      class T$ extends lH {
        constructor(t) {
          super(),
            (this.chart = t.chart),
            (this.options = t.options),
            (this.ctx = t.ctx),
            (this._padding = void 0),
            (this.top = void 0),
            (this.bottom = void 0),
            (this.left = void 0),
            (this.right = void 0),
            (this.width = void 0),
            (this.height = void 0),
            (this.position = void 0),
            (this.weight = void 0),
            (this.fullSize = void 0);
        }
        update(t, e) {
          const n = this,
            i = n.options;
          if (((n.left = 0), (n.top = 0), !i.display)) return void (n.width = n.height = n.right = n.bottom = 0);
          (n.width = n.right = t), (n.height = n.bottom = e);
          const s = nV(i.text) ? i.text.length : 1;
          n._padding = QB(i.padding);
          const r = s * KB(i.font).lineHeight + n._padding.height;
          n.isHorizontal() ? (n.height = r) : (n.width = r);
        }
        isHorizontal() {
          const t = this.options.position;
          return 'top' === t || 'bottom' === t;
        }
        _drawArgs(t) {
          const { top: e, left: n, bottom: i, right: s, options: r } = this,
            o = r.align;
          let a,
            l,
            c,
            h = 0;
          return (
            this.isHorizontal()
              ? ((l = ZN(o, n, s)), (c = e + t), (a = s - n))
              : ('left' === r.position
                  ? ((l = n + t), (c = ZN(o, i, e)), (h = -0.5 * xV))
                  : ((l = s - t), (c = ZN(o, e, i)), (h = 0.5 * xV)),
                (a = i - e)),
            { titleX: l, titleY: c, maxWidth: a, rotation: h }
          );
        }
        draw() {
          const t = this,
            e = t.ctx,
            n = t.options;
          if (!n.display) return;
          const i = KB(n.font),
            s = i.lineHeight / 2 + t._padding.top,
            { titleX: r, titleY: o, maxWidth: a, rotation: l } = t._drawArgs(s);
          zB(e, n.text, 0, 0, i, {
            color: n.color,
            maxWidth: a,
            rotation: l,
            textAlign: XN(n.align),
            textBaseline: 'middle',
            translation: [r, o],
          });
        }
      }
      var D$ = {
        id: 'title',
        _element: T$,
        start(t, e, n) {
          !(function (t, e) {
            const n = new T$({ ctx: t.ctx, options: e, chart: t });
            Uj.configure(t, n, e), Uj.addBox(t, n), (t.titleBlock = n);
          })(t, n);
        },
        stop(t) {
          Uj.removeBox(t, t.titleBlock), delete t.titleBlock;
        },
        beforeUpdate(t, e, n) {
          const i = t.titleBlock;
          Uj.configure(t, i, n), (i.options = n);
        },
        defaults: {
          align: 'center',
          display: !1,
          font: { weight: 'bold' },
          fullSize: !0,
          padding: 10,
          position: 'top',
          text: '',
          weight: 2e3,
        },
        defaultRoutes: { color: 'color' },
        descriptors: { _scriptable: !0, _indexable: !1 },
      };
      new WeakMap();
      const M$ = {
        average(t) {
          if (!t.length) return !1;
          let e,
            n,
            i = 0,
            s = 0,
            r = 0;
          for (e = 0, n = t.length; e < n; ++e) {
            const n = t[e].element;
            if (n && n.hasValue()) {
              const t = n.tooltipPosition();
              (i += t.x), (s += t.y), ++r;
            }
          }
          return { x: i / r, y: s / r };
        },
        nearest(t, e) {
          if (!t.length) return !1;
          let n,
            i,
            s,
            r = e.x,
            o = e.y,
            a = Number.POSITIVE_INFINITY;
          for (n = 0, i = t.length; n < i; ++n) {
            const i = t[n].element;
            if (i && i.hasValue()) {
              const t = BV(e, i.getCenterPoint());
              t < a && ((a = t), (s = i));
            }
          }
          if (s) {
            const t = s.tooltipPosition();
            (r = t.x), (o = t.y);
          }
          return { x: r, y: o };
        },
      };
      function R$(t, e) {
        return e && (nV(e) ? Array.prototype.push.apply(t, e) : t.push(e)), t;
      }
      function I$(t) {
        return ('string' == typeof t || t instanceof String) && t.indexOf('\n') > -1 ? t.split('\n') : t;
      }
      function L$(t, e) {
        const { element: n, datasetIndex: i, index: s } = e,
          r = t.getDatasetMeta(i).controller,
          { label: o, value: a } = r.getLabelAndValue(s);
        return {
          chart: t,
          label: o,
          parsed: r.getParsed(s),
          raw: t.data.datasets[i].data[s],
          formattedValue: a,
          dataset: r.getDataset(),
          dataIndex: s,
          datasetIndex: i,
          element: n,
        };
      }
      function F$(t, e) {
        const n = t._chart.ctx,
          { body: i, footer: s, title: r } = t,
          { boxWidth: o, boxHeight: a } = e,
          l = KB(e.bodyFont),
          c = KB(e.titleFont),
          h = KB(e.footerFont),
          u = r.length,
          d = s.length,
          p = i.length,
          m = QB(e.padding);
        let f = m.height,
          g = 0,
          _ = i.reduce((t, e) => t + e.before.length + e.lines.length + e.after.length, 0);
        (_ += t.beforeBody.length + t.afterBody.length),
          u && (f += u * c.lineHeight + (u - 1) * e.titleSpacing + e.titleMarginBottom),
          _ &&
            (f +=
              p * (e.displayColors ? Math.max(a, l.lineHeight) : l.lineHeight) +
              (_ - p) * l.lineHeight +
              (_ - 1) * e.bodySpacing),
          d && (f += e.footerMarginTop + d * h.lineHeight + (d - 1) * e.footerSpacing);
        let b = 0;
        const y = function (t) {
          g = Math.max(g, n.measureText(t).width + b);
        };
        return (
          n.save(),
          (n.font = c.string),
          cV(t.title, y),
          (n.font = l.string),
          cV(t.beforeBody.concat(t.afterBody), y),
          (b = e.displayColors ? o + 2 : 0),
          cV(i, (t) => {
            cV(t.before, y), cV(t.lines, y), cV(t.after, y);
          }),
          (b = 0),
          (n.font = h.string),
          cV(t.footer, y),
          n.restore(),
          (g += m.width),
          { width: g, height: f }
        );
      }
      function N$(t, e, n, i) {
        const { x: s, width: r } = n,
          {
            width: o,
            chartArea: { left: a, right: l },
          } = t;
        let c = 'center';
        return (
          'center' === i
            ? (c = s <= (a + l) / 2 ? 'left' : 'right')
            : s <= r / 2
            ? (c = 'left')
            : s >= o - r / 2 && (c = 'right'),
          (function (t, e, n, i) {
            const { x: s, width: r } = i,
              o = n.caretSize + n.caretPadding;
            return ('left' === t && s + r + o > e.width) || ('right' === t && s - r - o < 0) || void 0;
          })(c, t, e, n) && (c = 'center'),
          c
        );
      }
      function V$(t, e, n) {
        const i =
          e.yAlign ||
          (function (t, e) {
            const { y: n, height: i } = e;
            return n < i / 2 ? 'top' : n > t.height - i / 2 ? 'bottom' : 'center';
          })(t, n);
        return { xAlign: e.xAlign || N$(t, e, n, i), yAlign: i };
      }
      function B$(t, e, n, i) {
        const { caretSize: s, caretPadding: r, cornerRadius: o } = t,
          { xAlign: a, yAlign: l } = n,
          c = s + r,
          h = o + r;
        let u = (function (t, e) {
          let { x: n, width: i } = t;
          return 'right' === e ? (n -= i) : 'center' === e && (n -= i / 2), n;
        })(e, a);
        const d = (function (t, e, n) {
          let { y: i, height: s } = t;
          return 'top' === e ? (i += n) : (i -= 'bottom' === e ? s + n : s / 2), i;
        })(e, l, c);
        return (
          'center' === l
            ? 'left' === a
              ? (u += c)
              : 'right' === a && (u -= c)
            : 'left' === a
            ? (u -= h)
            : 'right' === a && (u += h),
          { x: $V(u, 0, i.width - e.width), y: $V(d, 0, i.height - e.height) }
        );
      }
      function z$(t, e, n) {
        const i = QB(n.padding);
        return 'center' === e ? t.x + t.width / 2 : 'right' === e ? t.x + t.width - i.right : t.x + i.left;
      }
      function j$(t) {
        return R$([], I$(t));
      }
      function H$(t, e) {
        const n = e && e.dataset && e.dataset.tooltip && e.dataset.tooltip.callbacks;
        return n ? t.override(n) : t;
      }
      let $$ = (() => {
        class t extends lH {
          constructor(t) {
            super(),
              (this.opacity = 0),
              (this._active = []),
              (this._chart = t._chart),
              (this._eventPosition = void 0),
              (this._size = void 0),
              (this._cachedAnimations = void 0),
              (this._tooltipItems = []),
              (this.$animations = void 0),
              (this.$context = void 0),
              (this.options = t.options),
              (this.dataPoints = void 0),
              (this.title = void 0),
              (this.beforeBody = void 0),
              (this.body = void 0),
              (this.afterBody = void 0),
              (this.footer = void 0),
              (this.xAlign = void 0),
              (this.yAlign = void 0),
              (this.x = void 0),
              (this.y = void 0),
              (this.height = void 0),
              (this.width = void 0),
              (this.caretX = void 0),
              (this.caretY = void 0),
              (this.labelColors = void 0),
              (this.labelPointStyles = void 0),
              (this.labelTextColors = void 0);
          }
          initialize(t) {
            (this.options = t), (this._cachedAnimations = void 0), (this.$context = void 0);
          }
          _resolveAnimations() {
            const t = this,
              e = t._cachedAnimations;
            if (e) return e;
            const n = t._chart,
              i = t.options.setContext(t.getContext()),
              s = i.enabled && n.options.animation && i.animations,
              r = new Zz(t._chart, s);
            return s._cacheable && (t._cachedAnimations = Object.freeze(r)), r;
          }
          getContext() {
            const t = this;
            return (
              t.$context ||
              (t.$context =
                ((e = t._chart.getContext()),
                (n = t),
                (i = t._tooltipItems),
                Object.assign(Object.create(e), { tooltip: n, tooltipItems: i, type: 'tooltip' })))
            );
            var e, n, i;
          }
          getTitle(t, e) {
            const n = this,
              { callbacks: i } = e,
              s = i.beforeTitle.apply(n, [t]),
              r = i.title.apply(n, [t]),
              o = i.afterTitle.apply(n, [t]);
            let a = [];
            return (a = R$(a, I$(s))), (a = R$(a, I$(r))), (a = R$(a, I$(o))), a;
          }
          getBeforeBody(t, e) {
            return j$(e.callbacks.beforeBody.apply(this, [t]));
          }
          getBody(t, e) {
            const n = this,
              { callbacks: i } = e,
              s = [];
            return (
              cV(t, (t) => {
                const e = { before: [], lines: [], after: [] },
                  r = H$(i, t);
                R$(e.before, I$(r.beforeLabel.call(n, t))),
                  R$(e.lines, r.label.call(n, t)),
                  R$(e.after, I$(r.afterLabel.call(n, t))),
                  s.push(e);
              }),
              s
            );
          }
          getAfterBody(t, e) {
            return j$(e.callbacks.afterBody.apply(this, [t]));
          }
          getFooter(t, e) {
            const n = this,
              { callbacks: i } = e,
              s = i.beforeFooter.apply(n, [t]),
              r = i.footer.apply(n, [t]),
              o = i.afterFooter.apply(n, [t]);
            let a = [];
            return (a = R$(a, I$(s))), (a = R$(a, I$(r))), (a = R$(a, I$(o))), a;
          }
          _createItems(t) {
            const e = this,
              n = e._active,
              i = e._chart.data,
              s = [],
              r = [],
              o = [];
            let a,
              l,
              c = [];
            for (a = 0, l = n.length; a < l; ++a) c.push(L$(e._chart, n[a]));
            return (
              t.filter && (c = c.filter((e, n, s) => t.filter(e, n, s, i))),
              t.itemSort && (c = c.sort((e, n) => t.itemSort(e, n, i))),
              cV(c, (n) => {
                const i = H$(t.callbacks, n);
                s.push(i.labelColor.call(e, n)),
                  r.push(i.labelPointStyle.call(e, n)),
                  o.push(i.labelTextColor.call(e, n));
              }),
              (e.labelColors = s),
              (e.labelPointStyles = r),
              (e.labelTextColors = o),
              (e.dataPoints = c),
              c
            );
          }
          update(t, e) {
            const n = this,
              i = n.options.setContext(n.getContext()),
              s = n._active;
            let r,
              o = [];
            if (s.length) {
              const t = M$[i.position].call(n, s, n._eventPosition);
              (o = n._createItems(i)),
                (n.title = n.getTitle(o, i)),
                (n.beforeBody = n.getBeforeBody(o, i)),
                (n.body = n.getBody(o, i)),
                (n.afterBody = n.getAfterBody(o, i)),
                (n.footer = n.getFooter(o, i));
              const e = (n._size = F$(n, i)),
                a = Object.assign({}, t, e),
                l = V$(n._chart, i, a),
                c = B$(i, a, l, n._chart);
              (n.xAlign = l.xAlign),
                (n.yAlign = l.yAlign),
                (r = { opacity: 1, x: c.x, y: c.y, width: e.width, height: e.height, caretX: t.x, caretY: t.y });
            } else 0 !== n.opacity && (r = { opacity: 0 });
            (n._tooltipItems = o),
              (n.$context = void 0),
              r && n._resolveAnimations().update(n, r),
              t && i.external && i.external.call(n, { chart: n._chart, tooltip: n, replay: e });
          }
          drawCaret(t, e, n, i) {
            const s = this.getCaretPosition(t, n, i);
            e.lineTo(s.x1, s.y1), e.lineTo(s.x2, s.y2), e.lineTo(s.x3, s.y3);
          }
          getCaretPosition(t, e, n) {
            const { xAlign: i, yAlign: s } = this,
              { cornerRadius: r, caretSize: o } = n,
              { x: a, y: l } = t,
              { width: c, height: h } = e;
            let u, d, p, m, f, g;
            return (
              'center' === s
                ? ((f = l + h / 2),
                  'left' === i
                    ? ((u = a), (d = u - o), (m = f + o), (g = f - o))
                    : ((u = a + c), (d = u + o), (m = f - o), (g = f + o)),
                  (p = u))
                : ((d = 'left' === i ? a + r + o : 'right' === i ? a + c - r - o : this.caretX),
                  'top' === s
                    ? ((m = l), (f = m - o), (u = d - o), (p = d + o))
                    : ((m = l + h), (f = m + o), (u = d + o), (p = d - o)),
                  (g = m)),
              { x1: u, x2: d, x3: p, y1: m, y2: f, y3: g }
            );
          }
          drawTitle(t, e, n) {
            const i = this,
              s = i.title,
              r = s.length;
            let o, a, l;
            if (r) {
              const c = Vz(n.rtl, i.x, i.width);
              for (
                t.x = z$(i, n.titleAlign, n),
                  e.textAlign = c.textAlign(n.titleAlign),
                  e.textBaseline = 'middle',
                  o = KB(n.titleFont),
                  a = n.titleSpacing,
                  e.fillStyle = n.titleColor,
                  e.font = o.string,
                  l = 0;
                l < r;
                ++l
              )
                e.fillText(s[l], c.x(t.x), t.y + o.lineHeight / 2),
                  (t.y += o.lineHeight + a),
                  l + 1 === r && (t.y += n.titleMarginBottom - a);
            }
          }
          _drawColorBox(t, e, n, i, s) {
            const r = this,
              o = r.labelColors[n],
              a = r.labelPointStyles[n],
              { boxHeight: l, boxWidth: c } = s,
              h = KB(s.bodyFont),
              u = z$(r, 'left', s),
              d = i.x(u),
              p = e.y + (l < h.lineHeight ? (h.lineHeight - l) / 2 : 0);
            if (s.usePointStyle) {
              const e = { radius: Math.min(c, l) / 2, pointStyle: a.pointStyle, rotation: a.rotation, borderWidth: 1 },
                n = i.leftForLtr(d, c) + c / 2,
                r = p + l / 2;
              (t.strokeStyle = s.multiKeyBackground),
                (t.fillStyle = s.multiKeyBackground),
                IB(t, e, n, r),
                (t.strokeStyle = o.borderColor),
                (t.fillStyle = o.backgroundColor),
                IB(t, e, n, r);
            } else {
              (t.lineWidth = o.borderWidth || 1),
                (t.strokeStyle = o.borderColor),
                t.setLineDash(o.borderDash || []),
                (t.lineDashOffset = o.borderDashOffset || 0);
              const e = i.leftForLtr(d, c),
                n = i.leftForLtr(i.xPlus(d, 1), c - 2),
                r = GB(o.borderRadius);
              Object.values(r).some((t) => 0 !== t)
                ? (t.beginPath(),
                  (t.fillStyle = s.multiKeyBackground),
                  HB(t, { x: e, y: p, w: c, h: l, radius: r }),
                  t.fill(),
                  t.stroke(),
                  (t.fillStyle = o.backgroundColor),
                  t.beginPath(),
                  HB(t, { x: n, y: p + 1, w: c - 2, h: l - 2, radius: r }),
                  t.fill())
                : ((t.fillStyle = s.multiKeyBackground),
                  t.fillRect(e, p, c, l),
                  t.strokeRect(e, p, c, l),
                  (t.fillStyle = o.backgroundColor),
                  t.fillRect(n, p + 1, c - 2, l - 2));
            }
            t.fillStyle = r.labelTextColors[n];
          }
          drawBody(t, e, n) {
            const i = this,
              { body: s } = i,
              { bodySpacing: r, bodyAlign: o, displayColors: a, boxHeight: l, boxWidth: c } = n,
              h = KB(n.bodyFont);
            let u = h.lineHeight,
              d = 0;
            const p = Vz(n.rtl, i.x, i.width),
              m = function (n) {
                e.fillText(n, p.x(t.x + d), t.y + u / 2), (t.y += u + r);
              },
              f = p.textAlign(o);
            let g, _, b, y, v, w, x;
            for (
              e.textAlign = o,
                e.textBaseline = 'middle',
                e.font = h.string,
                t.x = z$(i, f, n),
                e.fillStyle = n.bodyColor,
                cV(i.beforeBody, m),
                d = a && 'right' !== f ? ('center' === o ? c / 2 + 1 : c + 2) : 0,
                y = 0,
                w = s.length;
              y < w;
              ++y
            ) {
              for (
                g = s[y],
                  _ = i.labelTextColors[y],
                  e.fillStyle = _,
                  cV(g.before, m),
                  b = g.lines,
                  a && b.length && (i._drawColorBox(e, t, y, p, n), (u = Math.max(h.lineHeight, l))),
                  v = 0,
                  x = b.length;
                v < x;
                ++v
              )
                m(b[v]), (u = h.lineHeight);
              cV(g.after, m);
            }
            (d = 0), (u = h.lineHeight), cV(i.afterBody, m), (t.y -= r);
          }
          drawFooter(t, e, n) {
            const i = this,
              s = i.footer,
              r = s.length;
            let o, a;
            if (r) {
              const l = Vz(n.rtl, i.x, i.width);
              for (
                t.x = z$(i, n.footerAlign, n),
                  t.y += n.footerMarginTop,
                  e.textAlign = l.textAlign(n.footerAlign),
                  e.textBaseline = 'middle',
                  o = KB(n.footerFont),
                  e.fillStyle = n.footerColor,
                  e.font = o.string,
                  a = 0;
                a < r;
                ++a
              )
                e.fillText(s[a], l.x(t.x), t.y + o.lineHeight / 2), (t.y += o.lineHeight + n.footerSpacing);
            }
          }
          drawBackground(t, e, n, i) {
            const { xAlign: s, yAlign: r } = this,
              { x: o, y: a } = t,
              { width: l, height: c } = n,
              h = i.cornerRadius;
            (e.fillStyle = i.backgroundColor),
              (e.strokeStyle = i.borderColor),
              (e.lineWidth = i.borderWidth),
              e.beginPath(),
              e.moveTo(o + h, a),
              'top' === r && this.drawCaret(t, e, n, i),
              e.lineTo(o + l - h, a),
              e.quadraticCurveTo(o + l, a, o + l, a + h),
              'center' === r && 'right' === s && this.drawCaret(t, e, n, i),
              e.lineTo(o + l, a + c - h),
              e.quadraticCurveTo(o + l, a + c, o + l - h, a + c),
              'bottom' === r && this.drawCaret(t, e, n, i),
              e.lineTo(o + h, a + c),
              e.quadraticCurveTo(o, a + c, o, a + c - h),
              'center' === r && 'left' === s && this.drawCaret(t, e, n, i),
              e.lineTo(o, a + h),
              e.quadraticCurveTo(o, a, o + h, a),
              e.closePath(),
              e.fill(),
              i.borderWidth > 0 && e.stroke();
          }
          _updateAnimationTarget(t) {
            const e = this,
              n = e._chart,
              i = e.$animations,
              s = i && i.x,
              r = i && i.y;
            if (s || r) {
              const i = M$[t.position].call(e, e._active, e._eventPosition);
              if (!i) return;
              const o = (e._size = F$(e, t)),
                a = Object.assign({}, i, e._size),
                l = V$(n, t, a),
                c = B$(t, a, l, n);
              (s._to === c.x && r._to === c.y) ||
                ((e.xAlign = l.xAlign),
                (e.yAlign = l.yAlign),
                (e.width = o.width),
                (e.height = o.height),
                (e.caretX = i.x),
                (e.caretY = i.y),
                e._resolveAnimations().update(e, c));
            }
          }
          draw(t) {
            const e = this,
              n = e.options.setContext(e.getContext());
            let i = e.opacity;
            if (!i) return;
            e._updateAnimationTarget(n);
            const s = { width: e.width, height: e.height },
              r = { x: e.x, y: e.y };
            i = Math.abs(i) < 0.001 ? 0 : i;
            const o = QB(n.padding);
            n.enabled &&
              (e.title.length || e.beforeBody.length || e.body.length || e.afterBody.length || e.footer.length) &&
              (t.save(),
              (t.globalAlpha = i),
              e.drawBackground(r, t, s, n),
              Bz(t, n.textDirection),
              (r.y += o.top),
              e.drawTitle(r, t, n),
              e.drawBody(r, t, n),
              e.drawFooter(r, t, n),
              zz(t, n.textDirection),
              t.restore());
          }
          getActiveElements() {
            return this._active || [];
          }
          setActiveElements(t, e) {
            const n = this,
              i = n._active,
              s = t.map(({ datasetIndex: t, index: e }) => {
                const i = n._chart.getDatasetMeta(t);
                if (!i) throw new Error('Cannot find a dataset at index ' + t);
                return { datasetIndex: t, element: i.data[e], index: e };
              }),
              r = !hV(i, s),
              o = n._positionChanged(s, e);
            (r || o) && ((n._active = s), (n._eventPosition = e), n.update(!0));
          }
          handleEvent(t, e) {
            const n = this,
              i = n.options,
              s = n._active || [];
            let r = !1,
              o = [];
            'mouseout' !== t.type &&
              ((o = n._chart.getElementsAtEventForMode(t, i.mode, i, e)), i.reverse && o.reverse());
            const a = n._positionChanged(o, t);
            return (
              (r = e || !hV(o, s) || a),
              r &&
                ((n._active = o),
                (i.enabled || i.external) && ((n._eventPosition = { x: t.x, y: t.y }), n.update(!0, e))),
              r
            );
          }
          _positionChanged(t, e) {
            const { caretX: n, caretY: i, options: s } = this,
              r = M$[s.position].call(this, t, e);
            return !1 !== r && (n !== r.x || i !== r.y);
          }
        }
        return (t.positioners = M$), t;
      })();
      var q$ = {
        id: 'tooltip',
        _element: $$,
        positioners: M$,
        afterInit(t, e, n) {
          n && (t.tooltip = new $$({ _chart: t, options: n }));
        },
        beforeUpdate(t, e, n) {
          t.tooltip && t.tooltip.initialize(n);
        },
        reset(t, e, n) {
          t.tooltip && t.tooltip.initialize(n);
        },
        afterDraw(t) {
          const e = t.tooltip,
            n = { tooltip: e };
          !1 !== t.notifyPlugins('beforeTooltipDraw', n) &&
            (e && e.draw(t.ctx), t.notifyPlugins('afterTooltipDraw', n));
        },
        afterEvent(t, e) {
          t.tooltip && t.tooltip.handleEvent(e.event, e.replay) && (e.changed = !0);
        },
        defaults: {
          enabled: !0,
          external: null,
          position: 'average',
          backgroundColor: 'rgba(0,0,0,0.8)',
          titleColor: '#fff',
          titleFont: { weight: 'bold' },
          titleSpacing: 2,
          titleMarginBottom: 6,
          titleAlign: 'left',
          bodyColor: '#fff',
          bodySpacing: 2,
          bodyFont: {},
          bodyAlign: 'left',
          footerColor: '#fff',
          footerSpacing: 2,
          footerMarginTop: 6,
          footerFont: { weight: 'bold' },
          footerAlign: 'left',
          padding: 6,
          caretPadding: 2,
          caretSize: 5,
          cornerRadius: 6,
          boxHeight: (t, e) => e.bodyFont.size,
          boxWidth: (t, e) => e.bodyFont.size,
          multiKeyBackground: '#fff',
          displayColors: !0,
          borderColor: 'rgba(0,0,0,0)',
          borderWidth: 0,
          animation: { duration: 400, easing: 'easeOutQuart' },
          animations: {
            numbers: { type: 'number', properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'] },
            opacity: { easing: 'linear', duration: 200 },
          },
          callbacks: {
            beforeTitle: JN,
            title(t) {
              if (t.length > 0) {
                const e = t[0],
                  n = e.chart.data.labels,
                  i = n ? n.length : 0;
                if (this && this.options && 'dataset' === this.options.mode) return e.dataset.label || '';
                if (e.label) return e.label;
                if (i > 0 && e.dataIndex < i) return n[e.dataIndex];
              }
              return '';
            },
            afterTitle: JN,
            beforeBody: JN,
            beforeLabel: JN,
            label(t) {
              if (this && this.options && 'dataset' === this.options.mode)
                return t.label + ': ' + t.formattedValue || t.formattedValue;
              let e = t.dataset.label || '';
              e && (e += ': ');
              const n = t.formattedValue;
              return eV(n) || (e += n), e;
            },
            labelColor(t) {
              const e = t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);
              return {
                borderColor: e.borderColor,
                backgroundColor: e.backgroundColor,
                borderWidth: e.borderWidth,
                borderDash: e.borderDash,
                borderDashOffset: e.borderDashOffset,
                borderRadius: 0,
              };
            },
            labelTextColor() {
              return this.options.bodyColor;
            },
            labelPointStyle(t) {
              const e = t.chart.getDatasetMeta(t.datasetIndex).controller.getStyle(t.dataIndex);
              return { pointStyle: e.pointStyle, rotation: e.rotation };
            },
            afterLabel: JN,
            afterBody: JN,
            beforeFooter: JN,
            footer: JN,
            afterFooter: JN,
          },
        },
        defaultRoutes: { bodyFont: 'font', footerFont: 'font', titleFont: 'font' },
        descriptors: {
          _scriptable: (t) => 'filter' !== t && 'itemSort' !== t && 'external' !== t,
          _indexable: !1,
          callbacks: { _scriptable: !1, _indexable: !1 },
          animation: { _fallback: !1 },
          animations: { _fallback: 'animation' },
        },
        additionalOptionScopes: ['interaction'],
      };
      class W$ extends bH {
        constructor(t) {
          super(t), (this._startValue = void 0), (this._valueRange = 0);
        }
        parse(t, e) {
          if (eV(t)) return null;
          const n = this.getLabels();
          return ((t, e) => (null === t ? null : $V(Math.round(t), 0, e)))(
            (e =
              isFinite(e) && n[e] === t
                ? e
                : (function (t, e, n) {
                    const i = t.indexOf(e);
                    return -1 === i
                      ? ((t, e, n) => ('string' == typeof e ? t.push(e) - 1 : isNaN(e) ? null : n))(t, e, n)
                      : i !== t.lastIndexOf(e)
                      ? n
                      : i;
                  })(n, t, oV(e, t))),
            n.length - 1
          );
        }
        determineDataLimits() {
          const t = this,
            { minDefined: e, maxDefined: n } = t.getUserBounds();
          let { min: i, max: s } = t.getMinMax(!0);
          'ticks' === t.options.bounds && (e || (i = 0), n || (s = t.getLabels().length - 1)), (t.min = i), (t.max = s);
        }
        buildTicks() {
          const t = this,
            e = t.min,
            n = t.max,
            i = t.options.offset,
            s = [];
          let r = t.getLabels();
          (r = 0 === e && n === r.length - 1 ? r : r.slice(e, n + 1)),
            (t._valueRange = Math.max(r.length - (i ? 0 : 1), 1)),
            (t._startValue = t.min - (i ? 0.5 : 0));
          for (let o = e; o <= n; o++) s.push({ value: o });
          return s;
        }
        getLabelForValue(t) {
          const e = this.getLabels();
          return t >= 0 && t < e.length ? e[t] : t;
        }
        configure() {
          const t = this;
          super.configure(), t.isHorizontal() || (t._reversePixels = !t._reversePixels);
        }
        getPixelForValue(t) {
          const e = this;
          return (
            'number' != typeof t && (t = e.parse(t)),
            null === t ? NaN : e.getPixelForDecimal((t - e._startValue) / e._valueRange)
          );
        }
        getPixelForTick(t) {
          const e = this.ticks;
          return t < 0 || t > e.length - 1 ? null : this.getPixelForValue(e[t].value);
        }
        getValueForPixel(t) {
          const e = this;
          return Math.round(e._startValue + e.getDecimalForPixel(t) * e._valueRange);
        }
        getBasePixel() {
          return this.bottom;
        }
      }
      function U$(t, e, { horizontal: n, minRotation: i }) {
        const s = FV(i),
          r = (n ? Math.sin(s) : Math.cos(s)) || 0.001;
        return Math.min(e / r, 0.75 * e * ('' + t).length);
      }
      (W$.id = 'category'), (W$.defaults = { ticks: { callback: W$.prototype.getLabelForValue } });
      class Y$ extends bH {
        constructor(t) {
          super(t),
            (this.start = void 0),
            (this.end = void 0),
            (this._startValue = void 0),
            (this._endValue = void 0),
            (this._valueRange = 0);
        }
        parse(t, e) {
          return eV(t) || (('number' == typeof t || t instanceof Number) && !isFinite(+t)) ? null : +t;
        }
        handleTickRangeOptions() {
          const t = this,
            { beginAtZero: e } = t.options,
            { minDefined: n, maxDefined: i } = t.getUserBounds();
          let { min: s, max: r } = t;
          const o = (t) => (s = n ? s : t),
            a = (t) => (r = i ? r : t);
          if (e) {
            const t = DV(s),
              e = DV(r);
            t < 0 && e < 0 ? a(0) : t > 0 && e > 0 && o(0);
          }
          if (s === r) {
            let t = 1;
            (r >= Number.MAX_SAFE_INTEGER || s <= Number.MIN_SAFE_INTEGER) && (t = Math.abs(0.05 * r)),
              a(r + t),
              e || o(s - t);
          }
          (t.min = s), (t.max = r);
        }
        getTickLimit() {
          const t = this,
            e = t.options.ticks;
          let n,
            { maxTicksLimit: i, stepSize: s } = e;
          return (
            s ? (n = Math.ceil(t.max / s) - Math.floor(t.min / s) + 1) : ((n = t.computeTickLimit()), (i = i || 11)),
            i && (n = Math.min(i, n)),
            n
          );
        }
        computeTickLimit() {
          return Number.POSITIVE_INFINITY;
        }
        buildTicks() {
          const t = this,
            e = t.options,
            n = e.ticks;
          let i = t.getTickLimit();
          i = Math.max(2, i);
          const s = (function (t, e) {
            const n = [],
              {
                bounds: i,
                step: s,
                min: r,
                max: o,
                precision: a,
                count: l,
                maxTicks: c,
                maxDigits: h,
                includeBounds: u,
              } = t,
              d = s || 1,
              p = c - 1,
              { min: m, max: f } = e,
              g = !eV(r),
              _ = !eV(o),
              b = !eV(l),
              y = (f - m) / (h + 1);
            let v,
              w,
              x,
              C,
              k = MV((f - m) / p / d) * d;
            if (k < 1e-14 && !g && !_) return [{ value: m }, { value: f }];
            (C = Math.ceil(f / k) - Math.floor(m / k)),
              C > p && (k = MV((C * k) / p / d) * d),
              eV(a) || ((v = Math.pow(10, a)), (k = Math.ceil(k * v) / v)),
              'ticks' === i ? ((w = Math.floor(m / k) * k), (x = Math.ceil(f / k) * k)) : ((w = m), (x = f)),
              g &&
              _ &&
              s &&
              (function (t, e) {
                const n = Math.round(t);
                return n - e <= t && n + e >= t;
              })((o - r) / s, k / 1e3)
                ? ((C = Math.round(Math.min((o - r) / k, c))), (k = (o - r) / C), (w = r), (x = o))
                : b
                ? ((w = g ? r : w), (x = _ ? o : x), (C = l - 1), (k = (x - w) / C))
                : ((C = (x - w) / k), (C = IV(C, Math.round(C), k / 1e3) ? Math.round(C) : Math.ceil(C)));
            const S = Math.max(VV(k), VV(w));
            (v = Math.pow(10, eV(a) ? S : a)), (w = Math.round(w * v) / v), (x = Math.round(x * v) / v);
            let E = 0;
            for (
              g &&
              (u && w !== r
                ? (n.push({ value: r }), w < r && E++, IV(Math.round((w + E * k) * v) / v, r, U$(r, y, t)) && E++)
                : w < r && E++);
              E < C;
              ++E
            )
              n.push({ value: Math.round((w + E * k) * v) / v });
            return (
              _ && u && x !== o
                ? IV(n[n.length - 1].value, o, U$(o, y, t))
                  ? (n[n.length - 1].value = o)
                  : n.push({ value: o })
                : (_ && x !== o) || n.push({ value: x }),
              n
            );
          })(
            {
              maxTicks: i,
              bounds: e.bounds,
              min: e.min,
              max: e.max,
              precision: n.precision,
              step: n.stepSize,
              count: n.count,
              maxDigits: t._maxDigits(),
              horizontal: t.isHorizontal(),
              minRotation: n.minRotation || 0,
              includeBounds: !1 !== n.includeBounds,
            },
            t._range || t
          );
          return (
            'ticks' === e.bounds && LV(s, t, 'value'),
            e.reverse ? (s.reverse(), (t.start = t.max), (t.end = t.min)) : ((t.start = t.min), (t.end = t.max)),
            s
          );
        }
        configure() {
          const t = this,
            e = t.ticks;
          let n = t.min,
            i = t.max;
          if ((super.configure(), t.options.offset && e.length)) {
            const t = (i - n) / Math.max(e.length - 1, 1) / 2;
            (n -= t), (i += t);
          }
          (t._startValue = n), (t._endValue = i), (t._valueRange = i - n);
        }
        getLabelForValue(t) {
          return Nz(t, this.chart.options.locale);
        }
      }
      class G$ extends Y$ {
        determineDataLimits() {
          const t = this,
            { min: e, max: n } = t.getMinMax(!0);
          (t.min = sV(e) ? e : 0), (t.max = sV(n) ? n : 1), t.handleTickRangeOptions();
        }
        computeTickLimit() {
          const t = this,
            e = t.isHorizontal(),
            n = e ? t.width : t.height,
            i = FV(t.options.ticks.minRotation),
            s = (e ? Math.sin(i) : Math.cos(i)) || 0.001,
            r = t._resolveTickFontOptions(0);
          return Math.ceil(n / Math.min(40, r.lineHeight / s));
        }
        getPixelForValue(t) {
          return null === t ? NaN : this.getPixelForDecimal((t - this._startValue) / this._valueRange);
        }
        getValueForPixel(t) {
          return this._startValue + this.getDecimalForPixel(t) * this._valueRange;
        }
      }
      function Q$(t) {
        return 1 == t / Math.pow(10, Math.floor(TV(t)));
      }
      (G$.id = 'linear'), (G$.defaults = { ticks: { callback: hH.formatters.numeric } });
      class K$ extends bH {
        constructor(t) {
          super(t), (this.start = void 0), (this.end = void 0), (this._startValue = void 0), (this._valueRange = 0);
        }
        parse(t, e) {
          const n = Y$.prototype.parse.apply(this, [t, e]);
          if (0 !== n) return sV(n) && n > 0 ? n : null;
          this._zero = !0;
        }
        determineDataLimits() {
          const t = this,
            { min: e, max: n } = t.getMinMax(!0);
          (t.min = sV(e) ? Math.max(0, e) : null),
            (t.max = sV(n) ? Math.max(0, n) : null),
            t.options.beginAtZero && (t._zero = !0),
            t.handleTickRangeOptions();
        }
        handleTickRangeOptions() {
          const t = this,
            { minDefined: e, maxDefined: n } = t.getUserBounds();
          let i = t.min,
            s = t.max;
          const r = (t) => (i = e ? i : t),
            o = (t) => (s = n ? s : t),
            a = (t, e) => Math.pow(10, Math.floor(TV(t)) + e);
          i === s && (i <= 0 ? (r(1), o(10)) : (r(a(i, -1)), o(a(s, 1)))),
            i <= 0 && r(a(s, -1)),
            s <= 0 && o(a(i, 1)),
            t._zero && t.min !== t._suggestedMin && i === a(t.min, 0) && r(a(i, -1)),
            (t.min = i),
            (t.max = s);
        }
        buildTicks() {
          const t = this,
            e = t.options,
            n = (function (t, e) {
              const n = Math.floor(TV(e.max)),
                i = Math.ceil(e.max / Math.pow(10, n)),
                s = [];
              let r = rV(t.min, Math.pow(10, Math.floor(TV(e.min)))),
                o = Math.floor(TV(r)),
                a = Math.floor(r / Math.pow(10, o)),
                l = o < 0 ? Math.pow(10, Math.abs(o)) : 1;
              do {
                s.push({ value: r, major: Q$(r) }),
                  ++a,
                  10 === a && ((a = 1), ++o, (l = o >= 0 ? 1 : l)),
                  (r = Math.round(a * Math.pow(10, o) * l) / l);
              } while (o < n || (o === n && a < i));
              const c = rV(t.max, r);
              return s.push({ value: c, major: Q$(r) }), s;
            })({ min: t._userMin, max: t._userMax }, t);
          return (
            'ticks' === e.bounds && LV(n, t, 'value'),
            e.reverse ? (n.reverse(), (t.start = t.max), (t.end = t.min)) : ((t.start = t.min), (t.end = t.max)),
            n
          );
        }
        getLabelForValue(t) {
          return void 0 === t ? '0' : Nz(t, this.chart.options.locale);
        }
        configure() {
          const t = this,
            e = t.min;
          super.configure(), (t._startValue = TV(e)), (t._valueRange = TV(t.max) - TV(e));
        }
        getPixelForValue(t) {
          const e = this;
          return (
            (void 0 !== t && 0 !== t) || (t = e.min),
            null === t || isNaN(t)
              ? NaN
              : e.getPixelForDecimal(t === e.min ? 0 : (TV(t) - e._startValue) / e._valueRange)
          );
        }
        getValueForPixel(t) {
          const e = this,
            n = e.getDecimalForPixel(t);
          return Math.pow(10, e._startValue + n * e._valueRange);
        }
      }
      function X$(t) {
        const e = t.ticks;
        if (e.display && t.display) {
          const t = QB(e.backdropPadding);
          return oV(e.font && e.font.size, AB.font.size) + t.height;
        }
        return 0;
      }
      function Z$(t, e, n, i, s) {
        return t === i || t === s
          ? { start: e - n / 2, end: e + n / 2 }
          : t < i || t > s
          ? { start: e - n, end: e }
          : { start: e, end: e + n };
      }
      function J$(t) {
        return 0 === t || 180 === t ? 'center' : t < 180 ? 'left' : 'right';
      }
      function tq(t, e, n) {
        return 90 === n || 270 === n ? (t -= e / 2) : (n > 270 || n < 90) && (t -= e), t;
      }
      function eq(t, e, n, i) {
        const { ctx: s } = t;
        if (n) s.arc(t.xCenter, t.yCenter, e, 0, CV);
        else {
          let n = t.getPointPosition(0, e);
          s.moveTo(n.x, n.y);
          for (let r = 1; r < i; r++) (n = t.getPointPosition(r, e)), s.lineTo(n.x, n.y);
        }
      }
      function nq(t) {
        return RV(t) ? t : 0;
      }
      (K$.id = 'logarithmic'),
        (K$.defaults = { ticks: { callback: hH.formatters.logarithmic, major: { enabled: !0 } } });
      class iq extends Y$ {
        constructor(t) {
          super(t),
            (this.xCenter = void 0),
            (this.yCenter = void 0),
            (this.drawingArea = void 0),
            (this._pointLabels = []),
            (this._pointLabelItems = []);
        }
        setDimensions() {
          const t = this;
          (t.width = t.maxWidth),
            (t.height = t.maxHeight),
            (t.paddingTop = X$(t.options) / 2),
            (t.xCenter = Math.floor(t.width / 2)),
            (t.yCenter = Math.floor((t.height - t.paddingTop) / 2)),
            (t.drawingArea = Math.min(t.height - t.paddingTop, t.width) / 2);
        }
        determineDataLimits() {
          const t = this,
            { min: e, max: n } = t.getMinMax(!1);
          (t.min = sV(e) && !isNaN(e) ? e : 0), (t.max = sV(n) && !isNaN(n) ? n : 0), t.handleTickRangeOptions();
        }
        computeTickLimit() {
          return Math.ceil(this.drawingArea / X$(this.options));
        }
        generateTickLabels(t) {
          const e = this;
          Y$.prototype.generateTickLabels.call(e, t),
            (e._pointLabels = e.getLabels().map((t, n) => {
              const i = lV(e.options.pointLabels.callback, [t, n], e);
              return i || 0 === i ? i : '';
            }));
        }
        fit() {
          const t = this,
            e = t.options;
          e.display && e.pointLabels.display
            ? (function (t) {
                const e = { l: 0, r: t.width, t: 0, b: t.height - t.paddingTop },
                  n = {},
                  i = [],
                  s = [],
                  r = t.getLabels().length;
                for (let c = 0; c < r; c++) {
                  const r = t.options.pointLabels.setContext(t.getPointLabelContext(c));
                  s[c] = r.padding;
                  const h = t.getPointPosition(c, t.drawingArea + s[c]),
                    u = KB(r.font),
                    d =
                      ((o = t.ctx),
                      (a = u),
                      (l = nV((l = t._pointLabels[c])) ? l : [l]),
                      { w: DB(o, a.string, l), h: l.length * a.lineHeight });
                  i[c] = d;
                  const p = t.getIndexAngle(c),
                    m = NV(p),
                    f = Z$(m, h.x, d.w, 0, 180),
                    g = Z$(m, h.y, d.h, 90, 270);
                  f.start < e.l && ((e.l = f.start), (n.l = p)),
                    f.end > e.r && ((e.r = f.end), (n.r = p)),
                    g.start < e.t && ((e.t = g.start), (n.t = p)),
                    g.end > e.b && ((e.b = g.end), (n.b = p));
                }
                var o, a, l;
                t._setReductions(t.drawingArea, e, n),
                  (t._pointLabelItems = (function (t, e, n) {
                    const i = [],
                      s = t.getLabels().length,
                      r = t.options,
                      o = X$(r),
                      a = t.getDistanceFromCenterForValue(r.ticks.reverse ? t.min : t.max);
                    for (let u = 0; u < s; u++) {
                      const s = t.getPointPosition(u, a + (0 === u ? o / 2 : 0) + n[u]),
                        r = NV(t.getIndexAngle(u)),
                        d = e[u],
                        p = tq(s.y, d.h, r),
                        m = J$(r),
                        f = ((l = s.x), (c = d.w), 'right' === (h = m) ? (l -= c) : 'center' === h && (l -= c / 2), l);
                      i.push({ x: s.x, y: p, textAlign: m, left: f, top: p, right: f + d.w, bottom: p + d.h });
                    }
                    var l, c, h;
                    return i;
                  })(t, i, s));
              })(t)
            : t.setCenterPoint(0, 0, 0, 0);
        }
        _setReductions(t, e, n) {
          const i = this;
          let s = e.l / Math.sin(n.l),
            r = Math.max(e.r - i.width, 0) / Math.sin(n.r),
            o = -e.t / Math.cos(n.t),
            a = -Math.max(e.b - (i.height - i.paddingTop), 0) / Math.cos(n.b);
          (s = nq(s)),
            (r = nq(r)),
            (o = nq(o)),
            (a = nq(a)),
            (i.drawingArea = Math.max(t / 2, Math.min(Math.floor(t - (s + r) / 2), Math.floor(t - (o + a) / 2)))),
            i.setCenterPoint(s, r, o, a);
        }
        setCenterPoint(t, e, n, i) {
          const s = this,
            r = n + s.drawingArea,
            o = s.height - s.paddingTop - i - s.drawingArea;
          (s.xCenter = Math.floor((t + s.drawingArea + (s.width - e - s.drawingArea)) / 2 + s.left)),
            (s.yCenter = Math.floor((r + o) / 2 + s.top + s.paddingTop));
        }
        getIndexAngle(t) {
          return jV(t * (CV / this.getLabels().length) + FV(this.options.startAngle || 0));
        }
        getDistanceFromCenterForValue(t) {
          const e = this;
          if (eV(t)) return NaN;
          const n = e.drawingArea / (e.max - e.min);
          return e.options.reverse ? (e.max - t) * n : (t - e.min) * n;
        }
        getValueForDistanceFromCenter(t) {
          if (eV(t)) return NaN;
          const e = this,
            n = t / (e.drawingArea / (e.max - e.min));
          return e.options.reverse ? e.max - n : e.min + n;
        }
        getPointLabelContext(t) {
          const e = this,
            n = e._pointLabels || [];
          if (t >= 0 && t < n.length) {
            const i = n[t];
            return (function (t, e, n) {
              return Object.assign(Object.create(t), { label: n, index: e, type: 'pointLabel' });
            })(e.getContext(), t, i);
          }
        }
        getPointPosition(t, e) {
          const n = this,
            i = n.getIndexAngle(t) - OV;
          return { x: Math.cos(i) * e + n.xCenter, y: Math.sin(i) * e + n.yCenter, angle: i };
        }
        getPointPositionForValue(t, e) {
          return this.getPointPosition(t, this.getDistanceFromCenterForValue(e));
        }
        getBasePosition(t) {
          return this.getPointPositionForValue(t || 0, this.getBaseValue());
        }
        getPointLabelPosition(t) {
          const { left: e, top: n, right: i, bottom: s } = this._pointLabelItems[t];
          return { left: e, top: n, right: i, bottom: s };
        }
        drawBackground() {
          const t = this,
            {
              backgroundColor: e,
              grid: { circular: n },
            } = t.options;
          if (e) {
            const i = t.ctx;
            i.save(),
              i.beginPath(),
              eq(t, t.getDistanceFromCenterForValue(t._endValue), n, t.getLabels().length),
              i.closePath(),
              (i.fillStyle = e),
              i.fill(),
              i.restore();
          }
        }
        drawGrid() {
          const t = this,
            e = t.ctx,
            n = t.options,
            { angleLines: i, grid: s } = n,
            r = t.getLabels().length;
          let o, a, l;
          if (
            (n.pointLabels.display &&
              (function (t, e) {
                const {
                  ctx: n,
                  options: { pointLabels: i },
                } = t;
                for (let s = e - 1; s >= 0; s--) {
                  const e = i.setContext(t.getPointLabelContext(s)),
                    r = KB(e.font),
                    { x: o, y: a, textAlign: l, left: c, top: h, right: u, bottom: d } = t._pointLabelItems[s],
                    { backdropColor: p } = e;
                  if (!eV(p)) {
                    const t = QB(e.backdropPadding);
                    (n.fillStyle = p), n.fillRect(c - t.left, h - t.top, u - c + t.width, d - h + t.height);
                  }
                  zB(n, t._pointLabels[s], o, a + r.lineHeight / 2, r, {
                    color: e.color,
                    textAlign: l,
                    textBaseline: 'middle',
                  });
                }
              })(t, r),
            s.display &&
              t.ticks.forEach((e, n) => {
                if (0 !== n) {
                  a = t.getDistanceFromCenterForValue(e.value);
                  const i = s.setContext(t.getContext(n - 1));
                  !(function (t, e, n, i) {
                    const s = t.ctx,
                      r = e.circular,
                      { color: o, lineWidth: a } = e;
                    (!r && !i) ||
                      !o ||
                      !a ||
                      n < 0 ||
                      (s.save(),
                      (s.strokeStyle = o),
                      (s.lineWidth = a),
                      s.setLineDash(e.borderDash),
                      (s.lineDashOffset = e.borderDashOffset),
                      s.beginPath(),
                      eq(t, n, r, i),
                      s.closePath(),
                      s.stroke(),
                      s.restore());
                  })(t, i, a, r);
                }
              }),
            i.display)
          ) {
            for (e.save(), o = t.getLabels().length - 1; o >= 0; o--) {
              const s = i.setContext(t.getPointLabelContext(o)),
                { color: r, lineWidth: c } = s;
              c &&
                r &&
                ((e.lineWidth = c),
                (e.strokeStyle = r),
                e.setLineDash(s.borderDash),
                (e.lineDashOffset = s.borderDashOffset),
                (a = t.getDistanceFromCenterForValue(n.ticks.reverse ? t.min : t.max)),
                (l = t.getPointPosition(o, a)),
                e.beginPath(),
                e.moveTo(t.xCenter, t.yCenter),
                e.lineTo(l.x, l.y),
                e.stroke());
            }
            e.restore();
          }
        }
        drawBorder() {}
        drawLabels() {
          const t = this,
            e = t.ctx,
            n = t.options,
            i = n.ticks;
          if (!i.display) return;
          const s = t.getIndexAngle(0);
          let r, o;
          e.save(),
            e.translate(t.xCenter, t.yCenter),
            e.rotate(s),
            (e.textAlign = 'center'),
            (e.textBaseline = 'middle'),
            t.ticks.forEach((s, a) => {
              if (0 === a && !n.reverse) return;
              const l = i.setContext(t.getContext(a)),
                c = KB(l.font);
              if (((r = t.getDistanceFromCenterForValue(t.ticks[a].value)), l.showLabelBackdrop)) {
                (e.font = c.string), (o = e.measureText(s.label).width), (e.fillStyle = l.backdropColor);
                const t = QB(l.backdropPadding);
                e.fillRect(-o / 2 - t.left, -r - c.size / 2 - t.top, o + t.width, c.size + t.height);
              }
              zB(e, s.label, 0, -r, c, { color: l.color });
            }),
            e.restore();
        }
        drawTitle() {}
      }
      (iq.id = 'radialLinear'),
        (iq.defaults = {
          display: !0,
          animate: !0,
          position: 'chartArea',
          angleLines: { display: !0, lineWidth: 1, borderDash: [], borderDashOffset: 0 },
          grid: { circular: !1 },
          startAngle: 0,
          ticks: { showLabelBackdrop: !0, callback: hH.formatters.numeric },
          pointLabels: {
            backdropColor: void 0,
            backdropPadding: 2,
            display: !0,
            font: { size: 10 },
            callback: (t) => t,
            padding: 5,
          },
        }),
        (iq.defaultRoutes = {
          'angleLines.color': 'borderColor',
          'pointLabels.color': 'color',
          'ticks.color': 'color',
        }),
        (iq.descriptors = { angleLines: { _fallback: 'grid' } });
      const sq = {
          millisecond: { common: !0, size: 1, steps: 1e3 },
          second: { common: !0, size: 1e3, steps: 60 },
          minute: { common: !0, size: 6e4, steps: 60 },
          hour: { common: !0, size: 36e5, steps: 24 },
          day: { common: !0, size: 864e5, steps: 30 },
          week: { common: !1, size: 6048e5, steps: 4 },
          month: { common: !0, size: 2628e6, steps: 12 },
          quarter: { common: !1, size: 7884e6, steps: 4 },
          year: { common: !0, size: 3154e7 },
        },
        rq = Object.keys(sq);
      function oq(t, e) {
        return t - e;
      }
      function aq(t, e) {
        if (eV(e)) return null;
        const n = t._adapter,
          { parser: i, round: s, isoWeekday: r } = t._parseOpts;
        let o = e;
        return (
          'function' == typeof i && (o = i(o)),
          sV(o) || (o = 'string' == typeof i ? n.parse(o, i) : n.parse(o)),
          null === o
            ? null
            : (s && (o = 'week' !== s || (!RV(r) && !0 !== r) ? n.startOf(o, s) : n.startOf(o, 'isoWeek', r)), +o)
        );
      }
      function lq(t, e, n, i) {
        const s = rq.length;
        for (let r = rq.indexOf(t); r < s - 1; ++r) {
          const t = sq[rq[r]],
            s = t.steps ? t.steps : Number.MAX_SAFE_INTEGER;
          if (t.common && Math.ceil((n - e) / (s * t.size)) <= i) return rq[r];
        }
        return rq[s - 1];
      }
      function cq(t, e, n) {
        if (n) {
          if (n.length) {
            const { lo: i, hi: s } = ZB(n, e);
            t[n[i] >= e ? n[i] : n[s]] = !0;
          }
        } else t[e] = !0;
      }
      function hq(t, e, n) {
        const i = [],
          s = {},
          r = e.length;
        let o, a;
        for (o = 0; o < r; ++o) (a = e[o]), (s[a] = o), i.push({ value: a, major: !1 });
        return 0 !== r && n
          ? (function (t, e, n, i) {
              const s = t._adapter,
                r = +s.startOf(e[0].value, i),
                o = e[e.length - 1].value;
              let a, l;
              for (a = r; a <= o; a = +s.add(a, 1, i)) (l = n[a]), l >= 0 && (e[l].major = !0);
              return e;
            })(t, i, s, n)
          : i;
      }
      let uq = (() => {
        class t extends bH {
          constructor(t) {
            super(t),
              (this._cache = { data: [], labels: [], all: [] }),
              (this._unit = 'day'),
              (this._majorUnit = void 0),
              (this._offsets = {}),
              (this._normalized = !1),
              (this._parseOpts = void 0);
          }
          init(t, e) {
            const n = t.time || (t.time = {}),
              i = (this._adapter = new Oj._date(t.adapters.date));
            fV(n.displayFormats, i.formats()),
              (this._parseOpts = { parser: n.parser, round: n.round, isoWeekday: n.isoWeekday }),
              super.init(t),
              (this._normalized = e.normalized);
          }
          parse(t, e) {
            return void 0 === t ? null : aq(this, t);
          }
          beforeLayout() {
            super.beforeLayout(), (this._cache = { data: [], labels: [], all: [] });
          }
          determineDataLimits() {
            const t = this,
              e = t.options,
              n = t._adapter,
              i = e.time.unit || 'day';
            let { min: s, max: r, minDefined: o, maxDefined: a } = t.getUserBounds();
            function l(t) {
              o || isNaN(t.min) || (s = Math.min(s, t.min)), a || isNaN(t.max) || (r = Math.max(r, t.max));
            }
            (o && a) ||
              (l(t._getLabelBounds()), ('ticks' === e.bounds && 'labels' === e.ticks.source) || l(t.getMinMax(!1))),
              (s = sV(s) && !isNaN(s) ? s : +n.startOf(Date.now(), i)),
              (r = sV(r) && !isNaN(r) ? r : +n.endOf(Date.now(), i) + 1),
              (t.min = Math.min(s, r - 1)),
              (t.max = Math.max(s + 1, r));
          }
          _getLabelBounds() {
            const t = this.getLabelTimestamps();
            let e = Number.POSITIVE_INFINITY,
              n = Number.NEGATIVE_INFINITY;
            return t.length && ((e = t[0]), (n = t[t.length - 1])), { min: e, max: n };
          }
          buildTicks() {
            const t = this,
              e = t.options,
              n = e.time,
              i = e.ticks,
              s = 'labels' === i.source ? t.getLabelTimestamps() : t._generate();
            'ticks' === e.bounds && s.length && ((t.min = t._userMin || s[0]), (t.max = t._userMax || s[s.length - 1]));
            const r = t.min,
              o = (function (t, e, n) {
                let i = 0,
                  s = t.length;
                for (; i < s && t[i] < e; ) i++;
                for (; s > i && t[s - 1] > n; ) s--;
                return i > 0 || s < t.length ? t.slice(i, s) : t;
              })(s, r, t.max);
            return (
              (t._unit =
                n.unit ||
                (i.autoSkip
                  ? lq(n.minUnit, t.min, t.max, t._getLabelCapacity(r))
                  : (function (t, e, n, i, s) {
                      for (let r = rq.length - 1; r >= rq.indexOf(n); r--) {
                        const n = rq[r];
                        if (sq[n].common && t._adapter.diff(s, i, n) >= e - 1) return n;
                      }
                      return rq[n ? rq.indexOf(n) : 0];
                    })(t, o.length, n.minUnit, t.min, t.max))),
              (t._majorUnit =
                i.major.enabled && 'year' !== t._unit
                  ? (function (t) {
                      for (let e = rq.indexOf(t) + 1, n = rq.length; e < n; ++e) if (sq[rq[e]].common) return rq[e];
                    })(t._unit)
                  : void 0),
              t.initOffsets(s),
              e.reverse && o.reverse(),
              hq(t, o, t._majorUnit)
            );
          }
          initOffsets(t) {
            const e = this;
            let n,
              i,
              s = 0,
              r = 0;
            e.options.offset &&
              t.length &&
              ((n = e.getDecimalForValue(t[0])),
              (s = 1 === t.length ? 1 - n : (e.getDecimalForValue(t[1]) - n) / 2),
              (i = e.getDecimalForValue(t[t.length - 1])),
              (r = 1 === t.length ? i : (i - e.getDecimalForValue(t[t.length - 2])) / 2));
            const o = t.length < 3 ? 0.5 : 0.25;
            (s = $V(s, 0, o)), (r = $V(r, 0, o)), (e._offsets = { start: s, end: r, factor: 1 / (s + 1 + r) });
          }
          _generate() {
            const t = this,
              e = t._adapter,
              n = t.min,
              i = t.max,
              s = t.options,
              r = s.time,
              o = r.unit || lq(r.minUnit, n, i, t._getLabelCapacity(n)),
              a = oV(r.stepSize, 1),
              l = 'week' === o && r.isoWeekday,
              c = RV(l) || !0 === l,
              h = {};
            let u,
              d,
              p = n;
            if ((c && (p = +e.startOf(p, 'isoWeek', l)), (p = +e.startOf(p, c ? 'day' : o)), e.diff(i, n, o) > 1e5 * a))
              throw new Error(n + ' and ' + i + ' are too far apart with stepSize of ' + a + ' ' + o);
            const m = 'data' === s.ticks.source && t.getDataTimestamps();
            for (u = p, d = 0; u < i; u = +e.add(u, a, o), d++) cq(h, u, m);
            return (
              (u !== i && 'ticks' !== s.bounds && 1 !== d) || cq(h, u, m),
              Object.keys(h)
                .sort((t, e) => t - e)
                .map((t) => +t)
            );
          }
          getLabelForValue(t) {
            const e = this.options.time;
            return this._adapter.format(t, e.tooltipFormat ? e.tooltipFormat : e.displayFormats.datetime);
          }
          _tickFormatFunction(t, e, n, i) {
            const s = this,
              r = s.options,
              o = r.time.displayFormats,
              a = s._unit,
              l = s._majorUnit,
              c = l && o[l],
              h = n[e],
              u = s._adapter.format(t, i || (l && c && h && h.major ? c : a && o[a])),
              d = r.ticks.callback;
            return d ? lV(d, [u, e, n], s) : u;
          }
          generateTickLabels(t) {
            let e, n, i;
            for (e = 0, n = t.length; e < n; ++e) (i = t[e]), (i.label = this._tickFormatFunction(i.value, e, t));
          }
          getDecimalForValue(t) {
            const e = this;
            return null === t ? NaN : (t - e.min) / (e.max - e.min);
          }
          getPixelForValue(t) {
            const e = this,
              n = e._offsets,
              i = e.getDecimalForValue(t);
            return e.getPixelForDecimal((n.start + i) * n.factor);
          }
          getValueForPixel(t) {
            const e = this,
              n = e._offsets,
              i = e.getDecimalForPixel(t) / n.factor - n.end;
            return e.min + i * (e.max - e.min);
          }
          _getLabelSize(t) {
            const e = this,
              n = e.options.ticks,
              i = e.ctx.measureText(t).width,
              s = FV(e.isHorizontal() ? n.maxRotation : n.minRotation),
              r = Math.cos(s),
              o = Math.sin(s),
              a = e._resolveTickFontOptions(0).size;
            return { w: i * r + a * o, h: i * o + a * r };
          }
          _getLabelCapacity(t) {
            const e = this,
              n = e.options.time,
              i = n.displayFormats,
              s = i[n.unit] || i.millisecond,
              r = e._tickFormatFunction(t, 0, hq(e, [t], e._majorUnit), s),
              o = e._getLabelSize(r),
              a = Math.floor(e.isHorizontal() ? e.width / o.w : e.height / o.h) - 1;
            return a > 0 ? a : 1;
          }
          getDataTimestamps() {
            const t = this;
            let e,
              n,
              i = t._cache.data || [];
            if (i.length) return i;
            const s = t.getMatchingVisibleMetas();
            if (t._normalized && s.length) return (t._cache.data = s[0].controller.getAllParsedValues(t));
            for (e = 0, n = s.length; e < n; ++e) i = i.concat(s[e].controller.getAllParsedValues(t));
            return (t._cache.data = t.normalize(i));
          }
          getLabelTimestamps() {
            const t = this,
              e = t._cache.labels || [];
            let n, i;
            if (e.length) return e;
            const s = t.getLabels();
            for (n = 0, i = s.length; n < i; ++n) e.push(aq(t, s[n]));
            return (t._cache.labels = t._normalized ? e : t.normalize(e));
          }
          normalize(t) {
            return iz(t.sort(oq));
          }
        }
        return (
          (t.id = 'time'),
          (t.defaults = {
            bounds: 'data',
            adapters: {},
            time: { parser: !1, unit: !1, round: !1, isoWeekday: !1, minUnit: 'millisecond', displayFormats: {} },
            ticks: { source: 'auto', major: { enabled: !1 } },
          }),
          t
        );
      })();
      function dq(t, e, n) {
        let i,
          s,
          r,
          o,
          a = 0,
          l = t.length - 1;
        n
          ? (e >= t[a].pos && e <= t[l].pos && ({ lo: a, hi: l } = JB(t, 'pos', e)),
            ({ pos: i, time: r } = t[a]),
            ({ pos: s, time: o } = t[l]))
          : (e >= t[a].time && e <= t[l].time && ({ lo: a, hi: l } = JB(t, 'time', e)),
            ({ time: i, pos: r } = t[a]),
            ({ time: s, pos: o } = t[l]));
        const c = s - i;
        return c ? r + ((o - r) * (e - i)) / c : r;
      }
      class pq extends uq {
        constructor(t) {
          super(t), (this._table = []), (this._minPos = void 0), (this._tableRange = void 0);
        }
        initOffsets() {
          const t = this,
            e = t._getTimestampsForTable(),
            n = (t._table = t.buildLookupTable(e));
          (t._minPos = dq(n, t.min)), (t._tableRange = dq(n, t.max) - t._minPos), super.initOffsets(e);
        }
        buildLookupTable(t) {
          const { min: e, max: n } = this,
            i = [],
            s = [];
          let r, o, a, l, c;
          for (r = 0, o = t.length; r < o; ++r) (l = t[r]), l >= e && l <= n && i.push(l);
          if (i.length < 2)
            return [
              { time: e, pos: 0 },
              { time: n, pos: 1 },
            ];
          for (r = 0, o = i.length; r < o; ++r)
            (c = i[r + 1]),
              (a = i[r - 1]),
              (l = i[r]),
              Math.round((c + a) / 2) !== l && s.push({ time: l, pos: r / (o - 1) });
          return s;
        }
        _getTimestampsForTable() {
          const t = this;
          let e = t._cache.all || [];
          if (e.length) return e;
          const n = t.getDataTimestamps(),
            i = t.getLabelTimestamps();
          return (e = n.length && i.length ? t.normalize(n.concat(i)) : n.length ? n : i), (e = t._cache.all = e), e;
        }
        getDecimalForValue(t) {
          return (dq(this._table, t) - this._minPos) / this._tableRange;
        }
        getValueForPixel(t) {
          const e = this,
            n = e._offsets,
            i = e.getDecimalForPixel(t) / n.factor - n.end;
          return dq(e._table, i * e._tableRange + e._minPos, !0);
        }
      }
      (pq.id = 'timeseries'), (pq.defaults = uq.defaults);
      var mq = n(197),
        fq = n.n(mq);
      const gq = (t) => t && t.enabled && t.modifierKey,
        _q = (t, e) => t && e[t + 'Key'],
        bq = (t, e) => t && !e[t + 'Key'];
      function yq(t, e, n) {
        return (
          void 0 === t ||
          ('string' == typeof t ? -1 !== t.indexOf(e) : 'function' == typeof t && -1 !== t({ chart: n }).indexOf(e))
        );
      }
      function vq(t, e, n) {
        const i = (function ({ x: t, y: e }, n) {
          const i = n.scales,
            s = Object.keys(i);
          for (let r = 0; r < s.length; r++) {
            const n = i[s[r]];
            if (e >= n.top && e <= n.bottom && t >= n.left && t <= n.right) return n;
          }
          return null;
        })(e, n);
        if (i && yq(t, i.axis, n)) return [i];
        const s = [];
        return (
          cV(n.scales, function (e) {
            yq(t, e.axis, n) || s.push(e);
          }),
          s
        );
      }
      const wq = new WeakMap();
      function xq(t) {
        let e = wq.get(t);
        return (
          e || ((e = { originalScaleLimits: {}, updatedScaleLimits: {}, handlers: {}, panDelta: {} }), wq.set(t, e)), e
        );
      }
      function Cq(t, e, n) {
        const i = t.max - t.min,
          s = i * (e - 1),
          r = t.isHorizontal() ? n.x : n.y,
          o = (t.getValueForPixel(r) - t.min) / i || 0;
        return { min: s * o, max: s * (1 - o) };
      }
      function kq(t, e, n, i, s) {
        let r = n[i];
        if ('original' === r) {
          const n = t.originalScaleLimits[e.id][i];
          r = oV(n.options, n.scale);
        }
        return oV(r, s);
      }
      function Sq(t, { min: e, max: n }, i, s = !1) {
        const r = xq(t.chart),
          { id: o, axis: a, options: l } = t,
          c = (i && (i[o] || i[a])) || {},
          { minRange: h = 0 } = c,
          u = kq(r, t, c, 'min', -1 / 0),
          d = kq(r, t, c, 'max', 1 / 0),
          p = Math.max(e, u),
          m = Math.min(n, d),
          f = s ? Math.max(m - p, h) : t.max - t.min;
        if (m - p !== f)
          if (u > m - f) (e = p), (n = p + f);
          else if (d < p + f) (n = m), (e = m - f);
          else {
            const t = (f - m + p) / 2;
            (e = p - t), (n = m + t);
          }
        else (e = p), (n = m);
        return (
          (l.min = e),
          (l.max = n),
          (r.updatedScaleLimits[t.id] = { min: e, max: n }),
          t.parse(e) !== t.min || t.parse(n) !== t.max
        );
      }
      const Eq = (t) => (0 === t || isNaN(t) ? 0 : t < 0 ? Math.min(Math.round(t), -1) : Math.max(Math.round(t), 1)),
        Oq = {
          second: 500,
          minute: 3e4,
          hour: 18e5,
          day: 432e5,
          week: 3024e5,
          month: 1296e6,
          quarter: 5184e6,
          year: 157248e5,
        };
      function Pq(t, e, n, i = !1) {
        const { min: s, max: r, options: o } = t,
          a = Oq[o.time && o.time.round] || 0,
          l = t.getValueForPixel(t.getPixelForValue(s + a) - e),
          c = t.getValueForPixel(t.getPixelForValue(r + a) - e),
          { min: h = -1 / 0, max: u = 1 / 0 } = (i && n && n[t.axis]) || {};
        return !!(isNaN(l) || isNaN(c) || l < h || c > u) || Sq(t, { min: l, max: c }, n, i);
      }
      function Aq(t, e, n) {
        return Pq(t, e, n, !0);
      }
      const Tq = {
          category: function (t, e, n, i) {
            const s = Cq(t, e, n);
            return (
              t.min === t.max &&
                e < 1 &&
                (function (t) {
                  const e = t.getLabels().length - 1;
                  t.min > 0 && (t.min -= 1), t.max < e && (t.max += 1);
                })(t),
              Sq(t, { min: t.min + Eq(s.min), max: t.max - Eq(s.max) }, i, !0)
            );
          },
          default: function (t, e, n, i) {
            const s = Cq(t, e, n);
            return Sq(t, { min: t.min + s.min, max: t.max - s.max }, i, !0);
          },
        },
        Dq = {
          category: function (t, e, n) {
            const i = t.getLabels().length - 1;
            let { min: s, max: r } = t;
            const o = Math.max(r - s, 1),
              a = Math.round(
                (function (t) {
                  return t.isHorizontal() ? t.width : t.height;
                })(t) / Math.max(o, 10)
              ),
              l = Math.round(Math.abs(e / a));
            let c;
            return (
              e < -a
                ? ((r = Math.min(r + l, i)), (s = 1 === o ? r : r - o), (c = r === i))
                : e > a && ((s = Math.max(0, s - l)), (r = 1 === o ? s : s + o), (c = 0 === s)),
              Sq(t, { min: s, max: r }, n) || c
            );
          },
          default: Pq,
          logarithmic: Aq,
          timeseries: Aq,
        };
      function Mq(t, e) {
        cV(t, (n, i) => {
          e[i] || delete t[i];
        });
      }
      function Rq(t, e) {
        const { scales: n } = t,
          { originalScaleLimits: i, updatedScaleLimits: s } = e;
        return (
          cV(n, function (t) {
            (function (t, e, n) {
              const {
                id: i,
                options: { min: s, max: r },
              } = t;
              if (!e[i] || !n[i]) return !0;
              const o = n[i];
              return o.min !== s || o.max !== r;
            })(t, i, s) &&
              (i[t.id] = {
                min: { scale: t.min, options: t.options.min },
                max: { scale: t.max, options: t.options.max },
              });
          }),
          Mq(i, n),
          Mq(s, n),
          i
        );
      }
      function Iq(t, e, n, i) {
        lV(Tq[t.type] || Tq.default, [t, e, n, i]);
      }
      function Lq(t) {
        const e = t.chartArea;
        return { x: (e.left + e.right) / 2, y: (e.top + e.bottom) / 2 };
      }
      function Fq(t, e, n = 'none') {
        const { x: i = 1, y: s = 1, focalPoint: r = Lq(t) } = 'number' == typeof e ? { x: e, y: e } : e,
          o = xq(t),
          {
            options: { limits: a, zoom: l },
          } = o,
          { mode: c = 'xy', overScaleMode: h } = l || {};
        Rq(t, o);
        const u = 1 !== i && yq(c, 'x', t),
          d = 1 !== s && yq(c, 'y', t);
        cV((h && vq(h, r, t)) || t.scales, function (t) {
          t.isHorizontal() && u ? Iq(t, i, r, a) : !t.isHorizontal() && d && Iq(t, s, r, a);
        }),
          t.update(n),
          lV(l.onZoom, [{ chart: t }]);
      }
      function Nq(t, e, n) {
        const i = t.getValueForPixel(e),
          s = t.getValueForPixel(n);
        return { min: Math.min(i, s), max: Math.max(i, s) };
      }
      function Vq(t, e, n, i) {
        const { panDelta: s } = i,
          r = s[t.id] || 0;
        DV(r) === DV(e) && (e += r), (s[t.id] = lV(Dq[t.type] || Dq.default, [t, e, n]) ? 0 : e);
      }
      function Bq(t, e, n, i = 'none') {
        const { x: s = 0, y: r = 0 } = 'number' == typeof e ? { x: e, y: e } : e,
          o = xq(t),
          {
            options: { pan: a, limits: l },
          } = o,
          { mode: c = 'xy', onPan: h } = a || {};
        Rq(t, o);
        const u = 0 !== s && yq(c, 'x', t),
          d = 0 !== r && yq(c, 'y', t);
        cV(n || t.scales, function (t) {
          t.isHorizontal() && u ? Vq(t, s, l, o) : !t.isHorizontal() && d && Vq(t, r, l, o);
        }),
          t.update(i),
          lV(h, [{ chart: t }]);
      }
      function zq(t, e) {
        const { handlers: n } = xq(t),
          i = n[e];
        i && i.target && (i.target.removeEventListener(e, i), delete n[e]);
      }
      function jq(t, e, n, i) {
        const { handlers: s, options: r } = xq(t);
        zq(t, n), (s[n] = (e) => i(t, e, r)), (s[n].target = e), e.addEventListener(n, s[n]);
      }
      function Hq(t, e) {
        const n = xq(t);
        n.dragStart && ((n.dragging = !0), (n.dragEnd = e), t.update('none'));
      }
      function $q(t, e, n) {
        const { onZoomStart: i, onZoomRejected: s } = n;
        if (i) {
          const { left: n, top: r } = e.target.getBoundingClientRect();
          if (!1 === lV(i, [{ chart: t, event: e, point: { x: e.clientX - n, y: e.clientY - r } }]))
            return lV(s, [{ chart: t, event: e }]), !1;
        }
      }
      function qq(t, e) {
        const n = xq(t),
          { pan: i, zoom: s = {} } = n.options;
        if (_q(gq(i), e) || bq(gq(s.drag), e)) return lV(s.onZoomRejected, [{ chart: t, event: e }]);
        !1 !== $q(t, e, s) && ((n.dragStart = e), jq(t, t.canvas, 'mousemove', Hq));
      }
      function Wq(t, e, n, i) {
        const { left: s, top: r } = n.target.getBoundingClientRect(),
          o = yq(e, 'x', t),
          a = yq(e, 'y', t);
        let { top: l, left: c, right: h, bottom: u, width: d, height: p } = t.chartArea;
        o && ((c = Math.min(n.clientX, i.clientX) - s), (h = Math.max(n.clientX, i.clientX) - s)),
          a && ((l = Math.min(n.clientY, i.clientY) - r), (u = Math.max(n.clientY, i.clientY) - r));
        const m = h - c,
          f = u - l;
        return {
          left: c,
          top: l,
          right: h,
          bottom: u,
          width: m,
          height: f,
          zoomX: o && m ? 1 + (d - m) / d : 1,
          zoomY: a && f ? 1 + (p - f) / p : 1,
        };
      }
      function Uq(t, e) {
        const n = xq(t);
        if (!n.dragStart) return;
        zq(t, 'mousemove');
        const {
            mode: i,
            onZoomComplete: s,
            drag: { threshold: r = 0 },
          } = n.options.zoom,
          o = Wq(t, i, n.dragStart, e),
          a = yq(i, 'x', t) ? o.width : 0,
          l = yq(i, 'y', t) ? o.height : 0,
          c = Math.sqrt(a * a + l * l);
        if (((n.dragStart = n.dragEnd = null), c <= r)) return (n.dragging = !1), void t.update('none');
        !(function (t, e, n, i = 'none') {
          const s = xq(t),
            {
              options: { limits: r, zoom: o },
            } = s,
            { mode: a = 'xy' } = o;
          Rq(t, s);
          const l = yq(a, 'x', t),
            c = yq(a, 'y', t);
          cV(t.scales, function (t) {
            t.isHorizontal() && l
              ? Sq(t, Nq(t, e.x, n.x), r, !0)
              : !t.isHorizontal() && c && Sq(t, Nq(t, e.y, n.y), r, !0);
          }),
            t.update(i),
            lV(o.onZoom, [{ chart: t }]);
        })(t, { x: o.left, y: o.top }, { x: o.right, y: o.bottom }, 'zoom'),
          setTimeout(() => (n.dragging = !1), 500),
          lV(s, [{ chart: t }]);
      }
      function Yq(t, e) {
        const {
          handlers: { onZoomComplete: n },
          options: { zoom: i },
        } = xq(t);
        if (
          !(function (t, e, n) {
            if (bq(gq(n.wheel), e)) lV(n.onZoomRejected, [{ chart: t, event: e }]);
            else if (!1 !== $q(t, e, n) && (e.cancelable && e.preventDefault(), void 0 !== e.deltaY)) return !0;
          })(t, e, i)
        )
          return;
        const s = e.target.getBoundingClientRect(),
          r = 1 + (e.deltaY >= 0 ? -i.wheel.speed : i.wheel.speed);
        Fq(t, { x: r, y: r, focalPoint: { x: e.clientX - s.left, y: e.clientY - s.top } }), n && n();
      }
      function Gq(t, e) {
        return function (n, i) {
          const { pan: s, zoom: r = {} } = e.options;
          if (!s || !s.enabled) return !1;
          const o = i && i.srcEvent;
          return !(
            o &&
            !e.panning &&
            'mouse' === i.pointerType &&
            (bq(gq(s), o) || _q(gq(r.drag), o)) &&
            (lV(s.onPanRejected, [{ chart: t, event: i }]), 1)
          );
        };
      }
      function Qq(t, e, n) {
        if (e.scale) {
          const { center: i, pointers: s } = n,
            r = (1 / e.scale) * n.scale,
            o = n.target.getBoundingClientRect(),
            a = (function (t, e) {
              const n = Math.abs(t.clientX - e.clientX),
                i = Math.abs(t.clientY - e.clientY),
                s = n / i;
              let r, o;
              return s > 0.3 && s < 1.7 ? (r = o = !0) : n > i ? (r = !0) : (o = !0), { x: r, y: o };
            })(s[0], s[1]),
            l = e.options.zoom.mode;
          Fq(t, {
            x: a.x && yq(l, 'x', t) ? r : 1,
            y: a.y && yq(l, 'y', t) ? r : 1,
            focalPoint: { x: i.x - o.left, y: i.y - o.top },
          }),
            (e.scale = n.scale);
        }
      }
      function Kq(t, e, n) {
        const i = e.delta;
        i &&
          ((e.panning = !0),
          Bq(t, { x: n.deltaX - i.x, y: n.deltaY - i.y }, e.panScales),
          (e.delta = { x: n.deltaX, y: n.deltaY }));
      }
      const Xq = new WeakMap(),
        Zq = {
          id: 'zoom',
          version: '1.1.1',
          defaults: {
            pan: { enabled: !1, mode: 'xy', threshold: 10, modifierKey: null },
            zoom: {
              wheel: { enabled: !1, speed: 0.1, modifierKey: null },
              drag: { enabled: !1, modifierKey: null },
              pinch: { enabled: !1 },
              mode: 'xy',
            },
          },
          start: function (t, e, n) {
            (xq(t).options = n),
              Object.prototype.hasOwnProperty.call(n.zoom, 'enabled') &&
                console.warn(
                  'The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`.'
                ),
              fq() &&
                (function (t, e) {
                  const n = xq(t),
                    i = t.canvas,
                    { pan: s, zoom: r } = e,
                    o = new (fq().Manager)(i);
                  r &&
                    r.pinch.enabled &&
                    (o.add(new (fq().Pinch)()),
                    o.on('pinchstart', () =>
                      (function (t, e) {
                        e.options.zoom.pinch.enabled && (e.scale = 1);
                      })(0, n)
                    ),
                    o.on('pinch', (e) => Qq(t, n, e)),
                    o.on('pinchend', (e) =>
                      (function (t, e, n) {
                        e.scale && (Qq(t, e, n), (e.scale = null), lV(e.options.zoom.onZoomComplete, [{ chart: t }]));
                      })(t, n, e)
                    )),
                    s &&
                      s.enabled &&
                      (o.add(new (fq().Pan)({ threshold: s.threshold, enable: Gq(t, n) })),
                      o.on('panstart', (e) =>
                        (function (t, e, n) {
                          const { enabled: i, overScaleMode: s, onPanStart: r, onPanRejected: o } = e.options.pan;
                          if (!i) return;
                          const a = n.target.getBoundingClientRect(),
                            l = { x: n.center.x - a.left, y: n.center.y - a.top };
                          if (!1 === lV(r, [{ chart: t, event: n, point: l }])) return lV(o, [{ chart: t, event: n }]);
                          (e.panScales = s && vq(s, l, t)),
                            (e.delta = { x: 0, y: 0 }),
                            clearTimeout(e.panEndTimeout),
                            Kq(t, e, n);
                        })(t, n, e)
                      ),
                      o.on('panmove', (e) => Kq(t, n, e)),
                      o.on('panend', () =>
                        (function (t, e) {
                          (e.delta = null),
                            e.panning &&
                              ((e.panEndTimeout = setTimeout(() => (e.panning = !1), 500)),
                              lV(e.options.pan.onPanComplete, [{ chart: t }]));
                        })(t, n)
                      )),
                    Xq.set(t, o);
                })(t, n),
              (t.pan = (e, n, i) => Bq(t, e, n, i)),
              (t.zoom = (e, n) => Fq(t, e, n)),
              (t.zoomScale = (e, n, i) =>
                (function (t, e, n, i = 'none') {
                  Rq(t, xq(t)), Sq(t.scales[e], n, void 0, !0), t.update(i);
                })(t, e, n, i)),
              (t.resetZoom = (e) =>
                (function (t, e = 'default') {
                  const n = xq(t),
                    i = Rq(t, n);
                  cV(t.scales, function (t) {
                    const e = t.options;
                    i[t.id]
                      ? ((e.min = i[t.id].min.options), (e.max = i[t.id].max.options))
                      : (delete e.min, delete e.max);
                  }),
                    t.update(e),
                    lV(n.options.zoom.onZoomComplete, [{ chart: t }]);
                })(t, e)),
              (t.getZoomLevel = () =>
                (function (t) {
                  const e = xq(t);
                  let n = 1,
                    i = 1;
                  return (
                    cV(t.scales, function (t) {
                      const s = (function (t, e) {
                        const n = t.originalScaleLimits[e];
                        if (!n) return;
                        const { min: i, max: s } = n;
                        return oV(s.options, s.scale) - oV(i.options, i.scale);
                      })(e, t.id);
                      if (s) {
                        const e = Math.round((s / (t.max - t.min)) * 100) / 100;
                        (n = Math.min(n, e)), (i = Math.max(i, e));
                      }
                    }),
                    n < 1 ? n : i
                  );
                })(t));
          },
          beforeEvent(t) {
            const e = xq(t);
            if (e.panning || e.dragging) return !1;
          },
          beforeUpdate: function (t, e, n) {
            (xq(t).options = n),
              (function (t, e) {
                const n = t.canvas,
                  { wheel: i, drag: s, onZoomComplete: r } = e.zoom;
                i.enabled
                  ? (jq(t, n, 'wheel', Yq),
                    (function (t, e, n, i) {
                      n &&
                        (xq(t).handlers.onZoomComplete = (function (t, e) {
                          let n;
                          return function () {
                            return clearTimeout(n), (n = setTimeout(t, 250)), 250;
                          };
                        })(() => lV(n, [{ chart: t }])));
                    })(t, 0, r))
                  : zq(t, 'wheel'),
                  s.enabled
                    ? (jq(t, n, 'mousedown', qq), jq(t, n.ownerDocument, 'mouseup', Uq))
                    : (zq(t, 'mousedown'), zq(t, 'mousemove'), zq(t, 'mouseup'));
              })(t, n);
          },
          beforeDatasetsDraw: function (t, e, n) {
            const { dragStart: i, dragEnd: s } = xq(t);
            if (s) {
              const { left: e, top: r, width: o, height: a } = Wq(t, n.zoom.mode, i, s),
                l = n.zoom.drag,
                c = t.ctx;
              c.save(),
                c.beginPath(),
                (c.fillStyle = l.backgroundColor || 'rgba(225,225,225,0.3)'),
                c.fillRect(e, r, o, a),
                l.borderWidth > 0 &&
                  ((c.lineWidth = l.borderWidth),
                  (c.strokeStyle = l.borderColor || 'rgba(225,225,225)'),
                  c.strokeRect(e, r, o, a)),
                c.restore();
            }
          },
          stop: function (t) {
            !(function (t) {
              zq(t, 'mousedown'), zq(t, 'mousemove'), zq(t, 'mouseup'), zq(t, 'wheel'), zq(t, 'click');
            })(t),
              fq() &&
                (function (t) {
                  const e = Xq.get(t);
                  e &&
                    (e.remove('pinchstart'),
                    e.remove('pinch'),
                    e.remove('pinchend'),
                    e.remove('panstart'),
                    e.remove('pan'),
                    e.remove('panend'),
                    e.destroy(),
                    Xq.delete(t));
                })(t),
              (function (t) {
                wq.delete(t);
              })(t);
          },
          panFunctions: Dq,
          zoomFunctions: Tq,
        },
        Jq = function (t, e) {
          return t === e || (t != t && e != e);
        },
        tW = function (t, e) {
          for (var n = t.length; n--; ) if (Jq(t[n][0], e)) return n;
          return -1;
        };
      var eW = Array.prototype.splice;
      function nW(t) {
        var e = -1,
          n = null == t ? 0 : t.length;
        for (this.clear(); ++e < n; ) {
          var i = t[e];
          this.set(i[0], i[1]);
        }
      }
      (nW.prototype.clear = function () {
        (this.__data__ = []), (this.size = 0);
      }),
        (nW.prototype.delete = function (t) {
          var e = this.__data__,
            n = tW(e, t);
          return !(n < 0 || (n == e.length - 1 ? e.pop() : eW.call(e, n, 1), --this.size, 0));
        }),
        (nW.prototype.get = function (t) {
          var e = this.__data__,
            n = tW(e, t);
          return n < 0 ? void 0 : e[n][1];
        }),
        (nW.prototype.has = function (t) {
          return tW(this.__data__, t) > -1;
        }),
        (nW.prototype.set = function (t, e) {
          var n = this.__data__,
            i = tW(n, t);
          return i < 0 ? (++this.size, n.push([t, e])) : (n[i][1] = e), this;
        });
      const iW = nW,
        sW = 'object' == typeof global && global && global.Object === Object && global;
      var rW = 'object' == typeof self && self && self.Object === Object && self;
      const oW = sW || rW || Function('return this')();
      var aW = oW.Symbol,
        lW = Object.prototype,
        cW = lW.hasOwnProperty,
        hW = lW.toString,
        uW = aW ? aW.toStringTag : void 0,
        dW = Object.prototype.toString,
        pW = aW ? aW.toStringTag : void 0;
      const mW = function (t) {
          return null == t
            ? void 0 === t
              ? '[object Undefined]'
              : '[object Null]'
            : pW && pW in Object(t)
            ? (function (t) {
                var e = cW.call(t, uW),
                  n = t[uW];
                try {
                  t[uW] = void 0;
                  var i = !0;
                } catch (r) {}
                var s = hW.call(t);
                return i && (e ? (t[uW] = n) : delete t[uW]), s;
              })(t)
            : (function (t) {
                return dW.call(t);
              })(t);
        },
        fW = function (t) {
          var e = typeof t;
          return null != t && ('object' == e || 'function' == e);
        },
        gW = function (t) {
          if (!fW(t)) return !1;
          var e = mW(t);
          return (
            '[object Function]' == e ||
            '[object GeneratorFunction]' == e ||
            '[object AsyncFunction]' == e ||
            '[object Proxy]' == e
          );
        },
        _W = oW['__core-js_shared__'];
      var bW = (function () {
          var t = /[^.]+$/.exec((_W && _W.keys && _W.keys.IE_PROTO) || '');
          return t ? 'Symbol(src)_1.' + t : '';
        })(),
        yW = Function.prototype.toString,
        vW = /^\[object .+?Constructor\]$/,
        wW = RegExp(
          '^' +
            Function.prototype.toString
              .call(Object.prototype.hasOwnProperty)
              .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
              .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') +
            '$'
        );
      const xW = function (t, e) {
          var n = (function (t, e) {
            return null == t ? void 0 : t[e];
          })(t, e);
          return (function (t) {
            return (
              !(!fW(t) || ((e = t), bW && bW in e)) &&
              (gW(t) ? wW : vW).test(
                (function (t) {
                  if (null != t) {
                    try {
                      return yW.call(t);
                    } catch (e) {}
                    try {
                      return t + '';
                    } catch (e) {}
                  }
                  return '';
                })(t)
              )
            );
            var e;
          })(n)
            ? n
            : void 0;
        },
        CW = xW(oW, 'Map'),
        kW = xW(Object, 'create');
      var SW = Object.prototype.hasOwnProperty,
        EW = Object.prototype.hasOwnProperty;
      function OW(t) {
        var e = -1,
          n = null == t ? 0 : t.length;
        for (this.clear(); ++e < n; ) {
          var i = t[e];
          this.set(i[0], i[1]);
        }
      }
      (OW.prototype.clear = function () {
        (this.__data__ = kW ? kW(null) : {}), (this.size = 0);
      }),
        (OW.prototype.delete = function (t) {
          var e = this.has(t) && delete this.__data__[t];
          return (this.size -= e ? 1 : 0), e;
        }),
        (OW.prototype.get = function (t) {
          var e = this.__data__;
          if (kW) {
            var n = e[t];
            return '__lodash_hash_undefined__' === n ? void 0 : n;
          }
          return SW.call(e, t) ? e[t] : void 0;
        }),
        (OW.prototype.has = function (t) {
          var e = this.__data__;
          return kW ? void 0 !== e[t] : EW.call(e, t);
        }),
        (OW.prototype.set = function (t, e) {
          var n = this.__data__;
          return (
            (this.size += this.has(t) ? 0 : 1), (n[t] = kW && void 0 === e ? '__lodash_hash_undefined__' : e), this
          );
        });
      const PW = OW,
        AW = function (t, e) {
          var n,
            i,
            s = t.__data__;
          return (
            'string' == (i = typeof (n = e)) || 'number' == i || 'symbol' == i || 'boolean' == i
              ? '__proto__' !== n
              : null === n
          )
            ? s['string' == typeof e ? 'string' : 'hash']
            : s.map;
        };
      function TW(t) {
        var e = -1,
          n = null == t ? 0 : t.length;
        for (this.clear(); ++e < n; ) {
          var i = t[e];
          this.set(i[0], i[1]);
        }
      }
      (TW.prototype.clear = function () {
        (this.size = 0), (this.__data__ = { hash: new PW(), map: new (CW || iW)(), string: new PW() });
      }),
        (TW.prototype.delete = function (t) {
          var e = AW(this, t).delete(t);
          return (this.size -= e ? 1 : 0), e;
        }),
        (TW.prototype.get = function (t) {
          return AW(this, t).get(t);
        }),
        (TW.prototype.has = function (t) {
          return AW(this, t).has(t);
        }),
        (TW.prototype.set = function (t, e) {
          var n = AW(this, t),
            i = n.size;
          return n.set(t, e), (this.size += n.size == i ? 0 : 1), this;
        });
      const DW = TW;
      function MW(t) {
        var e = (this.__data__ = new iW(t));
        this.size = e.size;
      }
      (MW.prototype.clear = function () {
        (this.__data__ = new iW()), (this.size = 0);
      }),
        (MW.prototype.delete = function (t) {
          var e = this.__data__,
            n = e.delete(t);
          return (this.size = e.size), n;
        }),
        (MW.prototype.get = function (t) {
          return this.__data__.get(t);
        }),
        (MW.prototype.has = function (t) {
          return this.__data__.has(t);
        }),
        (MW.prototype.set = function (t, e) {
          var n = this.__data__;
          if (n instanceof iW) {
            var i = n.__data__;
            if (!CW || i.length < 199) return i.push([t, e]), (this.size = ++n.size), this;
            n = this.__data__ = new DW(i);
          }
          return n.set(t, e), (this.size = n.size), this;
        });
      const RW = MW,
        IW = (function () {
          try {
            var t = xW(Object, 'defineProperty');
            return t({}, '', {}), t;
          } catch (e) {}
        })(),
        LW = function (t, e, n) {
          '__proto__' == e && IW ? IW(t, e, { configurable: !0, enumerable: !0, value: n, writable: !0 }) : (t[e] = n);
        },
        FW = function (t, e, n) {
          ((void 0 !== n && !Jq(t[e], n)) || (void 0 === n && !(e in t))) && LW(t, e, n);
        };
      var NW = 'object' == typeof exports && exports && !exports.nodeType && exports;
      NW && 'object' == typeof module && module && !module.nodeType && module;
      const VW = oW.Uint8Array;
      var BW = Object.create;
      const zW = (function () {
          function t() {}
          return function (e) {
            if (!fW(e)) return {};
            if (BW) return BW(e);
            t.prototype = e;
            var n = new t();
            return (t.prototype = void 0), n;
          };
        })(),
        jW =
          ((HW = Object.getPrototypeOf),
          ($W = Object),
          function (t) {
            return HW($W(t));
          });
      var HW,
        $W,
        qW = Object.prototype;
      const WW = function (t) {
          var e = t && t.constructor;
          return t === (('function' == typeof e && e.prototype) || qW);
        },
        UW = function (t) {
          return null != t && 'object' == typeof t;
        },
        YW = function (t) {
          return UW(t) && '[object Arguments]' == mW(t);
        };
      var GW = Object.prototype,
        QW = GW.hasOwnProperty,
        KW = GW.propertyIsEnumerable;
      const XW = YW(
          (function () {
            return arguments;
          })()
        )
          ? YW
          : function (t) {
              return UW(t) && QW.call(t, 'callee') && !KW.call(t, 'callee');
            },
        ZW = Array.isArray,
        JW = function (t) {
          return 'number' == typeof t && t > -1 && t % 1 == 0 && t <= 9007199254740991;
        },
        tU = function (t) {
          return null != t && JW(t.length) && !gW(t);
        };
      var eU = 'object' == typeof exports && exports && !exports.nodeType && exports,
        nU = eU && 'object' == typeof module && module && !module.nodeType && module,
        iU = nU && nU.exports === eU ? oW.Buffer : void 0;
      const sU =
        (iU ? iU.isBuffer : void 0) ||
        function () {
          return !1;
        };
      var rU = Function.prototype.toString,
        oU = Object.prototype.hasOwnProperty,
        aU = rU.call(Object),
        lU = {};
      (lU['[object Float32Array]'] =
        lU['[object Float64Array]'] =
        lU['[object Int8Array]'] =
        lU['[object Int16Array]'] =
        lU['[object Int32Array]'] =
        lU['[object Uint8Array]'] =
        lU['[object Uint8ClampedArray]'] =
        lU['[object Uint16Array]'] =
        lU['[object Uint32Array]'] =
          !0),
        (lU['[object Arguments]'] =
          lU['[object Array]'] =
          lU['[object ArrayBuffer]'] =
          lU['[object Boolean]'] =
          lU['[object DataView]'] =
          lU['[object Date]'] =
          lU['[object Error]'] =
          lU['[object Function]'] =
          lU['[object Map]'] =
          lU['[object Number]'] =
          lU['[object Object]'] =
          lU['[object RegExp]'] =
          lU['[object Set]'] =
          lU['[object String]'] =
          lU['[object WeakMap]'] =
            !1);
      var cU = 'object' == typeof exports && exports && !exports.nodeType && exports,
        hU = cU && 'object' == typeof module && module && !module.nodeType && module,
        uU = hU && hU.exports === cU && sW.process,
        dU = (function () {
          try {
            return (hU && hU.require && hU.require('util').types) || (uU && uU.binding && uU.binding('util'));
          } catch (t) {}
        })(),
        pU = dU && dU.isTypedArray;
      const mU = pU
          ? (function (t) {
              return function (e) {
                return t(e);
              };
            })(pU)
          : function (t) {
              return UW(t) && JW(t.length) && !!lU[mW(t)];
            },
        fU = function (t, e) {
          if (('constructor' !== e || 'function' != typeof t[e]) && '__proto__' != e) return t[e];
        };
      var gU = Object.prototype.hasOwnProperty;
      const _U = function (t, e, n) {
        var i = t[e];
        (gU.call(t, e) && Jq(i, n) && (void 0 !== n || e in t)) || LW(t, e, n);
      };
      var bU = /^(?:0|[1-9]\d*)$/;
      const yU = function (t, e) {
        var n = typeof t;
        return (
          !!(e = null == e ? 9007199254740991 : e) &&
          ('number' == n || ('symbol' != n && bU.test(t))) &&
          t > -1 &&
          t % 1 == 0 &&
          t < e
        );
      };
      var vU = Object.prototype.hasOwnProperty;
      var wU = Object.prototype.hasOwnProperty;
      const xU = function (t) {
          return tU(t)
            ? (function (t, e) {
                var n = ZW(t),
                  i = !n && XW(t),
                  s = !n && !i && sU(t),
                  r = !n && !i && !s && mU(t),
                  o = n || i || s || r,
                  a = o
                    ? (function (t, e) {
                        for (var n = -1, i = Array(t); ++n < t; ) i[n] = e(n);
                        return i;
                      })(t.length, String)
                    : [],
                  l = a.length;
                for (var c in t)
                  (!e && !vU.call(t, c)) ||
                    (o &&
                      ('length' == c ||
                        (s && ('offset' == c || 'parent' == c)) ||
                        (r && ('buffer' == c || 'byteLength' == c || 'byteOffset' == c)) ||
                        yU(c, l))) ||
                    a.push(c);
                return a;
              })(t, !0)
            : (function (t) {
                if (!fW(t))
                  return (function (t) {
                    var e = [];
                    if (null != t) for (var n in Object(t)) e.push(n);
                    return e;
                  })(t);
                var e = WW(t),
                  n = [];
                for (var i in t) ('constructor' != i || (!e && wU.call(t, i))) && n.push(i);
                return n;
              })(t);
        },
        CU = function (t, e, n, i, s, r, o) {
          var a,
            l = fU(t, n),
            c = fU(e, n),
            h = o.get(c);
          if (h) FW(t, n, h);
          else {
            var u = r ? r(l, c, n + '', t, e, o) : void 0,
              d = void 0 === u;
            if (d) {
              var p = ZW(c),
                m = !p && sU(c),
                f = !p && !m && mU(c);
              (u = c),
                p || m || f
                  ? ZW(l)
                    ? (u = l)
                    : UW((a = l)) && tU(a)
                    ? (u = (function (t, e) {
                        var n = -1,
                          i = t.length;
                        for (e || (e = Array(i)); ++n < i; ) e[n] = t[n];
                        return e;
                      })(l))
                    : m
                    ? ((d = !1), (u = c.slice()))
                    : f
                    ? ((d = !1),
                      (u = (function (t, e) {
                        var n,
                          i,
                          s = e
                            ? ((i = new (n = t.buffer).constructor(n.byteLength)), new VW(i).set(new VW(n)), i)
                            : t.buffer;
                        return new t.constructor(s, t.byteOffset, t.length);
                      })(c, !0)))
                    : (u = [])
                  : (function (t) {
                      if (!UW(t) || '[object Object]' != mW(t)) return !1;
                      var e = jW(t);
                      if (null === e) return !0;
                      var n = oU.call(e, 'constructor') && e.constructor;
                      return 'function' == typeof n && n instanceof n && rU.call(n) == aU;
                    })(c) || XW(c)
                  ? ((u = l),
                    XW(l)
                      ? (u = (function (t) {
                          return (function (t, e, n, i) {
                            var s = !n;
                            n || (n = {});
                            for (var r = -1, o = e.length; ++r < o; ) {
                              var a = e[r],
                                l = void 0;
                              void 0 === l && (l = t[a]), s ? LW(n, a, l) : _U(n, a, l);
                            }
                            return n;
                          })(t, xU(t));
                        })(l))
                      : (fW(l) && !gW(l)) ||
                        (u = (function (t) {
                          return 'function' != typeof t.constructor || WW(t) ? {} : zW(jW(t));
                        })(c)))
                  : (d = !1);
            }
            d && (o.set(c, u), s(u, c, i, r, o), o.delete(c)), FW(t, n, u);
          }
        },
        kU = function t(e, n, i, s, r) {
          e !== n &&
            (function (t, e, n) {
              for (var i = -1, s = Object(t), r = n(t), o = r.length; o--; ) {
                var a = r[++i];
                if (!1 === e(s[a], a, s)) break;
              }
            })(
              n,
              function (o, a) {
                if ((r || (r = new RW()), fW(o))) CU(e, n, a, i, t, s, r);
                else {
                  var l = s ? s(fU(e, a), o, a + '', e, n, r) : void 0;
                  void 0 === l && (l = o), FW(e, a, l);
                }
              },
              xU
            );
        },
        SU = function (t) {
          return t;
        },
        EU = function (t, e, n) {
          switch (n.length) {
            case 0:
              return t.call(e);
            case 1:
              return t.call(e, n[0]);
            case 2:
              return t.call(e, n[0], n[1]);
            case 3:
              return t.call(e, n[0], n[1], n[2]);
          }
          return t.apply(e, n);
        };
      var OU = Math.max,
        PU = Date.now;
      const AU = (function (t) {
          var e = 0,
            n = 0;
          return function () {
            var i = PU(),
              s = 16 - (i - n);
            if (((n = i), s > 0)) {
              if (++e >= 800) return arguments[0];
            } else e = 0;
            return t.apply(void 0, arguments);
          };
        })(
          IW
            ? function (t, e) {
                return IW(t, 'toString', {
                  configurable: !0,
                  enumerable: !1,
                  value:
                    ((n = e),
                    function () {
                      return n;
                    }),
                  writable: !0,
                });
                var n;
              }
            : SU
        ),
        TU =
          ((DU = function (t, e, n) {
            kU(t, e, n);
          }),
          (function (t, e) {
            return AU(
              (function (t, e, n) {
                return (
                  (e = OU(void 0 === e ? t.length - 1 : e, 0)),
                  function () {
                    for (var i = arguments, s = -1, r = OU(i.length - e, 0), o = Array(r); ++s < r; ) o[s] = i[e + s];
                    s = -1;
                    for (var a = Array(e + 1); ++s < e; ) a[s] = i[s];
                    return (a[e] = n(o)), EU(t, this, a);
                  }
                );
              })(t, void 0, SU),
              t + ''
            );
          })(function (t, e) {
            var n = -1,
              i = e.length,
              s = i > 1 ? e[i - 1] : void 0,
              r = i > 2 ? e[2] : void 0;
            for (
              s = DU.length > 3 && 'function' == typeof s ? (i--, s) : void 0,
                r &&
                  (function (t, e, n) {
                    if (!fW(n)) return !1;
                    var i = typeof e;
                    return !!('number' == i ? tU(n) && yU(e, n.length) : 'string' == i && (e in n)) && Jq(n[e], t);
                  })(e[0], e[1], r) &&
                  ((s = i < 3 ? void 0 : s), (i = 1)),
                t = Object(t);
              ++n < i;

            ) {
              var o = e[n];
              o && DU(t, o, n);
            }
            return t;
          }));
      var DU;
      let MU = (() => {
          class t {
            constructor() {
              this.colorschemesOptions = new qP(void 0);
            }
            setColorschemesOptions(t) {
              (this.pColorschemesOptions = t), this.colorschemesOptions.next(t);
            }
            getColorschemesOptions() {
              return this.pColorschemesOptions;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({
              factory: function () {
                return new t();
              },
              token: t,
              providedIn: 'root',
            })),
            t
          );
        })(),
        RU = (() => {
          class t {
            constructor(t, e, n) {
              (this.element = t),
                (this.zone = e),
                (this.themeService = n),
                (this.type = 'bar'),
                (this.plugins = []),
                (this.chartClick = new cc()),
                (this.chartHover = new cc()),
                (this.subs = []),
                (this.ctx = t.nativeElement.getContext('2d')),
                this.subs.push(this.themeService.colorschemesOptions.pipe(Ew()).subscribe((t) => this.themeChanged(t)));
            }
            ngOnChanges(t) {
              const e = ['type'],
                n = Object.getOwnPropertyNames(t);
              if (n.some((t) => e.includes(t)) || n.every((e) => t[e].isFirstChange())) this.render();
              else {
                const t = this.getChartConfiguration();
                this.chart &&
                  (Object.assign(this.chart.config.data, t.data),
                  Object.assign(this.chart.config.plugins, t.plugins),
                  Object.assign(this.chart.config.options, t.options)),
                  this.update();
              }
            }
            ngOnDestroy() {
              this.chart && (this.chart.destroy(), (this.chart = void 0)), this.subs.forEach((t) => t.unsubscribe());
            }
            render() {
              return this.chart && this.chart.destroy(), (this.chart = new HH(this.ctx, this.getChartConfiguration()));
            }
            update(t) {
              this.chart &&
                this.zone.runOutsideAngular(() => {
                  var e;
                  return null === (e = this.chart) || void 0 === e ? void 0 : e.update(t);
                });
            }
            hideDataset(t, e) {
              this.chart && ((this.chart.getDatasetMeta(t).hidden = e), this.update());
            }
            isDatasetHidden(t) {
              var e, n;
              return null === (n = null === (e = this.chart) || void 0 === e ? void 0 : e.getDatasetMeta(t)) ||
                void 0 === n
                ? void 0
                : n.hidden;
            }
            toBase64Image() {
              var t;
              return null === (t = this.chart) || void 0 === t ? void 0 : t.toBase64Image();
            }
            themeChanged(t) {
              (this.themeOverrides = t),
                this.chart && (Object.assign(this.chart.config.options, this.getChartOptions()), this.update());
            }
            getChartOptions() {
              return TU(
                {
                  onHover: (t, e) => {
                    (e && !e.length) || this.chartHover.emit({ event: t, active: e });
                  },
                  onClick: (t, e) => {
                    this.chartClick.emit({ event: t, active: e });
                  },
                },
                this.themeOverrides,
                this.options,
                { plugins: { legend: { display: this.legend } } }
              );
            }
            getChartConfiguration() {
              return {
                type: this.type,
                data: this.getChartData(),
                plugins: this.plugins,
                options: this.getChartOptions(),
              };
            }
            getChartData() {
              return this.data ? this.data : { labels: this.labels || [], datasets: this.datasets || [] };
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(Za), Ro(Xc), Ro(MU));
            }),
            (t.ɵdir = Xt({
              type: t,
              selectors: [['canvas', 'baseChart', '']],
              inputs: {
                type: 'type',
                plugins: 'plugins',
                legend: 'legend',
                data: 'data',
                options: 'options',
                labels: 'labels',
                datasets: 'datasets',
              },
              outputs: { chartClick: 'chartClick', chartHover: 'chartHover' },
              exportAs: ['base-chart'],
              features: [ue],
            })),
            t
          );
        })();
      const IU = [
          [255, 99, 132],
          [54, 162, 235],
          [255, 206, 86],
          [231, 233, 237],
          [75, 192, 192],
          [151, 187, 205],
          [220, 220, 220],
          [247, 70, 74],
          [70, 191, 189],
          [253, 180, 92],
          [148, 159, 177],
          [77, 83, 96],
        ],
        LU = {
          datasets: {
            line: {
              backgroundColor: (t) => FU(VU(t.datasetIndex), 0.4),
              borderColor: (t) => FU(VU(t.datasetIndex), 1),
              pointBackgroundColor: (t) => FU(VU(t.datasetIndex), 1),
              pointBorderColor: '#fff',
              pointHoverBackgroundColor: '#fff',
              pointHoverBorderColor: (t) => FU(VU(t.datasetIndex), 0.8),
            },
            bar: {
              backgroundColor: (t) => FU(VU(t.datasetIndex), 0.6),
              borderColor: (t) => FU(VU(t.datasetIndex), 1),
              hoverBackgroundColor: (t) => FU(VU(t.datasetIndex), 0.8),
              hoverBorderColor: (t) => FU(VU(t.datasetIndex), 1),
            },
            get radar() {
              return this.line;
            },
            doughnut: {
              backgroundColor: (t) => FU(VU(t.dataIndex), 0.6),
              borderColor: '#fff',
              hoverBackgroundColor: (t) => FU(VU(t.dataIndex), 1),
              hoverBorderColor: (t) => FU(VU(t.dataIndex), 1),
            },
            get pie() {
              return this.doughnut;
            },
            polarArea: {
              backgroundColor: (t) => FU(VU(t.dataIndex), 0.6),
              borderColor: (t) => FU(VU(t.dataIndex), 1),
              hoverBackgroundColor: (t) => FU(VU(t.dataIndex), 0.8),
              hoverBorderColor: (t) => FU(VU(t.dataIndex), 1),
            },
            get bubble() {
              return this.doughnut;
            },
            get scatter() {
              return this.doughnut;
            },
            get area() {
              return this.polarArea;
            },
          },
        };
      function FU(t, e) {
        return 'rgba(' + t.concat(e).join(',') + ')';
      }
      function NU(t, e) {
        return Math.floor(Math.random() * (e - t + 1)) + t;
      }
      function VU(t = 0) {
        return IU[t] || [NU(0, 255), NU(0, 255), NU(0, 255)];
      }
      HH.register(D$, q$, E$, A$, wj, n$, s$, G$, W$, bj, h$, vj, GH, kj, iq, Cj, xj, yj, Sj, pq);
      let BU = (() => {
        class t {
          static forRoot(e) {
            HH.register((null == e ? void 0 : e.plugins) || []);
            const n = TU(LU, (null == e ? void 0 : e.defaults) || {});
            return AB.set(n), { ngModule: t, providers: [MU] };
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[]] })),
          t
        );
      })();
      var zU = (() => (
        (function (t) {
          (t.IsFood = 'isFood'), (t.IsSleep = 'isSleep'), (t.IsString = 'isString'), (t.IsWeight = 'isWeight');
        })(zU || (zU = {})),
        zU
      ))();
      HH.register(Zq);
      let jU = (() => {
        class t {
          constructor() {
            (this.grayScaleMode = !1),
              (this.lineChartData = [
                {
                  data: [],
                  label: 'Sleep',
                  yAxisID: 'sleep',
                  backgroundColor: this.grayScaleMode ? 'rgba(119,136,153, 0.5)' : 'rgba(0, 255, 255, 0.75)',
                  segment: {
                    borderColor: (t) => this.colorSegmentFunction(t, 'gray'),
                    borderDash: (t) => this.borderDashSegmentFunction(t, [6, 6]),
                  },
                },
                {
                  data: [],
                  label: 'Weight',
                  yAxisID: 'weight',
                  backgroundColor: this.grayScaleMode ? 'rgba(220,220,220, 0.5)' : 'rgba(255, 255, 0, 0.5)',
                  segment: {
                    borderColor: (t) => this.colorSegmentFunction(t, 'gray'),
                    borderDash: (t) => this.borderDashSegmentFunction(t, [6, 6]),
                  },
                },
              ]),
              (this.lineChartLabels = []),
              (this.lineChartOptions = {
                responsive: !0,
                scales: {
                  weight: {
                    type: 'linear',
                    position: 'left',
                    beginAtZero: !0,
                    min: 0,
                    suggestedMax: 100,
                    bounds: 'data',
                    grace: 20,
                  },
                  sleep: {
                    type: 'linear',
                    position: 'right',
                    beginAtZero: !0,
                    grid: { display: !1 },
                    suggestedMax: 16,
                    suggestedMin: 0,
                  },
                },
                elements: { line: { borderColor: 'black', borderWidth: 3, fill: !0 } },
                spanGaps: !0,
                interaction: { intersect: !1 },
                plugins: {
                  zoom: {
                    limits: { x: { minRange: 9 } },
                    pan: { enabled: !0, mode: 'x' },
                    zoom: { pinch: { enabled: !0 }, wheel: { enabled: !0, speed: 0.5 }, mode: 'x' },
                  },
                },
              }),
              (this.lineChartLegend = !0),
              (this.lineChartPlugins = [Zq]),
              (this.lineChartType = 'line'),
              (this.borderDashSegmentFunction = (t, e) => (t.p0.skip || t.p1.skip ? e : void 0));
          }
          colorSegmentFunction(t, e) {
            return t.p0.skip || t.p1.skip ? e : void 0;
          }
          getDatesArray(t, e) {
            for (var n = [], i = new Date(t); i <= e; i.setDate(i.getDate() + 1)) n.push(new Date(i));
            return n;
          }
          sameDay(t, e) {
            return t.getFullYear() === e.getFullYear() && t.getMonth() === e.getMonth() && t.getDate() === e.getDate();
          }
          ngOnInit() {
            const t = this.customer.question;
            let e = t.filter((t) => t.constraint === zU.IsSleep),
              n = t.filter((t) => t.constraint === zU.IsWeight),
              i = [];
            if (0 === e.length && 0 !== n.length) i = this.getDatesArray(new Date(n[0].createdAt), new Date());
            else if (0 !== e.length && 0 === n.length) i = this.getDatesArray(new Date(e[0].createdAt), new Date());
            else if (0 !== e.length && 0 !== n.length) {
              const t = new Date(n[0].createdAt),
                s = new Date(e[0].createdAt);
              i = this.getDatesArray(t > s ? s : t, new Date());
            }
            this.lineChartLabels = i.map((t) => t.toLocaleDateString().split('T')[0].replace(/-/g, '/'));
            const s = new Array(this.lineChartLabels.length).fill(void 0);
            n.forEach((t) => {
              const e = i.findIndex((e) => this.sameDay(new Date(t.createdAt), e));
              s[e] = null === t.answer ? null : Number(t.answer);
            });
            const r = new Array(this.lineChartLabels.length).fill(void 0);
            e.forEach((t) => {
              const e = i.findIndex((e) => this.sameDay(new Date(t.createdAt), e));
              r[e] = null === t.answer ? null : Number(t.answer);
            }),
              (this.lineChartData.find((t) => 'weight' === t.label.toLowerCase()).data = s),
              (this.lineChartData.find((t) => 'sleep' === t.label.toLowerCase()).data = r);
          }
          userPreference(t) {
            let e = {};
            switch (t) {
              case 'greyScale':
                e.greyScale = this.grayScaleMode;
                break;
              case 'yellowBlue':
                e.yellowBlue = this.grayScaleMode;
            }
            (this.lineChartData[0].backgroundColor = this.grayScaleMode
              ? 'rgba(119,136,153, 0.5)'
              : 'rgba(0, 255, 255, 0.75)'),
              (this.lineChartData[1].backgroundColor = this.grayScaleMode
                ? 'rgba(220,220,220, 0.5)'
                : 'rgba(255, 255, 0, 0.5)'),
              this.chart.update();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['app-line-chart']],
            viewQuery: function (t, e) {
              if ((1 & t && xc(RU, 1), 2 & t)) {
                let t;
                wc((t = kc())) && (e.chart = t.first);
              }
            },
            inputs: { customer: 'customer' },
            decls: 15,
            vars: 7,
            consts: [
              [1, 'inner-chart-wrapper'],
              [3, 'ngModel', 'ngModelChange', 'change'],
              ['baseChart', '', 3, 'datasets', 'labels', 'options', 'legend', 'type', 'plugins'],
            ],
            template: function (t, e) {
              1 & t &&
                (Fo(0, 'div', 0),
                Ca(1, '\n  '),
                Fo(2, 'div'),
                Ca(3, '\n    GreyScale Mode\n    '),
                Fo(4, 'span'),
                Ca(5, '\n      '),
                Fo(6, 'mat-slide-toggle', 1),
                Uo('ngModelChange', function (t) {
                  return (e.grayScaleMode = t);
                })('change', function () {
                  return e.userPreference('colorMode');
                }),
                Ca(7, ' '),
                No(),
                Ca(8, '\n    '),
                No(),
                Ca(9, '\n  '),
                No(),
                Ca(10, '\n\n  '),
                Fo(11, 'canvas', 2),
                Ca(12, '\n  '),
                No(),
                Ca(13, '\n'),
                No(),
                Ca(14, '\n')),
                2 & t &&
                  (tr(6),
                  Io('ngModel', e.grayScaleMode),
                  tr(5),
                  Io('datasets', e.lineChartData)('labels', e.lineChartLabels)('options', e.lineChartOptions)(
                    'legend',
                    e.lineChartLegend
                  )('type', e.lineChartType)('plugins', e.lineChartPlugins));
            },
            directives: [cP, dp, Up, RU],
            styles: [''],
          })),
          t
        );
      })();
      const HU = ['paginator'];
      function $U(t, e) {
        1 & t && (Fo(0, 'th', 39), Ca(1, 'Name'), No());
      }
      function qU(t, e) {
        if ((1 & t && (Fo(0, 'span'), Ca(1), No()), 2 & t)) {
          const t = Xo().$implicit;
          tr(1), ka(t.name);
        }
      }
      function WU(t, e) {
        1 & t && Ca(0), 2 & t && ka(Xo().$implicit.telegramName);
      }
      function UU(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 40),
            Ca(1, '\n                  '),
            Do(2, qU, 2, 1, 'span', 41),
            Ca(3, '\n                  '),
            Do(4, WU, 1, 1, 'ng-template', null, 42, Pc),
            Ca(6, '\n                '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = Mo(5);
          tr(2), Io('ngIf', t.name)('ngIfElse', n);
        }
      }
      function YU(t, e) {
        1 & t && (Fo(0, 'th', 39), Ca(1, 'Phone/Telegram Chat ID'), No());
      }
      function GU(t, e) {
        if ((1 & t && (Fo(0, 'td', 40), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(null !== t.phone ? t.phone : t.telegramChatId);
        }
      }
      function QU(t, e) {
        1 & t && (Fo(0, 'th', 39), Ca(1, 'Customer ID'), No());
      }
      function KU(t, e) {
        if ((1 & t && (Fo(0, 'span'), Ca(1), No()), 2 & t)) {
          const t = Xo().$implicit;
          tr(1), Sa('\n                    ', t.customerId, '\n                  ');
        }
      }
      function XU(t, e) {
        1 & t && Ca(0, 'N/A');
      }
      function ZU(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 40),
            Ca(1, '\n                  '),
            Do(2, KU, 2, 1, 'span', 41),
            Ca(3, '\n                  '),
            Do(4, XU, 1, 0, 'ng-template', null, 43, Pc),
            Ca(6, '\n                '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = Mo(5);
          tr(2), Io('ngIf', t.customerId)('ngIfElse', n);
        }
      }
      function JU(t, e) {
        1 & t && (Fo(0, 'th', 39), Ca(1, 'Supervisor'), No());
      }
      function tY(t, e) {
        if ((1 & t && (Fo(0, 'span'), Ca(1), No()), 2 & t)) {
          const t = Xo().$implicit;
          tr(1), Sa('\n                    ', t.supervisor.username, '\n                  ');
        }
      }
      function eY(t, e) {
        1 & t && Ca(0, 'N/A');
      }
      function nY(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 40),
            Ca(1, '\n                  '),
            Do(2, tY, 2, 1, 'span', 41),
            Ca(3, '\n                  '),
            Do(4, eY, 1, 0, 'ng-template', null, 44, Pc),
            Ca(6, '\n                '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = Mo(5);
          tr(2), Io('ngIf', t.supervisor)('ngIfElse', n);
        }
      }
      function iY(t, e) {
        1 & t && (Fo(0, 'th', 39), Ca(1, 'Program'), No());
      }
      function sY(t, e) {
        if ((1 & t && (Fo(0, 'span'), Ca(1), No()), 2 & t)) {
          const t = Xo().$implicit;
          tr(1), Sa('\n                    ', t.activeProgram.name, '\n                  ');
        }
      }
      function rY(t, e) {
        1 & t && Ca(0, 'N/A');
      }
      function oY(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 40),
            Ca(1, '\n                  '),
            Do(2, sY, 2, 1, 'span', 41),
            Ca(3, '\n                  '),
            Do(4, rY, 1, 0, 'ng-template', null, 45, Pc),
            Ca(6, '\n                '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = Mo(5);
          tr(2), Io('ngIf', t.activeProgram && t.activeProgram.name)('ngIfElse', n);
        }
      }
      function aY(t, e) {
        1 & t && (Fo(0, 'th', 39), Ca(1, 'Time Remaining'), No());
      }
      function lY(t, e) {
        if ((1 & t && (Fo(0, 'td', 40), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.timeRemaining);
        }
      }
      function cY(t, e) {
        1 & t && (Fo(0, 'th', 39), Ca(1, 'Actions'), No());
      }
      const hY = function (t) {
        return { data: t };
      };
      function uY(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'button', 48),
            Ca(1, '\n                    '),
            Fo(2, 'mat-icon'),
            Ca(3, 'more_vert'),
            No(),
            Ca(4, '\n                  '),
            No()),
          2 & t)
        ) {
          const t = Xo().$implicit;
          Xo(), Io('matMenuTriggerFor', Mo(155))('matMenuTriggerData', Jl(2, hY, t));
        }
      }
      function dY(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'td', 40),
            Ca(1, '\n                  '),
            Fo(2, 'button', 46),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit,
                i = Xo(),
                s = Mo(167);
              return i.viewCustomerDetails(s, n.id);
            }),
            Ca(3, '\n                    View\n                  '),
            No(),
            Ca(4, '\n                  '),
            Do(5, uY, 5, 4, 'button', 47),
            Ca(6, '\n                '),
            No();
        }
        if (2 & t) {
          const t = Xo();
          tr(5), Io('ngIf', t.isAdmin);
        }
      }
      function pY(t, e) {
        1 & t && Vo(0, 'tr', 49);
      }
      function mY(t, e) {
        1 & t && Vo(0, 'tr', 50);
      }
      function fY(t, e) {
        1 & t &&
          (Fo(0, 'tr', 51),
          Ca(1, '\n                '),
          Fo(2, 'td', 52),
          Ca(3, 'No data found.'),
          No(),
          Ca(4, '\n              '),
          No());
      }
      function gY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n    '),
            Fo(1, 'button', 53),
            Uo('click', function () {
              Fe(t);
              const n = e.data,
                i = Xo(),
                s = Mo(164);
              return i.deleteCustomer(s, n);
            }),
            Ca(2, '\n      '),
            Fo(3, 'mat-icon'),
            Ca(4, 'delete'),
            No(),
            Ca(5, '\n      '),
            Fo(6, 'span'),
            Ca(7, 'Delete'),
            No(),
            Ca(8, '\n    '),
            No(),
            Ca(9, '\n    '),
            Fo(10, 'button', 53),
            Uo('click', function () {
              Fe(t);
              const n = e.data,
                i = Xo(),
                s = Mo(161);
              return i.editProfile(s, n);
            }),
            Ca(11, '\n      '),
            Fo(12, 'mat-icon'),
            Ca(13, 'edit'),
            No(),
            Ca(14, '\n      '),
            Fo(15, 'span'),
            Ca(16, 'Edit'),
            No(),
            Ca(17, '\n    '),
            No(),
            Ca(18, '\n\n    '),
            Ca(19, '\n\n    '),
            Ca(20, '\n  ');
        }
      }
      function _Y(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 70), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          Io('value', t), tr(1), Sa('', t.username, '\n            ');
        }
      }
      function bY(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 70), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          Io('value', t), tr(1), ka(t.name);
        }
      }
      function yY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 54),
            Ca(2, '\n    '),
            Fo(3, 'h4', 55),
            Ca(4, 'Edit User'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 56),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 57),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 58),
            Uo('ngSubmit', function () {
              Fe(t);
              const e = Xo();
              return e.editCustomer(e.selectedCustomerID);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 59),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'mat-form-field', 60),
            Ca(20, '\n          '),
            Fo(21, 'mat-label'),
            Ca(22, 'Email'),
            No(),
            Ca(23, '\n          '),
            Vo(24, 'input', 61),
            Ca(25, '\n        '),
            No(),
            Ca(26, '\n      '),
            No(),
            Ca(27, '\n\n      '),
            Fo(28, 'div'),
            Ca(29, '\n        '),
            Fo(30, 'mat-form-field', 60),
            Ca(31, '\n          '),
            Fo(32, 'mat-label'),
            Ca(33, 'Initial Weight'),
            No(),
            Ca(34, '\n          '),
            Vo(35, 'input', 62),
            Ca(36, '\n        '),
            No(),
            Ca(37, '\n      '),
            No(),
            Ca(38, '\n\n      '),
            Fo(39, 'div'),
            Ca(40, '\n        '),
            Fo(41, 'mat-form-field', 60),
            Ca(42, '\n          '),
            Fo(43, 'mat-label'),
            Ca(44, 'Phone Number'),
            No(),
            Ca(45, '\n          '),
            Vo(46, 'input', 63),
            Ca(47, '\n        '),
            No(),
            Ca(48, '\n      '),
            No(),
            Ca(49, '\n      '),
            Fo(50, 'div'),
            Ca(51, '\n        '),
            Fo(52, 'mat-form-field', 64),
            Ca(53, '\n          '),
            Fo(54, 'mat-select', 65),
            Ca(55, '\n            '),
            Do(56, _Y, 2, 2, 'mat-option', 66),
            Ca(57, '\n          '),
            No(),
            Ca(58, '\n        '),
            No(),
            Ca(59, '\n      '),
            No(),
            Ca(60, '\n\n      '),
            Fo(61, 'div'),
            Ca(62, '\n        '),
            Fo(63, 'mat-form-field', 64),
            Ca(64, '\n          '),
            Fo(65, 'mat-select', 67),
            Ca(66, '\n            '),
            Do(67, bY, 2, 2, 'mat-option', 66),
            Ca(68, '\n          '),
            No(),
            Ca(69, '\n        '),
            No(),
            Ca(70, '\n      '),
            No(),
            Ca(71, '\n    '),
            No(),
            Ca(72, '\n    '),
            Fo(73, 'div', 68),
            Ca(74, '\n      '),
            Fo(75, 'button', 69),
            Ca(76, 'Submit'),
            No(),
            Ca(77, '\n    '),
            No(),
            Ca(78, '\n  '),
            No(),
            Ca(79, '\n');
        }
        if (2 & t) {
          const t = Xo();
          tr(13),
            Io('formGroup', t.editCustomerForm),
            tr(41),
            Io('compareWith', t.compareSupervisor),
            tr(2),
            Io('ngForOf', t.supervisors),
            tr(9),
            Io('compareWith', t.compareProgram),
            tr(2),
            Io('ngForOf', t.programs),
            tr(8),
            Io('disabled', t.editCustomerForm.invalid);
        }
      }
      function vY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 54),
            Ca(2, '\n    '),
            Fo(3, 'h4', 71),
            Ca(4, '\n      '),
            Fo(5, 'mat-icon', 72),
            Ca(6, 'warning'),
            No(),
            Fo(7, 'span', 73),
            Ca(8, 'Confirmation'),
            No(),
            Ca(9, '\n    '),
            No(),
            Ca(10, '\n    '),
            Fo(11, 'button', 56),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(12, '\n      '),
            Fo(13, 'span', 57),
            Ca(14, '\xd7'),
            No(),
            Ca(15, '\n    '),
            No(),
            Ca(16, '\n  '),
            No(),
            Ca(17, '\n  '),
            Fo(18, 'div', 59),
            Ca(19, '\n    '),
            Fo(20, 'span'),
            Ca(21, 'Are you sure you want to delete '),
            Fo(22, 'span', 74),
            Ca(23),
            No(),
            Ca(24, '?'),
            No(),
            Ca(25, '\n  '),
            No(),
            Ca(26, '\n  '),
            Fo(27, 'div', 68),
            Ca(28, '\n    '),
            Fo(29, 'button', 75),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(30, '\n      Cancel\n    '),
            No(),
            Ca(31, '\n    '),
            Fo(32, 'button', 76),
            Uo('click', function () {
              Fe(t);
              const e = Xo();
              return e.patchCustomer(e.selectedCustomerID);
            }),
            Ca(33, 'Delete'),
            No(),
            Ca(34, '\n  '),
            No(),
            Ca(35, '\n');
        }
        if (2 & t) {
          const t = Xo();
          tr(23), ka(t.selectedCustomerName);
        }
      }
      function wY(t, e) {
        if ((1 & t && (Fo(0, 'span'), Ca(1), No()), 2 & t)) {
          const t = Xo(2);
          tr(1), ka(t.selectedCustomer.fullName);
        }
      }
      function xY(t, e) {
        1 & t && Ca(0), 2 & t && ka(Xo(2).selectedCustomer.telegramName);
      }
      function CY(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div', 80),
            Ca(1, '\n        '),
            Fo(2, 'mat-card', 81),
            Ca(3, '\n          '),
            Fo(4, 'div'),
            Ca(5, '\n            Moneyback:\n            '),
            Fo(6, 'span'),
            Ca(7, '\n              '),
            Fo(8, 'mat-slide-toggle', 86),
            Uo('ngModelChange', function (e) {
              return Fe(t), (Xo(2).currentMoneyback = e);
            })('change', function () {
              return Fe(t), Xo(2).userPreference('moneyback');
            }),
            Ca(9, '\n              '),
            No(),
            Ca(10, '\n              '),
            Fo(11, 'mat-icon', 87),
            Ca(12),
            No(),
            No(),
            Ca(13, '\n          '),
            No(),
            Ca(14, '\n          '),
            Fo(15, 'div'),
            Ca(16, '\n            Instagram:\n            '),
            Fo(17, 'span'),
            Ca(18, '\n              '),
            Fo(19, 'mat-slide-toggle', 86),
            Uo('ngModelChange', function (e) {
              return Fe(t), (Xo(2).currentInsta = e);
            })('change', function () {
              return Fe(t), Xo(2).userPreference('insta');
            }),
            No(),
            Ca(20, '\n              '),
            Fo(21, 'mat-icon', 87),
            Ca(22),
            No(),
            No(),
            Ca(23, '\n          '),
            No(),
            Ca(24, '\n          '),
            Fo(25, 'div'),
            Ca(26, '\n            Food Questions:\n            '),
            Fo(27, 'span'),
            Ca(28, '\n              '),
            Fo(29, 'mat-slide-toggle', 86),
            Uo('ngModelChange', function (e) {
              return Fe(t), (Xo(2).currentFoodQuestions = e);
            })('change', function () {
              return Fe(t), Xo(2).userPreference('foodQuestions');
            }),
            Ca(30, '\n              '),
            No(),
            Ca(31, '\n              '),
            Fo(32, 'mat-icon', 87),
            Ca(33),
            No(),
            No(),
            Ca(34, '\n          '),
            No(),
            Ca(35, '\n          '),
            Fo(36, 'div'),
            Ca(37, '\n            Sleep Questions:\n            '),
            Fo(38, 'span'),
            Ca(39, '\n              '),
            Fo(40, 'mat-slide-toggle', 86),
            Uo('ngModelChange', function (e) {
              return Fe(t), (Xo(2).currentSleepQuestions = e);
            })('change', function () {
              return Fe(t), Xo(2).userPreference('sleepQuestions');
            }),
            Ca(41, '\n              '),
            No(),
            Ca(42, '\n              '),
            Fo(43, 'mat-icon', 87),
            Ca(44),
            No(),
            No(),
            Ca(45, '\n          '),
            No(),
            Ca(46, '\n          '),
            Fo(47, 'div'),
            Ca(48, '\n            Weight Questions:\n            '),
            Fo(49, 'span'),
            Ca(50, '\n              '),
            Fo(51, 'mat-slide-toggle', 86),
            Uo('ngModelChange', function (e) {
              return Fe(t), (Xo(2).currentWeightQuestions = e);
            })('change', function () {
              return Fe(t), Xo(2).userPreference('weightQuestions');
            }),
            Ca(52, '\n              '),
            No(),
            Ca(53, '\n              '),
            Fo(54, 'mat-icon', 87),
            Ca(55),
            No(),
            No(),
            Ca(56, '\n          '),
            No(),
            Ca(57, '\n          '),
            Fo(58, 'div'),
            Ca(59, '\n            Food Recommendations:\n            '),
            Fo(60, 'span'),
            Ca(61, '\n              '),
            Fo(62, 'mat-slide-toggle', 86),
            Uo('ngModelChange', function (e) {
              return Fe(t), (Xo(2).currentFood = e);
            })('change', function () {
              return Fe(t), Xo(2).userPreference('foodRecommendations');
            }),
            Ca(63, '\n              '),
            No(),
            Ca(64, '\n              '),
            Fo(65, 'mat-icon', 87),
            Ca(66),
            No(),
            No(),
            Ca(67, '\n          '),
            No(),
            Ca(68, '\n          '),
            Fo(69, 'div'),
            Ca(70, '\n            Diagram:\n            '),
            Fo(71, 'span'),
            Ca(72, '\n              '),
            Fo(73, 'mat-slide-toggle', 86),
            Uo('ngModelChange', function (e) {
              return Fe(t), (Xo(2).currentSleepDiagram = e);
            })('change', function () {
              return Fe(t), Xo(2).userPreference('diagram');
            }),
            Ca(74, '\n              '),
            No(),
            Ca(75, '\n              '),
            Fo(76, 'mat-icon', 87),
            Ca(77),
            No(),
            No(),
            Ca(78, '\n          '),
            No(),
            Ca(79, '\n          '),
            Fo(80, 'div'),
            Ca(81, '\n            Questionnaires:\n            '),
            Fo(82, 'span'),
            Ca(83, '\n              '),
            Fo(84, 'mat-slide-toggle', 86),
            Uo('ngModelChange', function (e) {
              return Fe(t), (Xo(2).currentSleepDiagram = e);
            })('change', function () {
              return Fe(t), Xo(2).userPreference('questionnaires');
            }),
            Ca(85, '\n              '),
            No(),
            Ca(86, '\n              '),
            Fo(87, 'mat-icon', 87),
            Ca(88),
            No(),
            No(),
            Ca(89, '\n          '),
            No(),
            Ca(90, '\n        '),
            No(),
            Ca(91, '\n      '),
            No();
        }
        if (2 & t) {
          const t = Xo(2);
          tr(8),
            Io('ngModel', t.currentMoneyback),
            tr(4),
            ka(t.currentMoneyback ? 'lock_open' : 'lock'),
            tr(7),
            Io('ngModel', t.currentInsta),
            tr(3),
            ka(t.currentInsta ? 'lock_open' : 'lock'),
            tr(7),
            Io('ngModel', t.currentFoodQuestions),
            tr(4),
            ka(t.currentFoodQuestions ? 'lock_open' : 'lock'),
            tr(7),
            Io('ngModel', t.currentSleepQuestions),
            tr(4),
            ka(t.currentSleepQuestions ? 'lock_open' : 'lock'),
            tr(7),
            Io('ngModel', t.currentWeightQuestions),
            tr(4),
            ka(t.currentWeightQuestions ? 'lock_open' : 'lock'),
            tr(7),
            Io('ngModel', t.currentFood),
            tr(4),
            ka(t.currentFood ? 'lock_open' : 'lock'),
            tr(7),
            Io('ngModel', t.currentSleepDiagram),
            tr(4),
            ka(t.currentSleepDiagram ? 'lock_open' : 'lock'),
            tr(7),
            Io('ngModel', t.currentSleepDiagram),
            tr(4),
            ka(t.currentQuestionnaires ? 'lock_open' : 'lock');
        }
      }
      function kY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 54),
            Ca(2, '\n    '),
            Fo(3, 'h4', 55),
            Ca(4, '\n      '),
            Do(5, wY, 2, 1, 'span', 41),
            Ca(6, '\n      '),
            Do(7, xY, 1, 1, 'ng-template', null, 42, Pc),
            Ca(9, '\n      '),
            Fo(10, 'button', 77),
            Uo('click', function () {
              Fe(t);
              const e = Xo();
              return e.sendMessage(e.selectedCustomer.telegramChatId);
            }),
            Ca(11, '\n        '),
            Fo(12, 'span', 78),
            Ca(13, 'Message'),
            No(),
            Ca(14, '\n      '),
            No(),
            Ca(15, '\n      '),
            Fo(16, 'button', 77),
            Uo('click', function () {
              Fe(t);
              const e = Xo(),
                n = Mo(170);
              return e.viewProgramHistory(n);
            }),
            Ca(17, '\n        '),
            Fo(18, 'span', 78),
            Ca(19, 'Program History'),
            No(),
            Ca(20, '\n      '),
            No(),
            Ca(21, '\n      '),
            Fo(22, 'button', 77),
            Uo('click', function () {
              Fe(t);
              const e = Xo(),
                n = Mo(173);
              return e.viewDietPlan(n);
            }),
            Ca(23, '\n        '),
            Fo(24, 'span', 78),
            Ca(25, 'Diet Plan'),
            No(),
            Ca(26, '\n      '),
            No(),
            Ca(27, '\n      '),
            Fo(28, 'button', 77),
            Uo('click', function () {
              Fe(t);
              const e = Xo(),
                n = Mo(176);
              return e.viewNotes(n);
            }),
            Ca(29, '\n        '),
            Fo(30, 'span', 78),
            Ca(31, 'Add Note'),
            No(),
            Ca(32, '\n      '),
            No(),
            Ca(33, '\n      '),
            Ca(34, '\n    '),
            No(),
            Ca(35, '\n    '),
            Fo(36, 'button', 56),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(37, '\n      '),
            Fo(38, 'span', 57),
            Ca(39, '\xd7'),
            No(),
            Ca(40, '\n    '),
            No(),
            Ca(41, '\n  '),
            No(),
            Ca(42, '\n  '),
            Fo(43, 'div', 79),
            Ca(44, '\n    '),
            Fo(45, 'div', 7),
            Ca(46, '\n      '),
            Fo(47, 'div', 80),
            Ca(48, '\n        '),
            Fo(49, 'mat-card', 81),
            Ca(50, '\n          '),
            Fo(51, 'div'),
            Ca(52, '\n            Customer ID:\n            '),
            Fo(53, 'span'),
            Ca(54),
            No(),
            Ca(55, '\n          '),
            No(),
            Ca(56, '\n          '),
            Fo(57, 'div'),
            Ca(58, '\n            Phone Number:\n            '),
            Fo(59, 'span'),
            Ca(60),
            No(),
            Ca(61, '\n          '),
            No(),
            Ca(62, '\n          '),
            Fo(63, 'div'),
            Ca(64, '\n            Email: '),
            Fo(65, 'span'),
            Ca(66),
            No(),
            Ca(67, '\n          '),
            No(),
            Ca(68, '\n          '),
            Fo(69, 'div'),
            Ca(70, '\n            DOB: '),
            Fo(71, 'span'),
            Ca(72),
            No(),
            Ca(73, '\n          '),
            No(),
            Ca(74, '\n        '),
            No(),
            Ca(75, '\n      '),
            No(),
            Ca(76, '\n      '),
            Fo(77, 'div', 80),
            Ca(78, '\n        '),
            Fo(79, 'mat-card', 81),
            Ca(80, '\n          '),
            Fo(81, 'div'),
            Ca(82, 'Product Type: '),
            Fo(83, 'span'),
            Ca(84, 'N/A'),
            No(),
            No(),
            Ca(85, '\n          '),
            Fo(86, 'div'),
            Ca(87, '\n            Height: '),
            Fo(88, 'span'),
            Ca(89),
            No(),
            Ca(90, '\n          '),
            No(),
            Ca(91, '\n          '),
            Fo(92, 'div'),
            Ca(93, '\n            Initial Weight:\n            '),
            Fo(94, 'span'),
            Ca(95),
            No(),
            Ca(96, '\n          '),
            No(),
            Ca(97, '\n          '),
            Fo(98, 'div'),
            Ca(99, '\n            Last/Current Weight:\n            '),
            Fo(100, 'span'),
            Ca(101),
            No(),
            Ca(102, '\n          '),
            No(),
            Ca(103, '\n        '),
            No(),
            Ca(104, '\n      '),
            No(),
            Ca(105, '\n      '),
            Do(106, CY, 92, 16, 'div', 82),
            Ca(107, '\n    '),
            No(),
            Ca(108, '\n\n    '),
            Fo(109, 'div', 83),
            Ca(110, '\n      '),
            Fo(111, 'div', 84),
            Ca(112, '\n        '),
            Fo(113, 'h5'),
            Ca(114, 'Diagram'),
            No(),
            Ca(115, '\n        '),
            Ca(116, '\n        '),
            Vo(117, 'app-line-chart', 85),
            Ca(118, '\n        '),
            Ca(119, '\n      '),
            No(),
            Ca(120, '\n    '),
            No(),
            Ca(121, '\n  '),
            No(),
            Ca(122, '\n  '),
            Ca(123, '\n');
        }
        if (2 & t) {
          const t = Mo(8),
            e = Xo();
          tr(5),
            Io('ngIf', e.selectedCustomer.fullName)('ngIfElse', t),
            tr(49),
            ka(null !== e.selectedCustomer.customerId ? e.selectedCustomer.customerId : 'N/A'),
            tr(6),
            ka(null !== e.selectedCustomer.phone ? e.selectedCustomer.phone : e.selectedCustomer.telegramChatId),
            tr(6),
            ka(null !== e.selectedCustomer.email ? e.selectedCustomer.email : 'N/A'),
            tr(6),
            ka(null !== e.selectedCustomer.dob ? e.selectedCustomer.dob : 'N/A'),
            tr(17),
            ka(null !== e.selectedCustomer.height ? e.selectedCustomer.height : 'N/A'),
            tr(6),
            ka(null !== e.selectedCustomer.initialWeight ? e.selectedCustomer.initialWeight : 'N/A'),
            tr(6),
            ka(null !== e.selectedCustomer.currentWeight ? e.selectedCustomer.currentWeight : 'N/A'),
            tr(5),
            Io('ngIf', e.isAdmin),
            tr(11),
            Io('customer', e.selectedCustomer);
        }
      }
      function SY(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'tr'),
            Ca(1, '\n          '),
            Fo(2, 'th', 91),
            Ca(3),
            No(),
            Ca(4, '\n          '),
            Fo(5, 'td'),
            Ca(6),
            No(),
            Ca(7, '\n          '),
            Fo(8, 'td'),
            Ca(9),
            No(),
            Ca(10, '\n          '),
            Fo(11, 'td'),
            Ca(12),
            No(),
            Ca(13, '\n\n          '),
            Fo(14, 'td'),
            Ca(15, '\n            '),
            Fo(16, 'mat-icon', 92),
            Ca(17),
            No(),
            Ca(18, '\n          '),
            No(),
            Ca(19, '\n          '),
            Fo(20, 'td'),
            Ca(21, '\n            '),
            Fo(22, 'mat-icon', 92),
            Ca(23),
            No(),
            Ca(24, '\n          '),
            No(),
            Ca(25, '\n          '),
            Fo(26, 'td'),
            Ca(27, '\n            '),
            Fo(28, 'mat-icon', 92),
            Ca(29),
            No(),
            Ca(30, '\n          '),
            No(),
            Ca(31, '\n          '),
            Fo(32, 'td'),
            Ca(33),
            No(),
            Ca(34, '\n        '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit;
          tr(3),
            ka(t.program.name),
            tr(3),
            ka(t.program.id),
            tr(3),
            ka(t.program.createdAt),
            tr(3),
            ka(t.program.updatedAt),
            tr(5),
            ka(!0 === t.program.moneyback ? 'done' : 'warning_amber'),
            tr(6),
            ka(!0 === t.program.question ? 'done' : 'warning_amber'),
            tr(6),
            ka(!0 === t.program.foodRecommendations ? 'done' : 'warning_amber'),
            tr(4),
            ka(t.program.duration);
        }
      }
      function EY(t, e) {
        if (
          (1 & t &&
            (Ca(0, '\n  '),
            Fo(1, 'div', 54),
            Ca(2, '\n    '),
            Fo(3, 'h4', 55),
            Ca(4, 'Program History'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 56),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 57),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'div', 59),
            Ca(14, '\n    '),
            Fo(15, 'table', 88),
            Ca(16, '\n      '),
            Fo(17, 'thead'),
            Ca(18, '\n        '),
            Fo(19, 'tr'),
            Ca(20, '\n          '),
            Fo(21, 'th', 89),
            Ca(22, 'Program'),
            No(),
            Ca(23, '\n          '),
            Fo(24, 'th', 89),
            Ca(25, 'Id'),
            No(),
            Ca(26, '\n          '),
            Fo(27, 'th', 89),
            Ca(28, 'created at'),
            No(),
            Ca(29, '\n          '),
            Fo(30, 'th', 89),
            Ca(31, 'updated at'),
            No(),
            Ca(32, '\n          '),
            Fo(33, 'th', 89),
            Ca(34, 'money back'),
            No(),
            Ca(35, '\n          '),
            Fo(36, 'th', 89),
            Ca(37, 'question'),
            No(),
            Ca(38, '\n          '),
            Fo(39, 'th', 89),
            Ca(40, 'food recommendations'),
            No(),
            Ca(41, '\n          '),
            Fo(42, 'th', 89),
            Ca(43, 'duration'),
            No(),
            Ca(44, '\n        '),
            No(),
            Ca(45, '\n      '),
            No(),
            Ca(46, '\n      '),
            Fo(47, 'tbody'),
            Ca(48, '\n        '),
            Do(49, SY, 35, 8, 'tr', 90),
            Ca(50, '\n      '),
            No(),
            Ca(51, '\n    '),
            No(),
            Ca(52, '\n  '),
            No(),
            Ca(53, '\n')),
          2 & t)
        ) {
          const t = Xo();
          tr(49), Io('ngForOf', t.selectedCustomer.programHistory);
        }
      }
      function OY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 54),
            Ca(2, '\n    '),
            Fo(3, 'h4', 55),
            Ca(4, 'Diet Plan'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 56),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 57),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'div', 93),
            Ca(14, '\n    '),
            Fo(15, 'form', 58),
            Uo('ngSubmit', function () {
              Fe(t);
              const e = Xo();
              return e.submitDietPlan(e.selectedCustomerID);
            }),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'span', 94),
            Ca(20, 'Sunday'),
            No(),
            Ca(21, '\n        '),
            Ca(22, '\n        '),
            Vo(23, 'textarea', 95),
            Ca(24, '\n      '),
            No(),
            Ca(25, '\n      '),
            Fo(26, 'div'),
            Ca(27, '\n        '),
            Fo(28, 'span', 94),
            Ca(29, 'Monday'),
            No(),
            Ca(30, '\n        '),
            Vo(31, 'textarea', 96),
            Ca(32, '\n      '),
            No(),
            Ca(33, '\n      '),
            Fo(34, 'div'),
            Ca(35, '\n        '),
            Fo(36, 'span', 94),
            Ca(37, 'Tuesday'),
            No(),
            Ca(38, '\n        '),
            Vo(39, 'textarea', 97),
            Ca(40, '\n      '),
            No(),
            Ca(41, '\n      '),
            Fo(42, 'div'),
            Ca(43, '\n        '),
            Fo(44, 'span', 94),
            Ca(45, 'Wednesday'),
            No(),
            Ca(46, '\n        '),
            Vo(47, 'textarea', 98),
            Ca(48, '\n      '),
            No(),
            Ca(49, '\n      '),
            Fo(50, 'div'),
            Ca(51, '\n        '),
            Fo(52, 'span', 94),
            Ca(53, 'Thursday'),
            No(),
            Ca(54, '\n        '),
            Vo(55, 'textarea', 99),
            Ca(56, '\n      '),
            No(),
            Ca(57, '\n      '),
            Fo(58, 'div'),
            Ca(59, '\n        '),
            Fo(60, 'span', 94),
            Ca(61, 'Friday'),
            No(),
            Ca(62, '\n        '),
            Vo(63, 'textarea', 100),
            Ca(64, '\n      '),
            No(),
            Ca(65, '\n      '),
            Fo(66, 'div'),
            Ca(67, '\n        '),
            Fo(68, 'span', 94),
            Ca(69, 'Saturday'),
            No(),
            Ca(70, '\n        '),
            Vo(71, 'textarea', 101),
            Ca(72, '\n      '),
            No(),
            Ca(73, '\n      '),
            Fo(74, 'button', 102),
            Ca(75, 'Save'),
            No(),
            Ca(76, '\n    '),
            No(),
            Ca(77, '\n  '),
            No(),
            Ca(78, '\n');
        }
        if (2 & t) {
          const t = Xo();
          tr(15), Io('formGroup', t.dietPlanForm);
        }
      }
      function PY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 54),
            Ca(2, '\n    '),
            Fo(3, 'h4', 55),
            Ca(4, 'Add Notes'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 56),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 57),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'div', 93),
            Ca(14, '\n    '),
            Fo(15, 'form', 58),
            Uo('ngSubmit', function () {
              Fe(t);
              const e = Xo();
              return e.submitNote(e.selectedCustomerID);
            }),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'span', 103),
            Ca(20, 'Body'),
            No(),
            Ca(21, '\n        '),
            Ca(22, '\n        '),
            Vo(23, 'textarea', 104),
            Ca(24, '\n      '),
            No(),
            Ca(25, '\n\n      '),
            Fo(26, 'button', 105),
            Ca(27, 'Save'),
            No(),
            Ca(28, '\n    '),
            No(),
            Ca(29, '\n  '),
            No(),
            Ca(30, '\n');
        }
        if (2 & t) {
          const t = Xo();
          tr(15), Io('formGroup', t.notesForm), tr(11), Io('disabled', !t.notesForm.valid);
        }
      }
      const AY = function () {
          return [10];
        },
        TY = ['paginatorMessages'];
      function DY(t, e) {
        1 & t && (Fo(0, 'th', 27), Ca(1, 'From'), No());
      }
      function MY(t, e) {
        if ((1 & t && (Fo(0, 'td', 28), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(null !== t.from ? t.from : 'N/A');
        }
      }
      function RY(t, e) {
        1 & t && (Fo(0, 'th', 27), Ca(1, 'Text'), No());
      }
      function IY(t, e) {
        if ((1 & t && (Fo(0, 'td', 29), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(null !== t.text ? t.text : 'N/A');
        }
      }
      function LY(t, e) {
        1 & t && (Fo(0, 'th', 27), Ca(1, 'timestamp'), No());
      }
      function FY(t, e) {
        if ((1 & t && (Fo(0, 'td', 28), Ca(1), ic(2, 'date'), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1),
            ka(
              null !== t.createdAt
                ? (function (t, e, n, i) {
                    const s = Ie(),
                      r = ke(s, 22);
                    return ac(s, oc(s, 22) ? nc(s, qe(), 1, r.transform, n, i, r) : r.transform(n, i));
                  })(0, 0, t.createdAt, 'short')
                : 'N/A'
            );
        }
      }
      function NY(t, e) {
        1 & t && Vo(0, 'tr', 30);
      }
      function VY(t, e) {
        1 & t && Vo(0, 'tr', 31);
      }
      function BY(t, e) {
        1 & t &&
          (Fo(0, 'tr', 32),
          Ca(1, '\n        '),
          Fo(2, 'td', 33),
          Ca(3, 'No data found.'),
          No(),
          Ca(4, '\n      '),
          No());
      }
      function zY(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n              Message is Required!\n            '), No());
      }
      let jY = (() => {
          class t {
            constructor(t, e, n, i, s, r) {
              (this.quoteService = t),
                (this.modalService = e),
                (this.ngxLoader = n),
                (this.formBuilder = i),
                (this._snackBar = s),
                (this.dialog = r),
                (this.isLoading = !1),
                (this.show = !1),
                (this.isShow = !1),
                (this.hidePaginator = !1),
                (this.supervisors = []),
                (this.programs = []),
                (this.selectedSup = 'one'),
                (this.selectedProgram = 'one'),
                (this.numberOfCustomers = 0),
                (this.numberOfActiveCustomers = 0),
                (this.numberOfInactiveCustomers = 0),
                (this.numberOfCompletedCustomers = 0),
                (this.currentMoneyback = !1),
                (this.currentFoodQuestions = !1),
                (this.currentInsta = !1),
                (this.currentSleepQuestions = !1),
                (this.currentWeightQuestions = !1),
                (this.currentFood = !1),
                (this.currentSleepDiagram = !1),
                (this.currentQuestionnaires = !1),
                (this.currentActiveTab = 'all'),
                (this.displayedColumns = [
                  'name',
                  'phone',
                  'customerId',
                  'supervisor',
                  'program',
                  'timeRemaining',
                  'actions',
                ]),
                (this.messageDisplayedColumns = ['from', 'text', 'timestamp']);
            }
            ngAfterViewInit() {
              this.getCustomers();
            }
            applyFilter(t) {
              this.dataSource.filter = t.target.value.trim().toLowerCase();
            }
            filterCustomer(t) {
              (this.dataSource.filter = t.target.value.trim().toLowerCase()),
                this.dataSource.paginator && this.dataSource.paginator.firstPage();
            }
            ngOnInit() {
              this.ngxLoader.start(),
                (this.sendMessageForm = this.formBuilder.group({ message: ['', [Ud.required]] })),
                this.getPrograms(),
                this.getSupervisors(),
                (this.editCustomerForm = this.formBuilder.group({
                  email: [''],
                  initialWeight: [0],
                  phone: [''],
                  supervisor: [null],
                  activeProgram: [null],
                })),
                (this.dietPlanForm = this.formBuilder.group({
                  sunday: [''],
                  monday: [''],
                  tuesday: [''],
                  wednesday: [''],
                  thursday: [''],
                  friday: [''],
                  saturday: [''],
                })),
                (this.notesForm = this.formBuilder.group({ notes: ['', Ud.required] })),
                (this.isAdmin = 'ADMIN' === localStorage.getItem('userStatus'));
            }
            getPrograms() {
              this.ngxLoader.start(),
                this.quoteService
                  .getAllPrograms()
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        t.body.data &&
                        t.body.data.map((t) => {
                          this.programs.push(t);
                        }),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
            }
            userPreference(t) {
              let e = {};
              switch (t) {
                case 'moneyback':
                  e.moneyback = this.currentMoneyback;
                  break;
                case 'insta':
                  e.instagramFeed = this.currentInsta;
                  break;
                case 'foodQuestions':
                  e.foodQuestions = this.currentFoodQuestions;
                  break;
                case 'sleepQuestions':
                  e.sleepQuestions = this.currentSleepQuestions;
                  break;
                case 'weightQuestions':
                  e.weightQuestions = this.currentWeightQuestions;
                  break;
                case 'foodRecommendations':
                  e.foodRecommendations = this.currentFood;
                  break;
                case 'diagram':
                  e.diagram = this.currentSleepDiagram;
                  break;
                case 'questionnaires':
                  e.questionnaires = this.currentQuestionnaires;
              }
              console.log(e),
                this.quoteService
                  .editCustomer(e, this.selectedCustomerID)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (console.log(t),
                        this._snackBar.open('Customer preferences changed!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.getCustomers(),
                        this.modalService.dismissAll()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
            }
            getSupervisors() {
              this.ngxLoader.start(),
                this.quoteService
                  .getSupervisors()
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        t.body.data &&
                        t.body.data.map((t) => {
                          this.supervisors.push(t);
                        }),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
            }
            getCustomers() {
              (this.isLoading = !0),
                this.quoteService
                  .getAllCustomers()
                  .pipe(
                    pS(() => {
                      this.isLoading = !1;
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        t.body.data &&
                        ((this.customerData = t.body.data),
                        (this.numberOfCustomers = this.customerData.length),
                        this.filterCustomerData(this.customerData)),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.isLoading = !1;
                    }
                  );
            }
            currentActive(t) {
              switch (t) {
                case 'all':
                  (this.currentActiveTab = 'all'),
                    (this.dataSource = new tT(this.allUsers)),
                    (this.dataSource.sort = this.sort),
                    setTimeout(() => {
                      this.dataSource.paginator = this.paginator;
                    }),
                    (this.hidePaginator = !1);
                  break;
                case 'active':
                  (this.currentActiveTab = 'active'),
                    (this.dataSource = new tT(this.activeUsers)),
                    setTimeout(() => {
                      (this.dataSource.paginator = this.paginator), (this.dataSource.sort = this.sort);
                    });
                  break;
                case 'inactive':
                  (this.currentActiveTab = 'inactive'),
                    (this.dataSource = new tT(this.inactiveUsers)),
                    setTimeout(() => {
                      (this.dataSource.paginator = this.paginator), (this.dataSource.sort = this.sort);
                    });
                  break;
                case 'completed':
                  (this.currentActiveTab = 'completed'),
                    (this.dataSource = new tT(this.completedCustomers)),
                    setTimeout(() => {
                      (this.dataSource.paginator = this.paginator), (this.dataSource.sort = this.sort);
                    });
              }
            }
            viewCustomerDetails(t, e) {
              this.selectedCustomerID = e;
              let n = this.customerData
                .map((t) => {
                  if (t.id === e) return t;
                })
                .filter((t) => void 0 !== t);
              (this.selectedCustomer = n[0]),
                0 !== this.selectedCustomer.length &&
                  ((this.currentMoneyback = this.selectedCustomer.moneyback),
                  (this.currentInsta = this.selectedCustomer.instagramFeed),
                  (this.currentFoodQuestions = this.selectedCustomer.foodQuestions),
                  (this.currentSleepQuestions = this.selectedCustomer.sleepQuestions),
                  (this.currentWeightQuestions = this.selectedCustomer.weightQuestions),
                  (this.currentFood = this.selectedCustomer.foodRecommendations),
                  (this.currentSleepDiagram = this.selectedCustomer.diagram),
                  this.dietPlanForm.patchValue(this.selectedCustomer.dietPlan),
                  this.notesForm.patchValue({ notes: this.selectedCustomer.notes })),
                this.modalService.open(t, { size: 'xl' });
            }
            viewProgramHistory(t) {
              this.modalService.open(t, { size: 'xl' });
            }
            viewDietPlan(t) {
              this.modalService.open(t, { size: 'md' });
            }
            viewNotes(t) {
              this.modalService.open(t, { size: 'md' });
            }
            editProfile(t, e) {
              var n, i;
              (this.selectedCustomerID = e.id),
                this.editCustomerForm.patchValue({
                  email: e.email ? e.email : null,
                  initialWeight: e.initialWeight ? e.initialWeight : null,
                  phone: e.phone ? e.phone : null,
                  supervisor: (null === (n = e.supervisor) || void 0 === n ? void 0 : n.id) ? e.supervisor.id : null,
                  activeProgram: (null === (i = e.activeProgram) || void 0 === i ? void 0 : i.id)
                    ? e.activeProgram.id
                    : null,
                }),
                this.modalService.open(t, { size: 'md', backdropClass: 'light-blue-backdrop' });
            }
            compareSupervisor(t, e) {
              return t && e && t.id === e;
            }
            compareProgram(t, e) {
              return t && e && t.id === e;
            }
            sendMessage(t) {
              this.fetchMessages(t),
                (this.messageModal = this.modalService.open(HY, { size: 'xl', backdropClass: 'light-blue-backdrop' })),
                (this.messageModal.componentInstance.parentComponent = this);
            }
            sendTelegramMessage(t, e) {
              this.sendMessageForm.valid &&
                this.quoteService
                  .sendTelegramMessage(this.sendMessageForm.value, e)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Message sent!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.fetchMessages(this.selectedCustomer.telegramChatId),
                        this.sendMessageForm.reset()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
            }
            deleteCustomer(t, e) {
              (this.selectedCustomerID = e.id),
                (this.selectedCustomerName = null !== e.fullName ? e.fullName : e.telegramName),
                this.modalService.open(t, { size: 'md', backdropClass: 'light-blue-backdrop' });
            }
            patchCustomer(t) {
              this.ngxLoader.start(),
                this.quoteService
                  .deleteCustomer(t)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        t.body &&
                        this._snackBar.open('Customer Deleted Successfully!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        'e' === t &&
                          (this.modalService.dismissAll(),
                          this._snackBar.open('Error in deleting the customer', '', {
                            duration: 3e3,
                            verticalPosition: 'top',
                            panelClass: ['blue-snackbar'],
                          })),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
            }
            editCustomer(t) {
              this.editCustomerForm.valid &&
                this.quoteService
                  .editCustomer(this.editCustomerForm.value, t)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Customer details changed!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.getCustomers(),
                        this.modalService.dismissAll(),
                        this.editCustomerForm.reset()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
            }
            submitDietPlan(t) {
              this.dietPlanForm.valid &&
                this.quoteService
                  .editCustomer({ dietPlan: this.dietPlanForm.value }, t)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Customer details changed!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.getCustomers(),
                        this.dietPlanForm.patchValue(t.dietPlan),
                        this.modalService.dismissAll(),
                        this.editCustomerForm.reset()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
            }
            submitNote(t) {
              this.notesForm.valid &&
                this.quoteService
                  .editCustomer({ notes: this.notesForm.value.notes }, t)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Customer details changed!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.getCustomers(),
                        this.modalService.dismissAll()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
            }
            fetchMessages(t) {
              this.quoteService
                .getMessages(t)
                .pipe(
                  pS(() => {
                    this.isLoading = !1;
                  })
                )
                .subscribe(
                  (e) => {
                    if (200 === e.status && e.body) {
                      const n = e.body;
                      if (n.info.totalPages <= 1) console.log(n), this.filterMessages(n.data);
                      else {
                        console.log(n.info.totalPages);
                        for (let e = 2; e <= n.info.totalPages; e++)
                          this.fetchMessagesByPage(t, e).subscribe(
                            (t) => {
                              200 === t.status &&
                                t.body &&
                                ((n.data = n.data.concat(t.body.data)), this.filterMessages(n.data));
                            },
                            (t) => {
                              this.isLoading = !1;
                            }
                          );
                      }
                    }
                    this.ngxLoader.stop();
                  },
                  (t) => {
                    this.isLoading = !1;
                  }
                );
            }
            fetchMessagesByPage(t, e) {
              return this.quoteService.getMessages(t, e).pipe(
                pS(() => {
                  this.isLoading = !1;
                })
              );
            }
            filterMessages(t) {
              void 0 !== t &&
                ((this.currentUserMessages = t.map((t) => ({
                  from: t.from,
                  text: t.text,
                  createdAt: t.createdAt,
                  chatId: t.telegramChatId,
                }))),
                (this.messageDataSource = new tT(this.currentUserMessages)),
                setTimeout(() => {
                  (this.paginatorMessages = this.messageModal.componentInstance.paginatorMessages),
                    (this.messageDataSource.paginator = this.paginatorMessages);
                }));
            }
            filterCustomerData(t) {
              if (void 0 !== t) {
                this.allUsers = t.map((t) => {
                  var e;
                  return Object.assign(
                    {
                      name: t.fullName,
                      timeRemaining:
                        ((null == t ? void 0 : t.programRegistrationTimestamp) &&
                          Math.max(
                            GF(null == t ? void 0 : t.programRegistrationTimestamp).diff(GF(), 'days') +
                              Number(
                                null === (e = null == t ? void 0 : t.activeProgram) || void 0 === e
                                  ? void 0
                                  : e.duration
                              ),
                            0
                          )) ||
                        'N/A',
                    },
                    t
                  );
                });
                let e = this.allUsers.map((t) => {
                  if (null !== t.activeProgram) return t;
                });
                this.activeUsers = e.filter((t) => void 0 !== t);
                let n = this.allUsers.map((t) => {
                  if (null !== t.activeProgram && t.programHistory.length) return t;
                });
                (this.completedCustomers = n.filter((t) => void 0 !== t)),
                  (this.numberOfCompletedCustomers = this.completedCustomers.length),
                  (this.numberOfActiveCustomers = this.activeUsers.length);
                let i = this.allUsers.map((t) => {
                  if (null === t.activeProgram) return t;
                });
                (this.inactiveUsers = i.filter((t) => void 0 !== t)),
                  (this.numberOfInactiveCustomers = this.inactiveUsers.length),
                  (this.dataSource = new tT(this.allUsers)),
                  setTimeout(() => (this.dataSource.paginator = this.paginator));
              }
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(cF), Ro(FN), Ro(WF), Ro(mm), Ro(kP), Ro(qk));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['app-home']],
              viewQuery: function (t, e) {
                if ((1 & t && (xc(HU, 1), xc(DP, 1)), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.paginator = t.first), wc((t = kc())) && (e.sort = t.first);
                }
              },
              decls: 180,
              vars: 13,
              consts: [
                [1, 'container'],
                [1, 'row', 'stat-row'],
                [1, 'col-lg-3', 'col-12', 3, 'click'],
                [
                  1,
                  'card',
                  'card-primary',
                  'p-3',
                  'd-flex',
                  'justify-content-center',
                  'align-items-center',
                  'pointer',
                  3,
                  'ngClass',
                ],
                [1, 'card-text'],
                [1, 'card-number', 'mt-3'],
                [1, 'card', 'p-3', 'd-flex', 'justify-content-center', 'align-items-center', 'pointer', 3, 'ngClass'],
                [1, 'row'],
                [1, 'col-12'],
                [1, 'search-field'],
                [1, 'search-form'],
                ['appearance', 'outline', 1, 'full-width-in'],
                ['matInput', '', 'placeholder', 'Enter customer name to search', 'value', '', 3, 'keyup'],
                [1, 'table-wrapper', 'mt-3'],
                [1, 'card', 'card-primary'],
                [1, 'mat-elevation-z0'],
                ['mat-table', '', 'matSort', '', 1, 'w-100', 3, 'dataSource'],
                ['matColumnDef', 'name'],
                ['mat-header-cell', '', 'mat-sort-header', '', 4, 'matHeaderCellDef'],
                ['mat-cell', '', 4, 'matCellDef'],
                ['matColumnDef', 'phone'],
                ['matColumnDef', 'customerId'],
                ['matColumnDef', 'supervisor'],
                ['matColumnDef', 'program'],
                ['matColumnDef', 'timeRemaining'],
                ['matColumnDef', 'actions'],
                ['mat-header-row', '', 4, 'matHeaderRowDef'],
                ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
                ['class', 'mat-row', 4, 'matNoDataRow'],
                ['showFirstLastButtons', 'false', 'hidePageSize', 'true', 3, 'pageSizeOptions'],
                ['paginator', ''],
                ['menu', 'matMenu'],
                ['matMenuContent', ''],
                ['profileContent', ''],
                ['deleteCustomerContent', ''],
                ['content', ''],
                ['programHistoryContent', ''],
                ['dietPlanContent', ''],
                ['notesContent', ''],
                ['mat-header-cell', '', 'mat-sort-header', ''],
                ['mat-cell', ''],
                [4, 'ngIf', 'ngIfElse'],
                ['showTeleName', ''],
                ['showChatId', ''],
                ['noSupervisor', ''],
                ['noProgramName', ''],
                ['mat-flat-button', '', 'color', 'theme-green', 'type', 'button', 3, 'click'],
                [
                  'mat-icon-button',
                  '',
                  'aria-label',
                  'Example icon-button with a menu',
                  3,
                  'matMenuTriggerFor',
                  'matMenuTriggerData',
                  4,
                  'ngIf',
                ],
                [
                  'mat-icon-button',
                  '',
                  'aria-label',
                  'Example icon-button with a menu',
                  3,
                  'matMenuTriggerFor',
                  'matMenuTriggerData',
                ],
                ['mat-header-row', ''],
                ['mat-row', ''],
                [1, 'mat-row'],
                ['colspan', '4', 1, 'mat-cell'],
                ['mat-menu-item', '', 'type', 'button', 3, 'click'],
                [1, 'modal-header'],
                [1, 'modal-title'],
                ['type', 'button', 'aria-label', 'Close', 1, 'btn', 'btn-light', 3, 'click'],
                ['aria-hidden', 'true'],
                [3, 'formGroup', 'ngSubmit'],
                [1, 'modal-body', 'ff-14'],
                ['appearance', 'outline', 1, 'example-full-width', 'w-100'],
                ['matInput', '', 'placeholder', 'Email', 'formControlName', 'email', 'name', 'email'],
                [
                  'matInput',
                  '',
                  'placeholder',
                  'Initial Weight',
                  'type',
                  'number',
                  'formControlName',
                  'initialWeight',
                  'name',
                  'initialWeight',
                ],
                ['matInput', '', 'placeholder', 'Phone Number', 'formControlName', 'phone', 'name', 'phone'],
                ['appearance', 'outline', 1, 'w-100'],
                ['formControlName', 'supervisor', 'placeholder', 'Supervisor', 3, 'compareWith'],
                [3, 'value', 4, 'ngFor', 'ngForOf'],
                ['formControlName', 'activeProgram', 'placeholder', 'Program', 3, 'compareWith'],
                [1, 'modal-footer'],
                ['mat-button', '', 'type', 'submit', 1, 'button-primary', 3, 'disabled'],
                [3, 'value'],
                [1, 'modal-title', 'd-flex', 'align-items-center'],
                ['aria-hidden', 'false', 'aria-label', 'warning icon'],
                [1, 'margin-left-5'],
                [1, 'text-bold'],
                ['mat-button', '', 'type', 'button', 1, 'button-primary', 'margin-right-10', 3, 'click'],
                ['mat-button', '', 'type', 'button', 1, 'delete-btn', 3, 'click'],
                ['mat-button', '', 'type', 'button', 1, 'button-primary', 3, 'click'],
                [1, 'ml-3'],
                [1, 'modal-body'],
                [1, 'col-sm-4'],
                [1, 'info-card'],
                ['class', 'col-sm-4', 4, 'ngIf'],
                [1, 'row', 'mt-2'],
                [1, 'col-sm-12'],
                [3, 'customer'],
                [3, 'ngModel', 'ngModelChange', 'change'],
                ['aria-hidden', 'false', 'aria-label', 'lock icon'],
                [1, 'table'],
                ['scope', 'col'],
                [4, 'ngFor', 'ngForOf'],
                ['scope', 'row'],
                ['aria-hidden', 'false', 'aria-label', 'True icon'],
                [1, 'diet-plan'],
                [1, 'dpWeekDay'],
                ['formControlName', 'sunday', 'id', 'sunday', 'rows', '3', 1, 'form-control', 'plan-input'],
                ['formControlName', 'monday', 'id', 'monday', 'rows', '3', 1, 'form-control', 'plan-input'],
                ['formControlName', 'tuesday', 'id', 'tuesday', 'rows', '3', 1, 'form-control', 'plan-input'],
                ['formControlName', 'wednesday', 'id', 'wednesday', 'rows', '3', 1, 'form-control', 'plan-input'],
                ['formControlName', 'thursday', 'id', 'thursday', 'rows', '3', 1, 'form-control', 'plan-input'],
                ['formControlName', 'friday', 'id', 'friday', 'rows', '3', 1, 'form-control', 'plan-input'],
                ['formControlName', 'saturday', 'id', 'saturday', 'rows', '3', 1, 'form-control', 'plan-input'],
                ['type', 'submit', 1, 'btn', 'btn-primary', 'dp-info-submit'],
                [1, 'notes'],
                ['formControlName', 'notes', 'rows', '3', 1, 'form-control', 'plan-input'],
                ['type', 'submit', 1, 'btn', 'btn-primary', 'dp-info-submit', 3, 'disabled'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'div', 1),
                  Ca(3, '\n    '),
                  Ca(4, '\n    '),
                  Fo(5, 'div', 2),
                  Uo('click', function () {
                    return e.currentActive('all');
                  }),
                  Ca(6, '\n      '),
                  Fo(7, 'div', 3),
                  Ca(8, '\n        '),
                  Fo(9, 'div', 4),
                  Ca(10, 'All'),
                  No(),
                  Ca(11, '\n\n        '),
                  Fo(12, 'div', 5),
                  Ca(13),
                  No(),
                  Ca(14, '\n      '),
                  No(),
                  Ca(15, '\n    '),
                  No(),
                  Ca(16, '\n    '),
                  Fo(17, 'div', 2),
                  Uo('click', function () {
                    return e.currentActive('active');
                  }),
                  Ca(18, '\n      '),
                  Fo(19, 'div', 6),
                  Ca(20, '\n        '),
                  Fo(21, 'div', 4),
                  Ca(22, 'Active'),
                  No(),
                  Ca(23, '\n\n        '),
                  Fo(24, 'div', 5),
                  Ca(25),
                  No(),
                  Ca(26, '\n      '),
                  No(),
                  Ca(27, '\n    '),
                  No(),
                  Ca(28, '\n    '),
                  Fo(29, 'div', 2),
                  Uo('click', function () {
                    return e.currentActive('inactive');
                  }),
                  Ca(30, '\n      '),
                  Fo(31, 'div', 6),
                  Ca(32, '\n        '),
                  Fo(33, 'div', 4),
                  Ca(34, 'Inactive'),
                  No(),
                  Ca(35, '\n\n        '),
                  Fo(36, 'div', 5),
                  Ca(37),
                  No(),
                  Ca(38, '\n      '),
                  No(),
                  Ca(39, '\n    '),
                  No(),
                  Ca(40, '\n    '),
                  Fo(41, 'div', 2),
                  Uo('click', function () {
                    return e.currentActive('completed');
                  }),
                  Ca(42, '\n      '),
                  Fo(43, 'div', 6),
                  Ca(44, '\n        '),
                  Fo(45, 'div', 4),
                  Ca(46, 'Completed'),
                  No(),
                  Ca(47, '\n\n        '),
                  Fo(48, 'div', 5),
                  Ca(49),
                  No(),
                  Ca(50, '\n      '),
                  No(),
                  Ca(51, '\n    '),
                  No(),
                  Ca(52, '\n  '),
                  No(),
                  Ca(53, '\n\n  '),
                  Ca(54, '\n\n  '),
                  Fo(55, 'div', 7),
                  Ca(56, '\n    '),
                  Fo(57, 'div', 8),
                  Ca(58, '\n      '),
                  Fo(59, 'div', 9),
                  Ca(60, '\n        '),
                  Fo(61, 'form', 10),
                  Ca(62, '\n          '),
                  Fo(63, 'mat-form-field', 11),
                  Ca(64, '\n            '),
                  Ca(65, '\n            '),
                  Fo(66, 'input', 12),
                  Uo('keyup', function (t) {
                    return e.filterCustomer(t);
                  }),
                  No(),
                  Ca(67, '\n          '),
                  No(),
                  Ca(68, '\n        '),
                  No(),
                  Ca(69, '\n      '),
                  No(),
                  Ca(70, '\n    '),
                  No(),
                  Ca(71, '\n  '),
                  No(),
                  Ca(72, '\n\n  '),
                  Ca(73, '\n\n  '),
                  Fo(74, 'div', 7),
                  Ca(75, '\n    '),
                  Fo(76, 'div', 8),
                  Ca(77, '\n      '),
                  Fo(78, 'div', 13),
                  Ca(79, '\n        '),
                  Fo(80, 'div', 14),
                  Ca(81, '\n          '),
                  Fo(82, 'div', 15),
                  Ca(83, '\n            '),
                  Fo(84, 'table', 16),
                  Ca(85, '\n              '),
                  Bo(86, 17),
                  Ca(87, '\n                '),
                  Do(88, $U, 2, 0, 'th', 18),
                  Ca(89, '\n                '),
                  Do(90, UU, 7, 2, 'td', 19),
                  Ca(91, '\n              '),
                  zo(),
                  Ca(92, '\n\n              '),
                  Bo(93, 20),
                  Ca(94, '\n                '),
                  Do(95, YU, 2, 0, 'th', 18),
                  Ca(96, '\n                '),
                  Do(97, GU, 2, 1, 'td', 19),
                  Ca(98, '\n              '),
                  zo(),
                  Ca(99, '\n\n              '),
                  Bo(100, 21),
                  Ca(101, '\n                '),
                  Do(102, QU, 2, 0, 'th', 18),
                  Ca(103, '\n                '),
                  Do(104, ZU, 7, 2, 'td', 19),
                  Ca(105, '\n              '),
                  zo(),
                  Ca(106, '\n\n              '),
                  Bo(107, 22),
                  Ca(108, '\n                '),
                  Do(109, JU, 2, 0, 'th', 18),
                  Ca(110, '\n                '),
                  Do(111, nY, 7, 2, 'td', 19),
                  Ca(112, '\n              '),
                  zo(),
                  Ca(113, '\n\n              '),
                  Bo(114, 23),
                  Ca(115, '\n                '),
                  Do(116, iY, 2, 0, 'th', 18),
                  Ca(117, '\n                '),
                  Do(118, oY, 7, 2, 'td', 19),
                  Ca(119, '\n              '),
                  zo(),
                  Ca(120, '\n\n              '),
                  Bo(121, 24),
                  Ca(122, '\n                '),
                  Do(123, aY, 2, 0, 'th', 18),
                  Ca(124, '\n                '),
                  Do(125, lY, 2, 1, 'td', 19),
                  Ca(126, '\n              '),
                  zo(),
                  Ca(127, '\n\n              '),
                  Bo(128, 25),
                  Ca(129, '\n                '),
                  Do(130, cY, 2, 0, 'th', 18),
                  Ca(131, '\n                '),
                  Do(132, dY, 7, 1, 'td', 19),
                  Ca(133, '\n              '),
                  zo(),
                  Ca(134, '\n\n              '),
                  Do(135, pY, 1, 0, 'tr', 26),
                  Ca(136, '\n              '),
                  Do(137, mY, 1, 0, 'tr', 27),
                  Ca(138, '\n\n              '),
                  Ca(139, '\n              '),
                  Do(140, fY, 5, 0, 'tr', 28),
                  Ca(141, '\n            '),
                  No(),
                  Ca(142, '\n            '),
                  Fo(143, 'mat-paginator', 29, 30),
                  Ca(145, '\n            '),
                  No(),
                  Ca(146, '\n          '),
                  No(),
                  Ca(147, '\n        '),
                  No(),
                  Ca(148, '\n      '),
                  No(),
                  Ca(149, '\n    '),
                  No(),
                  Ca(150, '\n  '),
                  No(),
                  Ca(151, '\n  '),
                  Ca(152, '\n'),
                  No(),
                  Ca(153, '\n\n'),
                  Fo(154, 'mat-menu', null, 31),
                  Ca(156, '\n  '),
                  Do(157, gY, 21, 0, 'ng-template', 32),
                  Ca(158, '\n'),
                  No(),
                  Ca(159, '\n\n'),
                  Do(160, yY, 80, 6, 'ng-template', null, 33, Pc),
                  Ca(162, '\n\n'),
                  Do(163, vY, 36, 1, 'ng-template', null, 34, Pc),
                  Ca(165, '\n\n'),
                  Do(166, kY, 124, 11, 'ng-template', null, 35, Pc),
                  Ca(168, '\n\n'),
                  Do(169, EY, 54, 1, 'ng-template', null, 36, Pc),
                  Ca(171, '\n\n'),
                  Do(172, OY, 79, 1, 'ng-template', null, 37, Pc),
                  Ca(174, '\n'),
                  Do(175, PY, 31, 2, 'ng-template', null, 38, Pc),
                  Ca(177, '\n'),
                  Vo(178, 'ngx-ui-loader'),
                  Ca(179, '\n')),
                  2 & t &&
                    (tr(7),
                    Io('ngClass', 'all' == e.currentActiveTab ? 'card-active' : 'card-primary'),
                    tr(6),
                    ka(e.numberOfCustomers),
                    tr(6),
                    Io('ngClass', 'active' == e.currentActiveTab ? 'card-active' : 'card-primary'),
                    tr(6),
                    ka(e.numberOfActiveCustomers),
                    tr(6),
                    Io('ngClass', 'inactive' == e.currentActiveTab ? 'card-active' : 'card-primary'),
                    tr(6),
                    ka(e.numberOfInactiveCustomers),
                    tr(6),
                    Io('ngClass', 'completed' == e.currentActiveTab ? 'card-active' : 'card-primary'),
                    tr(6),
                    ka(e.numberOfCompletedCustomers),
                    tr(35),
                    Io('dataSource', e.dataSource),
                    tr(51),
                    Io('matHeaderRowDef', e.displayedColumns),
                    tr(2),
                    Io('matRowDefColumns', e.displayedColumns),
                    tr(6),
                    Io('pageSizeOptions', Zl(12, AY)));
              },
              directives: [
                Au,
                LI,
                Yp,
                pp,
                jp,
                _C,
                tS,
                DA,
                DP,
                NA,
                LA,
                RA,
                $A,
                WA,
                XA,
                gO,
                rE,
                XS,
                UF,
                BA,
                VP,
                jA,
                Ru,
                $C,
                cE,
                TS,
                YA,
                QA,
                eE,
                em,
                aC,
                zd,
                dp,
                lm,
                Qp,
                ME,
                Du,
                gw,
                KC,
                jU,
                cP,
                Up,
              ],
              styles: [
                '@charset "UTF-8";.container[_ngcontent-%COMP%]{text-align:center;padding:1em}.logo[_ngcontent-%COMP%]{width:150px;margin:0 auto}@media (min-width: 320px) and (max-width: 480px){.stat-row[_ngcontent-%COMP%]{max-width:65%;min-width:65%}.stat-row[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]{margin-top:10px}}.search-field[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;align-items:center;padding-top:15px}.text-bold[_ngcontent-%COMP%]{font-weight:700}.margin-left-5[_ngcontent-%COMP%]{margin-left:5px}.margin-right-10[_ngcontent-%COMP%]{margin-right:10px}.delete-btn[_ngcontent-%COMP%]{background-color:red;color:#fff}q[_ngcontent-%COMP%]{font-style:italic;quotes:"\xab " " \xbb"}.card-text[_ngcontent-%COMP%]{color:#9fa2b4;font-weight:600}.card-number[_ngcontent-%COMP%]{color:#252733;font-size:30px;font-weight:700}.plot-card[_ngcontent-%COMP%]{max-height:300px}.info-card[_ngcontent-%COMP%]{min-height:200px}.info-card[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.info-card[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:flex;margin-left:5px}.light-blue-backdrop[_ngcontent-%COMP%]{background-color:#5cb3fd}.card-primary[_ngcontent-%COMP%]{background-color:#fff}.card-active[_ngcontent-%COMP%]{border:1px solid #3751ff}.card-active[_ngcontent-%COMP%]   .card-number[_ngcontent-%COMP%], .card-active[_ngcontent-%COMP%]   .card-text[_ngcontent-%COMP%]{color:#3751ff!important}.customer-search-form[_ngcontent-%COMP%]{position:relative;left:993px;top:8px}.full-width-in[_ngcontent-%COMP%]{display:flex}  .mat-form-field-wrapper{padding-bottom:0!important}.message-form[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between;flex-direction:column}.dpWeekDay[_ngcontent-%COMP%]{font-weight:800;font-size:140%}.dpWeekDay[_ngcontent-%COMP%], .notes[_ngcontent-%COMP%]{padding-left:16px;padding-right:15px}.notes[_ngcontent-%COMP%]{font-weight:500;font-size:1rem}.diet-plan[_ngcontent-%COMP%]{margin-bottom:5px}.plan-input[_ngcontent-%COMP%]{width:400px;margin-left:20px}.dp-info-submit[_ngcontent-%COMP%]{text-align:right;margin-left:16px;margin-top:10px}',
              ],
            })),
            t
          );
        })(),
        HY = (() => {
          class t {
            constructor(t, e) {
              (this.modalService = t), (this.activeModalService = e);
            }
            ngAfterViewInit() {}
            ngOnInit() {}
            closeModal(t) {
              this.activeModalService.dismiss(t);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(Ro(FN), Ro(DN));
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['modal-message-content-modal']],
              viewQuery: function (t, e) {
                if ((1 & t && xc(TY, 1), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.paginatorMessages = t.first);
                }
              },
              decls: 82,
              vars: 8,
              consts: [
                [1, 'container'],
                [1, 'modal-header'],
                [1, 'modal-title'],
                ['type', 'button', 'aria-label', 'Close', 1, 'btn', 'btn-light', 3, 'click'],
                ['aria-hidden', 'true'],
                [1, 'modal-body', 'ff-14'],
                [1, 'w-100', 'messagetable', 3, 'dataSource'],
                ['messagetable', ''],
                ['matColumnDef', 'from'],
                ['mat-header-cell', '', 4, 'matHeaderCellDef'],
                ['mat-cell', '', 4, 'matCellDef'],
                ['matColumnDef', 'text'],
                ['mat-cell', '', 'class', 'messagegrid', 4, 'matCellDef'],
                ['matColumnDef', 'timestamp'],
                ['mat-header-row', '', 4, 'matHeaderRowDef'],
                ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
                ['class', 'mat-row', 4, 'matNoDataRow'],
                ['showFirstLastButtons', 'false', 'hidePageSize', 'true', 3, 'pageSizeOptions'],
                ['paginatorMessages', ''],
                [1, 'ff-14'],
                [3, 'formGroup', 'ngSubmit'],
                [1, 'message-form'],
                ['appearance', 'outline', 1, 'example-full-width', 'w-100', 'mt-2'],
                ['matInput', '', 'placeholder', 'Message', 'formControlName', 'message', 'name', 'message'],
                [4, 'ngIf'],
                [1, 'mb-3', 'mt-3'],
                ['mat-button', '', 'type', 'submit', 1, 'button-primary', 3, 'disabled'],
                ['mat-header-cell', ''],
                ['mat-cell', ''],
                ['mat-cell', '', 1, 'messagegrid'],
                ['mat-header-row', ''],
                ['mat-row', ''],
                [1, 'mat-row'],
                ['colspan', '4', 1, 'mat-cell'],
              ],
              template: function (t, e) {
                if (
                  (1 & t &&
                    (Fo(0, 'div', 0),
                    Ca(1, '\n  '),
                    Fo(2, 'div', 1),
                    Ca(3, '\n    '),
                    Fo(4, 'h4', 2),
                    Ca(5, 'Messages'),
                    No(),
                    Ca(6, '\n    '),
                    Fo(7, 'button', 3),
                    Uo('click', function () {
                      return e.closeModal('Cross click');
                    }),
                    Ca(8, '\n      '),
                    Fo(9, 'span', 4),
                    Ca(10, '\xd7'),
                    No(),
                    Ca(11, '\n    '),
                    No(),
                    Ca(12, '\n  '),
                    No(),
                    Ca(13, '\n  '),
                    Fo(14, 'div', 5),
                    Ca(15, '\n    '),
                    Fo(16, 'mat-table', 6, 7),
                    Ca(18, '\n      '),
                    Bo(19, 8),
                    Ca(20, '\n        '),
                    Do(21, DY, 2, 0, 'th', 9),
                    Ca(22, '\n        '),
                    Do(23, MY, 2, 1, 'td', 10),
                    Ca(24, '\n      '),
                    zo(),
                    Ca(25, '\n\n      '),
                    Bo(26, 11),
                    Ca(27, '\n        '),
                    Do(28, RY, 2, 0, 'th', 9),
                    Ca(29, '\n        '),
                    Do(30, IY, 2, 1, 'td', 12),
                    Ca(31, '\n      '),
                    zo(),
                    Ca(32, '\n\n      '),
                    Bo(33, 13),
                    Ca(34, '\n        '),
                    Do(35, LY, 2, 0, 'th', 9),
                    Ca(36, '\n        '),
                    Do(37, FY, 3, 4, 'td', 10),
                    Ca(38, '\n      '),
                    zo(),
                    Ca(39, '\n\n      '),
                    Do(40, NY, 1, 0, 'tr', 14),
                    Ca(41, '\n      '),
                    Do(42, VY, 1, 0, 'tr', 15),
                    Ca(43, '\n\n      '),
                    Ca(44, '\n      '),
                    Do(45, BY, 5, 0, 'tr', 16),
                    Ca(46, '\n    '),
                    No(),
                    Ca(47, '\n    '),
                    Fo(48, 'mat-paginator', 17, 18),
                    Ca(50, '\n    '),
                    No(),
                    Ca(51, '\n  '),
                    No(),
                    Ca(52, '\n  '),
                    Fo(53, 'div', 19),
                    Ca(54, '\n    '),
                    Fo(55, 'form', 20),
                    Uo('ngSubmit', function (t) {
                      return e.parentComponent.sendTelegramMessage(
                        t,
                        e.parentComponent.selectedCustomer.telegramChatId
                      );
                    }),
                    Ca(56, '\n      '),
                    Fo(57, 'div', 21),
                    Ca(58, '\n        '),
                    Fo(59, 'div'),
                    Ca(60, '\n          '),
                    Fo(61, 'mat-form-field', 22),
                    Ca(62, '\n            '),
                    Fo(63, 'mat-label'),
                    Ca(64, 'Message'),
                    No(),
                    Ca(65, '\n            '),
                    Vo(66, 'textarea', 23),
                    Ca(67, '\n            '),
                    Do(68, zY, 2, 0, 'mat-error', 24),
                    Ca(69, '\n          '),
                    No(),
                    Ca(70, '\n        '),
                    No(),
                    Ca(71, '\n\n        '),
                    Fo(72, 'div', 25),
                    Ca(73, '\n          '),
                    Fo(74, 'button', 26),
                    Ca(75, '\n            Send\n          '),
                    No(),
                    Ca(76, '\n        '),
                    No(),
                    Ca(77, '\n      '),
                    No(),
                    Ca(78, '\n    '),
                    No(),
                    Ca(79, '\n  '),
                    No(),
                    Ca(80, '\n'),
                    No(),
                    Ca(81, '\n')),
                  2 & t)
                ) {
                  let t = null;
                  tr(16),
                    Io('dataSource', e.parentComponent.messageDataSource),
                    tr(24),
                    Io('matHeaderRowDef', e.parentComponent.messageDisplayedColumns),
                    tr(2),
                    Io('matRowDefColumns', e.parentComponent.messageDisplayedColumns),
                    tr(6),
                    Io('pageSizeOptions', Zl(7, AY)),
                    tr(7),
                    Io('formGroup', e.parentComponent.sendMessageForm),
                    tr(13),
                    Io(
                      'ngIf',
                      null == (t = e.parentComponent.sendMessageForm.get('message')) ? null : t.hasError('required')
                    ),
                    tr(6),
                    Io('disabled', e.parentComponent.sendMessageForm.invalid);
                }
              },
              directives: [
                DA,
                NA,
                LA,
                RA,
                $A,
                WA,
                XA,
                gO,
                Yp,
                pp,
                em,
                _C,
                aC,
                tS,
                zd,
                dp,
                lm,
                Ru,
                $C,
                BA,
                jA,
                YA,
                QA,
                iC,
              ],
              pipes: [Yu],
              encapsulation: 2,
            })),
            t
          );
        })();
      function $Y(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'span'),
            Ca(1, '\n            '),
            Fo(2, 'a', 33),
            Uo('click', function () {
              Fe(t);
              const e = Xo(),
                n = Mo(5);
              return e.isMobile && n.close();
            }),
            Ca(3, '\n              '),
            Fo(4, 'mat-icon', 8),
            Ca(5, 'notes'),
            No(),
            Ca(6, '\n              '),
            Fo(7, 'span', 9),
            Ca(8, 'Program'),
            No(),
            Ca(9, '\n            '),
            No(),
            Ca(10, '\n            '),
            Vo(11, 'mat-divider'),
            Ca(12, '\n          '),
            No();
        }
      }
      function qY(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'span'),
            Ca(1, '\n            '),
            Fo(2, 'a', 34),
            Uo('click', function () {
              Fe(t);
              const e = Xo(),
                n = Mo(5);
              return e.isMobile && n.close();
            }),
            Ca(3, '\n              '),
            Fo(4, 'mat-icon', 8),
            Ca(5, 'people'),
            No(),
            Ca(6, '\n              '),
            Fo(7, 'span', 9),
            Ca(8, 'Employees'),
            No(),
            Ca(9, '\n            '),
            No(),
            Ca(10, '\n            '),
            Vo(11, 'mat-divider'),
            Ca(12, '\n          '),
            No();
        }
      }
      function WY(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n            Password is Required!\n          '), No());
      }
      function UY(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n            Confirm Password is Required!\n          '), No());
      }
      function YY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 35),
            Ca(2, '\n    '),
            Fo(3, 'h4', 36),
            Ca(4, 'Change Password'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 37),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 38),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 39),
            Uo('ngSubmit', function () {
              return Fe(t), Xo().updatePassword();
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 40),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'mat-form-field', 41),
            Ca(20, '\n          '),
            Fo(21, 'mat-label'),
            Ca(22, 'New Password'),
            No(),
            Ca(23, '\n          '),
            Vo(24, 'input', 42),
            Ca(25, '\n          '),
            Do(26, WY, 2, 0, 'mat-error', 10),
            Ca(27, '\n        '),
            No(),
            Ca(28, '\n      '),
            No(),
            Ca(29, '\n\n      '),
            Fo(30, 'div'),
            Ca(31, '\n        '),
            Fo(32, 'mat-form-field', 43),
            Ca(33, '\n          '),
            Fo(34, 'mat-label'),
            Ca(35, 'Confirm New Password'),
            No(),
            Ca(36, '\n          '),
            Vo(37, 'input', 44),
            Ca(38, '\n          '),
            Do(39, UY, 2, 0, 'mat-error', 10),
            Ca(40, '\n        '),
            No(),
            Ca(41, '\n      '),
            No(),
            Ca(42, '\n    '),
            No(),
            Ca(43, '\n    '),
            Fo(44, 'div', 45),
            Ca(45, '\n      '),
            Fo(46, 'button', 46),
            Ca(47, '\n        Update Password\n      '),
            No(),
            Ca(48, '\n    '),
            No(),
            Ca(49, '\n  '),
            No(),
            Ca(50, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null;
          tr(13),
            Io('formGroup', t.changePasswordForm),
            tr(13),
            Io('ngIf', null == (e = t.changePasswordForm.get('newPassword')) ? null : e.hasError('required')),
            tr(13),
            Io('ngIf', null == (n = t.changePasswordForm.get('confirmNewPassword')) ? null : n.hasError('required')),
            tr(7),
            Io('disabled', t.changePasswordForm.invalid);
        }
      }
      function GY(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Email is Required! '), No());
      }
      function QY(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n            Confirm Email is Required!\n          '), No());
      }
      function KY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 35),
            Ca(2, '\n    '),
            Fo(3, 'h4', 36),
            Ca(4, 'Change Email'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 37),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 38),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 39),
            Uo('ngSubmit', function () {
              return Fe(t), Xo().updateEmail();
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 40),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'mat-form-field', 41),
            Ca(20, '\n          '),
            Fo(21, 'mat-label'),
            Ca(22, 'New Email'),
            No(),
            Ca(23, '\n          '),
            Vo(24, 'input', 47),
            Ca(25, '\n          '),
            Do(26, GY, 2, 0, 'mat-error', 10),
            Ca(27, '\n        '),
            No(),
            Ca(28, '\n      '),
            No(),
            Ca(29, '\n\n      '),
            Fo(30, 'div'),
            Ca(31, '\n        '),
            Fo(32, 'mat-form-field', 43),
            Ca(33, '\n          '),
            Fo(34, 'mat-label'),
            Ca(35, 'Confirm New Email'),
            No(),
            Ca(36, '\n          '),
            Vo(37, 'input', 48),
            Ca(38, '\n          '),
            Do(39, QY, 2, 0, 'mat-error', 10),
            Ca(40, '\n        '),
            No(),
            Ca(41, '\n      '),
            No(),
            Ca(42, '\n    '),
            No(),
            Ca(43, '\n    '),
            Fo(44, 'div', 45),
            Ca(45, '\n      '),
            Fo(46, 'button', 46),
            Ca(47, 'Update Email'),
            No(),
            Ca(48, '\n    '),
            No(),
            Ca(49, '\n  '),
            No(),
            Ca(50, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null;
          tr(13),
            Io('formGroup', t.changeEmailForm),
            tr(13),
            Io('ngIf', null == (e = t.changeEmailForm.get('newEmail')) ? null : e.hasError('required')),
            tr(13),
            Io('ngIf', null == (n = t.changeEmailForm.get('confirmNewEmail')) ? null : n.hasError('required')),
            tr(7),
            Io('disabled', t.changeEmailForm.invalid);
        }
      }
      function XY(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 35),
            Ca(2, '\n    '),
            Fo(3, 'h4', 36),
            Ca(4, 'Employee Profile'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 37),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 38),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'div', 40),
            Ca(14, '\n    '),
            Fo(15, 'div', 16),
            Ca(16, '\n      '),
            Fo(17, 'div', 49),
            Ca(18, '\n        '),
            Fo(19, 'span', 50),
            Ca(20, ' Username: '),
            No(),
            Ca(21, '\n      '),
            No(),
            Ca(22, '\n\n      '),
            Fo(23, 'div', 51),
            Ca(24),
            No(),
            Ca(25, '\n    '),
            No(),
            Ca(26, '\n\n    '),
            Fo(27, 'div', 16),
            Ca(28, '\n      '),
            Fo(29, 'div', 49),
            Ca(30, '\n        '),
            Fo(31, 'span', 50),
            Ca(32, ' Email: '),
            No(),
            Ca(33, '\n      '),
            No(),
            Ca(34, '\n\n      '),
            Fo(35, 'div', 51),
            Ca(36),
            No(),
            Ca(37, '\n    '),
            No(),
            Ca(38, '\n\n    '),
            Fo(39, 'div', 16),
            Ca(40, '\n      '),
            Fo(41, 'div', 49),
            Ca(42, '\n        '),
            Fo(43, 'span', 50),
            Ca(44, 'Status:'),
            No(),
            Ca(45, '\n      '),
            No(),
            Ca(46, '\n\n      '),
            Fo(47, 'div', 51),
            Ca(48),
            No(),
            Ca(49, '\n    '),
            No(),
            Ca(50, '\n  '),
            No(),
            Ca(51, '\n  '),
            Fo(52, 'div', 45),
            Ca(53, '\n    '),
            Fo(54, 'button', 52),
            Uo('click', function () {
              Fe(t);
              const e = Xo(),
                n = Mo(160);
              return e.openEditModal(n);
            }),
            Ca(55, '\n      Change Email\n    '),
            No(),
            Ca(56, '\n\n    '),
            Fo(57, 'button', 53),
            Ca(58, 'Billing'),
            No(),
            Ca(59, '\n\n    '),
            Fo(60, 'button', 53),
            Ca(61, 'Charge Coupon'),
            No(),
            Ca(62, '\n    '),
            Fo(63, 'button', 52),
            Uo('click', function () {
              Fe(t);
              const e = Xo(),
                n = Mo(157);
              return e.openEditModal(n);
            }),
            Ca(64, '\n      Change Password\n    '),
            No(),
            Ca(65, '\n  '),
            No(),
            Ca(66, '\n');
        }
        if (2 & t) {
          const t = Xo();
          tr(24),
            Sa('\n        ', t.employeeData.username ? t.employeeData.username : 'not available', '\n      '),
            tr(12),
            Sa('\n        ', t.employeeData.email ? t.employeeData.email : 'not available', '\n      '),
            tr(12),
            Sa('\n        ', t.employeeData.status ? t.employeeData.status : 'not available', '\n      ');
        }
      }
      let ZY = (() => {
        class t {
          constructor(t, e, n, i, s, r, o, a, l, c) {
            (this.router = t),
              (this.quoteService = e),
              (this.titleService = n),
              (this.authenticationService = i),
              (this.credentialsService = s),
              (this.media = r),
              (this._snackBar = o),
              (this.modalService = a),
              (this.formBuilder = l),
              (this.ngxLoader = c),
              (this.userName = '');
          }
          ngOnInit() {
            let t = localStorage.getItem('userInfo');
            const e = JSON.parse(t);
            (this.userName = e.username),
              (this.isAdmin = 'ADMIN' === localStorage.getItem('userStatus')),
              (this.changePasswordForm = this.formBuilder.group({
                newPassword: ['', [Ud.required]],
                confirmNewPassword: ['', [Ud.required]],
              })),
              (this.changeEmailForm = this.formBuilder.group({
                newEmail: ['', [Ud.required]],
                confirmNewEmail: ['', [Ud.required]],
              })),
              (this.employeeId = localStorage.getItem('uuid')),
              this.getEmployeeDetails();
          }
          openEditModal(t) {
            this.modalService.open(t, { size: 'md', backdropClass: 'light-blue-backdrop' });
          }
          getEmployeeDetails() {
            (this.isLoading = !0),
              this.quoteService
                .getEmployee(this.employeeId)
                .pipe(
                  pS(() => {
                    this.isLoading = !1;
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status && t.body && (this.employeeData = t.body), this.ngxLoader.stop();
                  },
                  (t) => {
                    this.isLoading = !1;
                  }
                );
          }
          employeeProfile(t) {
            this.modalService.open(t, { size: 'lg', backdropClass: 'light-blue-backdrop' });
          }
          updatePassword() {
            const t = localStorage.getItem('uuid');
            this.ngxLoader.start(),
              this.modalService.dismissAll(),
              this.changePasswordForm.valid &&
                this.quoteService
                  .changePassword({ password: this.changePasswordForm.controls.newPassword.value }, t)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Password Updated!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.changePasswordForm.reset()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
          }
          updateEmail() {
            const t = localStorage.getItem('uuid');
            this.ngxLoader.start(),
              this.modalService.dismissAll(),
              this.changeEmailForm.valid &&
                this.quoteService
                  .changePassword({ email: this.changeEmailForm.controls.newEmail.value }, t)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Password Updated!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.changeEmailForm.reset()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
          }
          logout() {
            this.authenticationService.logout().subscribe(() => this.router.navigate(['/login'], { replaceUrl: !0 })),
              this._snackBar.open('You have successfully logged out!', '', {
                duration: 3e3,
                verticalPosition: 'top',
                panelClass: ['blue-snackbar'],
              });
          }
          get username() {
            const t = this.credentialsService.credentials;
            return t ? t.username : null;
          }
          get isMobile() {
            return this.media.isActive('xs') || this.media.isActive('sm');
          }
          get title() {
            return this.titleService.getTitle();
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(iR), Ro(cF), Ro(Rd), Ro(iF), Ro(nF), Ro(SI), Ro(kP), Ro(FN), Ro(mm), Ro(WF));
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['app-shell']],
            decls: 165,
            vars: 7,
            consts: [
              ['fxFlex', ''],
              ['fxFill', ''],
              ['ngClass.gt-sm', 'has-border', 3, 'mode', 'opened', 'disableClose'],
              ['sidenav', ''],
              [1, 'nav-elements'],
              [1, 'main-logo'],
              ['src', 'assets/logo.svg'],
              ['mat-list-item', '', 'routerLink', '/home', 'routerLinkActive', 'active', 3, 'click'],
              ['aria-hidden', 'false', 'aria-label', 'Example home icon'],
              ['translate', '', 1, 'ml-5'],
              [4, 'ngIf'],
              ['mat-list-item', '', 'routerLink', '/home/recommendations', 'routerLinkActive', 'active', 3, 'click'],
              ['mat-list-item', '', 'routerLink', '/home/forms', 'routerLinkActive', 'active', 3, 'click'],
              ['mat-list-item', '', 'routerLink', '/about', 'routerLinkActive', 'active', 3, 'click'],
              [1, 'bg-main', 'position-relative'],
              ['mat-icon-button', '', 'fxHide.gt-sm', '', 1, 'menu-button', 3, 'click'],
              [1, 'row'],
              [1, 'col-lg-12'],
              [1, 'header-wrapper'],
              [1, 'text-center'],
              [1, 'position-absolute', 'user-info'],
              [
                'mat-mini-fab',
                '',
                'color',
                'theme-color-one',
                'aria-label',
                'user icon',
                1,
                'button-spacing',
                3,
                'click',
              ],
              ['aria-hidden', 'false', 'aria-label', 'user'],
              ['color', 'primary', 1, 'footer-container'],
              [1, 'first-section'],
              [1, 'icon-container'],
              [1, 'example-spacer'],
              ['aria-hidden', 'false', 'aria-label', 'Example user verified icon', 1, 'example-icon'],
              ['aria-hidden', 'false', 'aria-label', 'Example heart icon', 1, 'example-icon'],
              ['aria-hidden', 'false', 'aria-label', 'Example delete icon', 1, 'example-icon'],
              ['changePasswordContent', ''],
              ['changeEmailContent', ''],
              ['employeeProfileContent', ''],
              ['mat-list-item', '', 'routerLink', '/home/program', 'routerLinkActive', 'active', 3, 'click'],
              ['mat-list-item', '', 'routerLink', '/home/employees', 'routerLinkActive', 'active', 3, 'click'],
              [1, 'modal-header'],
              [1, 'modal-title'],
              ['type', 'button', 'aria-label', 'Close', 1, 'btn', 'btn-light', 3, 'click'],
              ['aria-hidden', 'true'],
              [3, 'formGroup', 'ngSubmit'],
              [1, 'modal-body', 'ff-14'],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100'],
              [
                'matInput',
                '',
                'placeholder',
                'New Password',
                'formControlName',
                'newPassword',
                'type',
                'password',
                'name',
                'newPassword',
              ],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100', 'mt-2'],
              [
                'matInput',
                '',
                'placeholder',
                'Confirm New Password',
                'type',
                'password',
                'formControlName',
                'confirmNewPassword',
                'name',
                'confirmNewPassword',
              ],
              [1, 'modal-footer'],
              ['mat-button', '', 'type', 'submit', 1, 'button-primary', 3, 'disabled'],
              [
                'matInput',
                '',
                'placeholder',
                'New Email',
                'formControlName',
                'newEmail',
                'type',
                'email',
                'name',
                'newEmail',
              ],
              [
                'matInput',
                '',
                'placeholder',
                'Confirm New Email',
                'type',
                'email',
                'formControlName',
                'confirmNewEmail',
                'name',
                'confirmNewEmail',
              ],
              [1, 'col-2'],
              [1, 'text-bold'],
              [1, 'col-10'],
              ['mat-button', '', 'type', 'button', 1, 'button-primary', 'margin-left-5', 3, 'click'],
              ['mat-button', '', 'type', 'button', 1, 'button-primary', 'margin-left-5'],
            ],
            template: function (t, e) {
              if (1 & t) {
                const t = Ho();
                Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'mat-sidenav-container', 1),
                  Ca(3, '\n    '),
                  Fo(4, 'mat-sidenav', 2, 3),
                  Ca(6, '\n      '),
                  Ca(7, '\n      '),
                  Fo(8, 'nav', 4),
                  Ca(9, '\n        '),
                  Fo(10, 'mat-list'),
                  Ca(11, '\n          '),
                  Fo(12, 'div', 5),
                  Ca(13, '\n            '),
                  Vo(14, 'img', 6),
                  Ca(15, '\n          '),
                  No(),
                  Ca(16, '\n          '),
                  Vo(17, 'mat-divider'),
                  Ca(18, '\n          '),
                  Fo(19, 'a', 7),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(5);
                    return e.isMobile && n.close();
                  }),
                  Ca(20, '\n            '),
                  Fo(21, 'mat-icon', 8),
                  Ca(22, 'home'),
                  No(),
                  Ca(23, '\n            '),
                  Fo(24, 'span', 9),
                  Ca(25, 'Home'),
                  No(),
                  Ca(26, '\n          '),
                  No(),
                  Ca(27, '\n          '),
                  Vo(28, 'mat-divider'),
                  Ca(29, '\n          '),
                  Do(30, $Y, 13, 0, 'span', 10),
                  Ca(31, '\n\n          '),
                  Fo(32, 'a', 11),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(5);
                    return e.isMobile && n.close();
                  }),
                  Ca(33, '\n            '),
                  Fo(34, 'mat-icon', 8),
                  Ca(35, 'lightbulb'),
                  No(),
                  Ca(36, '\n            '),
                  Fo(37, 'span', 9),
                  Ca(38, 'Recommendations'),
                  No(),
                  Ca(39, '\n          '),
                  No(),
                  Ca(40, '\n          '),
                  Vo(41, 'mat-divider'),
                  Ca(42, '\n          '),
                  Do(43, qY, 13, 0, 'span', 10),
                  Ca(44, '\n          '),
                  Ca(45, '\n          '),
                  Fo(46, 'a', 12),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(5);
                    return e.isMobile && n.close();
                  }),
                  Ca(47, '\n            '),
                  Fo(48, 'mat-icon', 8),
                  Ca(49, 'layers'),
                  No(),
                  Ca(50, '\n            '),
                  Fo(51, 'span', 9),
                  Ca(52, 'Questionnaires'),
                  No(),
                  Ca(53, '\n          '),
                  No(),
                  Ca(54, '\n          '),
                  Vo(55, 'mat-divider'),
                  Ca(56, '\n          '),
                  Ca(57, '\n          '),
                  Fo(58, 'a', 13),
                  Uo('click', function () {
                    return e.logout();
                  }),
                  Ca(59, '\n            '),
                  Fo(60, 'mat-icon', 8),
                  Ca(61, 'logout'),
                  No(),
                  Ca(62, '\n            '),
                  Fo(63, 'span', 9),
                  Ca(64, 'Logout'),
                  No(),
                  Ca(65, '\n          '),
                  No(),
                  Ca(66, '\n          '),
                  Vo(67, 'mat-divider'),
                  Ca(68, '\n        '),
                  No(),
                  Ca(69, '\n      '),
                  No(),
                  Ca(70, '\n    '),
                  No(),
                  Ca(71, '\n    '),
                  Fo(72, 'mat-sidenav-content'),
                  Ca(73, '\n      '),
                  Fo(74, 'mat-toolbar', 14),
                  Ca(75, '\n        '),
                  Fo(76, 'button', 15),
                  Uo('click', function () {
                    return Fe(t), Mo(5).toggle();
                  }),
                  Ca(77, '\n          '),
                  Fo(78, 'mat-icon'),
                  Ca(79, 'menu'),
                  No(),
                  Ca(80, '\n        '),
                  No(),
                  Ca(81, '\n        '),
                  Fo(82, 'div', 16),
                  Ca(83, '\n          '),
                  Fo(84, 'div', 17),
                  Ca(85, '\n            '),
                  Fo(86, 'div', 18),
                  Ca(87, '\n              '),
                  Fo(88, 'div', 19),
                  Ca(89, '\n                '),
                  Fo(90, 'h5'),
                  Ca(91),
                  No(),
                  Ca(92, '\n              '),
                  No(),
                  Ca(93, '\n              '),
                  Ca(94, '\n            '),
                  No(),
                  Ca(95, '\n          '),
                  No(),
                  Ca(96, '\n        '),
                  No(),
                  Ca(97, '\n        '),
                  Ca(98, '\n      '),
                  No(),
                  Ca(99, '\n      '),
                  Fo(100, 'div', 20),
                  Ca(101, '\n        '),
                  Fo(102, 'span'),
                  Ca(103),
                  No(),
                  Ca(104, '\n        '),
                  Fo(105, 'button', 21),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(163);
                    return e.employeeProfile(n);
                  }),
                  Ca(106, '\n          '),
                  Fo(107, 'mat-icon', 22),
                  Ca(108, 'account_circle'),
                  No(),
                  Ca(109, '\n        '),
                  No(),
                  Ca(110, '\n      '),
                  No(),
                  Ca(111, '\n      '),
                  Vo(112, 'router-outlet'),
                  Ca(113, '\n      '),
                  Ca(114, '\n\n      '),
                  Fo(115, 'mat-toolbar', 23),
                  Ca(116, '\n        '),
                  Fo(117, 'mat-toolbar-row', 24),
                  Ca(118, '\n          '),
                  Fo(119, 'h1'),
                  Ca(120, "FOLLOW BODY'S PERFECT ON SOCIAL MEDIA"),
                  No(),
                  Ca(121, '\n          '),
                  Vo(122, 'div', 25),
                  Ca(123, '\n        '),
                  No(),
                  Ca(124, '\n\n        '),
                  Fo(125, 'mat-toolbar-row'),
                  Ca(126, '\n          '),
                  Fo(127, 'span'),
                  Ca(128, 'Second Line'),
                  No(),
                  Ca(129, '\n          '),
                  Vo(130, 'span', 26),
                  Ca(131, '\n          '),
                  Fo(132, 'mat-icon', 27),
                  Ca(133, 'verified_user'),
                  No(),
                  Ca(134, '\n        '),
                  No(),
                  Ca(135, '\n\n        '),
                  Fo(136, 'mat-toolbar-row'),
                  Ca(137, '\n          '),
                  Fo(138, 'span'),
                  Ca(139, 'Third Line'),
                  No(),
                  Ca(140, '\n          '),
                  Vo(141, 'span', 26),
                  Ca(142, '\n          '),
                  Fo(143, 'mat-icon', 28),
                  Ca(144, 'favorite'),
                  No(),
                  Ca(145, '\n          '),
                  Fo(146, 'mat-icon', 29),
                  Ca(147, 'delete'),
                  No(),
                  Ca(148, '\n        '),
                  No(),
                  Ca(149, '\n      '),
                  No(),
                  Ca(150, '\n      '),
                  Ca(151, '\n    '),
                  No(),
                  Ca(152, '\n  '),
                  No(),
                  Ca(153, '\n'),
                  No(),
                  Ca(154, '\n\n'),
                  Ca(155, '\n\n'),
                  Do(156, YY, 51, 4, 'ng-template', null, 30, Pc),
                  Ca(158, '\n\n'),
                  Do(159, KY, 51, 4, 'ng-template', null, 31, Pc),
                  Ca(161, '\n\n'),
                  Do(162, XY, 67, 3, 'ng-template', null, 32, Pc),
                  Ca(164, '\n');
              }
              2 & t &&
                (tr(4),
                Io('mode', e.isMobile ? 'over' : 'side')('opened', !e.isMobile)('disableClose', !e.isMobile),
                tr(26),
                Io('ngIf', e.isAdmin),
                tr(13),
                Io('ngIf', e.isAdmin),
                tr(48),
                ka(e.title),
                tr(12),
                ka(e.userName));
            },
            directives: [
              yL,
              QO,
              PL,
              YO,
              LI,
              jS,
              rS,
              qS,
              rR,
              aR,
              TS,
              mg,
              Ru,
              UO,
              aT,
              $C,
              HI,
              lR,
              oT,
              Yp,
              pp,
              em,
              _C,
              aC,
              tS,
              zd,
              dp,
              lm,
              iC,
            ],
            styles: [
              '[_nghost-%COMP%]{display:flex;flex:1}.mat-sidenav[_ngcontent-%COMP%]{min-width:255px;max-width:28%;background-color:#363740}.main-logo[_ngcontent-%COMP%]{margin:20px}.has-border[_ngcontent-%COMP%]{border-right:1px solid #0000001f}.mat-list[_ngcontent-%COMP%]{padding-top:0}.margin-left-5[_ngcontent-%COMP%]{margin-left:15px}.disaply-field[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly}.mat-list-item[_ngcontent-%COMP%]{text-decoration:none}.mat-list-item[_ngcontent-%COMP%]:hover{background:#0000000d}.menu-button[_ngcontent-%COMP%]{margin-right:1rem}.nav-elements[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#a4a6b3}.text-bold[_ngcontent-%COMP%]{font-weight:700}.button-spacing[_ngcontent-%COMP%]{margin-left:10px}.header-wrapper[_ngcontent-%COMP%]{justify-content:center;width:100%}.header-wrapper[_ngcontent-%COMP%], .user-info[_ngcontent-%COMP%]{display:flex;align-items:center}.user-info[_ngcontent-%COMP%]{top:10px;right:20px;cursor:pointer}.footer-container[_ngcontent-%COMP%]{background-color:#363740}.first-section[_ngcontent-%COMP%]{display:flex;flex-direction:column}.example-icon[_ngcontent-%COMP%]{padding:0 14px}.example-spacer[_ngcontent-%COMP%]{flex:1 1 auto}',
            ],
          })),
          t
        );
      })();
      class JY {
        static childRoutes(t) {
          return { path: '', component: ZY, children: t, canActivate: [SF] };
        }
      }
      var tG = (() => (
        (function (t) {
          (t.Deactivated = 'DEACTIVATED'),
            (t.Activated = 'ACTIVATED'),
            (t.Admin = 'ADMIN'),
            (t.Pending = 'PENDING'),
            (t.Hidden = 'HIDDEN');
        })(tG || (tG = {})),
        tG
      ))();
      function eG(t, e) {
        1 & t && (Fo(0, 'th', 17), Ca(1, 'Username'), No());
      }
      function nG(t, e) {
        if ((1 & t && (Fo(0, 'td', 18), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.username);
        }
      }
      function iG(t, e) {
        1 & t && (Fo(0, 'th', 17), Ca(1, 'Status'), No());
      }
      function sG(t, e) {
        if ((1 & t && (Fo(0, 'td', 18), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.status);
        }
      }
      function rG(t, e) {
        1 & t && (Fo(0, 'th', 17), Ca(1, 'Email'), No());
      }
      function oG(t, e) {
        if ((1 & t && (Fo(0, 'td', 18), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.email);
        }
      }
      function aG(t, e) {
        1 & t && (Fo(0, 'th', 17), Ca(1, 'Coupon'), No());
      }
      function lG(t, e) {
        if ((1 & t && (Fo(0, 'td', 18), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.discountCode);
        }
      }
      function cG(t, e) {
        1 & t && (Fo(0, 'th', 17), Ca(1, 'Actions'), No());
      }
      function hG(t, e) {
        if ((1 & t && (Fo(0, 'mat-icon', 24), Ca(1), No()), 2 & t)) {
          const t = Xo().$implicit;
          Ao('aria-label', t.label), tr(1), ka(t.icon);
        }
      }
      function uG(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'button', 22),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit,
                i = Xo().$implicit;
              return Xo().actions.emit({ action: n.action, data: i });
            }),
            Ca(1, '\n          '),
            Do(2, hG, 2, 2, 'mat-icon', 23),
            Ca(3),
            No();
        }
        if (2 & t) {
          const t = e.$implicit;
          Io('color', t.color), tr(2), Io('ngIf', t.icon), tr(1), Sa('\n          ', t.label, '\n        ');
        }
      }
      const dG = function (t) {
        return { data: t };
      };
      function pG(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 19),
            Ca(1, '\n        '),
            Do(2, uG, 4, 3, 'button', 20),
            Ca(3, '\n        '),
            Fo(4, 'button', 21),
            Ca(5, '\n          '),
            Fo(6, 'mat-icon'),
            Ca(7, 'more_vert'),
            No(),
            Ca(8, '\n        '),
            No(),
            Ca(9, '\n      '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit,
            n = Xo(),
            i = Mo(52);
          tr(2), Io('ngForOf', n.allowedActions), tr(2), Io('matMenuTriggerFor', i)('matMenuTriggerData', Jl(3, dG, t));
        }
      }
      function mG(t, e) {
        1 & t && Vo(0, 'tr', 25);
      }
      function fG(t, e) {
        1 & t && Vo(0, 'tr', 26);
      }
      function gG(t, e) {
        1 & t &&
          (Fo(0, 'tr', 27), Ca(1, '\n      '), Fo(2, 'td', 28), Ca(3, 'No data found.'), No(), Ca(4, '\n    '), No());
      }
      function _G(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n      '),
            Fo(1, 'button', 29),
            Uo('click', function () {
              Fe(t);
              const n = e.data;
              return Xo().actions.emit({ action: 'editEmp', data: n });
            }),
            Ca(2, '\n        '),
            Fo(3, 'mat-icon'),
            Ca(4, 'edit'),
            No(),
            Ca(5, '\n        '),
            Fo(6, 'span'),
            Ca(7, 'Edit'),
            No(),
            Ca(8, '\n      '),
            No(),
            Ca(9, '\n\n      '),
            Fo(10, 'button', 29),
            Uo('click', function () {
              Fe(t);
              const n = e.data;
              return Xo().actions.emit({ action: 'changePassword', data: n });
            }),
            Ca(11, '\n        '),
            Fo(12, 'mat-icon'),
            Ca(13, 'vpn_key'),
            No(),
            Ca(14, '\n        '),
            Fo(15, 'span'),
            Ca(16, 'Change Password'),
            No(),
            Ca(17, '\n      '),
            No(),
            Ca(18, '\n    ');
        }
      }
      const bG = function (t) {
        return [t];
      };
      let yG = (() => {
          class t {
            constructor() {
              (this.allowedActions = []),
                (this.users = []),
                (this.actions = new cc()),
                (this.displayedColumns = ['username', 'status', 'email', 'discountCode', 'actions']),
                (this.limit = 10);
            }
            ngOnChanges(t) {
              t.users &&
                ((this.dataSource = new tT(this.users)),
                setTimeout(() => (this.dataSource.paginator = this.paginator)));
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵcmp = Wt({
              type: t,
              selectors: [['app-profile-list-table']],
              viewQuery: function (t, e) {
                if ((1 & t && xc(gO, 1), 2 & t)) {
                  let t;
                  wc((t = kc())) && (e.paginator = t.first);
                }
              },
              inputs: {
                users: 'users',
                limit: 'limit',
                displayedColumns: 'displayedColumns',
                allowedActions: 'allowedActions',
              },
              outputs: { actions: 'actions' },
              features: [ue],
              decls: 62,
              vars: 6,
              consts: [
                [1, 'mat-elevation-z0'],
                ['mat-table', '', 1, 'w-100', 3, 'dataSource'],
                ['matColumnDef', 'username'],
                ['mat-header-cell', '', 4, 'matHeaderCellDef'],
                ['mat-cell', '', 'class', 'text-center', 4, 'matCellDef'],
                ['matColumnDef', 'status'],
                ['matColumnDef', 'email'],
                ['matColumnDef', 'discountCode'],
                ['matColumnDef', 'actions'],
                ['mat-cell', '', 'class', 'text-center', 'fxLayout', 'row', 'fxLayoutGap', '4px', 4, 'matCellDef'],
                ['mat-header-row', '', 4, 'matHeaderRowDef'],
                ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
                ['class', 'mat-row', 4, 'matNoDataRow'],
                ['menu', 'matMenu'],
                ['matMenuContent', ''],
                ['showFirstLastButtons', 'false', 'hidePageSize', 'true', 3, 'pageSizeOptions'],
                ['paginator', ''],
                ['mat-header-cell', ''],
                ['mat-cell', '', 1, 'text-center'],
                ['mat-cell', '', 'fxLayout', 'row', 'fxLayoutGap', '4px', 1, 'text-center'],
                ['mat-flat-button', '', 'type', 'button', 3, 'color', 'click', 4, 'ngFor', 'ngForOf'],
                [
                  'mat-icon-button',
                  '',
                  'aria-label',
                  'Example icon-button with a menu',
                  3,
                  'matMenuTriggerFor',
                  'matMenuTriggerData',
                ],
                ['mat-flat-button', '', 'type', 'button', 3, 'color', 'click'],
                ['aria-hidden', 'false', 4, 'ngIf'],
                ['aria-hidden', 'false'],
                ['mat-header-row', ''],
                ['mat-row', ''],
                [1, 'mat-row'],
                ['colspan', '4', 1, 'mat-cell'],
                ['mat-menu-item', '', 'type', 'button', 3, 'click'],
              ],
              template: function (t, e) {
                1 & t &&
                  (Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'table', 1),
                  Ca(3, '\n    '),
                  Ca(4, '\n    '),
                  Bo(5, 2),
                  Ca(6, '\n      '),
                  Do(7, eG, 2, 0, 'th', 3),
                  Ca(8, '\n      '),
                  Do(9, nG, 2, 1, 'td', 4),
                  Ca(10, '\n    '),
                  zo(),
                  Ca(11, '\n\n    '),
                  Ca(12, '\n    '),
                  Bo(13, 5),
                  Ca(14, '\n      '),
                  Do(15, iG, 2, 0, 'th', 3),
                  Ca(16, '\n      '),
                  Do(17, sG, 2, 1, 'td', 4),
                  Ca(18, '\n    '),
                  zo(),
                  Ca(19, '\n\n    '),
                  Ca(20, '\n    '),
                  Bo(21, 6),
                  Ca(22, '\n      '),
                  Do(23, rG, 2, 0, 'th', 3),
                  Ca(24, '\n      '),
                  Do(25, oG, 2, 1, 'td', 4),
                  Ca(26, '\n    '),
                  zo(),
                  Ca(27, '\n\n    '),
                  Ca(28, '\n    '),
                  Bo(29, 7),
                  Ca(30, '\n      '),
                  Do(31, aG, 2, 0, 'th', 3),
                  Ca(32, '\n      '),
                  Do(33, lG, 2, 1, 'td', 4),
                  Ca(34, '\n    '),
                  zo(),
                  Ca(35, '\n\n    '),
                  Bo(36, 8),
                  Ca(37, '\n      '),
                  Do(38, cG, 2, 0, 'th', 3),
                  Ca(39, '\n      '),
                  Do(40, pG, 10, 5, 'td', 9),
                  Ca(41, '\n    '),
                  zo(),
                  Ca(42, '\n\n    '),
                  Do(43, mG, 1, 0, 'tr', 10),
                  Ca(44, '\n    '),
                  Do(45, fG, 1, 0, 'tr', 11),
                  Ca(46, '\n\n    '),
                  Ca(47, '\n    '),
                  Do(48, gG, 5, 0, 'tr', 12),
                  Ca(49, '\n  '),
                  No(),
                  Ca(50, '\n\n  '),
                  Fo(51, 'mat-menu', null, 13),
                  Ca(53, '\n    '),
                  Do(54, _G, 19, 0, 'ng-template', 14),
                  Ca(55, '\n  '),
                  No(),
                  Ca(56, '\n  '),
                  Fo(57, 'mat-paginator', 15, 16),
                  Ca(59, '\n  '),
                  No(),
                  Ca(60, '\n'),
                  No(),
                  Ca(61, '\n')),
                  2 & t &&
                    (tr(2),
                    Io('dataSource', e.dataSource),
                    tr(41),
                    Io('matHeaderRowDef', e.displayedColumns),
                    tr(2),
                    Io('matRowDefColumns', e.displayedColumns),
                    tr(12),
                    Io('pageSizeOptions', Jl(4, bG, e.limit)));
              },
              directives: [DA, NA, LA, RA, $A, WA, XA, rE, XS, gO, BA, jA, tL, aL, Du, $C, cE, TS, Ru, YA, QA, eE],
              encapsulation: 2,
              changeDetection: 0,
            })),
            t
          );
        })(),
        vG = (() => {
          class t {
            transform(t, e, n = [], i = !0) {
              return t
                ? (null == n ? void 0 : n.filter((t) => !!t).length)
                  ? t.filter((t) => {
                      const s = String(t[e]).toLowerCase();
                      return n.some(i ? (t) => s.includes(t.toLowerCase()) : (t) => s === t.toLowerCase());
                    })
                  : t
                : [];
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵpipe = Zt({ name: 'filter', type: t, pure: !0 })),
            t
          );
        })();
      function wG(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Username is Required!'), No());
      }
      function xG(t, e) {
        1 & t &&
          (Fo(0, 'mat-error'), Ca(1, '\n          Username should be atleast 4 characters long!\n        '), No());
      }
      function CG(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n          Username can be atmax 20 characters long!\n        '), No());
      }
      function kG(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Password is Required!'), No());
      }
      function SG(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 36), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          ea('value', t), tr(1), Sa('\n            ', t, '\n          ');
        }
      }
      function EG(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Status is Required!'), No());
      }
      function OG(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Email is Required!'), No());
      }
      function PG(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n          Please enter an valid email address\n        '), No());
      }
      function AG(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 18),
            Ca(2, '\n    '),
            Fo(3, 'h4', 19),
            Ca(4, 'New Employee'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 20),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 21),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 22),
            Uo('ngSubmit', function (e) {
              return Fe(t), Xo().addEmployee(e);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 23),
            Ca(16, '\n      '),
            Fo(17, 'mat-form-field', 24),
            Ca(18, '\n        '),
            Fo(19, 'mat-label'),
            Ca(20, 'Username'),
            No(),
            Ca(21, '\n        '),
            Vo(22, 'input', 25),
            Ca(23, '\n        '),
            Do(24, wG, 2, 0, 'mat-error', 26),
            Ca(25, '\n        '),
            Do(26, xG, 2, 0, 'mat-error', 26),
            Ca(27, '\n        '),
            Do(28, CG, 2, 0, 'mat-error', 26),
            Ca(29, '\n      '),
            No(),
            Ca(30, '\n\n      '),
            Fo(31, 'mat-form-field', 27),
            Ca(32, '\n        '),
            Fo(33, 'mat-label'),
            Ca(34, 'Password'),
            No(),
            Ca(35, '\n        '),
            Vo(36, 'input', 28),
            Ca(37, '\n        '),
            Do(38, kG, 2, 0, 'mat-error', 26),
            Ca(39, '\n      '),
            No(),
            Ca(40, '\n\n      '),
            Ca(41, '\n      '),
            Fo(42, 'mat-form-field', 29),
            Ca(43, '\n        '),
            Fo(44, 'mat-label'),
            Ca(45, 'Status'),
            No(),
            Ca(46, '\n        '),
            Fo(47, 'mat-select', 30),
            Ca(48, '\n          '),
            Do(49, SG, 2, 2, 'mat-option', 31),
            Ca(50, '\n        '),
            No(),
            Ca(51, '\n        '),
            Do(52, EG, 2, 0, 'mat-error', 26),
            Ca(53, '\n      '),
            No(),
            Ca(54, '\n      '),
            Ca(55, '\n      '),
            Fo(56, 'mat-form-field', 29),
            Ca(57, '\n        '),
            Fo(58, 'mat-label'),
            Ca(59, 'Email'),
            No(),
            Ca(60, '\n        '),
            Vo(61, 'input', 32),
            Ca(62, '\n        '),
            Do(63, OG, 2, 0, 'mat-error', 26),
            Ca(64, '\n        '),
            Do(65, PG, 2, 0, 'mat-error', 26),
            Ca(66, '\n      '),
            No(),
            Ca(67, '\n      '),
            Ca(68, '\n      '),
            Fo(69, 'mat-form-field', 29),
            Ca(70, '\n        '),
            Fo(71, 'mat-label'),
            Ca(72, 'Coupon'),
            No(),
            Ca(73, '\n        '),
            Vo(74, 'input', 33),
            Ca(75, '\n      '),
            No(),
            Ca(76, '\n    '),
            No(),
            Ca(77, '\n    '),
            Fo(78, 'div', 34),
            Ca(79, '\n      '),
            Fo(80, 'button', 35),
            Ca(81, 'Save'),
            No(),
            Ca(82, '\n    '),
            No(),
            Ca(83, '\n  '),
            No(),
            Ca(84, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null,
            i = null,
            s = null,
            r = null,
            o = null,
            a = null;
          tr(13),
            Io('formGroup', t.newEmployeeForm),
            tr(11),
            Io('ngIf', null == (e = t.newEmployeeForm.get('username')) ? null : e.hasError('required')),
            tr(2),
            Io('ngIf', null == (n = t.newEmployeeForm.get('username')) ? null : n.hasError('minlength')),
            tr(2),
            Io('ngIf', null == (i = t.newEmployeeForm.get('username')) ? null : i.hasError('maxlength')),
            tr(10),
            Io('ngIf', null == (s = t.newEmployeeForm.get('password')) ? null : s.hasError('required')),
            tr(11),
            Io('ngForOf', t.statuses),
            tr(3),
            Io('ngIf', null == (r = t.newEmployeeForm.get('status')) ? null : r.hasError('required')),
            tr(11),
            Io('ngIf', null == (o = t.newEmployeeForm.get('password')) ? null : o.hasError('required')),
            tr(2),
            Io('ngIf', null == (a = t.newEmployeeForm.get('password')) ? null : a.hasError('email')),
            tr(15),
            Io('disabled', t.newEmployeeForm.invalid);
        }
      }
      function TG(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 36), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          Io('value', t), tr(1), Sa('', t, ' ');
        }
      }
      function DG(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 18),
            Ca(2, '\n    '),
            Fo(3, 'h4', 19),
            Ca(4, 'Edit Employee'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 20),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 21),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 22),
            Uo('ngSubmit', function () {
              Fe(t);
              const e = Xo();
              return e.patchEmployee(e.selectedEmpID);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 23),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'mat-form-field', 24),
            Ca(20, '\n          '),
            Fo(21, 'mat-label'),
            Ca(22, 'Username'),
            No(),
            Ca(23, '\n          '),
            Vo(24, 'input', 37),
            Ca(25, '\n        '),
            No(),
            Ca(26, '\n      '),
            No(),
            Ca(27, '\n\n      '),
            Fo(28, 'div'),
            Ca(29, '\n        '),
            Fo(30, 'mat-form-field', 38),
            Ca(31, '\n          '),
            Fo(32, 'mat-select', 39),
            Ca(33, '\n            '),
            Do(34, TG, 2, 2, 'mat-option', 31),
            Ca(35, '\n          '),
            No(),
            Ca(36, '\n        '),
            No(),
            Ca(37, '\n      '),
            No(),
            Ca(38, '\n\n      '),
            Fo(39, 'div'),
            Ca(40, '\n        '),
            Fo(41, 'mat-form-field', 24),
            Ca(42, '\n          '),
            Fo(43, 'mat-label'),
            Ca(44, 'Email'),
            No(),
            Ca(45, '\n          '),
            Vo(46, 'input', 40),
            Ca(47, '\n        '),
            No(),
            Ca(48, '\n      '),
            No(),
            Ca(49, '\n    '),
            No(),
            Ca(50, '\n    '),
            Fo(51, 'div', 34),
            Ca(52, '\n      '),
            Fo(53, 'button', 35),
            Ca(54, 'Save'),
            No(),
            Ca(55, '\n    '),
            No(),
            Ca(56, '\n  '),
            No(),
            Ca(57, '\n');
        }
        if (2 & t) {
          const t = Xo();
          tr(13),
            Io('formGroup', t.editEmployeeForm),
            tr(19),
            Io('compareWith', t.compareStatus),
            tr(2),
            Io('ngForOf', t.statuses),
            tr(19),
            Io('disabled', t.editEmployeeForm.invalid);
        }
      }
      function MG(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n            Password is Required!\n          '), No());
      }
      function RG(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n            Confirm Password is Required!\n          '), No());
      }
      function IG(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 18),
            Ca(2, '\n    '),
            Fo(3, 'h4', 19),
            Ca(4, 'Change Password'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 20),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 21),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 22),
            Uo('ngSubmit', function () {
              return Fe(t), Xo().updatePassword();
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 23),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'mat-form-field', 24),
            Ca(20, '\n          '),
            Fo(21, 'mat-label'),
            Ca(22, 'New Password'),
            No(),
            Ca(23, '\n          '),
            Vo(24, 'input', 41),
            Ca(25, '\n          '),
            Do(26, MG, 2, 0, 'mat-error', 26),
            Ca(27, '\n        '),
            No(),
            Ca(28, '\n      '),
            No(),
            Ca(29, '\n\n      '),
            Fo(30, 'div'),
            Ca(31, '\n        '),
            Fo(32, 'mat-form-field', 27),
            Ca(33, '\n          '),
            Fo(34, 'mat-label'),
            Ca(35, 'Confirm New Password'),
            No(),
            Ca(36, '\n          '),
            Vo(37, 'input', 42),
            Ca(38, '\n          '),
            Do(39, RG, 2, 0, 'mat-error', 26),
            Ca(40, '\n        '),
            No(),
            Ca(41, '\n      '),
            No(),
            Ca(42, '\n    '),
            No(),
            Ca(43, '\n    '),
            Fo(44, 'div', 34),
            Ca(45, '\n      '),
            Fo(46, 'button', 35),
            Ca(47, '\n        Update Password\n      '),
            No(),
            Ca(48, '\n    '),
            No(),
            Ca(49, '\n  '),
            No(),
            Ca(50, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null;
          tr(13),
            Io('formGroup', t.changePasswordForm),
            tr(13),
            Io('ngIf', null == (e = t.changePasswordForm.get('newPassword')) ? null : e.hasError('required')),
            tr(13),
            Io('ngIf', null == (n = t.changePasswordForm.get('confirmNewPassword')) ? null : n.hasError('required')),
            tr(7),
            Io('disabled', t.changePasswordForm.invalid);
        }
      }
      const LG = function () {
          return ['ACTIVATED', 'ADMIN'];
        },
        FG = function (t) {
          return [t];
        },
        NG = function () {
          return { action: 'deleteEmp', icon: 'delete', color: 'warn', label: 'Disable' };
        },
        VG = function () {
          return ['DEACTIVATED'];
        },
        BG = function () {
          return ['username', 'status', 'email', 'discountCode', 'actions'];
        },
        zG = function () {
          return { action: 'hideEmp', icon: 'visibility', color: 'warn', label: 'Hide' };
        },
        jG = function () {
          return ['PENDING'];
        },
        HG = function () {
          return { action: 'acceptEmp', icon: 'check', color: 'primary', label: 'Accept' };
        },
        $G = function () {
          return { action: 'declineEmp', icon: 'delete', color: 'warn', label: 'Decline' };
        },
        qG = function (t, e) {
          return [t, e];
        };
      let WG = (() => {
        class t {
          constructor(t, e, n, i, s) {
            (this.quoteService = t),
              (this.modalService = e),
              (this._snackBar = n),
              (this.ngxLoader = i),
              (this.formBuilder = s),
              (this.displayedColumns = ['username', 'status', 'email', 'discountCode', 'actions']),
              (this.statuses = [tG.Admin, tG.Activated, tG.Deactivated, tG.Pending, tG.Hidden]),
              (this.isLoading = !1);
          }
          ngOnInit() {
            this.ngxLoader.start(),
              (this.newEmployeeForm = this.formBuilder.group({
                username: ['', [Ud.required, Ud.minLength(4), Ud.maxLength(20), Ud.pattern('[a-zA-Z]+')]],
                password: ['', [Ud.required]],
                status: ['', [Ud.required]],
                email: ['', [Ud.email, Ud.required]],
                discountCode: [''],
              })),
              (this.editEmployeeForm = this.formBuilder.group({
                username: [''],
                status: [null],
                email: ['', [Ud.email, Ud.required]],
              })),
              (this.changePasswordForm = this.formBuilder.group({
                newPassword: ['', [Ud.required]],
                confirmNewPassword: ['', [Ud.required]],
              })),
              (this.searchForm = this.statuses.reduce((t, e) => ((t[e] = ''), t), {}));
          }
          ngAfterViewInit() {
            this.getProfiles();
          }
          applyFilter(t) {
            (this.dataSource.filter = t.target.value.trim().toLowerCase()),
              this.dataSource.paginator && this.dataSource.paginator.firstPage();
          }
          newEmployee(t) {
            this.modalService.open(t, { size: 'md' });
          }
          getProfiles() {
            this.ngxLoader.start(),
              this.quoteService
                .getAllEmployees()
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body.data &&
                      ((this.profileData = t.body.data), this.filterProfileData(this.profileData)),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          addEmployee(t) {
            this.ngxLoader.start(),
              this.newEmployeeForm.valid &&
                this.quoteService
                  .addNewEmployee(this.newEmployeeForm.value)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Employee had been added!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.modalService.dismissAll(),
                        this.newEmployeeForm.reset(),
                        this.getProfiles()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
          }
          filterProfileData(t) {
            if (void 0 !== t) {
              const e = t.map((t) => Object.assign({}, t));
              (this.dataSource = new tT(e)),
                setTimeout(() => (this.dataSource.paginator = this.paginator)),
                this.ngxLoader.stop();
            }
          }
          deleteEmp(t) {
            this.ngxLoader.start(),
              this.quoteService
                .setEmployeeStatus(t, tG.Deactivated)
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body &&
                      this._snackBar.open(`User ${t.body.username} is ${t.body.status}`, '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          editEmployee(t, e) {
            (this.selectedEmpID = e.id),
              this.editEmployeeForm.patchValue({
                username: e.username ? e.username : '',
                status: e.status ? e.status : null,
                email: e.email ? e.email : '',
              }),
              this.modalService.open(t, { size: 'md', backdropClass: 'light-blue-backdrop' });
          }
          changePassword(t, e) {
            (this.selectedEmpID = e.id),
              this.modalService.open(t, { size: 'md', backdropClass: 'light-blue-backdrop' });
          }
          updatePassword() {
            this.ngxLoader.start(),
              this.modalService.dismissAll(),
              this.changePasswordForm.valid &&
                this.quoteService
                  .changePassword({ password: this.changePasswordForm.controls.newPassword.value }, this.selectedEmpID)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Password Updated!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.changePasswordForm.reset()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
          }
          patchEmployee(t) {
            this.editEmployeeForm.valid &&
              this.quoteService
                .editEmployee(this.editEmployeeForm.value, t)
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      (this._snackBar.open('Employee details updated!', '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.getProfiles(),
                      this.modalService.dismissAll(),
                      this.editEmployeeForm.reset()),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          compareStatus(t, e) {
            return t && e && t === e;
          }
          hideEmployee(t) {
            this.ngxLoader.start(),
              this.quoteService
                .setEmployeeStatus(t.id, tG.Hidden)
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body &&
                      this._snackBar.open(`User ${t.body.username} is ${t.body.status}`, '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          onActions({ action: t, data: e }, n) {
            switch (t) {
              case 'deleteEmp':
                this.deleteEmp(e.id);
                break;
              case 'editEmp':
                this.editEmployee(n.editEmp, e);
                break;
              case 'changePassword':
                this.changePassword(n.changePassword, e);
                break;
              case 'hideEmp':
                this.hideEmployee(e);
                break;
              case 'acceptEmp':
                this.changeEmpStatus(e, tG.Activated);
                break;
              case 'declineEmp':
                this.changeEmpStatus(e, tG.Deactivated);
            }
          }
          changeEmpStatus(t, e) {
            this.ngxLoader.start(),
              this.quoteService.editEmployee({ status: e }, t.id).subscribe(() => {
                this.getProfiles(), this.ngxLoader.stop();
              });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(cF), Ro(FN), Ro(kP), Ro(WF), Ro(mm));
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['app-profile']],
            viewQuery: function (t, e) {
              if ((1 & t && (xc(gO, 1), xc(DP, 1)), 2 & t)) {
                let t;
                wc((t = kc())) && (e.paginator = t.first), wc((t = kc())) && (e.sort = t.first);
              }
            },
            decls: 110,
            vars: 62,
            consts: [
              [1, 'container'],
              [1, 'row'],
              [1, 'col-12'],
              [1, 'mt-4'],
              ['mat-button', '', 'type', 'button', 1, 'button-primary', 3, 'click'],
              [1, 'col-lg-12'],
              [1, 'table-wrapper', 'mt-3', 'mb-3'],
              [1, 'card', 'card-primary'],
              [1, 'card-header'],
              [1, 'card-title'],
              [3, 'appearance'],
              ['type', 'text', 'matInput', '', 3, 'ngModel', 'ngModelChange'],
              [1, 'card-body'],
              [3, 'users', 'allowedActions', 'limit', 'actions'],
              [3, 'users', 'displayedColumns', 'allowedActions', 'limit', 'actions'],
              ['employeeContent', ''],
              ['profileContent', ''],
              ['changePasswordContent', ''],
              [1, 'modal-header'],
              [1, 'modal-title'],
              ['type', 'button', 'aria-label', 'Close', 1, 'btn', 'btn-light', 3, 'click'],
              ['aria-hidden', 'true'],
              [3, 'formGroup', 'ngSubmit'],
              [1, 'modal-body', 'ff-14'],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100'],
              ['matInput', '', 'placeholder', 'Username', 'formControlName', 'username', 'autocomplete', 'off'],
              [4, 'ngIf'],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100', 'mt-2'],
              [
                'matInput',
                '',
                'placeholder',
                'Password',
                'formControlName',
                'password',
                'name',
                'password',
                'autocomplete',
                'off',
              ],
              ['appearance', 'outline', 1, 'w-100', 'mt-2'],
              ['formControlName', 'status'],
              [3, 'value', 4, 'ngFor', 'ngForOf'],
              ['matInput', '', 'type', 'email', 'placeholder', 'Email', 'formControlName', 'email', 'name', 'email'],
              ['matInput', '', 'placeholder', 'Coupon', 'formControlName', 'discountCode', 'name', 'discountCode'],
              [1, 'modal-footer'],
              ['mat-button', '', 'type', 'submit', 1, 'button-primary', 3, 'disabled'],
              [3, 'value'],
              ['matInput', '', 'placeholder', 'Username', 'formControlName', 'username', 'name', 'username'],
              ['appearance', 'outline', 1, 'w-100'],
              ['formControlName', 'status', 'placeholder', 'Status', 3, 'compareWith'],
              ['matInput', '', 'placeholder', 'Email', 'formControlName', 'email', 'name', 'email'],
              ['matInput', '', 'placeholder', 'New Password', 'formControlName', 'newPassword', 'name', 'newPassword'],
              [
                'matInput',
                '',
                'placeholder',
                'Confirm New Password',
                'formControlName',
                'confirmNewPassword',
                'name',
                'confirmNewPassword',
              ],
            ],
            template: function (t, e) {
              if (1 & t) {
                const t = Ho();
                Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'div', 1),
                  Ca(3, '\n    '),
                  Fo(4, 'div', 2),
                  Ca(5, '\n      '),
                  Ca(6, '\n      '),
                  Fo(7, 'div', 3),
                  Ca(8, '\n        '),
                  Fo(9, 'button', 4),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(99);
                    return e.newEmployee(n);
                  }),
                  Ca(10, '\n          New Employee\n        '),
                  No(),
                  Ca(11, '\n      '),
                  No(),
                  Ca(12, '\n    '),
                  No(),
                  Ca(13, '\n  '),
                  No(),
                  Ca(14, '\n  '),
                  Fo(15, 'div', 1),
                  Ca(16, '\n    '),
                  Fo(17, 'div', 5),
                  Ca(18, '\n      '),
                  Fo(19, 'div', 6),
                  Ca(20, '\n        '),
                  Fo(21, 'div', 7),
                  Ca(22, '\n          '),
                  Fo(23, 'div', 8),
                  Ca(24, '\n            '),
                  Fo(25, 'h4', 9),
                  Ca(26, 'Active Users'),
                  No(),
                  Ca(27, '\n            '),
                  Fo(28, 'mat-form-field', 10),
                  Ca(29, '\n              '),
                  Fo(30, 'mat-label'),
                  Ca(31, 'Search Active Users'),
                  No(),
                  Ca(32, '\n              '),
                  Fo(33, 'input', 11),
                  Uo('ngModelChange', function (t) {
                    return (e.searchForm.ACTIVATED = t);
                  }),
                  No(),
                  Ca(34, '\n            '),
                  No(),
                  Ca(35, '\n          '),
                  No(),
                  Ca(36, '\n          '),
                  Fo(37, 'div', 12),
                  Ca(38, '\n            '),
                  Fo(39, 'app-profile-list-table', 13),
                  Uo('actions', function (n) {
                    Fe(t);
                    const i = Mo(102),
                      s = Mo(105);
                    return e.onActions(n, { editEmp: i, changePassword: s });
                  }),
                  ic(40, 'filter'),
                  ic(41, 'filter'),
                  Ca(42, '\n            '),
                  No(),
                  Ca(43, '\n          '),
                  No(),
                  Ca(44, '\n        '),
                  No(),
                  Ca(45, '\n        '),
                  Fo(46, 'div', 7),
                  Ca(47, '\n          '),
                  Fo(48, 'div', 8),
                  Ca(49, '\n            '),
                  Fo(50, 'h4', 9),
                  Ca(51, 'Disabled Users'),
                  No(),
                  Ca(52, '\n            '),
                  Fo(53, 'mat-form-field', 10),
                  Ca(54, '\n              '),
                  Fo(55, 'mat-label'),
                  Ca(56, 'Search Disabled Users'),
                  No(),
                  Ca(57, '\n              '),
                  Fo(58, 'input', 11),
                  Uo('ngModelChange', function (t) {
                    return (e.searchForm.DEACTIVATED = t);
                  }),
                  No(),
                  Ca(59, '\n            '),
                  No(),
                  Ca(60, '\n          '),
                  No(),
                  Ca(61, '\n          '),
                  Fo(62, 'div', 12),
                  Ca(63, '\n            '),
                  Fo(64, 'app-profile-list-table', 14),
                  Uo('actions', function (n) {
                    Fe(t);
                    const i = Mo(102),
                      s = Mo(105);
                    return e.onActions(n, { editEmp: i, changePassword: s });
                  }),
                  ic(65, 'filter'),
                  ic(66, 'filter'),
                  No(),
                  Ca(67, '\n          '),
                  No(),
                  Ca(68, '\n        '),
                  No(),
                  Ca(69, '\n        '),
                  Fo(70, 'div', 7),
                  Ca(71, '\n          '),
                  Fo(72, 'div', 8),
                  Ca(73, '\n            '),
                  Fo(74, 'h4', 9),
                  Ca(75, 'Pending Users'),
                  No(),
                  Ca(76, '\n            '),
                  Fo(77, 'mat-form-field', 10),
                  Ca(78, '\n              '),
                  Fo(79, 'mat-label'),
                  Ca(80, 'Search Pending Users'),
                  No(),
                  Ca(81, '\n              '),
                  Fo(82, 'input', 11),
                  Uo('ngModelChange', function (t) {
                    return (e.searchForm.PENDING = t);
                  }),
                  No(),
                  Ca(83, '\n            '),
                  No(),
                  Ca(84, '\n          '),
                  No(),
                  Ca(85, '\n          '),
                  Fo(86, 'div', 12),
                  Ca(87, '\n            '),
                  Fo(88, 'app-profile-list-table', 13),
                  Uo('actions', function (n) {
                    Fe(t);
                    const i = Mo(102),
                      s = Mo(105);
                    return e.onActions(n, { editEmp: i, changePassword: s });
                  }),
                  ic(89, 'filter'),
                  ic(90, 'filter'),
                  No(),
                  Ca(91, '\n          '),
                  No(),
                  Ca(92, '\n        '),
                  No(),
                  Ca(93, '\n      '),
                  No(),
                  Ca(94, '\n    '),
                  No(),
                  Ca(95, '\n  '),
                  No(),
                  Ca(96, '\n'),
                  No(),
                  Ca(97, '\n\n'),
                  Do(98, AG, 85, 10, 'ng-template', null, 15, Pc),
                  Ca(100, '\n\n'),
                  Do(101, DG, 58, 4, 'ng-template', null, 16, Pc),
                  Ca(103, '\n\n'),
                  Do(104, IG, 51, 4, 'ng-template', null, 17, Pc),
                  Ca(106, '\n\n'),
                  Ca(107, '\n'),
                  Vo(108, 'ngx-ui-loader'),
                  Ca(109, '\n');
              }
              var n, i, s;
              2 & t &&
                (tr(28),
                Io('appearance', 'outline'),
                tr(5),
                Io('ngModel', e.searchForm.ACTIVATED),
                tr(6),
                Io(
                  'users',
                  rc(
                    40,
                    16,
                    (function (t, e, n, i, s, r) {
                      const o = Ie(),
                        a = ke(o, 61);
                      return ac(
                        o,
                        oc(o, 61)
                          ? (function (t, e, n, i, s, r, o, a, l) {
                              const c = e + n;
                              return (function (t, e, n, i, s, r) {
                                const o = Po(t, e, n, i);
                                return Po(t, e + 2, s, r) || o;
                              })(t, c, s, r, o, a)
                                ? Eo(t, c + 4, l ? i.call(l, s, r, o, a) : i(s, r, o, a))
                                : tc(t, c + 4);
                            })(o, qe(), 20, a.transform, n, i, s, false, a)
                          : a.transform(n, i, s, false)
                      );
                    })(0, 0, e.profileData, 'status', Zl(41, LG)),
                    'username',
                    Jl(42, FG, e.searchForm.ACTIVATED)
                  )
                )('allowedActions', Jl(45, FG, Zl(44, NG)))('limit', 5),
                tr(14),
                Io('appearance', 'outline'),
                tr(5),
                Io('ngModel', e.searchForm.DEACTIVATED),
                tr(6),
                Io(
                  'users',
                  rc(
                    65,
                    25,
                    rc(66, 29, e.profileData, 'status', Zl(47, VG)),
                    'username',
                    Jl(48, FG, e.searchForm.DEACTIVATED)
                  )
                )('displayedColumns', Zl(50, BG))('allowedActions', Jl(52, FG, Zl(51, zG)))('limit', 5),
                tr(13),
                Io('appearance', 'outline'),
                tr(5),
                Io('ngModel', e.searchForm.PENDING),
                tr(6),
                Io(
                  'users',
                  rc(
                    89,
                    33,
                    rc(90, 37, e.profileData, 'status', Zl(54, jG)),
                    'username',
                    Jl(55, FG, e.searchForm.PENDING)
                  )
                )(
                  'allowedActions',
                  (59, (n = qG), (i = Zl(57, HG)), (s = Zl(58, $G)), nc(Ie(), qe(), 59, n, i, s, undefined))
                )('limit', 5));
            },
            directives: [$C, _C, aC, tS, zd, dp, Up, yG, UF, Yp, pp, em, lm, Ru, ME, Du, iC, gw],
            pipes: [vG],
            styles: [
              '.mat-form-field-wrapper{padding-bottom:0!important}.card[_ngcontent-%COMP%] + .card[_ngcontent-%COMP%]{margin-top:16px}.card-header[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;align-items:center}',
            ],
            changeDetection: 0,
          })),
          t
        );
      })();
      const UG = '/api/v1/program';
      let YG = (() => {
        class t {
          constructor(t) {
            this.httpClient = t;
          }
          addProgram(t) {
            return this.httpClient.post(UG, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in adding new program.'), Zm))
            );
          }
          getProgram() {
            return this.httpClient.get(UG, { observe: 'response', params: { limit: '999', include: 'employee' } }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in fetching programs.'), Zm))
            );
          }
          deleteProgram(t) {
            return this.httpClient.delete('/api/v1/program/' + t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in deleting the program.'), Zm))
            );
          }
          editProgram(t, e) {
            return this.httpClient.put('/api/v1/program/' + e, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in editing program.'), Zm))
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Fm));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      function GG(t, e) {
        1 & t && (Fo(0, 'th', 24), Ca(1, 'Name'), No());
      }
      function QG(t, e) {
        if ((1 & t && (Fo(0, 'td', 25), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.name);
        }
      }
      function KG(t, e) {
        1 & t && (Fo(0, 'th', 24), Ca(1, 'Product ID(s)'), No());
      }
      function XG(t, e) {
        if ((1 & t && (Fo(0, 'td', 25), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.productId);
        }
      }
      function ZG(t, e) {
        1 & t && (Fo(0, 'th', 24), Ca(1, 'Questions'), No());
      }
      function JG(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 25),
            Ca(1, '\n                  '),
            Fo(2, 'mat-icon', 26),
            Ca(3),
            No(),
            Ca(4, '\n                '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit;
          tr(3), ka(!0 === t.questions ? 'done' : 'warning_amber');
        }
      }
      function tQ(t, e) {
        1 & t && (Fo(0, 'th', 24), Ca(1, 'Moneyback'), No());
      }
      function eQ(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 25),
            Ca(1, '\n                  '),
            Fo(2, 'mat-icon', 26),
            Ca(3),
            No(),
            Ca(4, '\n                '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit;
          tr(3), ka(!0 === t.moneyback ? 'done' : 'warning_amber');
        }
      }
      function nQ(t, e) {
        1 & t && (Fo(0, 'th', 24), Ca(1, 'Questionnaire'), No());
      }
      function iQ(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 25),
            Ca(1, '\n                  '),
            Fo(2, 'mat-icon', 26),
            Ca(3),
            No(),
            Ca(4, '\n                '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit;
          tr(3), ka(!0 === t.questionnaire ? 'done' : 'warning_amber');
        }
      }
      function sQ(t, e) {
        1 & t && (Fo(0, 'th', 24), Ca(1, 'Recommendations'), No());
      }
      function rQ(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'td', 25),
            Ca(1, '\n                  '),
            Fo(2, 'mat-icon', 26),
            Ca(3),
            No(),
            Ca(4, '\n                '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit;
          tr(3), ka(!0 === t.recommendations ? 'done' : 'warning_amber');
        }
      }
      function oQ(t, e) {
        1 & t && (Fo(0, 'th', 24), Ca(1, 'Duration(Days)'), No());
      }
      function aQ(t, e) {
        if ((1 & t && (Fo(0, 'td', 25), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.duration);
        }
      }
      function lQ(t, e) {
        1 & t && (Fo(0, 'th', 24), Ca(1, 'Actions'), No());
      }
      function cQ(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'td', 25),
            Ca(1, '\n                  '),
            Fo(2, 'button', 27),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit,
                i = Xo(),
                s = Mo(106);
              return i.editProgram(s, n);
            }),
            Ca(3, '\n                    '),
            Fo(4, 'mat-icon', 28),
            Ca(5, 'edit'),
            No(),
            Ca(6, '\n                    Edit\n                  '),
            No(),
            Ca(7, '\n\n                  '),
            Fo(8, 'button', 29),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit;
              return Xo().deleteProgram(n.id);
            }),
            Ca(9, '\n                    '),
            Fo(10, 'mat-icon', 30),
            Ca(11, 'delete'),
            No(),
            Ca(12, '\n                    Delete\n                  '),
            No(),
            Ca(13, '\n                '),
            No();
        }
      }
      function hQ(t, e) {
        1 & t && Vo(0, 'tr', 31);
      }
      function uQ(t, e) {
        1 & t && Vo(0, 'tr', 32);
      }
      function dQ(t, e) {
        1 & t &&
          (Fo(0, 'tr', 33),
          Ca(1, '\n                '),
          Fo(2, 'td', 34),
          Ca(3, 'No data found.'),
          No(),
          Ca(4, '\n              '),
          No());
      }
      function pQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Name is Required! '), No());
      }
      function mQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n            Product IDs are Required!\n          '), No());
      }
      function fQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Duration is Required! '), No());
      }
      function gQ(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 35),
            Ca(2, '\n    '),
            Fo(3, 'h4', 36),
            Ca(4, 'New Program'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 37),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 38),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 39),
            Uo('ngSubmit', function (e) {
              return Fe(t), Xo().addProgram(e);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 40),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'mat-form-field', 41),
            Ca(20, '\n          '),
            Fo(21, 'mat-label'),
            Ca(22, 'Name'),
            No(),
            Ca(23, ' '),
            Vo(24, 'input', 42),
            Ca(25, '\n          '),
            Do(26, pQ, 2, 0, 'mat-error', 43),
            Ca(27, '\n        '),
            No(),
            Ca(28, '\n      '),
            No(),
            Ca(29, '\n\n      '),
            Fo(30, 'div'),
            Ca(31, '\n        '),
            Fo(32, 'mat-form-field', 41),
            Ca(33, '\n          '),
            Fo(34, 'mat-label'),
            Ca(35, 'Product IDs'),
            No(),
            Ca(36, '\n          '),
            Vo(37, 'input', 44),
            Ca(38, '\n          '),
            Do(39, mQ, 2, 0, 'mat-error', 43),
            Ca(40, '\n        '),
            No(),
            Ca(41, '\n      '),
            No(),
            Ca(42, '\n\n      '),
            Fo(43, 'div'),
            Ca(44, '\n        '),
            Fo(45, 'mat-form-field', 41),
            Ca(46, '\n          '),
            Fo(47, 'mat-label'),
            Ca(48, 'Duration'),
            No(),
            Ca(49, '\n          '),
            Vo(50, 'input', 45),
            Ca(51, '\n          '),
            Do(52, fQ, 2, 0, 'mat-error', 43),
            Ca(53, '\n        '),
            No(),
            Ca(54, '\n      '),
            No(),
            Ca(55, '\n\n      '),
            Fo(56, 'div', 46),
            Ca(57, '\n        '),
            Fo(58, 'mat-checkbox', 47),
            Ca(59, 'Moneyback'),
            No(),
            Ca(60, '\n        '),
            Fo(61, 'mat-checkbox', 48),
            Ca(62, 'Questionnaire'),
            No(),
            Ca(63, '\n\n        '),
            Fo(64, 'mat-checkbox', 49),
            Ca(65, 'Food Recommendations'),
            No(),
            Ca(66, '\n        '),
            Fo(67, 'mat-checkbox', 50),
            Ca(68, 'Questions'),
            No(),
            Ca(69, '\n      '),
            No(),
            Ca(70, '\n    '),
            No(),
            Ca(71, '\n    '),
            Fo(72, 'div', 51),
            Ca(73, '\n      '),
            Fo(74, 'button', 52),
            Ca(75, 'Save'),
            No(),
            Ca(76, '\n    '),
            No(),
            Ca(77, '\n  '),
            No(),
            Ca(78, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null,
            i = null;
          tr(13),
            Io('formGroup', t.addProgramForm),
            tr(13),
            Io('ngIf', null == (e = t.addProgramForm.get('name')) ? null : e.hasError('required')),
            tr(13),
            Io('ngIf', null == (n = t.addProgramForm.get('productIds')) ? null : n.hasError('required')),
            tr(13),
            Io('ngIf', null == (i = t.addProgramForm.get('duration')) ? null : i.hasError('required')),
            tr(22),
            Io('disabled', t.addProgramForm.invalid);
        }
      }
      function _Q(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Name is Required! '), No());
      }
      function bQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n            Product IDs are Required!\n          '), No());
      }
      function yQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Duration is Required! '), No());
      }
      function vQ(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 35),
            Ca(2, '\n    '),
            Fo(3, 'h4', 36),
            Ca(4, 'Edit existing Program'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 37),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 38),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 39),
            Uo('ngSubmit', function (e) {
              return Fe(t), Xo().editProgramSubmit(e);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 40),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'mat-form-field', 41),
            Ca(20, '\n          '),
            Fo(21, 'mat-label'),
            Ca(22, 'Name'),
            No(),
            Ca(23, ' '),
            Vo(24, 'input', 42),
            Ca(25, '\n          '),
            Do(26, _Q, 2, 0, 'mat-error', 43),
            Ca(27, '\n        '),
            No(),
            Ca(28, '\n      '),
            No(),
            Ca(29, '\n\n      '),
            Fo(30, 'div'),
            Ca(31, '\n        '),
            Fo(32, 'mat-form-field', 41),
            Ca(33, '\n          '),
            Fo(34, 'mat-label'),
            Ca(35, 'Product IDs'),
            No(),
            Ca(36, '\n          '),
            Vo(37, 'input', 44),
            Ca(38, '\n          '),
            Do(39, bQ, 2, 0, 'mat-error', 43),
            Ca(40, '\n        '),
            No(),
            Ca(41, '\n      '),
            No(),
            Ca(42, '\n\n      '),
            Fo(43, 'div'),
            Ca(44, '\n        '),
            Fo(45, 'mat-form-field', 41),
            Ca(46, '\n          '),
            Fo(47, 'mat-label'),
            Ca(48, 'Duration'),
            No(),
            Ca(49, '\n          '),
            Vo(50, 'input', 45),
            Ca(51, '\n          '),
            Do(52, yQ, 2, 0, 'mat-error', 43),
            Ca(53, '\n        '),
            No(),
            Ca(54, '\n      '),
            No(),
            Ca(55, '\n\n      '),
            Fo(56, 'div', 46),
            Ca(57, '\n        '),
            Fo(58, 'mat-checkbox', 47),
            Ca(59, 'Moneyback'),
            No(),
            Ca(60, '\n        '),
            Fo(61, 'mat-checkbox', 48),
            Ca(62, 'Questionnaire'),
            No(),
            Ca(63, '\n\n        '),
            Fo(64, 'mat-checkbox', 49),
            Ca(65, 'Food Recommendations'),
            No(),
            Ca(66, '\n        '),
            Fo(67, 'mat-checkbox', 50),
            Ca(68, 'Questions'),
            No(),
            Ca(69, '\n      '),
            No(),
            Ca(70, '\n    '),
            No(),
            Ca(71, '\n    '),
            Fo(72, 'div', 51),
            Ca(73, '\n      '),
            Fo(74, 'button', 52),
            Ca(75, 'Save'),
            No(),
            Ca(76, '\n    '),
            No(),
            Ca(77, '\n  '),
            No(),
            Ca(78, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null,
            i = null;
          tr(13),
            Io('formGroup', t.editProgramForm),
            tr(13),
            Io('ngIf', null == (e = t.editProgramForm.get('name')) ? null : e.hasError('required')),
            tr(13),
            Io('ngIf', null == (n = t.editProgramForm.get('productIds')) ? null : n.hasError('required')),
            tr(13),
            Io('ngIf', null == (i = t.editProgramForm.get('duration')) ? null : i.hasError('required')),
            tr(22),
            Io('disabled', t.editProgramForm.invalid);
        }
      }
      let wQ = (() => {
        class t {
          constructor(t, e, n, i, s, r) {
            (this.programService = t),
              (this.quoteService = e),
              (this.modalService = n),
              (this.ngxLoader = i),
              (this.formBuilder = s),
              (this._snackBar = r),
              (this.isLoading = !1),
              (this.programs = []),
              (this.selectedId = ''),
              (this.listToPopulate = []),
              (this.colDef = [
                'name',
                'productId',
                'questions',
                'questionnaire',
                'moneyback',
                'recommendations',
                'duration',
                'actions',
              ]);
          }
          ngOnInit() {
            this.ngxLoader.start(),
              (this.addProgramForm = this.formBuilder.group({
                name: ['', [Ud.required]],
                productIds: ['', [Ud.required]],
                duration: ['', [Ud.required]],
                moneyback: [!0],
                foodRecommendations: [!0],
                question: [!0],
                questionnaire: [!0],
              })),
              (this.editProgramForm = this.formBuilder.group({
                name: ['', [Ud.required]],
                productIds: ['', [Ud.required]],
                duration: ['', [Ud.required]],
                moneyback: [!0],
                foodRecommendations: [!0],
                question: [!0],
              }));
          }
          ngAfterViewInit() {
            this.getPrograms();
          }
          applyFilter(t) {
            (this.dataSource.filter = t.target.value.trim().toLowerCase()),
              this.dataSource.paginator && this.dataSource.paginator.firstPage();
          }
          newProgram(t) {
            this.modalService.open(t, { size: 'md' });
          }
          getPrograms() {
            this.ngxLoader.start(),
              this.quoteService
                .getAllPrograms()
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body.data &&
                      ((this.programData = t.body.data), this.filterProgramData(this.programData)),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          editProgramSubmit(t) {
            if ((this.listToPopulate.map(({ id: t }) => ({ id: t })), this.editProgramForm.valid)) {
              const t = this.editProgramForm.value.productIds.split(',');
              this.programService
                .editProgram(
                  {
                    name: this.editProgramForm.value.name,
                    productIds: t,
                    duration: this.editProgramForm.value.duration,
                    foodRecommendations: this.editProgramForm.value.foodRecommendations,
                    question: this.editProgramForm.value.question,
                    moneyback: this.editProgramForm.value.moneyback,
                    questionnaire: this.editProgramForm.value.questionnaire,
                  },
                  this.selectedId
                )
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body &&
                      (this._snackBar.open('Program Edited!', '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.modalService.dismissAll(),
                      this.addProgramForm.reset(),
                      (this.programs = [])),
                      this.fetchPrograms(),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
            }
          }
          fetchPrograms() {
            this.ngxLoader.start(),
              this.programService
                .getProgram()
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body.data &&
                      ((this.programData = t.body.data), this.filterProgramData(this.programData)),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          editProgram(t, e) {
            (this.programs = []),
              (this.selectedId = e.id),
              this.ngxLoader.start(),
              (this.listToPopulate = e.foods ? e.foods : []),
              this.editProgramForm.patchValue({
                name: e.name ? e.name : '',
                description: e.description ? e.description : '',
              }),
              this.modalService.open(t, { size: 'md', backdropClass: 'light-blue-backdrop' }),
              this.getPrograms();
          }
          addProgram(t) {
            if ((this.ngxLoader.start(), this.addProgramForm.valid)) {
              const t = this.addProgramForm.value.productIds.split(',');
              this.quoteService
                .addProgram({
                  name: this.addProgramForm.value.name,
                  productIds: t,
                  duration: this.addProgramForm.value.duration,
                  foodRecommendations: this.addProgramForm.value.foodRecommendations,
                  question: this.addProgramForm.value.question,
                  moneyback: this.addProgramForm.value.moneyback,
                  questionnaire: this.addProgramForm.value.questionnaire,
                })
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      (this._snackBar.open('Program has been added!', '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.modalService.dismissAll(),
                      this.addProgramForm.reset()),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
            }
          }
          deleteProgram(t) {
            this.ngxLoader.start(),
              this.quoteService
                .deleteProgram(t)
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body &&
                      this._snackBar.open('Program deleted!', '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          filterProgramData(t) {
            if (void 0 !== t) {
              let e = t.map((t) => {
                let e = t.productIds.map((t) => t).join(',');
                return {
                  id: t.id,
                  name: t.name,
                  productId: e,
                  questions: t.question,
                  moneyback: t.moneyback,
                  questionnaire: t.questionnaire,
                  recommendations: t.foodRecommendations,
                  duration: t.duration,
                };
              });
              this.dataSource = e;
            }
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(YG), Ro(cF), Ro(FN), Ro(WF), Ro(mm), Ro(kP));
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['app-program']],
            viewQuery: function (t, e) {
              if ((1 & t && (xc(gO, 1), xc(DP, 1)), 2 & t)) {
                let t;
                wc((t = kc())) && (e.paginator = t.first), wc((t = kc())) && (e.sort = t.first);
              }
            },
            decls: 111,
            vars: 3,
            consts: [
              [1, 'container'],
              [1, 'row'],
              [1, 'col-12'],
              [1, 'mt-4'],
              ['mat-button', '', 'type', 'button', 1, 'button-primary', 3, 'click'],
              [1, 'table-wrapper', 'mt-3'],
              [1, 'card', 'card-primary'],
              [1, 'mat-elevation-z0', 'table-responsive'],
              ['mat-table', '', 1, 'w-100', 3, 'dataSource'],
              ['matColumnDef', 'name'],
              ['mat-header-cell', '', 4, 'matHeaderCellDef'],
              ['mat-cell', '', 'class', 'text-center', 4, 'matCellDef'],
              ['matColumnDef', 'productId'],
              ['matColumnDef', 'questions'],
              ['matColumnDef', 'moneyback'],
              ['matColumnDef', 'questionnaire'],
              ['matColumnDef', 'recommendations'],
              ['matColumnDef', 'duration'],
              ['matColumnDef', 'actions'],
              ['mat-header-row', '', 4, 'matHeaderRowDef'],
              ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
              ['class', 'mat-row', 4, 'matNoDataRow'],
              ['programContent', ''],
              ['editProgramContent', ''],
              ['mat-header-cell', ''],
              ['mat-cell', '', 1, 'text-center'],
              ['aria-hidden', 'false', 'aria-label', 'True icon'],
              ['mat-flat-button', '', 'color', 'primary', 'type', 'button', 3, 'click'],
              ['aria-hidden', 'false', 'aria-label', 'Edit icon'],
              ['mat-flat-button', '', 'color', 'warn', 'type', 'button', 3, 'click'],
              ['aria-hidden', 'false', 'aria-label', 'Delete icon'],
              ['mat-header-row', ''],
              ['mat-row', ''],
              [1, 'mat-row'],
              ['colspan', '4', 1, 'mat-cell'],
              [1, 'modal-header'],
              [1, 'modal-title'],
              ['type', 'button', 'aria-label', 'Close', 1, 'btn', 'btn-light', 3, 'click'],
              ['aria-hidden', 'true'],
              [3, 'formGroup', 'ngSubmit'],
              [1, 'modal-body', 'ff-14'],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100'],
              ['matInput', '', 'placeholder', 'Name', 'formControlName', 'name', 'name', 'name'],
              [4, 'ngIf'],
              [
                'matInput',
                '',
                'placeholder',
                'Product IDs (Seperate with commas)',
                'formControlName',
                'productIds',
                'name',
                'productIds',
              ],
              [
                'matInput',
                '',
                'placeholder',
                'Duration',
                'type',
                'number',
                'formControlName',
                'duration',
                'name',
                'duration',
              ],
              [1, 'd-flex', 'flex-column'],
              ['formControlName', 'moneyback', 'name', 'moneyback', 1, 'example-margin'],
              ['formControlName', 'questionnaire', 'name', 'questionnaire', 1, 'example-margin'],
              ['formControlName', 'foodRecommendations', 'name', 'foodRecommendations', 1, 'example-margin'],
              ['formControlName', 'question', 'name', 'question', 1, 'example-margin'],
              [1, 'modal-footer'],
              ['mat-button', '', 'type', 'submit', 1, 'button-primary', 3, 'disabled'],
            ],
            template: function (t, e) {
              if (1 & t) {
                const t = Ho();
                Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'div', 1),
                  Ca(3, '\n    '),
                  Fo(4, 'div', 2),
                  Ca(5, '\n      '),
                  Fo(6, 'div', 3),
                  Ca(7, '\n        '),
                  Fo(8, 'button', 4),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(103);
                    return e.newProgram(n);
                  }),
                  Ca(9, '\n          New Program\n        '),
                  No(),
                  Ca(10, '\n      '),
                  No(),
                  Ca(11, '\n    '),
                  No(),
                  Ca(12, '\n  '),
                  No(),
                  Ca(13, '\n  '),
                  Fo(14, 'div', 1),
                  Ca(15, '\n    '),
                  Fo(16, 'div', 2),
                  Ca(17, '\n      '),
                  Fo(18, 'div', 5),
                  Ca(19, '\n        '),
                  Fo(20, 'div', 6),
                  Ca(21, '\n          '),
                  Fo(22, 'div', 7),
                  Ca(23, '\n            '),
                  Fo(24, 'table', 8),
                  Ca(25, '\n              '),
                  Ca(26, '\n              '),
                  Bo(27, 9),
                  Ca(28, '\n                '),
                  Do(29, GG, 2, 0, 'th', 10),
                  Ca(30, '\n                '),
                  Do(31, QG, 2, 1, 'td', 11),
                  Ca(32, '\n              '),
                  zo(),
                  Ca(33, '\n\n              '),
                  Ca(34, '\n              '),
                  Bo(35, 12),
                  Ca(36, '\n                '),
                  Do(37, KG, 2, 0, 'th', 10),
                  Ca(38, '\n                '),
                  Do(39, XG, 2, 1, 'td', 11),
                  Ca(40, '\n              '),
                  zo(),
                  Ca(41, '\n\n              '),
                  Ca(42, '\n              '),
                  Bo(43, 13),
                  Ca(44, '\n                '),
                  Do(45, ZG, 2, 0, 'th', 10),
                  Ca(46, '\n                '),
                  Do(47, JG, 5, 1, 'td', 11),
                  Ca(48, '\n              '),
                  zo(),
                  Ca(49, '\n\n              '),
                  Ca(50, '\n              '),
                  Bo(51, 14),
                  Ca(52, '\n                '),
                  Do(53, tQ, 2, 0, 'th', 10),
                  Ca(54, '\n                '),
                  Do(55, eQ, 5, 1, 'td', 11),
                  Ca(56, '\n              '),
                  zo(),
                  Ca(57, '\n\n              '),
                  Ca(58, '\n              '),
                  Bo(59, 15),
                  Ca(60, '\n                '),
                  Do(61, nQ, 2, 0, 'th', 10),
                  Ca(62, '\n                '),
                  Do(63, iQ, 5, 1, 'td', 11),
                  Ca(64, '\n              '),
                  zo(),
                  Ca(65, '\n\n              '),
                  Bo(66, 16),
                  Ca(67, '\n                '),
                  Do(68, sQ, 2, 0, 'th', 10),
                  Ca(69, '\n                '),
                  Do(70, rQ, 5, 1, 'td', 11),
                  Ca(71, '\n              '),
                  zo(),
                  Ca(72, '\n\n              '),
                  Bo(73, 17),
                  Ca(74, '\n                '),
                  Do(75, oQ, 2, 0, 'th', 10),
                  Ca(76, '\n                '),
                  Do(77, aQ, 2, 1, 'td', 11),
                  Ca(78, '\n              '),
                  zo(),
                  Ca(79, '\n\n              '),
                  Bo(80, 18),
                  Ca(81, '\n                '),
                  Do(82, lQ, 2, 0, 'th', 10),
                  Ca(83, '\n                '),
                  Do(84, cQ, 14, 0, 'td', 11),
                  Ca(85, '\n              '),
                  zo(),
                  Ca(86, '\n\n              '),
                  Do(87, hQ, 1, 0, 'tr', 19),
                  Ca(88, '\n              '),
                  Do(89, uQ, 1, 0, 'tr', 20),
                  Ca(90, '\n\n              '),
                  Ca(91, '\n              '),
                  Do(92, dQ, 5, 0, 'tr', 21),
                  Ca(93, '\n            '),
                  No(),
                  Ca(94, '\n\n            '),
                  Ca(95, '\n          '),
                  No(),
                  Ca(96, '\n        '),
                  No(),
                  Ca(97, '\n      '),
                  No(),
                  Ca(98, '\n    '),
                  No(),
                  Ca(99, '\n  '),
                  No(),
                  Ca(100, '\n'),
                  No(),
                  Ca(101, '\n\n'),
                  Do(102, gQ, 79, 5, 'ng-template', null, 22, Pc),
                  Ca(104, '\n\n'),
                  Do(105, vQ, 79, 5, 'ng-template', null, 23, Pc),
                  Ca(107, '\n\n'),
                  Ca(108, '\n'),
                  Vo(109, 'ngx-ui-loader'),
                  Ca(110, '\n');
              }
              2 & t &&
                (tr(24),
                Io('dataSource', e.dataSource),
                tr(63),
                Io('matHeaderRowDef', e.colDef),
                tr(2),
                Io('matRowDefColumns', e.colDef));
            },
            directives: [
              $C,
              DA,
              NA,
              LA,
              RA,
              $A,
              WA,
              XA,
              UF,
              BA,
              jA,
              TS,
              YA,
              QA,
              Yp,
              pp,
              em,
              _C,
              aC,
              tS,
              zd,
              dp,
              lm,
              Ru,
              Qp,
              ck,
              iC,
            ],
            styles: [
              '.btn-grey[_ngcontent-%COMP%]{background-color:#363740;border-radius:20px;width:120px;color:#fff}.form-check-label[_ngcontent-%COMP%]{cursor:pointer}',
            ],
          })),
          t
        );
      })();
      const xQ = '/api/v1/recommendation';
      let CQ = (() => {
        class t {
          constructor(t) {
            this.httpClient = t;
          }
          addRecommendation(t) {
            return this.httpClient.post(xQ, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in adding new recommendation.'), Zm))
            );
          }
          getRecommendation() {
            return this.httpClient.get(xQ, { observe: 'response', params: { limit: '999', include: 'employee' } }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in fetching programs.'), Zm))
            );
          }
          deleteRecommendation(t) {
            return this.httpClient.delete('/api/v1/recommendation/' + t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in deleting the recommendation.'), Zm))
            );
          }
          editRecommendation(t, e) {
            return this.httpClient.put('/api/v1/recommendation/' + e, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in adding new form.'), Zm))
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Fm));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      const kQ = '/api/v1/food';
      let SQ = (() => {
        class t {
          constructor(t) {
            this.httpClient = t;
          }
          getFoods() {
            return this.httpClient.get(kQ, { observe: 'response', params: { limit: '999' } }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in fetching foods.'), Zm))
            );
          }
          editFood(t, e) {
            return this.httpClient.put('/api/v1/food/' + e, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in adding new form.'), Zm))
            );
          }
          addFood(t) {
            return this.httpClient.post(kQ, t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => 'Error in adding new recommendation.')
            );
          }
          deleteFood(t) {
            return this.httpClient.delete('/api/v1/food/' + t, { observe: 'response' }).pipe(
              E((t) => t),
              hS(() => (console.error('Error in deleting the food.'), Zm))
            );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(_i(Fm));
          }),
          (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
          t
        );
      })();
      const EQ = ['paginator'],
        OQ = ['paginatorFood'],
        PQ = ['foodInput'];
      function AQ(t, e) {
        1 & t && (Fo(0, 'th', 27), Ca(1, 'Name'), No());
      }
      function TQ(t, e) {
        if ((1 & t && (Fo(0, 'td', 28), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.name);
        }
      }
      function DQ(t, e) {
        1 & t && (Fo(0, 'th', 27), Ca(1, 'Description'), No());
      }
      function MQ(t, e) {
        if ((1 & t && (Fo(0, 'td', 28), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.description);
        }
      }
      function RQ(t, e) {
        1 & t && (Fo(0, 'th', 27), Ca(1, 'Creator'), No());
      }
      function IQ(t, e) {
        if ((1 & t && (Fo(0, 'td', 28), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(null == t || null == t.employee ? null : t.employee.username);
        }
      }
      function LQ(t, e) {
        1 & t && (Fo(0, 'th', 27), Ca(1, 'Actions'), No());
      }
      function FQ(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'td', 28),
            Ca(1, '\n                  '),
            Fo(2, 'div', 29),
            Ca(3, '\n                    '),
            Fo(4, 'button', 30),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit,
                i = Xo(),
                s = Mo(105);
              return i.editRecommendation(s, n);
            }),
            Ca(5, '\n                      '),
            Fo(6, 'mat-icon', 31),
            Ca(7, 'edit'),
            No(),
            Ca(8, '\n                      Edit\n                    '),
            No(),
            Ca(9, '\n                    '),
            Fo(10, 'button', 32),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit;
              return Xo().deleteRecommendation(n.id);
            }),
            Ca(11, '\n                      '),
            Fo(12, 'mat-icon', 33),
            Ca(13, 'delete'),
            No(),
            Ca(14, '\n                      Delete\n                    '),
            No(),
            Ca(15, '\n                  '),
            No(),
            Ca(16, '\n                  '),
            Ca(17, '\n                '),
            No();
        }
      }
      function NQ(t, e) {
        1 & t && Vo(0, 'tr', 34);
      }
      function VQ(t, e) {
        1 & t && Vo(0, 'tr', 35);
      }
      function BQ(t, e) {
        1 & t &&
          (Fo(0, 'tr', 36),
          Ca(1, '\n                '),
          Fo(2, 'td', 37),
          Ca(3, 'No data found.'),
          No(),
          Ca(4, '\n              '),
          No());
      }
      function zQ(t, e) {
        if (
          (1 & t &&
            (Ca(0, '\n  '),
            Fo(1, 'div', 38),
            Ca(2, '\n    '),
            Fo(3, 'h4', 39),
            Ca(4, 'Show All Foods'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 40),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 41),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Vo(13, 'app-food-list', 42),
            Ca(14, '\n')),
          2 & t)
        ) {
          const t = Xo();
          tr(13), Io('showAllFoodsDataSource', t.showAllFoodsDataSource);
        }
      }
      function jQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Name is Required! '), No());
      }
      function HQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, 'Description is Required!'), No());
      }
      function $Q(t, e) {
        1 & t && (Fo(0, 'mat-icon', 62), Ca(1, 'cancel'), No());
      }
      function qQ(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'mat-chip', 60),
            Uo('removed', function () {
              Fe(t);
              const n = e.$implicit;
              return Xo(2).remove(n);
            }),
            Ca(1),
            Do(2, $Q, 2, 0, 'mat-icon', 61),
            Ca(3, '\n          '),
            No();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = Xo(2);
          Io('selectable', n.selectable)('removable', n.removable),
            tr(1),
            Sa('\n            ', t.name, '\n            '),
            tr(1),
            Io('ngIf', n.removable);
        }
      }
      function WQ(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'mat-option', 63),
            Ca(1, '\n            '),
            Fo(2, 'div'),
            Ca(3, '\n              '),
            Vo(4, 'img', 64),
            Ca(5),
            No(),
            Ca(6, '\n          '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit;
          Io('value', t),
            tr(4),
            Io('src', t.image, ss)('alt', t.name),
            tr(1),
            Ea('\n              ', t.name, ' (', t.type, ')\n            ');
        }
      }
      const UQ = function (t) {
        return [t];
      };
      function YQ(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 38),
            Ca(2, '\n    '),
            Fo(3, 'h4', 39),
            Ca(4, 'New Recommendation'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 40),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 41),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 43),
            Uo('ngSubmit', function (e) {
              return Fe(t), Xo().saveRecommendation(e);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 44),
            Ca(16, '\n      '),
            Fo(17, 'mat-form-field', 45),
            Ca(18, '\n        '),
            Fo(19, 'mat-label'),
            Ca(20, 'Name'),
            No(),
            Ca(21, ' '),
            Vo(22, 'input', 46),
            Ca(23, '\n        '),
            Do(24, jQ, 2, 0, 'mat-error', 47),
            Ca(25, '\n      '),
            No(),
            Ca(26, '\n\n      '),
            Fo(27, 'mat-form-field', 45),
            Ca(28, '\n        '),
            Fo(29, 'mat-label'),
            Ca(30, 'Description'),
            No(),
            Ca(31, '\n        '),
            Vo(32, 'textarea', 48),
            Ca(33, '\n        '),
            Do(34, HQ, 2, 0, 'mat-error', 47),
            Ca(35, '\n      '),
            No(),
            Ca(36, '\n\n      '),
            Fo(37, 'mat-form-field', 49),
            Ca(38, '\n        '),
            Fo(39, 'mat-label'),
            Ca(40, 'Foods'),
            No(),
            Ca(41, '\n        '),
            Fo(42, 'mat-chip-list', 50, 51),
            Ca(44, '\n          '),
            Do(45, qQ, 4, 4, 'mat-chip', 52),
            Ca(46, '\n          '),
            Vo(47, 'input', 53, 54),
            Ca(49, '\n        '),
            No(),
            Ca(50, '\n        '),
            Fo(51, 'mat-autocomplete', 55, 56),
            Uo('optionSelected', function (e) {
              return Fe(t), Xo().selected(e);
            }),
            Ca(53, '\n          '),
            Do(54, WQ, 7, 5, 'mat-option', 57),
            ic(55, 'filter'),
            ic(56, 'async'),
            Ca(57, '\n        '),
            No(),
            Ca(58, '\n      '),
            No(),
            Ca(59, '\n    '),
            No(),
            Ca(60, '\n    '),
            Fo(61, 'div', 58),
            Ca(62, '\n      '),
            Fo(63, 'button', 59),
            Ca(64, 'Save'),
            No(),
            Ca(65, '\n    '),
            No(),
            Ca(66, '\n  '),
            No(),
            Ca(67, '\n');
        }
        if (2 & t) {
          const t = Mo(43),
            e = Mo(52),
            n = Xo();
          let i = null,
            s = null;
          tr(13),
            Io('formGroup', n.addRecForm),
            tr(11),
            Io('ngIf', null == (i = n.addRecForm.get('name')) ? null : i.hasError('required')),
            tr(10),
            Io('ngIf', null == (s = n.addRecForm.get('description')) ? null : s.hasError('required')),
            tr(11),
            Io('ngForOf', n.listToPopulate),
            tr(2),
            Io('formControl', n.addRecForm.controls.foods)('matAutocomplete', e)('matChipInputFor', t)(
              'matChipInputSeparatorKeyCodes',
              n.separatorKeysCodes
            ),
            tr(7),
            Io(
              'ngForOf',
              rc(55, 10, n.allFoods, 'name', Jl(16, UQ, sc(56, 14, n.addRecForm.controls.foods.valueChanges)))
            ),
            tr(9),
            Io('disabled', n.addRecForm.invalid);
        }
      }
      function GQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Name is Required!'), No());
      }
      function QQ(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 63), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          ea('value', t), tr(1), Sa(' ', t, ' ');
        }
      }
      function KQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Recommendation type is Required! '), No());
      }
      function XQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, 'Image URL is Required!'), No());
      }
      function ZQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, 'Description is Required!'), No());
      }
      function JQ(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, 'Receipe is Required!'), No());
      }
      function tK(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 38),
            Ca(2, '\n    '),
            Fo(3, 'h4', 39),
            Ca(4, 'New Food'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 40),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 41),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 43),
            Uo('ngSubmit', function (e) {
              return Fe(t), Xo().addFoodFormSubmit(e);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 44),
            Ca(16, '\n      '),
            Fo(17, 'mat-form-field', 45),
            Ca(18, '\n        '),
            Fo(19, 'mat-label'),
            Ca(20, 'Name'),
            No(),
            Ca(21, '\n        '),
            Vo(22, 'input', 65),
            Ca(23, '\n        '),
            Do(24, GQ, 2, 0, 'mat-error', 47),
            Ca(25, '\n      '),
            No(),
            Ca(26, '\n\n      '),
            Fo(27, 'mat-form-field', 66),
            Ca(28, '\n        '),
            Fo(29, 'mat-label'),
            Ca(30, 'Food Type'),
            No(),
            Ca(31, '\n        '),
            Fo(32, 'mat-select', 67),
            Ca(33, '\n          '),
            Do(34, QQ, 2, 2, 'mat-option', 57),
            Ca(35, '\n        '),
            No(),
            Ca(36, '\n        '),
            Do(37, KQ, 2, 0, 'mat-error', 47),
            Ca(38, '\n      '),
            No(),
            Ca(39, '\n\n      '),
            Fo(40, 'mat-form-field', 68),
            Ca(41, '\n        '),
            Fo(42, 'mat-label'),
            Ca(43, 'Image URL'),
            No(),
            Ca(44, '\n        '),
            Vo(45, 'input', 69),
            Ca(46, '\n        '),
            Do(47, XQ, 2, 0, 'mat-error', 47),
            Ca(48, '\n      '),
            No(),
            Ca(49, '\n\n      '),
            Fo(50, 'mat-form-field', 68),
            Ca(51, '\n        '),
            Fo(52, 'mat-label'),
            Ca(53, 'Description'),
            No(),
            Ca(54, '\n        '),
            Vo(55, 'textarea', 48),
            Ca(56, '\n        '),
            Do(57, ZQ, 2, 0, 'mat-error', 47),
            Ca(58, '\n      '),
            No(),
            Ca(59, '\n\n      '),
            Fo(60, 'mat-form-field', 68),
            Ca(61, '\n        '),
            Fo(62, 'mat-label'),
            Ca(63, 'Receipe'),
            No(),
            Ca(64, '\n        '),
            Vo(65, 'textarea', 70),
            Ca(66, '\n        '),
            Do(67, JQ, 2, 0, 'mat-error', 47),
            Ca(68, '\n      '),
            No(),
            Ca(69, '\n    '),
            No(),
            Ca(70, '\n    '),
            Fo(71, 'div', 58),
            Ca(72, '\n      '),
            Fo(73, 'button', 59),
            Ca(74, 'Save'),
            No(),
            Ca(75, '\n    '),
            No(),
            Ca(76, '\n  '),
            No(),
            Ca(77, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null,
            i = null,
            s = null,
            r = null;
          tr(13),
            Io('formGroup', t.addFoodForm),
            tr(11),
            Io('ngIf', null == (e = t.addFoodForm.get('name')) ? null : e.hasError('required')),
            tr(10),
            Io('ngForOf', t.foodType),
            tr(3),
            Io('ngIf', null == (n = t.addFoodForm.get('type')) ? null : n.hasError('required')),
            tr(10),
            Io('ngIf', null == (i = t.addFoodForm.get('image')) ? null : i.hasError('required')),
            tr(10),
            Io('ngIf', null == (s = t.addFoodForm.get('description')) ? null : s.hasError('required')),
            tr(10),
            Io('ngIf', null == (r = t.addFoodForm.get('recipe')) ? null : r.hasError('required')),
            tr(6),
            Io('disabled', t.addFoodForm.invalid);
        }
      }
      function eK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Name is Required! '), No());
      }
      function nK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, 'Description is Required!'), No());
      }
      function iK(t, e) {
        1 & t && (Fo(0, 'mat-icon', 62), Ca(1, 'cancel'), No());
      }
      function sK(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'mat-chip', 60),
            Uo('removed', function () {
              Fe(t);
              const n = e.$implicit;
              return Xo(2).removeEditRecom(n);
            }),
            Ca(1),
            Do(2, iK, 2, 0, 'mat-icon', 61),
            Ca(3, '\n          '),
            No();
        }
        if (2 & t) {
          const t = e.$implicit,
            n = Xo(2);
          Io('selectable', n.selectable)('removable', n.removable),
            tr(1),
            Sa('\n            ', t.name, '\n            '),
            tr(1),
            Io('ngIf', n.removable);
        }
      }
      function rK(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'mat-option', 63),
            Ca(1, '\n            '),
            Fo(2, 'div'),
            Ca(3, '\n              '),
            Vo(4, 'img', 64),
            Ca(5),
            No(),
            Ca(6, '\n          '),
            No()),
          2 & t)
        ) {
          const t = e.$implicit;
          Io('value', t),
            tr(4),
            Io('src', t.image, ss)('alt', t.name),
            tr(1),
            Ea('\n              ', t.name, ' (', t.type, ')\n            ');
        }
      }
      function oK(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 38),
            Ca(2, '\n    '),
            Fo(3, 'h4', 39),
            Ca(4, 'New Recommendation'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 40),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 41),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 43),
            Uo('ngSubmit', function (e) {
              return Fe(t), Xo().editRecommendationSubmit(e);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 44),
            Ca(16, '\n      '),
            Fo(17, 'mat-form-field', 45),
            Ca(18, '\n        '),
            Fo(19, 'mat-label'),
            Ca(20, 'Name'),
            No(),
            Ca(21, ' '),
            Vo(22, 'input', 46),
            Ca(23, '\n        '),
            Do(24, eK, 2, 0, 'mat-error', 47),
            Ca(25, '\n      '),
            No(),
            Ca(26, '\n\n      '),
            Fo(27, 'mat-form-field', 45),
            Ca(28, '\n        '),
            Fo(29, 'mat-label'),
            Ca(30, 'Description'),
            No(),
            Ca(31, '\n        '),
            Vo(32, 'textarea', 48),
            Ca(33, '\n        '),
            Do(34, nK, 2, 0, 'mat-error', 47),
            Ca(35, '\n      '),
            No(),
            Ca(36, '\n\n      '),
            Fo(37, 'mat-form-field', 49),
            Ca(38, '\n        '),
            Fo(39, 'mat-label'),
            Ca(40, 'Foods'),
            No(),
            Ca(41, '\n        '),
            Fo(42, 'mat-chip-list', 50, 51),
            Ca(44, '\n          '),
            Do(45, sK, 4, 4, 'mat-chip', 52),
            Ca(46, '\n          '),
            Vo(47, 'input', 53),
            Ca(48, '\n        '),
            No(),
            Ca(49, '\n        '),
            Fo(50, 'mat-autocomplete', 55, 56),
            Uo('optionSelected', function (e) {
              return Fe(t), Xo().selectedEditRecom(e);
            }),
            Ca(52, '\n          '),
            Do(53, rK, 7, 5, 'mat-option', 57),
            Ca(54, '\n        '),
            No(),
            Ca(55, '\n      '),
            No(),
            Ca(56, '\n    '),
            No(),
            Ca(57, '\n    '),
            Fo(58, 'div', 58),
            Ca(59, '\n      '),
            Fo(60, 'button', 59),
            Ca(61, 'Save'),
            No(),
            Ca(62, '\n    '),
            No(),
            Ca(63, '\n  '),
            No(),
            Ca(64, '\n');
        }
        if (2 & t) {
          const t = Mo(43),
            e = Mo(51),
            n = Xo();
          let i = null,
            s = null;
          tr(13),
            Io('formGroup', n.editAddRecForm),
            tr(11),
            Io('ngIf', null == (i = n.editAddRecForm.get('name')) ? null : i.hasError('required')),
            tr(10),
            Io('ngIf', null == (s = n.editAddRecForm.get('description')) ? null : s.hasError('required')),
            tr(11),
            Io('ngForOf', n.listToPopulate),
            tr(2),
            Io('formControl', n.editAddRecForm.controls.foods)('matAutocomplete', e)('matChipInputFor', t)(
              'matChipInputSeparatorKeyCodes',
              n.separatorKeysCodes
            ),
            tr(6),
            Io('ngForOf', n.allFoods),
            tr(7),
            Io('disabled', n.editAddRecForm.invalid);
        }
      }
      const aK = function () {
        return [10];
      };
      let lK = (() => {
        class t {
          constructor(t, e, n, i, s, r) {
            (this.recommendationService = t),
              (this.foodService = e),
              (this.modalService = n),
              (this.ngxLoader = i),
              (this.formBuilder = s),
              (this._snackBar = r),
              (this.displayedColumns = ['name', 'description', 'creator', 'actions']),
              (this.showFoodsColumns = ['image', 'name', 'type']),
              (this.isLoading = !1),
              (this.foodType = ['VEGAN', 'VEGETARIAN', 'MEAT', 'DESSERT', 'SNACK']),
              (this.selectedType = 'Vegan'),
              (this.listToPopulate = []),
              (this.selectedRec = 'Food'),
              (this.separatorKeysCodes = [sy, 188]),
              (this.allFoods = []),
              (this.selectable = !0),
              (this.removable = !0),
              (this.recommendations = []),
              (this.selectedId = '');
          }
          ngOnInit() {
            this.ngxLoader.start(),
              (this.addRecForm = this.formBuilder.group({
                name: ['', [Ud.required]],
                description: ['', [Ud.required]],
                foods: ['', [Ud.required]],
              })),
              (this.addFoodForm = this.formBuilder.group({
                name: ['', [Ud.required]],
                type: ['', [Ud.required]],
                image: ['', [Ud.required]],
                description: ['', [Ud.required]],
                recipe: ['', [Ud.required]],
              })),
              (this.editAddRecForm = this.formBuilder.group({
                name: ['', [Ud.required]],
                description: ['', [Ud.required]],
                foods: [''],
              })),
              (this.editAddFoodForm = this.formBuilder.group({
                name: ['', [Ud.required]],
                type: ['', [Ud.required]],
                image: ['', [Ud.required]],
                description: ['', [Ud.required]],
                recipe: ['', [Ud.required]],
              }));
          }
          ngAfterViewInit() {
            this.fetchRecommendations();
          }
          applyFilter(t) {
            (this.dataSource.filter = t.target.value.trim().toLowerCase()),
              this.dataSource.paginator && this.dataSource.paginator.firstPage();
          }
          newRecommendation(t) {
            this.modalService.open(t, { size: 'md' }), this.fetchAllFoods();
          }
          showAllFoods(t) {
            this.modalService.open(t, { size: 'md' }), this.ngxLoader.start(), this.fetchAllFoods();
          }
          fetchAllFoods() {
            this.foodService
              .getFoods()
              .pipe(
                pS(() => {
                  this.ngxLoader.stop();
                })
              )
              .subscribe(
                (t) => {
                  200 === t.status &&
                    t.body.data &&
                    ((this.showAllFoodsDataSource = new tT(t.body.data)), (this.allFoods = t.body.data)),
                    this.ngxLoader.stop();
                },
                (t) => {
                  this.ngxLoader.stop();
                }
              );
          }
          fetchRecommendations() {
            this.ngxLoader.start(),
              this.recommendationService
                .getRecommendation()
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body.data &&
                      ((this.recommendationData = t.body.data), this.filterRecommendationData(this.recommendationData)),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          saveRecommendation(t) {
            this.ngxLoader.start();
            const e = this.listToPopulate.map(({ id: t }) => ({ id: t }));
            this.addRecForm.valid &&
              this.recommendationService
                .addRecommendation({
                  name: this.addRecForm.controls.name.value,
                  description: this.addRecForm.controls.description.value,
                  foods: e,
                })
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      (this._snackBar.open('Recommendation had been added!', '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.modalService.dismissAll(),
                      this.addRecForm.reset(),
                      this.fetchRecommendations()),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          addFood(t) {
            this.ngxLoader.start(),
              this.addFoodForm.valid &&
                this.foodService
                  .addFood(this.addFoodForm.value)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Food has been added!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.modalService.dismissAll(),
                        this.addRecForm.reset()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
          }
          deleteRecommendation(t) {
            this.ngxLoader.start(),
              this.recommendationService
                .deleteRecommendation(t)
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body &&
                      this._snackBar.open('Recommendation deleted!', '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          editRecommendation(t, e) {
            (this.recommendations = []),
              (this.selectedId = e.id),
              this.ngxLoader.start(),
              (this.listToPopulate = e.foods ? e.foods : []),
              this.editAddRecForm.patchValue({
                name: e.name ? e.name : '',
                description: e.description ? e.description : '',
              }),
              this.modalService.open(t, { size: 'md', backdropClass: 'light-blue-backdrop' }),
              this.fetchAllFoods();
          }
          editRecommendationSubmit(t) {
            const e = this.listToPopulate.map(({ id: t }) => ({ id: t }));
            this.editAddRecForm.valid &&
              this.recommendationService
                .editRecommendation(
                  {
                    name: this.editAddRecForm.controls.name.value,
                    description: this.editAddRecForm.controls.description.value,
                    foods: e,
                  },
                  this.selectedId
                )
                .pipe(
                  pS(() => {
                    this.ngxLoader.stop();
                  })
                )
                .subscribe(
                  (t) => {
                    200 === t.status &&
                      t.body &&
                      (this._snackBar.open('Recommendation Edited!', '', {
                        duration: 3e3,
                        verticalPosition: 'top',
                        panelClass: ['blue-snackbar'],
                      }),
                      this.modalService.dismissAll(),
                      this.editAddRecForm.reset(),
                      (this.recommendations = [])),
                      this.fetchRecommendations(),
                      this.ngxLoader.stop();
                  },
                  (t) => {
                    this.ngxLoader.stop();
                  }
                );
          }
          removeEditRecom(t) {
            const e = this.listToPopulate.findIndex((e) => e.id === t.id);
            e >= 0 && this.listToPopulate.splice(e, 1);
          }
          selectedEditRecom(t) {
            this.listToPopulate.push(this.editAddRecForm.controls.foods.value),
              this.recommendations.push(this.editAddRecForm.controls.foods.value);
          }
          filterRecommendationData(t) {
            void 0 !== t &&
              ((this.dataSource = new tT(
                t.map((t) => ({
                  name: t.name,
                  image: t.image,
                  description: t.description,
                  id: t.id,
                  employee: t.employee,
                  foods: t.foods,
                }))
              )),
              setTimeout(() => (this.dataSource.paginator = this.paginator)),
              this.ngxLoader.stop());
          }
          remove(t) {
            const e = this.listToPopulate.findIndex((e) => e.id === t.id);
            e >= 0 && this.listToPopulate.splice(e, 1);
          }
          selected(t) {
            this.listToPopulate.push(this.addRecForm.controls.foods.value),
              this.recommendations.push(this.addRecForm.controls.foods.value),
              this.foodInput && (this.foodInput.nativeElement.value = ''),
              this.addRecForm.controls.foods.setValue('');
          }
          addNewFood(t) {
            this.modalService.open(t, { size: 'md' });
          }
          addFoodFormSubmit(t) {
            this.ngxLoader.start(),
              this.addFoodForm.valid &&
                this.foodService
                  .addFood(this.addFoodForm.value)
                  .pipe(
                    pS(() => {
                      this.ngxLoader.stop();
                    })
                  )
                  .subscribe(
                    (t) => {
                      200 === t.status &&
                        (this._snackBar.open('Food had been added!', '', {
                          duration: 3e3,
                          verticalPosition: 'top',
                          panelClass: ['blue-snackbar'],
                        }),
                        this.modalService.dismissAll(),
                        this.addFoodForm.reset()),
                        this.ngxLoader.stop();
                    },
                    (t) => {
                      this.ngxLoader.stop();
                    }
                  );
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(CQ), Ro(SQ), Ro(FN), Ro(WF), Ro(mm), Ro(kP));
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['app-recommendations']],
            viewQuery: function (t, e) {
              if ((1 & t && (xc(EQ, 1), xc(OQ, 1), xc(PQ, 1), xc(DP, 1)), 2 & t)) {
                let t;
                wc((t = kc())) && (e.paginator = t.first),
                  wc((t = kc())) && (e.showAllPaginator = t.first),
                  wc((t = kc())) && (e.foodInput = t.first),
                  wc((t = kc())) && (e.sort = t.first);
              }
            },
            decls: 109,
            vars: 5,
            consts: [
              [1, 'container'],
              [1, 'row'],
              [1, 'col-12'],
              [1, 'mt-4'],
              ['mat-button', '', 'type', 'button', 1, 'button-primary', 3, 'click'],
              [1, 'col-lg-12'],
              [1, 'table-wrapper', 'mt-3'],
              [1, 'card', 'card-primary'],
              [1, 'mat-elevation-z0'],
              ['mat-table', '', 1, 'w-100', 3, 'dataSource'],
              ['matColumnDef', 'name'],
              ['mat-header-cell', '', 4, 'matHeaderCellDef'],
              ['mat-cell', '', 'class', 'text-center', 4, 'matCellDef'],
              ['matColumnDef', 'description'],
              ['matColumnDef', 'creator'],
              ['matColumnDef', 'actions'],
              ['mat-header-row', '', 4, 'matHeaderRowDef'],
              ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
              ['class', 'mat-row', 4, 'matNoDataRow'],
              ['showFirstLastButtons', 'false', 'hidePageSize', 'true', 3, 'pageSizeOptions'],
              ['paginator', ''],
              ['menu', 'matMenu'],
              ['mat-menu-item', ''],
              ['showAllFoodsContent', ''],
              ['recommendationContent', ''],
              ['addFoodContent', ''],
              ['editRecommendationContent', ''],
              ['mat-header-cell', ''],
              ['mat-cell', '', 1, 'text-center'],
              ['fxLayout', 'row', 'fxFlex', '', 'fxLayoutGap', '5px'],
              ['mat-flat-button', '', 'color', 'primary', 'type', 'button', 3, 'click'],
              ['aria-hidden', 'false', 'aria-label', 'Edit icon'],
              ['mat-flat-button', '', 'color', 'warn', 'type', 'button', 3, 'click'],
              ['aria-hidden', 'false', 'aria-label', 'Delete icon'],
              ['mat-header-row', ''],
              ['mat-row', ''],
              [1, 'mat-row'],
              ['colspan', '4', 1, 'mat-cell'],
              [1, 'modal-header'],
              [1, 'modal-title'],
              ['type', 'button', 'aria-label', 'Close', 1, 'btn', 'btn-light', 3, 'click'],
              ['aria-hidden', 'true'],
              [3, 'showAllFoodsDataSource'],
              [3, 'formGroup', 'ngSubmit'],
              [1, 'modal-body', 'ff-14'],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100'],
              ['matInput', '', 'placeholder', 'Name', 'formControlName', 'name', 'name', 'name'],
              [4, 'ngIf'],
              [
                'matInput',
                '',
                'placeholder',
                'Description',
                'formControlName',
                'description',
                'name',
                'description',
                'autocomplete',
                'off',
              ],
              ['appearance', 'fill', 1, 'example-full-width', 'w-100'],
              ['aria-label', 'Recommendation selection'],
              ['chipList', ''],
              [3, 'selectable', 'removable', 'removed', 4, 'ngFor', 'ngForOf'],
              [
                'placeholder',
                'Add Foods...',
                3,
                'formControl',
                'matAutocomplete',
                'matChipInputFor',
                'matChipInputSeparatorKeyCodes',
              ],
              ['foodInput', ''],
              [3, 'optionSelected'],
              ['auto', 'matAutocomplete'],
              [3, 'value', 4, 'ngFor', 'ngForOf'],
              [1, 'modal-footer'],
              ['mat-button', '', 'type', 'submit', 1, 'button-primary', 3, 'disabled'],
              [3, 'selectable', 'removable', 'removed'],
              ['matChipRemove', '', 4, 'ngIf'],
              ['matChipRemove', ''],
              [3, 'value'],
              [1, 'recImg', 3, 'src', 'alt'],
              ['matInput', '', 'placeholder', 'Name', 'formControlName', 'name', 'autocomplete', 'off'],
              ['appearance', 'outline', 1, 'w-100'],
              ['formControlName', 'type'],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100', 'mt-2'],
              [
                'matInput',
                '',
                'placeholder',
                'Image URL',
                'formControlName',
                'image',
                'name',
                'image',
                'autocomplete',
                'off',
              ],
              [
                'matInput',
                '',
                'placeholder',
                'recipe',
                'formControlName',
                'recipe',
                'name',
                'recipe',
                'autocomplete',
                'off',
              ],
            ],
            template: function (t, e) {
              if (1 & t) {
                const t = Ho();
                Fo(0, 'div', 0),
                  Ca(1, '\n  '),
                  Fo(2, 'div', 1),
                  Ca(3, '\n    '),
                  Fo(4, 'div', 2),
                  Ca(5, '\n      '),
                  Fo(6, 'div', 3),
                  Ca(7, '\n        '),
                  Fo(8, 'button', 4),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(99);
                    return e.newRecommendation(n);
                  }),
                  Ca(9, '\n          New Recommendation\n        '),
                  No(),
                  Ca(10, '\n        '),
                  Fo(11, 'button', 4),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(102);
                    return e.newRecommendation(n);
                  }),
                  Ca(12, '\n          New Food\n        '),
                  No(),
                  Ca(13, '\n        '),
                  Fo(14, 'button', 4),
                  Uo('click', function () {
                    Fe(t);
                    const n = Mo(96);
                    return e.showAllFoods(n);
                  }),
                  Ca(15, '\n          Show All Foods\n        '),
                  No(),
                  Ca(16, '\n      '),
                  No(),
                  Ca(17, '\n    '),
                  No(),
                  Ca(18, '\n  '),
                  No(),
                  Ca(19, '\n  '),
                  Fo(20, 'div', 1),
                  Ca(21, '\n    '),
                  Ca(22, '\n\n    '),
                  Fo(23, 'div', 5),
                  Ca(24, '\n      '),
                  Fo(25, 'div', 6),
                  Ca(26, '\n        '),
                  Fo(27, 'div', 7),
                  Ca(28, '\n          '),
                  Fo(29, 'div', 8),
                  Ca(30, '\n            '),
                  Fo(31, 'table', 9),
                  Ca(32, '\n              '),
                  Bo(33, 10),
                  Ca(34, '\n                '),
                  Do(35, AQ, 2, 0, 'th', 11),
                  Ca(36, '\n                '),
                  Do(37, TQ, 2, 1, 'td', 12),
                  Ca(38, '\n              '),
                  zo(),
                  Ca(39, '\n\n              '),
                  Ca(40, '\n              '),
                  Bo(41, 13),
                  Ca(42, '\n                '),
                  Do(43, DQ, 2, 0, 'th', 11),
                  Ca(44, '\n                '),
                  Do(45, MQ, 2, 1, 'td', 12),
                  Ca(46, '\n              '),
                  zo(),
                  Ca(47, '\n\n              '),
                  Ca(48, '\n              '),
                  Bo(49, 14),
                  Ca(50, '\n                '),
                  Do(51, RQ, 2, 0, 'th', 11),
                  Ca(52, '\n                '),
                  Do(53, IQ, 2, 1, 'td', 12),
                  Ca(54, '\n              '),
                  zo(),
                  Ca(55, '\n\n              '),
                  Ca(56, '\n\n              '),
                  Bo(57, 15),
                  Ca(58, '\n                '),
                  Do(59, LQ, 2, 0, 'th', 11),
                  Ca(60, '\n                '),
                  Do(61, FQ, 18, 0, 'td', 12),
                  Ca(62, '\n              '),
                  zo(),
                  Ca(63, '\n\n              '),
                  Do(64, NQ, 1, 0, 'tr', 16),
                  Ca(65, '\n              '),
                  Do(66, VQ, 1, 0, 'tr', 17),
                  Ca(67, '\n\n              '),
                  Ca(68, '\n              '),
                  Do(69, BQ, 5, 0, 'tr', 18),
                  Ca(70, '\n            '),
                  No(),
                  Ca(71, '\n\n            '),
                  Vo(72, 'mat-paginator', 19, 20),
                  Ca(74, '\n          '),
                  No(),
                  Ca(75, '\n        '),
                  No(),
                  Ca(76, '\n      '),
                  No(),
                  Ca(77, '\n    '),
                  No(),
                  Ca(78, '\n  '),
                  No(),
                  Ca(79, '\n'),
                  No(),
                  Ca(80, '\n\n'),
                  Fo(81, 'mat-menu', null, 21),
                  Ca(83, '\n  '),
                  Fo(84, 'button', 22),
                  Ca(85, '\n    '),
                  Fo(86, 'mat-icon'),
                  Ca(87, 'delete'),
                  No(),
                  Ca(88, '\n    '),
                  Fo(89, 'span'),
                  Ca(90, 'Delete'),
                  No(),
                  Ca(91, '\n  '),
                  No(),
                  Ca(92, '\n  '),
                  Ca(93, '\n'),
                  No(),
                  Ca(94, '\n\n'),
                  Do(95, zQ, 15, 1, 'ng-template', null, 23, Pc),
                  Ca(97, '\n\n'),
                  Do(98, YQ, 68, 18, 'ng-template', null, 24, Pc),
                  Ca(100, '\n\n'),
                  Do(101, tK, 78, 8, 'ng-template', null, 25, Pc),
                  Ca(103, '\n\n'),
                  Do(104, oK, 65, 10, 'ng-template', null, 26, Pc),
                  Ca(106, '\n\n'),
                  Vo(107, 'ngx-ui-loader'),
                  Ca(108, '\n');
              }
              2 & t &&
                (tr(31),
                Io('dataSource', e.dataSource),
                tr(33),
                Io('matHeaderRowDef', e.displayedColumns),
                tr(2),
                Io('matRowDefColumns', e.displayedColumns),
                tr(6),
                Io('pageSizeOptions', Zl(4, aK)));
            },
            styles: [
              '.recImg[_ngcontent-%COMP%]{height:40px;width:40px}[_nghost-%COMP%]   mat-form-field[_ngcontent-%COMP%]   .mat-form-field-wrapper[_ngcontent-%COMP%]{padding-bottom:unset!important}[_nghost-%COMP%]   mat-form-field[_ngcontent-%COMP%]   .mat-form-field-underline[_ngcontent-%COMP%]{position:static!important}',
            ],
          })),
          t
        );
      })();
      const cK = '/api/v1/questionnaire';
      let hK = (() => {
          class t {
            constructor(t) {
              this.httpClient = t;
            }
            addQuestionnaire(t) {
              return this.httpClient.post(cK, t, { observe: 'response' }).pipe(
                E((t) => t),
                hS(() => (console.error('Error in adding new questionnaire.'), Zm))
              );
            }
            getQuestionnaire() {
              return this.httpClient
                .get(cK, { observe: 'response', params: { limit: '999', include: 'employee' } })
                .pipe(
                  E((t) => t),
                  hS(() => (console.error('Error in fetching questionnaires.'), Zm))
                );
            }
            deleteQuestionnaire(t) {
              return this.httpClient.delete('/api/v1/questionnaire/' + t, { observe: 'response' }).pipe(
                E((t) => t),
                hS(() => (console.error('Error in deleting the questionnaire.'), Zm))
              );
            }
            editQuestionnaire(t, e) {
              return this.httpClient.put('/api/v1/questionnaire/' + e, t, { observe: 'response' }).pipe(
                E((t) => t),
                hS(() => (console.error('Error in editing questionnaire.'), Zm))
              );
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(Fm));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            t
          );
        })(),
        uK = (() => {
          class t {
            constructor() {}
            get isUserAdmin() {
              return localStorage.getItem('userStatus') === tG.Admin;
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac, providedIn: 'root' })),
            t
          );
        })();
      const dK = ['questionnairePaginator'];
      function pK(t, e) {
        1 & t && (Fo(0, 'th', 26), Ca(1, 'Name'), No());
      }
      function mK(t, e) {
        if ((1 & t && (Fo(0, 'td', 27), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.name);
        }
      }
      function fK(t, e) {
        1 & t && (Fo(0, 'th', 26), Ca(1, 'Status'), No());
      }
      function gK(t, e) {
        if ((1 & t && (Fo(0, 'td', 27), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.status);
        }
      }
      function _K(t, e) {
        1 & t && (Fo(0, 'th', 26), Ca(1, 'Form owner'), No());
      }
      function bK(t, e) {
        if ((1 & t && (Fo(0, 'td', 27), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.formowner);
        }
      }
      function yK(t, e) {
        1 & t && (Fo(0, 'th', 26), Ca(1, 'createdAt'), No());
      }
      function vK(t, e) {
        if ((1 & t && (Fo(0, 'td', 27), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.createdAt);
        }
      }
      function wK(t, e) {
        1 & t && (Fo(0, 'th', 26), Ca(1, 'Actions'), No());
      }
      const xK = function (t) {
        return { data: t };
      };
      function CK(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'td', 27),
            Ca(1, '\n                  '),
            Fo(2, 'button', 28),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit;
              return Xo().deleteQuestionnaire(n.id);
            }),
            Ca(3, '\n                    '),
            Fo(4, 'mat-icon', 29),
            Ca(5, 'delete'),
            No(),
            Ca(6, '\n                    Delete\n                  '),
            No(),
            Ca(7, '\n                  '),
            Fo(8, 'button', 30),
            Ca(9, '\n                    '),
            Fo(10, 'mat-icon'),
            Ca(11, 'more_vert'),
            No(),
            Ca(12, '\n                  '),
            No(),
            Ca(13, '\n                '),
            No();
        }
        if (2 & t) {
          const t = e.$implicit;
          Xo();
          const n = Mo(84);
          tr(8), Io('matMenuTriggerFor', n)('matMenuTriggerData', Jl(2, xK, t));
        }
      }
      function kK(t, e) {
        1 & t && Vo(0, 'tr', 31);
      }
      function SK(t, e) {
        1 & t && Vo(0, 'tr', 32);
      }
      function EK(t, e) {
        1 & t &&
          (Fo(0, 'tr', 33),
          Ca(1, '\n                '),
          Fo(2, 'td', 34),
          Ca(3, 'No data found.'),
          No(),
          Ca(4, '\n              '),
          No());
      }
      function OK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Formname is Required! '), No());
      }
      function PK(t, e) {
        1 & t &&
          (Fo(0, 'mat-error'), Ca(1, '\n          Formname should be atleast 4 characters long!\n        '), No());
      }
      function AK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n          Formname can be atmax 20 characters long!\n        '), No());
      }
      function TK(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 52), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          ea('value', t), tr(1), Sa('\n              ', t, '\n            ');
        }
      }
      function DK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Status is Required! '), No());
      }
      function MK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n              Questions is Required!\n            '), No());
      }
      function RK(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 52), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          ea('value', t), tr(1), Sa('\n                ', t, '\n              ');
        }
      }
      function IK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n              Answers is Required!\n            '), No());
      }
      function LK(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 52), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          ea('value', t), tr(1), Sa('\n                  ', t, '\n                ');
        }
      }
      function FK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n                Constraints is Required!\n              '), No());
      }
      function NK(t, e) {
        if (
          (1 & t &&
            (Fo(0, 'div', 44),
            Ca(1, '\n          '),
            Fo(2, 'div', 44),
            Ca(3, '\n            '),
            Fo(4, 'mat-label', 45),
            Ca(5, 'Constraint :'),
            No(),
            Ca(6, '\n            '),
            Fo(7, 'mat-form-field', 46),
            Ca(8, '\n              '),
            Fo(9, 'mat-select', 56),
            Ca(10, '\n                '),
            Do(11, LK, 2, 2, 'mat-option', 48),
            Ca(12, '\n              '),
            No(),
            Ca(13, '\n              '),
            Do(14, FK, 2, 0, 'mat-error', 43),
            Ca(15, '\n            '),
            No(),
            Ca(16, '\n          '),
            No(),
            Ca(17, '\n        '),
            No()),
          2 & t)
        ) {
          const t = Xo().index,
            e = Xo(2);
          let n = null;
          tr(9),
            ea('formControlName', 'constraints' + t),
            tr(2),
            Io('ngForOf', e.constraints),
            tr(3),
            Io('ngIf', null == (n = e.addQuestionnaireForm.get('constraints' + t)) ? null : n.hasError('required'));
        }
      }
      function VK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, '\n                  Button Answer is Required!\n                '), No());
      }
      function BK(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div', 44),
            Ca(1, '\n            '),
            Fo(2, 'div', 58),
            Ca(3, '\n              '),
            Fo(4, 'mat-form-field', 53),
            Ca(5, '\n                '),
            Fo(6, 'mat-label'),
            Ca(7),
            No(),
            Ca(8, '\n                '),
            Vo(9, 'input', 59),
            Ca(10, '\n                '),
            Do(11, VK, 2, 0, 'mat-error', 43),
            Ca(12, '\n              '),
            No(),
            Ca(13, '\n              '),
            Fo(14, 'button', 55),
            Uo('click', function () {
              Fe(t);
              const e = Xo(2).index;
              return Xo(2).addButton(e);
            }),
            Ca(15, '\n                '),
            Fo(16, 'mat-icon'),
            Ca(17, 'add_circle_outline'),
            No(),
            Ca(18, '\n              '),
            No(),
            Ca(19, '\n            '),
            No(),
            Ca(20, '\n          '),
            No();
        }
        if (2 & t) {
          const t = Xo().index,
            e = Xo().index,
            n = Xo(2);
          let i = null;
          tr(2),
            ea('formGroupName', 'buttonGroup' + e),
            tr(5),
            ka('Button ' + e),
            tr(2),
            ea('formControlName', 'button' + t),
            ea('name', 'button' + t),
            tr(2),
            Io(
              'ngIf',
              null == n.addQuestionnaireForm.controls['buttonGroup' + e] ||
                null == (i = n.addQuestionnaireForm.controls['buttonGroup' + e].get('button' + t))
                ? null
                : i.hasError('required')
            );
        }
      }
      function zK(t, e) {
        if (
          (1 & t && (Fo(0, 'div'), Ca(1, '\n          '), Do(2, BK, 21, 5, 'div', 57), Ca(3, '\n        '), No()),
          2 & t)
        ) {
          const t = Xo().index,
            e = Xo(2);
          let n = null;
          tr(2), Io('ngIf', 'Button' === (null == (n = e.addQuestionnaireForm.get('answers' + t)) ? null : n.value));
        }
      }
      function jK(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'div'),
            Ca(1, '\n        '),
            Fo(2, 'div', 44),
            Ca(3, '\n          '),
            Fo(4, 'mat-form-field', 53),
            Ca(5, '\n            '),
            Fo(6, 'mat-label'),
            Ca(7, 'Questions'),
            No(),
            Ca(8, '\n            '),
            Vo(9, 'input', 54),
            Ca(10, '\n            '),
            Do(11, MK, 2, 0, 'mat-error', 43),
            Ca(12, '\n          '),
            No(),
            Ca(13, '\n          '),
            Fo(14, 'button', 55),
            Uo('click', function () {
              return Fe(t), Xo(2).addQuestion();
            }),
            Ca(15, '\n            '),
            Fo(16, 'mat-icon'),
            Ca(17, 'add_circle_outline'),
            No(),
            Ca(18, '\n          '),
            No(),
            Ca(19, '\n        '),
            No(),
            Ca(20, '\n\n        '),
            Fo(21, 'div', 44),
            Ca(22, '\n          '),
            Fo(23, 'mat-label', 45),
            Ca(24, 'Answers :'),
            No(),
            Ca(25, '\n          '),
            Fo(26, 'mat-form-field', 46),
            Ca(27, '\n            '),
            Fo(28, 'mat-select', 56),
            Ca(29, '\n              '),
            Do(30, RK, 2, 2, 'mat-option', 48),
            Ca(31, '\n            '),
            No(),
            Ca(32, '\n            '),
            Do(33, IK, 2, 0, 'mat-error', 43),
            Ca(34, '\n          '),
            No(),
            Ca(35, '\n        '),
            No(),
            Ca(36, '\n        '),
            Do(37, NK, 18, 3, 'div', 57),
            Ca(38, '\n        '),
            Do(39, zK, 4, 1, 'div', 49),
            Ca(40, '\n      '),
            No();
        }
        if (2 & t) {
          const t = e.index,
            n = Xo(2);
          let i = null,
            s = null,
            r = null;
          tr(9),
            ea('formControlName', 'questions' + t),
            ea('name', 'questions' + t),
            tr(2),
            Io('ngIf', null == (i = n.addQuestionnaireForm.get('questions' + t)) ? null : i.hasError('required')),
            tr(17),
            ea('formControlName', 'answers' + t),
            tr(2),
            Io('ngForOf', n.answers),
            tr(3),
            Io('ngIf', null == (s = n.addQuestionnaireForm.get('answers' + t)) ? null : s.hasError('required')),
            tr(4),
            Io('ngIf', 'Input' === (null == (r = n.addQuestionnaireForm.get('answers' + t)) ? null : r.value)),
            tr(2),
            Io('ngForOf', n.containers[t]);
        }
      }
      function HK(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 35),
            Ca(2, '\n    '),
            Fo(3, 'h4', 36),
            Ca(4, 'New Questionnaire'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 37),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 38),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 39),
            Uo('ngSubmit', function (e) {
              return Fe(t), Xo().addQuestionnaire(e);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 40),
            Ca(16, '\n      '),
            Fo(17, 'mat-form-field', 41),
            Ca(18, '\n        '),
            Fo(19, 'mat-label'),
            Ca(20, 'Name'),
            No(),
            Ca(21, '\n        '),
            Vo(22, 'input', 42),
            Ca(23, '\n        '),
            Do(24, OK, 2, 0, 'mat-error', 43),
            Ca(25, '\n        '),
            Do(26, PK, 2, 0, 'mat-error', 43),
            Ca(27, '\n        '),
            Do(28, AK, 2, 0, 'mat-error', 43),
            Ca(29, '\n      '),
            No(),
            Ca(30, '\n      '),
            Fo(31, 'div', 44),
            Ca(32, '\n        '),
            Fo(33, 'mat-label', 45),
            Ca(34, 'Status :'),
            No(),
            Ca(35, '\n        '),
            Fo(36, 'mat-form-field', 46),
            Ca(37, '\n          '),
            Fo(38, 'mat-select', 47),
            Ca(39, '\n            '),
            Do(40, TK, 2, 2, 'mat-option', 48),
            Ca(41, '\n          '),
            No(),
            Ca(42, '\n          '),
            Do(43, DK, 2, 0, 'mat-error', 43),
            Ca(44, '\n        '),
            No(),
            Ca(45, '\n      '),
            No(),
            Ca(46, '\n      '),
            Do(47, jK, 41, 8, 'div', 49),
            Ca(48, '\n    '),
            No(),
            Ca(49, '\n    '),
            Fo(50, 'div', 50),
            Ca(51, '\n      '),
            Fo(52, 'button', 51),
            Ca(53, 'Save'),
            No(),
            Ca(54, '\n    '),
            No(),
            Ca(55, '\n  '),
            No(),
            Ca(56, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null,
            i = null,
            s = null;
          tr(13),
            Io('formGroup', t.addQuestionnaireForm),
            tr(11),
            Io('ngIf', null == (e = t.addQuestionnaireForm.get('name')) ? null : e.hasError('required')),
            tr(2),
            Io('ngIf', null == (n = t.addQuestionnaireForm.get('name')) ? null : n.hasError('minlength')),
            tr(2),
            Io('ngIf', null == (i = t.addQuestionnaireForm.get('name')) ? null : i.hasError('maxlength')),
            tr(12),
            Io('ngForOf', t.status),
            tr(3),
            Io('ngIf', null == (s = t.addQuestionnaireForm.get('status')) ? null : s.hasError('required')),
            tr(4),
            Io('ngForOf', t.containers);
        }
      }
      function $K(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n    '),
            Fo(1, 'button', 60),
            Uo('click', function () {
              Fe(t);
              const n = e.data,
                i = Xo(),
                s = Mo(90);
              return i.editQuestionnaire(s, n);
            }),
            Ca(2, '\n      '),
            Fo(3, 'mat-icon'),
            Ca(4, 'edit'),
            No(),
            Ca(5, '\n      '),
            Fo(6, 'span'),
            Ca(7, 'Edit'),
            No(),
            Ca(8, '\n    '),
            No(),
            Ca(9, '\n  ');
        }
      }
      function qK(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 52), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          ea('value', t), tr(1), Sa(' ', t, ' ');
        }
      }
      function WK(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Status is Required! '), No());
      }
      function UK(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 35),
            Ca(2, '\n    '),
            Fo(3, 'h4', 36),
            Ca(4, 'Edit Questionnaire'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 37),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 38),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 39),
            Uo('ngSubmit', function () {
              Fe(t);
              const e = Xo();
              return e.patchQuestionnaire(e.selectedQuestionnaireID);
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 40),
            Ca(16, '\n      '),
            Fo(17, 'div'),
            Ca(18, '\n        '),
            Fo(19, 'mat-form-field', 41),
            Ca(20, '\n          '),
            Fo(21, 'mat-label'),
            Ca(22, 'Name'),
            No(),
            Ca(23, ' '),
            Vo(24, 'input', 61),
            Ca(25, '\n        '),
            No(),
            Ca(26, '\n      '),
            No(),
            Ca(27, '\n      '),
            Fo(28, 'div', 44),
            Ca(29, '\n        '),
            Fo(30, 'mat-label', 45),
            Ca(31, 'Status :'),
            No(),
            Ca(32, '\n        '),
            Fo(33, 'mat-form-field', 46),
            Ca(34, '\n          '),
            Fo(35, 'mat-select', 47),
            Ca(36, '\n            '),
            Do(37, qK, 2, 2, 'mat-option', 48),
            Ca(38, '\n          '),
            No(),
            Ca(39, '\n          '),
            Do(40, WK, 2, 0, 'mat-error', 43),
            Ca(41, '\n        '),
            No(),
            Ca(42, '\n      '),
            No(),
            Ca(43, '\n    '),
            No(),
            Ca(44, '\n    '),
            Fo(45, 'div', 50),
            Ca(46, '\n      '),
            Fo(47, 'button', 62),
            Ca(48, 'Save'),
            No(),
            Ca(49, '\n    '),
            No(),
            Ca(50, '\n  '),
            No(),
            Ca(51, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null;
          tr(13),
            Io('formGroup', t.editQuestionnaireForm),
            tr(24),
            Io('ngForOf', t.status),
            tr(3),
            Io('ngIf', null == (e = t.addQuestionnaireForm.get('status')) ? null : e.hasError('required')),
            tr(7),
            Io('disabled', t.editQuestionnaireForm.invalid);
        }
      }
      const YK = function () {
          return [10];
        },
        GK = [
          JY.childRoutes([
            { path: '', redirectTo: '/home', pathMatch: 'full' },
            { path: 'home', component: jY, data: { title: 'Home' } },
            { path: 'home/employees', component: WG, data: { title: 'Employees' } },
            { path: 'home/program', component: wQ, data: { title: 'Program' } },
            { path: 'home/recommendations', component: lK, data: { title: 'Recommendations' } },
            {
              path: 'home/forms',
              component: (() => {
                class t {
                  constructor(t, e, n, i, s, r, o) {
                    (this.questionnaireervice = t),
                      (this.quoteService = e),
                      (this.globalService = n),
                      (this.modalService = i),
                      (this.ngxLoader = s),
                      (this.formBuilder = r),
                      (this._snackBar = o),
                      (this.isLoading = !1),
                      (this.questionnaires = []),
                      (this.answers = ['Button', 'Input']),
                      (this.constraints = ['isWeight', 'isFood', 'isSleep', 'isHeight', 'isString', 'isDob']),
                      (this.status = ['ACTIVE', 'ON_REGISTRATION', 'INACTIVE']),
                      (this.listToPopulate = []),
                      (this.containers = [[1]]),
                      (this.colDef = []),
                      this.colDef.push('name'),
                      this.globalService.isUserAdmin && this.colDef.push('formowner'),
                      this.colDef.push('status', 'createdAt', 'actions');
                  }
                  ngOnInit() {
                    this.ngxLoader.start(),
                      (this.addQuestionnaireForm = this.formBuilder.group({
                        name: ['', [Ud.required]],
                        status: ['', [Ud.required]],
                        questions0: ['', [Ud.required]],
                        answers0: ['', [Ud.required]],
                        constraints0: ['', [Ud.required]],
                        buttonGroup0: this.formBuilder.group({ button0: ['', [Ud.required]] }),
                      })),
                      (this.editQuestionnaireForm = this.formBuilder.group({ name: [''], status: [''] }));
                  }
                  print(t) {
                    console.log(JSON.stringify(t));
                  }
                  ngAfterViewInit() {
                    this.getQuestionnaires();
                  }
                  newQuestionnaire(t) {
                    this.modalService.open(t, { size: 'md' });
                  }
                  getQuestionnaires() {
                    this.ngxLoader.start(),
                      this.quoteService
                        .getAllQuestionnaire()
                        .pipe(
                          pS(() => {
                            this.ngxLoader.stop();
                          })
                        )
                        .subscribe(
                          (t) => {
                            200 === t.status &&
                              t.body.data &&
                              ((this.QuestionnaireData = t.body.data),
                              this.filterQuestionnaireData(this.QuestionnaireData)),
                              this.ngxLoader.stop();
                          },
                          (t) => {
                            this.ngxLoader.stop();
                          }
                        );
                  }
                  addQuestionnaire(t) {
                    var e;
                    this.ngxLoader.start();
                    const n = this.addQuestionnaireForm.value;
                    let i = !0;
                    for (const [s, r] of Object.entries(n))
                      s.includes('buttonGroup') &&
                        'button' === n['answers' + s[s.length - 1]].toLowerCase() &&
                        (i = !!n[s]);
                    if (i) {
                      const t = [];
                      for (const [s, r] of Object.entries(n))
                        if (s.includes('question')) {
                          const i = s[s.length - 1],
                            r = {
                              question: n['questions' + i],
                              answerOptions: null === (e = n['answers' + i]) || void 0 === e ? void 0 : e.toLowerCase(),
                              constraint: n['constraints' + i],
                            };
                          (r.constraint = 'button' === r.answerOptions ? 'isString' : r.constraint),
                            'button' === r.answerOptions &&
                              (r.answerOptions = Object.keys(n['buttonGroup' + i]).map(function (t) {
                                return n['buttonGroup' + i][t];
                              })),
                            t.push(r);
                        }
                      const i = {
                        name: n.name,
                        questions: t,
                        status: n.status,
                        formowner: JSON.parse(localStorage.getItem('userInfo')).username,
                      };
                      this.quoteService
                        .addQuestionnaire(JSON.stringify(i))
                        .pipe(
                          pS(() => {
                            this.ngxLoader.stop();
                          })
                        )
                        .subscribe(
                          (t) => {
                            200 === t.status &&
                              (this._snackBar.open('Program has been added!', '', {
                                duration: 3e3,
                                verticalPosition: 'top',
                                panelClass: ['blue-snackbar'],
                              }),
                              this.modalService.dismissAll(),
                              this.addQuestionnaireForm.reset()),
                              this.ngxLoader.stop();
                          },
                          (t) => {
                            this.ngxLoader.stop();
                          }
                        );
                    }
                  }
                  deleteQuestionnaire(t) {
                    this.ngxLoader.start(),
                      this.quoteService
                        .deleteQuestionnaire(t)
                        .pipe(
                          pS(() => {
                            this.ngxLoader.stop();
                          })
                        )
                        .subscribe(
                          (t) => {
                            200 === t.status &&
                              t.body &&
                              this._snackBar.open('Questionnaire deleted!', '', {
                                duration: 3e3,
                                verticalPosition: 'top',
                                panelClass: ['blue-snackbar'],
                              }),
                              this.ngxLoader.stop();
                          },
                          (t) => {
                            this.ngxLoader.stop();
                          }
                        );
                  }
                  editQuestionnaire(t, e) {
                    (this.questionnaires = []),
                      (this.selectedQuestionnaireID = e.id),
                      this.ngxLoader.start(),
                      (this.listToPopulate = e.foods ? e.foods : []),
                      this.editQuestionnaireForm.patchValue({
                        name: e.name ? e.name : '',
                        description: e.description ? e.description : '',
                      }),
                      this.modalService.open(t, { size: 'md', backdropClass: 'light-blue-backdrop' }),
                      this.getQuestionnaires();
                  }
                  addQuestion() {
                    console.log(this.addQuestionnaireForm.value),
                      this.addQuestionnaireForm.addControl(
                        'questions' + this.containers.length,
                        new Fp('', Ud.required)
                      ),
                      this.addQuestionnaireForm.addControl('answers' + this.containers.length, new Fp('', Ud.required)),
                      this.addQuestionnaireForm.addControl(
                        'constraints' + this.containers.length,
                        new Fp('', Ud.required)
                      ),
                      this.addButton(this.containers.push([1]) - 1);
                  }
                  addButton(t) {
                    console.log(t);
                    const e = this.addQuestionnaireForm.get('buttonGroup' + t);
                    e
                      ? (e.addControl('button' + this.containers[t].length, new Fp('', Ud.required)),
                        this.containers[t].push(this.containers[t].length))
                      : this.addQuestionnaireForm.addControl(
                          'buttonGroup' + t,
                          this.formBuilder.group({ button0: ['', [Ud.required]] })
                        );
                  }
                  patchQuestionnaire(t) {
                    this.editQuestionnaireForm.valid &&
                      this.quoteService
                        .editQuestionnaire(this.editQuestionnaireForm.value, t)
                        .pipe(
                          pS(() => {
                            this.ngxLoader.stop();
                          })
                        )
                        .subscribe(
                          (t) => {
                            200 === t.status &&
                              (this._snackBar.open('Employee details updated!', '', {
                                duration: 3e3,
                                verticalPosition: 'top',
                                panelClass: ['blue-snackbar'],
                              }),
                              this.getQuestionnaires(),
                              this.modalService.dismissAll(),
                              this.editQuestionnaireForm.reset()),
                              this.ngxLoader.stop();
                          },
                          (t) => {
                            this.ngxLoader.stop();
                          }
                        );
                  }
                  compareAnswer(t, e) {
                    return t && e && t === e;
                  }
                  filterQuestionnaireData(t) {
                    if (void 0 !== t) {
                      const e = t.map((t) => ({
                        id: t.id,
                        name: t.name,
                        questions: t.questions,
                        answers: t.answers,
                        formowner: t.employee.username,
                        status: t.status,
                        createdAt: t.createdAt,
                      }));
                      (this.dataSource = new tT(e)), setTimeout(() => (this.dataSource.paginator = this.paginator));
                    }
                  }
                }
                return (
                  (t.ɵfac = function (e) {
                    return new (e || t)(Ro(hK), Ro(cF), Ro(uK), Ro(FN), Ro(WF), Ro(mm), Ro(kP));
                  }),
                  (t.ɵcmp = Wt({
                    type: t,
                    selectors: [['app-questionnaire']],
                    viewQuery: function (t, e) {
                      if ((1 & t && (xc(dK, 1), xc(DP, 1)), 2 & t)) {
                        let t;
                        wc((t = kc())) && (e.paginator = t.first), wc((t = kc())) && (e.sort = t.first);
                      }
                    },
                    decls: 95,
                    vars: 5,
                    consts: [
                      [1, 'container'],
                      [1, 'row'],
                      [1, 'col-12'],
                      [1, 'mt-4'],
                      ['mat-button', '', 'type', 'button', 1, 'button-primary', 3, 'click'],
                      [1, 'col-lg-12'],
                      [1, 'table-wrapper', 'mt-3', 'mb-3'],
                      [1, 'card', 'card-primary'],
                      [1, 'mat-elevation-z0'],
                      ['mat-table', '', 1, 'w-100', 3, 'dataSource'],
                      ['matColumnDef', 'name'],
                      ['mat-header-cell', '', 4, 'matHeaderCellDef'],
                      ['mat-cell', '', 'class', 'text-center', 4, 'matCellDef'],
                      ['matColumnDef', 'status'],
                      ['matColumnDef', 'formowner'],
                      ['matColumnDef', 'createdAt'],
                      ['matColumnDef', 'actions'],
                      ['mat-header-row', '', 4, 'matHeaderRowDef'],
                      ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
                      ['class', 'mat-row', 4, 'matNoDataRow'],
                      ['showFirstLastButtons', 'false', 'hidePageSize', 'true', 3, 'pageSizeOptions'],
                      ['questionnairePaginator', ''],
                      ['formContent', ''],
                      ['menu', 'matMenu'],
                      ['matMenuContent', ''],
                      ['editFormContent', ''],
                      ['mat-header-cell', ''],
                      ['mat-cell', '', 1, 'text-center'],
                      ['mat-flat-button', '', 'color', 'warn', 'type', 'button', 3, 'click'],
                      ['aria-hidden', 'false', 'aria-label', 'Delete icon'],
                      [
                        'mat-icon-button',
                        '',
                        'aria-label',
                        'Example icon-button with a menu',
                        3,
                        'matMenuTriggerFor',
                        'matMenuTriggerData',
                      ],
                      ['mat-header-row', ''],
                      ['mat-row', ''],
                      [1, 'mat-row'],
                      ['colspan', '4', 1, 'mat-cell'],
                      [1, 'modal-header'],
                      [1, 'modal-title'],
                      ['type', 'button', 'aria-label', 'Close', 1, 'btn', 'btn-light', 3, 'click'],
                      ['aria-hidden', 'true'],
                      [3, 'formGroup', 'ngSubmit'],
                      [1, 'modal-body', 'ff-14'],
                      ['appearance', 'outline', 1, 'example-full-width', 'w-100'],
                      ['matInput', '', 'placeholder', 'name', 'formControlName', 'name', 'autocomplete', 'off'],
                      [4, 'ngIf'],
                      ['fxLayout', 'row', 'fxLayoutAlign', 'start center'],
                      [1, 'custom-label'],
                      ['appearance', 'outline', 1, 'w-90', 'mt-2'],
                      ['formControlName', 'status'],
                      [3, 'value', 4, 'ngFor', 'ngForOf'],
                      [4, 'ngFor', 'ngForOf'],
                      [1, 'modal-footer'],
                      ['mat-button', '', 'type', 'submit', 1, 'button-primary'],
                      [3, 'value'],
                      ['appearance', 'outline', 1, 'example-full-width', 'w-100', 'mt-2', 'cus-padding'],
                      [
                        'matInput',
                        '',
                        'placeholder',
                        'questions',
                        'autocomplete',
                        'off',
                        1,
                        'width-80',
                        3,
                        'formControlName',
                        'name',
                      ],
                      ['type', 'button', 1, 'btn', 'btn-light', 'cus-button', 3, 'click'],
                      [3, 'formControlName'],
                      ['fxLayout', 'row', 'fxLayoutAlign', 'start center', 4, 'ngIf'],
                      [3, 'formGroupName'],
                      [
                        'matInput',
                        '',
                        'placeholder',
                        'buttons',
                        'autocomplete',
                        'off',
                        1,
                        'width-80',
                        3,
                        'formControlName',
                        'name',
                      ],
                      ['mat-menu-item', '', 'type', 'button', 3, 'click'],
                      ['matInput', '', 'placeholder', 'Name', 'formControlName', 'name', 'name', 'name'],
                      ['mat-button', '', 'type', 'submit', 1, 'button-primary', 3, 'disabled'],
                    ],
                    template: function (t, e) {
                      if (1 & t) {
                        const t = Ho();
                        Fo(0, 'div', 0),
                          Ca(1, '\n  '),
                          Fo(2, 'div', 1),
                          Ca(3, '\n    '),
                          Fo(4, 'div', 2),
                          Ca(5, '\n      '),
                          Fo(6, 'div', 3),
                          Ca(7, '\n        '),
                          Fo(8, 'button', 4),
                          Uo('click', function () {
                            Fe(t);
                            const n = Mo(81);
                            return e.newQuestionnaire(n);
                          }),
                          Ca(9, '\n          New Questionnaire\n        '),
                          No(),
                          Ca(10, '\n      '),
                          No(),
                          Ca(11, '\n    '),
                          No(),
                          Ca(12, '\n  '),
                          No(),
                          Ca(13, '\n  '),
                          Fo(14, 'div', 1),
                          Ca(15, '\n    '),
                          Fo(16, 'div', 5),
                          Ca(17, '\n      '),
                          Fo(18, 'div', 6),
                          Ca(19, '\n        '),
                          Fo(20, 'div', 7),
                          Ca(21, '\n          '),
                          Fo(22, 'div', 8),
                          Ca(23, '\n            '),
                          Fo(24, 'table', 9),
                          Ca(25, '\n              '),
                          Ca(26, '\n              '),
                          Bo(27, 10),
                          Ca(28, '\n                '),
                          Do(29, pK, 2, 0, 'th', 11),
                          Ca(30, '\n                '),
                          Do(31, mK, 2, 1, 'td', 12),
                          Ca(32, '\n              '),
                          zo(),
                          Ca(33, '\n\n              '),
                          Bo(34, 13),
                          Ca(35, '\n                '),
                          Do(36, fK, 2, 0, 'th', 11),
                          Ca(37, '\n                '),
                          Do(38, gK, 2, 1, 'td', 12),
                          Ca(39, '\n              '),
                          zo(),
                          Ca(40, '\n\n              '),
                          Bo(41, 14),
                          Ca(42, '\n                '),
                          Do(43, _K, 2, 0, 'th', 11),
                          Ca(44, '\n                '),
                          Do(45, bK, 2, 1, 'td', 12),
                          Ca(46, '\n              '),
                          zo(),
                          Ca(47, '\n\n              '),
                          Bo(48, 15),
                          Ca(49, '\n                '),
                          Do(50, yK, 2, 0, 'th', 11),
                          Ca(51, '\n                '),
                          Do(52, vK, 2, 1, 'td', 12),
                          Ca(53, '\n              '),
                          zo(),
                          Ca(54, '\n\n              '),
                          Bo(55, 16),
                          Ca(56, '\n                '),
                          Do(57, wK, 2, 0, 'th', 11),
                          Ca(58, '\n                '),
                          Do(59, CK, 14, 4, 'td', 12),
                          Ca(60, '\n              '),
                          zo(),
                          Ca(61, '\n\n              '),
                          Do(62, kK, 1, 0, 'tr', 17),
                          Ca(63, '\n              '),
                          Do(64, SK, 1, 0, 'tr', 18),
                          Ca(65, '\n\n              '),
                          Ca(66, '\n              '),
                          Do(67, EK, 5, 0, 'tr', 19),
                          Ca(68, '\n            '),
                          No(),
                          Ca(69, '\n            '),
                          Fo(70, 'mat-paginator', 20, 21),
                          Ca(72, '\n            '),
                          No(),
                          Ca(73, '\n          '),
                          No(),
                          Ca(74, '\n        '),
                          No(),
                          Ca(75, '\n      '),
                          No(),
                          Ca(76, '\n    '),
                          No(),
                          Ca(77, '\n  '),
                          No(),
                          Ca(78, '\n'),
                          No(),
                          Ca(79, '\n\n'),
                          Do(80, HK, 57, 7, 'ng-template', null, 22, Pc),
                          Ca(82, '\n\n'),
                          Fo(83, 'mat-menu', null, 23),
                          Ca(85, '\n  '),
                          Do(86, $K, 10, 0, 'ng-template', 24),
                          Ca(87, '\n'),
                          No(),
                          Ca(88, '\n\n'),
                          Do(89, UK, 52, 4, 'ng-template', null, 25, Pc),
                          Ca(91, '\n\n'),
                          Ca(92, '\n'),
                          Vo(93, 'ngx-ui-loader'),
                          Ca(94, '\n');
                      }
                      2 & t &&
                        (tr(24),
                        Io('dataSource', e.dataSource),
                        tr(38),
                        Io('matHeaderRowDef', e.colDef),
                        tr(2),
                        Io('matRowDefColumns', e.colDef),
                        tr(6),
                        Io('pageSizeOptions', Zl(4, YK)));
                    },
                    directives: [
                      $C,
                      DA,
                      NA,
                      LA,
                      RA,
                      $A,
                      WA,
                      XA,
                      gO,
                      rE,
                      XS,
                      UF,
                      BA,
                      jA,
                      TS,
                      cE,
                      YA,
                      QA,
                      Yp,
                      pp,
                      em,
                      _C,
                      aC,
                      tS,
                      zd,
                      dp,
                      lm,
                      Ru,
                      tL,
                      IL,
                      ME,
                      Du,
                      iC,
                      gw,
                      im,
                      eE,
                    ],
                    styles: [
                      '.btn-grey[_ngcontent-%COMP%]{background-color:#363740;border-radius:20px;width:120px;color:#fff}.form-check-label[_ngcontent-%COMP%]{cursor:pointer}.custom-label[_ngcontent-%COMP%]{margin-top:-1rem;margin-right:1rem}.cus-button[_ngcontent-%COMP%]{margin-top:-9px!important}.quesbtnposi[_ngcontent-%COMP%]{float:right;margin-top:-.4rem}.width-80[_ngcontent-%COMP%]{width:80%}.cus-padding[_ngcontent-%COMP%]{padding:7px 0}',
                    ],
                  })),
                  t
                );
              })(),
              data: { title: 'Questionnaire' },
            },
          ]),
        ];
      let QK = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [], imports: [[bR.forChild(GK)], bR] })),
            t
          );
        })(),
        KK = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[qC, JA, Gu, uE, DS, pm, YF, bC, IE, _O, eS, YL, dm, qL]] })),
            t
          );
        })();
      const XK = ['paginatorFood'];
      function ZK(t, e) {
        1 & t && (Fo(0, 'th', 14), Ca(1, 'Image'), No());
      }
      function JK(t, e) {
        if ((1 & t && (Fo(0, 'td', 15), Vo(1, 'img', 16), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ea('src', t.image, ss);
        }
      }
      function tX(t, e) {
        1 & t && (Fo(0, 'th', 14), Ca(1, 'Name'), No());
      }
      function eX(t, e) {
        if ((1 & t && (Fo(0, 'td', 15), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.name);
        }
      }
      function nX(t, e) {
        1 & t && (Fo(0, 'th', 14), Ca(1, 'Type'), No());
      }
      function iX(t, e) {
        if ((1 & t && (Fo(0, 'td', 15), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          tr(1), ka(t.type);
        }
      }
      function sX(t, e) {
        1 & t && (Fo(0, 'th', 14), Ca(1, 'Actions'), No());
      }
      function rX(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'td', 15),
            Ca(1, '\n        '),
            Fo(2, 'button', 17),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit,
                i = Xo(),
                s = Mo(49);
              return i.editFood(n, s);
            }),
            Ca(3, '\n          '),
            Fo(4, 'mat-icon', 18),
            Ca(5, 'edit'),
            No(),
            Ca(6, '\n          Edit\n        '),
            No(),
            Ca(7, '\n      '),
            No();
        }
      }
      function oX(t, e) {
        1 & t && (Fo(0, 'th', 14), Ca(1, 'Actions'), No());
      }
      function aX(t, e) {
        if (1 & t) {
          const t = Ho();
          Fo(0, 'td', 15),
            Ca(1, '\n        '),
            Fo(2, 'button', 19),
            Uo('click', function () {
              Fe(t);
              const n = e.$implicit;
              return Xo().deleteFood(n.id);
            }),
            Ca(3, '\n          '),
            Fo(4, 'mat-icon', 20),
            Ca(5, 'delete'),
            No(),
            Ca(6, '\n          Delete\n        '),
            No(),
            Ca(7, '\n      '),
            No();
        }
      }
      function lX(t, e) {
        1 & t && Vo(0, 'tr', 21);
      }
      function cX(t, e) {
        1 & t && Vo(0, 'tr', 22);
      }
      function hX(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Name is Required!'), No());
      }
      function uX(t, e) {
        if ((1 & t && (Fo(0, 'mat-option', 41), Ca(1), No()), 2 & t)) {
          const t = e.$implicit;
          ea('value', t), tr(1), Sa(' ', t, ' ');
        }
      }
      function dX(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, ' Recommendation type is Required! '), No());
      }
      function pX(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, 'Image URL is Required!'), No());
      }
      function mX(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, 'Description is Required!'), No());
      }
      function fX(t, e) {
        1 & t && (Fo(0, 'mat-error'), Ca(1, 'Receipe is Required!'), No());
      }
      function gX(t, e) {
        if (1 & t) {
          const t = Ho();
          Ca(0, '\n  '),
            Fo(1, 'div', 23),
            Ca(2, '\n    '),
            Fo(3, 'h4', 24),
            Ca(4, 'New Food'),
            No(),
            Ca(5, '\n    '),
            Fo(6, 'button', 25),
            Uo('click', function () {
              return e.$implicit.dismiss('Cross click');
            }),
            Ca(7, '\n      '),
            Fo(8, 'span', 26),
            Ca(9, '\xd7'),
            No(),
            Ca(10, '\n    '),
            No(),
            Ca(11, '\n  '),
            No(),
            Ca(12, '\n  '),
            Fo(13, 'form', 27),
            Uo('ngSubmit', function () {
              return Fe(t), Xo().editFoodSubmit();
            }),
            Ca(14, '\n    '),
            Fo(15, 'div', 28),
            Ca(16, '\n      '),
            Fo(17, 'mat-form-field', 29),
            Ca(18, '\n        '),
            Fo(19, 'mat-label'),
            Ca(20, 'Name'),
            No(),
            Ca(21, '\n        '),
            Vo(22, 'input', 30),
            Ca(23, '\n        '),
            Do(24, hX, 2, 0, 'mat-error', 31),
            Ca(25, '\n      '),
            No(),
            Ca(26, '\n\n      '),
            Fo(27, 'mat-form-field', 32),
            Ca(28, '\n        '),
            Fo(29, 'mat-label'),
            Ca(30, 'Food Type'),
            No(),
            Ca(31, '\n        '),
            Fo(32, 'mat-select', 33),
            Ca(33, '\n          '),
            Do(34, uX, 2, 2, 'mat-option', 34),
            Ca(35, '\n        '),
            No(),
            Ca(36, '\n        '),
            Do(37, dX, 2, 0, 'mat-error', 31),
            Ca(38, '\n      '),
            No(),
            Ca(39, '\n\n      '),
            Fo(40, 'mat-form-field', 35),
            Ca(41, '\n        '),
            Fo(42, 'mat-label'),
            Ca(43, 'Image URL'),
            No(),
            Ca(44, '\n        '),
            Vo(45, 'input', 36),
            Ca(46, '\n        '),
            Do(47, pX, 2, 0, 'mat-error', 31),
            Ca(48, '\n      '),
            No(),
            Ca(49, '\n\n      '),
            Fo(50, 'mat-form-field', 35),
            Ca(51, '\n        '),
            Fo(52, 'mat-label'),
            Ca(53, 'Description'),
            No(),
            Ca(54, '\n        '),
            Vo(55, 'textarea', 37),
            Ca(56, '\n        '),
            Do(57, mX, 2, 0, 'mat-error', 31),
            Ca(58, '\n      '),
            No(),
            Ca(59, '\n\n      '),
            Fo(60, 'mat-form-field', 35),
            Ca(61, '\n        '),
            Fo(62, 'mat-label'),
            Ca(63, 'Receipe'),
            No(),
            Ca(64, '\n        '),
            Vo(65, 'textarea', 38),
            Ca(66, '\n        '),
            Do(67, fX, 2, 0, 'mat-error', 31),
            Ca(68, '\n      '),
            No(),
            Ca(69, '\n    '),
            No(),
            Ca(70, '\n    '),
            Fo(71, 'div', 39),
            Ca(72, '\n      '),
            Fo(73, 'button', 40),
            Ca(74, 'Save'),
            No(),
            Ca(75, '\n    '),
            No(),
            Ca(76, '\n  '),
            No(),
            Ca(77, '\n');
        }
        if (2 & t) {
          const t = Xo();
          let e = null,
            n = null,
            i = null,
            s = null,
            r = null;
          tr(13),
            Io('formGroup', t.editFoodForm),
            tr(11),
            Io('ngIf', null == (e = t.editFoodForm.get('name')) ? null : e.hasError('required')),
            tr(10),
            Io('ngForOf', t.foodType),
            tr(3),
            Io('ngIf', null == (n = t.editFoodForm.get('type')) ? null : n.hasError('required')),
            tr(10),
            Io('ngIf', null == (i = t.editFoodForm.get('image')) ? null : i.hasError('required')),
            tr(10),
            Io('ngIf', null == (s = t.editFoodForm.get('description')) ? null : s.hasError('required')),
            tr(10),
            Io('ngIf', null == (r = t.editFoodForm.get('recipe')) ? null : r.hasError('required')),
            tr(6),
            Io('disabled', t.editFoodForm.invalid);
        }
      }
      const _X = function () {
        return [10];
      };
      let bX = (() => {
        class t {
          constructor(t, e, n) {
            (this.foodService = t),
              (this.formBuilder = e),
              (this.modalService = n),
              (this.showFoodsColumns = ['image', 'name', 'type', 'editActions', 'actions']),
              (this.foodType = ['VEGAN', 'VEGETARIAN', 'MEAT', 'DESSERT', 'SNACK']),
              (this.editFoodForm = this.formBuilder.group({
                id: ['', [Ud.required]],
                name: ['', [Ud.required]],
                type: ['', [Ud.required]],
                image: ['', [Ud.required]],
                description: ['', [Ud.required]],
                recipe: ['', [Ud.required]],
              }));
          }
          ngOnChanges(t) {
            this.showAllFoodsDataSource && (this.showAllFoodsDataSource.paginator = this.showAllPaginator);
          }
          deleteFood(t) {
            this.foodService
              .deleteFood(t)
              .pipe(cf(() => (console.log('what?'), this.foodService.getFoods())))
              .subscribe((t) => {
                this.showAllFoodsDataSource.data = t.body.data;
              });
          }
          editFood(t, e) {
            this.editFoodForm.patchValue({
              id: t.id,
              name: t.name,
              type: t.type,
              image: t.image,
              description: t.description,
              recipe: t.recipe,
            }),
              this.modalService.open(e, { size: 'md', backdropClass: 'light-blue-backdrop' });
          }
          editFoodSubmit() {
            this.foodService
              .editFood(
                Object.assign(Object.assign({}, this.editFoodForm.value), { id: void 0 }),
                this.editFoodForm.value.id
              )
              .subscribe(() => {
                this.foodService.getFoods().subscribe((t) => {
                  this.showAllFoodsDataSource.data = t.body.data;
                });
              });
          }
        }
        return (
          (t.ɵfac = function (e) {
            return new (e || t)(Ro(SQ), Ro(mm), Ro(FN));
          }),
          (t.ɵcmp = Wt({
            type: t,
            selectors: [['app-food-list']],
            viewQuery: function (t, e) {
              if ((1 & t && xc(XK, 1), 2 & t)) {
                let t;
                wc((t = kc())) && (e.showAllPaginator = t.first);
              }
            },
            inputs: { showAllFoodsDataSource: 'showAllFoodsDataSource' },
            features: [ue],
            decls: 51,
            vars: 5,
            consts: [
              [1, 'mat-elevation-z0'],
              ['mat-table', '', 1, 'w-100', 3, 'dataSource'],
              ['matColumnDef', 'image'],
              ['mat-header-cell', '', 4, 'matHeaderCellDef'],
              ['mat-cell', '', 'class', 'text-center', 4, 'matCellDef'],
              ['matColumnDef', 'name'],
              ['matColumnDef', 'type'],
              ['matColumnDef', 'editActions'],
              ['matColumnDef', 'actions'],
              ['mat-header-row', '', 4, 'matHeaderRowDef'],
              ['mat-row', '', 4, 'matRowDef', 'matRowDefColumns'],
              ['showFirstLastButtons', 'false', 'hidePageSize', 'true', 3, 'pageSizeOptions'],
              ['paginatorFood', ''],
              ['editFoodContent', ''],
              ['mat-header-cell', ''],
              ['mat-cell', '', 1, 'text-center'],
              [1, 'recImg', 3, 'src'],
              ['mat-flat-button', '', 'color', 'primary', 'type', 'button', 3, 'click'],
              ['aria-hidden', 'false', 'aria-label', 'Edit icon'],
              ['mat-flat-button', '', 'color', 'warn', 'type', 'button', 3, 'click'],
              ['aria-hidden', 'false', 'aria-label', 'Delete icon'],
              ['mat-header-row', ''],
              ['mat-row', ''],
              [1, 'modal-header'],
              [1, 'modal-title'],
              ['type', 'button', 'aria-label', 'Close', 1, 'btn', 'btn-light', 3, 'click'],
              ['aria-hidden', 'true'],
              [3, 'formGroup', 'ngSubmit'],
              [1, 'modal-body', 'ff-14'],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100'],
              ['matInput', '', 'placeholder', 'Name', 'formControlName', 'name', 'autocomplete', 'off'],
              [4, 'ngIf'],
              ['appearance', 'outline', 1, 'w-100'],
              ['formControlName', 'type'],
              [3, 'value', 4, 'ngFor', 'ngForOf'],
              ['appearance', 'outline', 1, 'example-full-width', 'w-100', 'mt-2'],
              [
                'matInput',
                '',
                'placeholder',
                'Image URL',
                'formControlName',
                'image',
                'name',
                'image',
                'autocomplete',
                'off',
              ],
              [
                'matInput',
                '',
                'placeholder',
                'Description',
                'formControlName',
                'description',
                'name',
                'description',
                'autocomplete',
                'off',
              ],
              [
                'matInput',
                '',
                'placeholder',
                'recipe',
                'formControlName',
                'recipe',
                'name',
                'recipe',
                'autocomplete',
                'off',
              ],
              [1, 'modal-footer'],
              ['mat-button', '', 'type', 'submit', 1, 'button-primary', 3, 'disabled'],
              [3, 'value'],
            ],
            template: function (t, e) {
              1 & t &&
                (Fo(0, 'div', 0),
                Ca(1, '\n  '),
                Fo(2, 'table', 1),
                Ca(3, '\n    '),
                Bo(4, 2),
                Ca(5, '\n      '),
                Do(6, ZK, 2, 0, 'th', 3),
                Ca(7, '\n      '),
                Do(8, JK, 2, 1, 'td', 4),
                Ca(9, '\n    '),
                zo(),
                Ca(10, '\n\n    '),
                Bo(11, 5),
                Ca(12, '\n      '),
                Do(13, tX, 2, 0, 'th', 3),
                Ca(14, '\n      '),
                Do(15, eX, 2, 1, 'td', 4),
                Ca(16, '\n    '),
                zo(),
                Ca(17, '\n\n    '),
                Bo(18, 6),
                Ca(19, '\n      '),
                Do(20, nX, 2, 0, 'th', 3),
                Ca(21, '\n      '),
                Do(22, iX, 2, 1, 'td', 4),
                Ca(23, '\n    '),
                zo(),
                Ca(24, '\n    '),
                Bo(25, 7),
                Ca(26, '\n      '),
                Do(27, sX, 2, 0, 'th', 3),
                Ca(28, '\n      '),
                Do(29, rX, 8, 0, 'td', 4),
                Ca(30, '\n    '),
                zo(),
                Ca(31, '\n    '),
                Bo(32, 8),
                Ca(33, '\n      '),
                Do(34, oX, 2, 0, 'th', 3),
                Ca(35, '\n      '),
                Do(36, aX, 8, 0, 'td', 4),
                Ca(37, '\n    '),
                zo(),
                Ca(38, '\n\n    '),
                Do(39, lX, 1, 0, 'tr', 9),
                Ca(40, '\n    '),
                Do(41, cX, 1, 0, 'tr', 10),
                Ca(42, '\n  '),
                No(),
                Ca(43, '\n  '),
                Vo(44, 'mat-paginator', 11, 12),
                Ca(46, '\n'),
                No(),
                Ca(47, '\n\n'),
                Do(48, gX, 78, 8, 'ng-template', null, 13, Pc),
                Ca(50, '\n')),
                2 & t &&
                  (tr(2),
                  Io('dataSource', e.showAllFoodsDataSource),
                  tr(37),
                  Io('matHeaderRowDef', e.showFoodsColumns),
                  tr(2),
                  Io('matRowDefColumns', e.showFoodsColumns),
                  tr(3),
                  Io('pageSizeOptions', Zl(4, _X)));
            },
            directives: [
              DA,
              NA,
              LA,
              RA,
              $A,
              WA,
              gO,
              BA,
              jA,
              $C,
              TS,
              YA,
              QA,
              Yp,
              pp,
              em,
              _C,
              aC,
              tS,
              zd,
              dp,
              lm,
              Ru,
              ME,
              Du,
              iC,
              gw,
            ],
            styles: ['.recImg[_ngcontent-%COMP%]{height:40px;width:40px}'],
          })),
          t
        );
      })();
      const yX = {
        bgsColor: '#363740',
        bgsOpacity: 0.9,
        bgsPosition: 'bottom-right',
        bgsSize: 60,
        bgsType: 'ball-spin-clockwise',
        blur: 3,
        delay: 0,
        fastFadeOut: !0,
        fgsColor: '#363740',
        fgsPosition: 'center-center',
        fgsSize: 40,
        fgsType: 'rectangle-bounce',
        gap: 12,
        logoPosition: 'center-center',
        logoSize: 150,
        logoUrl: 'assets/logo.svg',
        masterLoaderId: 'master',
        overlayBorderRadius: '0',
        overlayColor: 'rgba(40, 40, 40, 0.8)',
        pbColor: 'red',
        pbDirection: 'ltr',
        pbThickness: 3,
        hasProgressBar: !1,
        text: '',
        textColor: '#FFFFFF',
        textPosition: 'center-center',
        maxTime: -1,
        minTime: 300,
      };
      let vX = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[Gu, gg, YL, UL, uT, QK, YF.forRoot(yX), dm, pm, BU, KK, JA]] })),
          t
        );
      })();
      !(function (t, e, n) {
        const i = t.ɵcmp;
        (i.directiveDefs = () => e.map(Ut)), (i.pipeDefs = () => n.map(Yt));
      })(
        lK,
        [
          $C,
          DA,
          NA,
          LA,
          BA,
          RA,
          jA,
          tL,
          yL,
          aL,
          TS,
          $A,
          YA,
          WA,
          QA,
          XA,
          gO,
          rE,
          eE,
          bX,
          Yp,
          pp,
          em,
          _C,
          aC,
          tS,
          zd,
          dp,
          lm,
          Ru,
          iC,
          Sk,
          Du,
          bk,
          yk,
          IC,
          Ok,
          Jp,
          PC,
          gw,
          ME,
          UF,
        ],
        [vG, Uu]
      );
      let wX = (() => {
        class t {}
        return (
          (t.ɵfac = function (e) {
            return new (e || t)();
          }),
          (t.ɵmod = Qt({ type: t })),
          (t.ɵinj = mt({ imports: [[Gu, gg, UL, uT, dm, pm, CF, GL, bR]] })),
          t
        );
      })();
      const xX = [
        JY.childRoutes([
          {
            path: 'about',
            component: (() => {
              class t {
                constructor() {
                  this.version = pT;
                }
                ngOnInit() {}
              }
              return (
                (t.ɵfac = function (e) {
                  return new (e || t)();
                }),
                (t.ɵcmp = Wt({
                  type: t,
                  selectors: [['app-about']],
                  decls: 21,
                  vars: 1,
                  consts: [
                    [1, 'container'],
                    ['translate', ''],
                  ],
                  template: function (t, e) {
                    1 & t &&
                      (Fo(0, 'div', 0),
                      Ca(1, '\n  '),
                      Fo(2, 'mat-card'),
                      Ca(3, '\n    '),
                      Fo(4, 'h1'),
                      Ca(5, '\n      '),
                      Fo(6, 'mat-card-title', 1),
                      Ca(7, 'Maxi - WebClient'),
                      No(),
                      Ca(8, '\n    '),
                      No(),
                      Ca(9, '\n    '),
                      Fo(10, 'mat-card-content'),
                      Ca(11, '\n      '),
                      Fo(12, 'mat-icon'),
                      Ca(13, 'code'),
                      No(),
                      Ca(14, '\n      '),
                      Fo(15, 'span', 1),
                      Ca(16, 'Version'),
                      No(),
                      Ca(17),
                      No(),
                      Ca(18, '\n  '),
                      No(),
                      Ca(19, '\n'),
                      No(),
                      Ca(20, '\n')),
                      2 & t && (tr(17), Sa(' ', e.version, '\n    '));
                  },
                  directives: [KC, QC, mg, GC, TS],
                  styles: [
                    '.container[_ngcontent-%COMP%]{text-align:center;padding:1rem}.mat-icon[_ngcontent-%COMP%]{vertical-align:middle}',
                  ],
                })),
                t
              );
            })(),
            data: { title: 'About' },
          },
        ]),
      ];
      let CX = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [], imports: [[bR.forChild(xX)], bR] })),
            t
          );
        })(),
        kX = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ imports: [[Gu, gg, UL, uT, CX]] })),
            t
          );
        })();
      const SX = new DR('App');
      let EX = class {
        constructor(t, e, n, i, s) {
          (this.router = t),
            (this.activatedRoute = e),
            (this.titleService = n),
            (this.translateService = i),
            (this.i18nService = s);
        }
        ngOnInit() {
          DR.enableProductionMode(), SX.debug('init'), this.i18nService.init('en-US', fT);
          const t = this.router.events.pipe(_m((t) => t instanceof RT));
          q(this.translateService.onLangChange, t)
            .pipe(
              E(() => {
                let t = this.activatedRoute;
                for (; t.firstChild; ) t = t.firstChild;
                return t;
              }),
              _m((t) => 'primary' === t.outlet),
              cf((t) => t.data),
              $R(this)
            )
            .subscribe((t) => {
              const e = t.title;
              e && this.titleService.setTitle(this.translateService.instant(e));
            });
        }
        ngOnDestroy() {
          this.i18nService.destroy();
        }
      };
      (EX.ɵfac = function (t) {
        return new (t || EX)(Ro(iR), Ro(FD), Ro(Rd), Ro(pg), Ro(ZL));
      }),
        (EX.ɵcmp = Wt({
          type: EX,
          selectors: [['app-root']],
          decls: 2,
          vars: 0,
          template: function (t, e) {
            1 & t && (Vo(0, 'router-outlet'), Ca(1, '\n'));
          },
          directives: [lR],
          styles: ['[_nghost-%COMP%]{display:flex;flex:1}'],
        })),
        (EX = JL([HR(), tF('design:paramtypes', [iR, FD, Rd, pg, ZL])], EX));
      const OX = [{ path: '**', redirectTo: '', pathMatch: 'full' }];
      let PX = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t })),
            (t.ɵinj = mt({ providers: [], imports: [[bR.forRoot(OX)], bR] })),
            t
          );
        })(),
        AX = (() => {
          class t {
            constructor(t) {
              this.injector = t;
            }
            intercept(t, e) {
              let n = this.injector.get(iF),
                i = t.clone({
                  setHeaders: { 'Content-Type': 'application/json', Authorization: `Bearer ${n.getToken()}` },
                });
              return e.handle(i);
            }
          }
          return (
            (t.ɵfac = function (e) {
              return new (e || t)(_i(mo));
            }),
            (t.ɵprov = pt({ token: t, factory: t.ɵfac })),
            t
          );
        })(),
        TX = (() => {
          class t {}
          return (
            (t.ɵfac = function (e) {
              return new (e || t)();
            }),
            (t.ɵmod = Qt({ type: t, bootstrap: [EX] })),
            (t.ɵinj = mt({
              providers: [{ provide: Vm, useClass: AX, multi: !0 }],
              imports: [
                [
                  Dd,
                  Bf.register('./ngsw-worker.js', { enabled: dT }),
                  dm,
                  Xm,
                  gg.forRoot(),
                  iy,
                  uT,
                  RR,
                  YL,
                  wX,
                  vX,
                  kX,
                  CF,
                  GN,
                  PX,
                ],
              ],
            })),
            t
          );
        })();
      (function () {
        if (hh) throw new Error('Cannot enable prod mode after platform setup.');
        ch = !1;
      })(),
        Ad()
          .bootstrapModule(TX)
          .catch((t) => console.error(t));
    },
  },
  (t) => {
    'use strict';
    t((t.s = 11));
  },
]);
